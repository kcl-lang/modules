"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Addon:
    r"""
    Addon is the Schema for the Addons API. Manages an EKS add-on

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Addon", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsUpboundIoV1beta1AddonSpec, default is Undefined, required
        spec
    status : EksAwsUpboundIoV1beta1AddonStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.upbound.io/v1beta1" = "eks.aws.upbound.io/v1beta1"

    kind: "Addon" = "Addon"

    metadata?: v1.ObjectMeta

    spec: EksAwsUpboundIoV1beta1AddonSpec

    status?: EksAwsUpboundIoV1beta1AddonStatus


schema EksAwsUpboundIoV1beta1AddonSpec:
    r"""
    AddonSpec defines the desired state of Addon

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EksAwsUpboundIoV1beta1AddonSpecForProvider, default is Undefined, required
        for provider
    initProvider : EksAwsUpboundIoV1beta1AddonSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EksAwsUpboundIoV1beta1AddonSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsUpboundIoV1beta1AddonSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsUpboundIoV1beta1AddonSpecForProvider

    initProvider?: EksAwsUpboundIoV1beta1AddonSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EksAwsUpboundIoV1beta1AddonSpecProviderConfigRef

    publishConnectionDetailsTo?: EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsUpboundIoV1beta1AddonSpecWriteConnectionSecretToRef


schema EksAwsUpboundIoV1beta1AddonSpecForProvider:
    r"""
    eks aws upbound io v1beta1 addon spec for provider

    Attributes
    ----------
    addonName : str, default is Undefined, optional
        on. The name must match one of
        the names returned by describe-addon-versions.
    addonVersion : str, default is Undefined, optional
        on. The version must
        match one of the versions returned by describe-addon-versions.
    clusterName : str, default is Undefined, optional
        â€“  Name of the EKS Cluster.
    clusterNameRef : EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    configurationValues : str, default is Undefined, optional
        custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from describe-addon-configuration.
    podIdentityAssociation : [EksAwsUpboundIoV1beta1AddonSpecForProviderPodIdentityAssociationItems0], default is Undefined, optional
        Configuration block with EKS Pod Identity association settings. See pod_identity_association below for details.
    preserve : bool, default is Undefined, optional
        Indicates if you want to preserve the created resources when deleting the EKS add-on.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resolveConflicts : str, default is Undefined, optional
        (Deprecated use the resolve_conflicts_on_create and resolve_conflicts_on_update attributes instead) Define how to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on or when applying version updates to the add-on. Valid values are NONE, OVERWRITE and PRESERVE. Note that PRESERVE is only valid on addon update, not for initial addon creation. If you need to set this to PRESERVE, use the resolve_conflicts_on_create and resolve_conflicts_on_update attributes instead. For more details check UpdateAddon API Docs.
    resolveConflictsOnCreate : str, default is Undefined, optional
        How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are NONE and OVERWRITE. For more details see the CreateAddon API Docs.
    resolveConflictsOnUpdate : str, default is Undefined, optional
        How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Valid values are NONE, OVERWRITE, and PRESERVE. For more details see the UpdateAddon API Docs.
    serviceAccountRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an
        existing IAM role to bind to the add-on's service account. The role must be
        assigned the IAM permissions required by the add-on. If you don't specify
        an existing IAM role, then the add-on uses the permissions assigned to the node
        IAM role. For more information, see Amazon EKS node IAM role
        in the Amazon EKS User Guide.
    serviceAccountRoleArnRef : EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnRef, default is Undefined, optional
        service account role arn ref
    serviceAccountRoleArnSelector : EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnSelector, default is Undefined, optional
        service account role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    addonName?: str

    addonVersion?: str

    clusterName?: str

    clusterNameRef?: EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameRef

    clusterNameSelector?: EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameSelector

    configurationValues?: str

    podIdentityAssociation?: [EksAwsUpboundIoV1beta1AddonSpecForProviderPodIdentityAssociationItems0]

    preserve?: bool

    region: str

    resolveConflicts?: str

    resolveConflictsOnCreate?: str

    resolveConflictsOnUpdate?: str

    serviceAccountRoleArn?: str

    serviceAccountRoleArnRef?: EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnRef

    serviceAccountRoleArnSelector?: EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnSelector

    tags?: {str:str}


schema EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameRef:
    r"""
    Reference to a Cluster in eks to populate clusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameRefPolicy


schema EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameSelector:
    r"""
    Selector for a Cluster in eks to populate clusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameSelectorPolicy


schema EksAwsUpboundIoV1beta1AddonSpecForProviderClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecForProviderPodIdentityAssociationItems0:
    r"""
    eks aws upbound io v1beta1 addon spec for provider pod identity association items0

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
    serviceAccount : str, default is Undefined, optional
        The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
    """


    roleArn?: str

    serviceAccount?: str


schema EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceAccountRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnRefPolicy


schema EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceAccountRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta1AddonSpecForProviderServiceAccountRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    addonName : str, default is Undefined, optional
        on. The name must match one of
        the names returned by describe-addon-versions.
    addonVersion : str, default is Undefined, optional
        on. The version must
        match one of the versions returned by describe-addon-versions.
    clusterName : str, default is Undefined, optional
        â€“  Name of the EKS Cluster.
    clusterNameRef : EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    configurationValues : str, default is Undefined, optional
        custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from describe-addon-configuration.
    podIdentityAssociation : [EksAwsUpboundIoV1beta1AddonSpecInitProviderPodIdentityAssociationItems0], default is Undefined, optional
        Configuration block with EKS Pod Identity association settings. See pod_identity_association below for details.
    preserve : bool, default is Undefined, optional
        Indicates if you want to preserve the created resources when deleting the EKS add-on.
    resolveConflicts : str, default is Undefined, optional
        (Deprecated use the resolve_conflicts_on_create and resolve_conflicts_on_update attributes instead) Define how to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on or when applying version updates to the add-on. Valid values are NONE, OVERWRITE and PRESERVE. Note that PRESERVE is only valid on addon update, not for initial addon creation. If you need to set this to PRESERVE, use the resolve_conflicts_on_create and resolve_conflicts_on_update attributes instead. For more details check UpdateAddon API Docs.
    resolveConflictsOnCreate : str, default is Undefined, optional
        How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are NONE and OVERWRITE. For more details see the CreateAddon API Docs.
    resolveConflictsOnUpdate : str, default is Undefined, optional
        How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Valid values are NONE, OVERWRITE, and PRESERVE. For more details see the UpdateAddon API Docs.
    serviceAccountRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an
        existing IAM role to bind to the add-on's service account. The role must be
        assigned the IAM permissions required by the add-on. If you don't specify
        an existing IAM role, then the add-on uses the permissions assigned to the node
        IAM role. For more information, see Amazon EKS node IAM role
        in the Amazon EKS User Guide.
    serviceAccountRoleArnRef : EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnRef, default is Undefined, optional
        service account role arn ref
    serviceAccountRoleArnSelector : EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnSelector, default is Undefined, optional
        service account role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    addonName?: str

    addonVersion?: str

    clusterName?: str

    clusterNameRef?: EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameRef

    clusterNameSelector?: EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameSelector

    configurationValues?: str

    podIdentityAssociation?: [EksAwsUpboundIoV1beta1AddonSpecInitProviderPodIdentityAssociationItems0]

    preserve?: bool

    resolveConflicts?: str

    resolveConflictsOnCreate?: str

    resolveConflictsOnUpdate?: str

    serviceAccountRoleArn?: str

    serviceAccountRoleArnRef?: EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnRef

    serviceAccountRoleArnSelector?: EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnSelector

    tags?: {str:str}


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameRef:
    r"""
    Reference to a Cluster in eks to populate clusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameRefPolicy


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameSelector:
    r"""
    Selector for a Cluster in eks to populate clusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameSelectorPolicy


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderPodIdentityAssociationItems0:
    r"""
    eks aws upbound io v1beta1 addon spec init provider pod identity association items0

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
    serviceAccount : str, default is Undefined, optional
        The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
    """


    roleArn?: str

    serviceAccount?: str


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceAccountRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnRefPolicy


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceAccountRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta1AddonSpecInitProviderServiceAccountRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AddonSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AddonSpecProviderConfigRefPolicy


schema EksAwsUpboundIoV1beta1AddonSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AddonSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsUpboundIoV1beta1AddonSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsUpboundIoV1beta1AddonStatus:
    r"""
    AddonStatus defines the observed state of Addon.

    Attributes
    ----------
    atProvider : EksAwsUpboundIoV1beta1AddonStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsUpboundIoV1beta1AddonStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EksAwsUpboundIoV1beta1AddonStatusAtProvider

    conditions?: [EksAwsUpboundIoV1beta1AddonStatusConditionsItems0]

    observedGeneration?: int


schema EksAwsUpboundIoV1beta1AddonStatusAtProvider:
    r"""
    eks aws upbound io v1beta1 addon status at provider

    Attributes
    ----------
    addonName : str, default is Undefined, optional
        on. The name must match one of
        the names returned by describe-addon-versions.
    addonVersion : str, default is Undefined, optional
        on. The version must
        match one of the versions returned by describe-addon-versions.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the EKS add-on.
    clusterName : str, default is Undefined, optional
        â€“  Name of the EKS Cluster.
    configurationValues : str, default is Undefined, optional
        custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from describe-addon-configuration.
    createdAt : str, default is Undefined, optional
        Date and time in RFC3339 format that the EKS add-on was created.
    id : str, default is Undefined, optional
        EKS Cluster name and EKS Addon name separated by a colon (:).
    modifiedAt : str, default is Undefined, optional
        Date and time in RFC3339 format that the EKS add-on was updated.
    podIdentityAssociation : [EksAwsUpboundIoV1beta1AddonStatusAtProviderPodIdentityAssociationItems0], default is Undefined, optional
        Configuration block with EKS Pod Identity association settings. See pod_identity_association below for details.
    preserve : bool, default is Undefined, optional
        Indicates if you want to preserve the created resources when deleting the EKS add-on.
    resolveConflicts : str, default is Undefined, optional
        (Deprecated use the resolve_conflicts_on_create and resolve_conflicts_on_update attributes instead) Define how to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on or when applying version updates to the add-on. Valid values are NONE, OVERWRITE and PRESERVE. Note that PRESERVE is only valid on addon update, not for initial addon creation. If you need to set this to PRESERVE, use the resolve_conflicts_on_create and resolve_conflicts_on_update attributes instead. For more details check UpdateAddon API Docs.
    resolveConflictsOnCreate : str, default is Undefined, optional
        How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are NONE and OVERWRITE. For more details see the CreateAddon API Docs.
    resolveConflictsOnUpdate : str, default is Undefined, optional
        How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Valid values are NONE, OVERWRITE, and PRESERVE. For more details see the UpdateAddon API Docs.
    serviceAccountRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an
        existing IAM role to bind to the add-on's service account. The role must be
        assigned the IAM permissions required by the add-on. If you don't specify
        an existing IAM role, then the add-on uses the permissions assigned to the node
        IAM role. For more information, see Amazon EKS node IAM role
        in the Amazon EKS User Guide.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Key-value map of resource tags, including those inherited from the provider default_tags configuration block.
    """


    addonName?: str

    addonVersion?: str

    arn?: str

    clusterName?: str

    configurationValues?: str

    createdAt?: str

    id?: str

    modifiedAt?: str

    podIdentityAssociation?: [EksAwsUpboundIoV1beta1AddonStatusAtProviderPodIdentityAssociationItems0]

    preserve?: bool

    resolveConflicts?: str

    resolveConflictsOnCreate?: str

    resolveConflictsOnUpdate?: str

    serviceAccountRoleArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema EksAwsUpboundIoV1beta1AddonStatusAtProviderPodIdentityAssociationItems0:
    r"""
    eks aws upbound io v1beta1 addon status at provider pod identity association items0

    Attributes
    ----------
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
    serviceAccount : str, default is Undefined, optional
        The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
    """


    roleArn?: str

    serviceAccount?: str


schema EksAwsUpboundIoV1beta1AddonStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


