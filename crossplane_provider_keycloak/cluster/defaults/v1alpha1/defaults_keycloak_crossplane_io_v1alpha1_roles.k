"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Roles:
    r"""
    Roles is the Schema for the Roless API.

    Attributes
    ----------
    apiVersion : str, default is "defaults.keycloak.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Roles", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpec, default is Undefined, required
        spec
    status : DefaultsKeycloakCrossplaneIoV1alpha1RolesStatus, default is Undefined, optional
        status
    """


    apiVersion: "defaults.keycloak.crossplane.io/v1alpha1" = "defaults.keycloak.crossplane.io/v1alpha1"

    kind: "Roles" = "Roles"

    metadata?: v1.ObjectMeta

    spec: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpec

    status?: DefaultsKeycloakCrossplaneIoV1alpha1RolesStatus


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpec:
    r"""
    RolesSpec defines the desired state of Roles

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProvider, default is Undefined, required
        for provider
    initProvider : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProvider

    initProvider?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecProviderConfigRef

    writeConnectionSecretToRef?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecWriteConnectionSecretToRef


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProvider:
    r"""
    defaults keycloak crossplane io v1alpha1 roles spec for provider

    Attributes
    ----------
    defaultRoles : [str], default is Undefined, optional
        Realm level roles assigned to new users by default.
        Realm level roles (name) assigned to new users.
    defaultRolesRefs : [DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesRefsItems0], default is Undefined, optional
        References to Role in role to populate defaultRoles.
    defaultRolesSelector : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesSelector, default is Undefined, optional
        default roles selector
    realmId : str, default is Undefined, optional
        The realm this role exists within.
    realmIdRef : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    defaultRoles?: [str]

    defaultRolesRefs?: [DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesRefsItems0]

    defaultRolesSelector?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesSelector

    realmId?: str

    realmIdRef?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDRef

    realmIdSelector?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDSelector


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesRefsItems0Policy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesSelector:
    r"""
    Selector for a list of Role in role to populate defaultRoles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesSelectorPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderDefaultRolesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDRefPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDSelectorPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultRoles : [str], default is Undefined, optional
        Realm level roles assigned to new users by default.
        Realm level roles (name) assigned to new users.
    defaultRolesRefs : [DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesRefsItems0], default is Undefined, optional
        References to Role in role to populate defaultRoles.
    defaultRolesSelector : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesSelector, default is Undefined, optional
        default roles selector
    realmId : str, default is Undefined, optional
        The realm this role exists within.
    realmIdRef : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    defaultRoles?: [str]

    defaultRolesRefs?: [DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesRefsItems0]

    defaultRolesSelector?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesSelector

    realmId?: str

    realmIdRef?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDRef

    realmIdSelector?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDSelector


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesRefsItems0Policy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesSelector:
    r"""
    Selector for a list of Role in role to populate defaultRoles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesSelectorPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderDefaultRolesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDRefPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDSelectorPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecProviderConfigRefPolicy


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesStatus:
    r"""
    RolesStatus defines the observed state of Roles.

    Attributes
    ----------
    atProvider : DefaultsKeycloakCrossplaneIoV1alpha1RolesStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DefaultsKeycloakCrossplaneIoV1alpha1RolesStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DefaultsKeycloakCrossplaneIoV1alpha1RolesStatusAtProvider

    conditions?: [DefaultsKeycloakCrossplaneIoV1alpha1RolesStatusConditionsItems0]

    observedGeneration?: int


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesStatusAtProvider:
    r"""
    defaults keycloak crossplane io v1alpha1 roles status at provider

    Attributes
    ----------
    defaultRoles : [str], default is Undefined, optional
        Realm level roles assigned to new users by default.
        Realm level roles (name) assigned to new users.
    id : str, default is Undefined, optional
        id
    realmId : str, default is Undefined, optional
        The realm this role exists within.
    """


    defaultRoles?: [str]

    id?: str

    realmId?: str


schema DefaultsKeycloakCrossplaneIoV1alpha1RolesStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


