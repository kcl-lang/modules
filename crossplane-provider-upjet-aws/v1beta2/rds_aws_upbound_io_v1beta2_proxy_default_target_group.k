"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProxyDefaultTargetGroup:
    r"""
    ProxyDefaultTargetGroup is the Schema for the ProxyDefaultTargetGroups API. Manage an RDS DB proxy default target group resource.

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProxyDefaultTargetGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta2" = "rds.aws.upbound.io/v1beta2"

    kind: "ProxyDefaultTargetGroup" = "ProxyDefaultTargetGroup"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpec

    status?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatus


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpec:
    r"""
    ProxyDefaultTargetGroupSpec defines the desired state of ProxyDefaultTargetGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProvider:
    r"""
    rds aws upbound io v1beta2 proxy default target group spec for provider

    Attributes
    ----------
    connectionPoolConfig : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderConnectionPoolConfig, default is Undefined, optional
        connection pool config
    dbProxyName : str, default is Undefined, optional
        Name of the RDS DB Proxy.
    dbProxyNameRef : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameRef, default is Undefined, optional
        db proxy name ref
    dbProxyNameSelector : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameSelector, default is Undefined, optional
        db proxy name selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    connectionPoolConfig?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderConnectionPoolConfig

    dbProxyName?: str

    dbProxyNameRef?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameRef

    dbProxyNameSelector?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameSelector

    region: str


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderConnectionPoolConfig:
    r"""
    The settings that determine the size and behavior of the connection pool for the target group.

    Attributes
    ----------
    connectionBorrowTimeout : float, default is Undefined, optional
        The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
    initQuery : str, default is Undefined, optional
        One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2.
    maxConnectionsPercent : float, default is Undefined, optional
        The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.
    maxIdleConnectionsPercent : float, default is Undefined, optional
        Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.
    sessionPinningFilters : [str], default is Undefined, optional
        Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. This setting is only supported for MySQL engine family databases. Currently, the only allowed value is EXCLUDE_VARIABLE_SETS.
    """


    connectionBorrowTimeout?: float

    initQuery?: str

    maxConnectionsPercent?: float

    maxIdleConnectionsPercent?: float

    sessionPinningFilters?: [str]


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameRef:
    r"""
    Reference to a Proxy in rds to populate dbProxyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameRefPolicy


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameSelector:
    r"""
    Selector for a Proxy in rds to populate dbProxyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameSelectorPolicy


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecForProviderDbProxyNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    connectionPoolConfig : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderConnectionPoolConfig, default is Undefined, optional
        connection pool config
    dbProxyName : str, default is Undefined, optional
        Name of the RDS DB Proxy.
    dbProxyNameRef : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameRef, default is Undefined, optional
        db proxy name ref
    dbProxyNameSelector : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameSelector, default is Undefined, optional
        db proxy name selector
    """


    connectionPoolConfig?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderConnectionPoolConfig

    dbProxyName?: str

    dbProxyNameRef?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameRef

    dbProxyNameSelector?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameSelector


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderConnectionPoolConfig:
    r"""
    The settings that determine the size and behavior of the connection pool for the target group.

    Attributes
    ----------
    connectionBorrowTimeout : float, default is Undefined, optional
        The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
    initQuery : str, default is Undefined, optional
        One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2.
    maxConnectionsPercent : float, default is Undefined, optional
        The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.
    maxIdleConnectionsPercent : float, default is Undefined, optional
        Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.
    sessionPinningFilters : [str], default is Undefined, optional
        Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. This setting is only supported for MySQL engine family databases. Currently, the only allowed value is EXCLUDE_VARIABLE_SETS.
    """


    connectionBorrowTimeout?: float

    initQuery?: str

    maxConnectionsPercent?: float

    maxIdleConnectionsPercent?: float

    sessionPinningFilters?: [str]


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameRef:
    r"""
    Reference to a Proxy in rds to populate dbProxyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameRefPolicy


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameSelector:
    r"""
    Selector for a Proxy in rds to populate dbProxyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameSelectorPolicy


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecInitProviderDbProxyNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatus:
    r"""
    ProxyDefaultTargetGroupStatus defines the observed state of ProxyDefaultTargetGroup.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusAtProvider:
    r"""
    rds aws upbound io v1beta2 proxy default target group status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) representing the target group.
    connectionPoolConfig : RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusAtProviderConnectionPoolConfig, default is Undefined, optional
        connection pool config
    dbProxyName : str, default is Undefined, optional
        Name of the RDS DB Proxy.
    id : str, default is Undefined, optional
        Name of the RDS DB Proxy.
    name : str, default is Undefined, optional
        The name of the default target group.
    """


    arn?: str

    connectionPoolConfig?: RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusAtProviderConnectionPoolConfig

    dbProxyName?: str

    id?: str

    name?: str


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusAtProviderConnectionPoolConfig:
    r"""
    The settings that determine the size and behavior of the connection pool for the target group.

    Attributes
    ----------
    connectionBorrowTimeout : float, default is Undefined, optional
        The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
    initQuery : str, default is Undefined, optional
        One or more SQL statements for the proxy to run when opening each new database connection. Typically used with SET statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single SET statement, such as SET x=1, y=2.
    maxConnectionsPercent : float, default is Undefined, optional
        The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.
    maxIdleConnectionsPercent : float, default is Undefined, optional
        Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the max_connections setting for the RDS DB instance or Aurora DB cluster used by the target group.
    sessionPinningFilters : [str], default is Undefined, optional
        Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. This setting is only supported for MySQL engine family databases. Currently, the only allowed value is EXCLUDE_VARIABLE_SETS.
    """


    connectionBorrowTimeout?: float

    initQuery?: str

    maxConnectionsPercent?: float

    maxIdleConnectionsPercent?: float

    sessionPinningFilters?: [str]


schema RdsAwsUpboundIoV1beta2ProxyDefaultTargetGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


