"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Crawler:
    r"""
    Crawler is the Schema for the Crawlers API. Manages a Glue Crawler

    Attributes
    ----------
    apiVersion : str, default is "glue.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Crawler", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GlueAwsUpboundIoV1beta2CrawlerSpec, default is Undefined, required
        spec
    status : GlueAwsUpboundIoV1beta2CrawlerStatus, default is Undefined, optional
        status
    """


    apiVersion: "glue.aws.upbound.io/v1beta2" = "glue.aws.upbound.io/v1beta2"

    kind: "Crawler" = "Crawler"

    metadata?: v1.ObjectMeta

    spec: GlueAwsUpboundIoV1beta2CrawlerSpec

    status?: GlueAwsUpboundIoV1beta2CrawlerStatus


schema GlueAwsUpboundIoV1beta2CrawlerSpec:
    r"""
    CrawlerSpec defines the desired state of Crawler

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GlueAwsUpboundIoV1beta2CrawlerSpecForProvider, default is Undefined, required
        for provider
    initProvider : GlueAwsUpboundIoV1beta2CrawlerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GlueAwsUpboundIoV1beta2CrawlerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GlueAwsUpboundIoV1beta2CrawlerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GlueAwsUpboundIoV1beta2CrawlerSpecForProvider

    initProvider?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GlueAwsUpboundIoV1beta2CrawlerSpecProviderConfigRef

    publishConnectionDetailsTo?: GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GlueAwsUpboundIoV1beta2CrawlerSpecWriteConnectionSecretToRef


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProvider:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider

    Attributes
    ----------
    catalogTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0], default is Undefined, optional
        List of nested AWS Glue Data Catalog target arguments. See Catalog Target below.
    classifiers : [str], default is Undefined, optional
        List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
    configuration : str, default is Undefined, optional
        JSON string of configuration information. For more details see Setting Crawler Configuration Options.
    databaseName : str, default is Undefined, optional
        Glue database where results are written.
    databaseNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameSelector, default is Undefined, optional
        database name selector
    deltaTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDeltaTargetItems0], default is Undefined, optional
        List of nested Delta Lake target arguments. See Delta Target below.
    description : str, default is Undefined, optional
        Description of the crawler.
    dynamodbTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDynamodbTargetItems0], default is Undefined, optional
        List of nested DynamoDB target arguments. See Dynamodb Target below.
    hudiTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderHudiTargetItems0], default is Undefined, optional
        List of nested Hudi target arguments. See Iceberg Target below.
    icebergTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderIcebergTargetItems0], default is Undefined, optional
        List of nested Iceberg target arguments. See Iceberg Target below.
    jdbcTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0], default is Undefined, optional
        List of nested JDBC target arguments. See JDBC Target below.
    lakeFormationConfiguration : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderLakeFormationConfiguration, default is Undefined, optional
        lake formation configuration
    lineageConfiguration : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderLineageConfiguration, default is Undefined, optional
        lineage configuration
    mongodbTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0], default is Undefined, optional
        List of nested MongoDB target arguments. See MongoDB Target below.
    recrawlPolicy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRecrawlPolicy, default is Undefined, optional
        recrawl policy
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    role : str, default is Undefined, optional
        The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
    roleRef : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleRef, default is Undefined, optional
        role ref
    roleSelector : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleSelector, default is Undefined, optional
        role selector
    s3Target : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderS3TargetItems0], default is Undefined, optional
        List of nested Amazon S3 target arguments. See S3 Target below.
    schedule : str, default is Undefined, optional
        Based Schedules for Jobs and Crawlers. For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *).
    schemaChangePolicy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderSchemaChangePolicy, default is Undefined, optional
        schema change policy
    securityConfiguration : str, default is Undefined, optional
        The name of Security Configuration to be used by the crawler
    tablePrefix : str, default is Undefined, optional
        The table prefix used for catalog tables that are created.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    catalogTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0]

    classifiers?: [str]

    configuration?: str

    databaseName?: str

    databaseNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameRef

    databaseNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameSelector

    deltaTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDeltaTargetItems0]

    description?: str

    dynamodbTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDynamodbTargetItems0]

    hudiTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderHudiTargetItems0]

    icebergTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderIcebergTargetItems0]

    jdbcTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0]

    lakeFormationConfiguration?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderLakeFormationConfiguration

    lineageConfiguration?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderLineageConfiguration

    mongodbTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0]

    recrawlPolicy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRecrawlPolicy

    region: str

    role?: str

    roleRef?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleRef

    roleSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleSelector

    s3Target?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderS3TargetItems0]

    schedule?: str

    schemaChangePolicy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderSchemaChangePolicy

    securityConfiguration?: str

    tablePrefix?: str

    tags?: {str:str}


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider catalog target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    databaseName : str, default is Undefined, optional
        Glue database where results are written.
    databaseNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameSelector, default is Undefined, optional
        database name selector
    dlqEventQueueArn : str, default is Undefined, optional
        The ARN of the dead-letter SQS queue.
    eventQueueArn : str, default is Undefined, optional
        The ARN of the SQS queue to receive S3 notifications from.
    tables : [str], default is Undefined, optional
        A list of catalog tables to be synchronized.
    tablesRefs : [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesRefsItems0], default is Undefined, optional
        References to CatalogTable in glue to populate tables.
    tablesSelector : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesSelector, default is Undefined, optional
        tables selector
    """


    connectionName?: str

    databaseName?: str

    databaseNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameRef

    databaseNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameSelector

    dlqEventQueueArn?: str

    eventQueueArn?: str

    tables?: [str]

    tablesRefs?: [GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesRefsItems0]

    tablesSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesSelector


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0DatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesRefsItems0Policy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesSelector:
    r"""
    Selector for a list of CatalogTable in glue to populate tables.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderCatalogTargetItems0TablesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDeltaTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider delta target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    createNativeDeltaTable : bool, default is Undefined, optional
        Specifies whether the crawler will create native tables, to allow integration with query engines that support querying of the Delta transaction log directly.
    deltaTables : [str], default is Undefined, optional
        A list of the Amazon S3 paths to the Delta tables.
    writeManifest : bool, default is Undefined, optional
        Specifies whether to write the manifest files to the Delta table path.
    """


    connectionName?: str

    createNativeDeltaTable?: bool

    deltaTables?: [str]

    writeManifest?: bool


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderDynamodbTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider dynamodb target items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    scanAll : bool, default is Undefined, optional
        Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.
    scanRate : float, default is Undefined, optional
        The percentage of the configured read capacity units to use by the AWS Glue crawler. The valid values are null or a value between 0.1 to 1.5.
    """


    path?: str

    scanAll?: bool

    scanRate?: float


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderHudiTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider hudi target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    maximumTraversalDepth : float, default is Undefined, optional
        The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Hudi metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between 1 and 20.
    paths : [str], default is Undefined, optional
        One or more Amazon S3 paths that contains Hudi metadata folders as s3://bucket/prefix.
    """


    connectionName?: str

    exclusions?: [str]

    maximumTraversalDepth?: float

    paths?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderIcebergTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider iceberg target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    maximumTraversalDepth : float, default is Undefined, optional
        The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Hudi metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between 1 and 20.
    paths : [str], default is Undefined, optional
        One or more Amazon S3 paths that contains Hudi metadata folders as s3://bucket/prefix.
    """


    connectionName?: str

    exclusions?: [str]

    maximumTraversalDepth?: float

    paths?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider jdbc target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    connectionNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameRef, default is Undefined, optional
        connection name ref
    connectionNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameSelector, default is Undefined, optional
        connection name selector
    enableAdditionalMetadata : [str], default is Undefined, optional
        Specify a value of RAWTYPES or COMMENTS to enable additional metadata intable responses. RAWTYPES provides the native-level datatype. COMMENTS provides comments associated with a column or table in the database.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    """


    connectionName?: str

    connectionNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameRef

    connectionNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameSelector

    enableAdditionalMetadata?: [str]

    exclusions?: [str]

    path?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameRef:
    r"""
    Reference to a Connection in glue to populate connectionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameSelector:
    r"""
    Selector for a Connection in glue to populate connectionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderJdbcTargetItems0ConnectionNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderLakeFormationConfiguration:
    r"""
    Specifies Lake Formation configuration settings for the crawler. See Lake Formation Configuration below.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        Required for cross account crawls. For same account crawls as the target data, this can omitted.
    useLakeFormationCredentials : bool, default is Undefined, optional
        Specifies whether to use Lake Formation credentials for the crawler instead of the IAM role credentials.
    """


    accountId?: str

    useLakeFormationCredentials?: bool


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderLineageConfiguration:
    r"""
    Specifies data lineage configuration settings for the crawler. See Lineage Configuration below.

    Attributes
    ----------
    crawlerLineageSettings : str, default is Undefined, optional
        Specifies whether data lineage is enabled for the crawler. Valid values are: ENABLE and DISABLE. Default value is DISABLE.
    """


    crawlerLineageSettings?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider mongodb target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    connectionNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameRef, default is Undefined, optional
        connection name ref
    connectionNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameSelector, default is Undefined, optional
        connection name selector
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    scanAll : bool, default is Undefined, optional
        Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.
    """


    connectionName?: str

    connectionNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameRef

    connectionNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameSelector

    path?: str

    scanAll?: bool


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameRef:
    r"""
    Reference to a Connection in glue to populate connectionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameSelector:
    r"""
    Selector for a Connection in glue to populate connectionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderMongodbTargetItems0ConnectionNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRecrawlPolicy:
    r"""
    A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.. See Recrawl Policy below.

    Attributes
    ----------
    recrawlBehavior : str, default is Undefined, optional
        Specifies whether to crawl the entire dataset again, crawl only folders that were added since the last crawler run, or crawl what S3 notifies the crawler of via SQS. Valid Values are: CRAWL_EVENT_MODE, CRAWL_EVERYTHING and CRAWL_NEW_FOLDERS_ONLY. Default value is CRAWL_EVERYTHING.
    """


    recrawlBehavior?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleRef:
    r"""
    Reference to a Role in iam to populate role.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleSelector:
    r"""
    Selector for a Role in iam to populate role.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderS3TargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec for provider s3 target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    dlqEventQueueArn : str, default is Undefined, optional
        The ARN of the dead-letter SQS queue.
    eventQueueArn : str, default is Undefined, optional
        The ARN of the SQS queue to receive S3 notifications from.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    sampleSize : float, default is Undefined, optional
        Sets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.
    """


    connectionName?: str

    dlqEventQueueArn?: str

    eventQueueArn?: str

    exclusions?: [str]

    path?: str

    sampleSize?: float


schema GlueAwsUpboundIoV1beta2CrawlerSpecForProviderSchemaChangePolicy:
    r"""
    Policy for the crawler's update and deletion behavior. See Schema Change Policy below.

    Attributes
    ----------
    deleteBehavior : str, default is Undefined, optional
        The deletion behavior when the crawler finds a deleted object. Valid values: LOG, DELETE_FROM_DATABASE, or DEPRECATE_IN_DATABASE. Defaults to DEPRECATE_IN_DATABASE.
    updateBehavior : str, default is Undefined, optional
        The update behavior when the crawler finds a changed schema. Valid values: LOG or UPDATE_IN_DATABASE. Defaults to UPDATE_IN_DATABASE.
    """


    deleteBehavior?: str

    updateBehavior?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    catalogTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0], default is Undefined, optional
        List of nested AWS Glue Data Catalog target arguments. See Catalog Target below.
    classifiers : [str], default is Undefined, optional
        List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
    configuration : str, default is Undefined, optional
        JSON string of configuration information. For more details see Setting Crawler Configuration Options.
    databaseName : str, default is Undefined, optional
        Glue database where results are written.
    databaseNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameSelector, default is Undefined, optional
        database name selector
    deltaTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDeltaTargetItems0], default is Undefined, optional
        List of nested Delta Lake target arguments. See Delta Target below.
    description : str, default is Undefined, optional
        Description of the crawler.
    dynamodbTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDynamodbTargetItems0], default is Undefined, optional
        List of nested DynamoDB target arguments. See Dynamodb Target below.
    hudiTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderHudiTargetItems0], default is Undefined, optional
        List of nested Hudi target arguments. See Iceberg Target below.
    icebergTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderIcebergTargetItems0], default is Undefined, optional
        List of nested Iceberg target arguments. See Iceberg Target below.
    jdbcTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0], default is Undefined, optional
        List of nested JDBC target arguments. See JDBC Target below.
    lakeFormationConfiguration : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderLakeFormationConfiguration, default is Undefined, optional
        lake formation configuration
    lineageConfiguration : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderLineageConfiguration, default is Undefined, optional
        lineage configuration
    mongodbTarget : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0], default is Undefined, optional
        List of nested MongoDB target arguments. See MongoDB Target below.
    recrawlPolicy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRecrawlPolicy, default is Undefined, optional
        recrawl policy
    role : str, default is Undefined, optional
        The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
    roleRef : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleRef, default is Undefined, optional
        role ref
    roleSelector : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleSelector, default is Undefined, optional
        role selector
    s3Target : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderS3TargetItems0], default is Undefined, optional
        List of nested Amazon S3 target arguments. See S3 Target below.
    schedule : str, default is Undefined, optional
        Based Schedules for Jobs and Crawlers. For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *).
    schemaChangePolicy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderSchemaChangePolicy, default is Undefined, optional
        schema change policy
    securityConfiguration : str, default is Undefined, optional
        The name of Security Configuration to be used by the crawler
    tablePrefix : str, default is Undefined, optional
        The table prefix used for catalog tables that are created.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    catalogTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0]

    classifiers?: [str]

    configuration?: str

    databaseName?: str

    databaseNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameRef

    databaseNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameSelector

    deltaTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDeltaTargetItems0]

    description?: str

    dynamodbTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDynamodbTargetItems0]

    hudiTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderHudiTargetItems0]

    icebergTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderIcebergTargetItems0]

    jdbcTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0]

    lakeFormationConfiguration?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderLakeFormationConfiguration

    lineageConfiguration?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderLineageConfiguration

    mongodbTarget?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0]

    recrawlPolicy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRecrawlPolicy

    role?: str

    roleRef?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleRef

    roleSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleSelector

    s3Target?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderS3TargetItems0]

    schedule?: str

    schemaChangePolicy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderSchemaChangePolicy

    securityConfiguration?: str

    tablePrefix?: str

    tags?: {str:str}


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider catalog target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    databaseName : str, default is Undefined, optional
        Glue database where results are written.
    databaseNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameRef, default is Undefined, optional
        database name ref
    databaseNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameSelector, default is Undefined, optional
        database name selector
    dlqEventQueueArn : str, default is Undefined, optional
        The ARN of the dead-letter SQS queue.
    eventQueueArn : str, default is Undefined, optional
        The ARN of the SQS queue to receive S3 notifications from.
    tables : [str], default is Undefined, optional
        A list of catalog tables to be synchronized.
    tablesRefs : [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesRefsItems0], default is Undefined, optional
        References to CatalogTable in glue to populate tables.
    tablesSelector : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesSelector, default is Undefined, optional
        tables selector
    """


    connectionName?: str

    databaseName?: str

    databaseNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameRef

    databaseNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameSelector

    dlqEventQueueArn?: str

    eventQueueArn?: str

    tables?: [str]

    tablesRefs?: [GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesRefsItems0]

    tablesSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesSelector


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0DatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesRefsItems0Policy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesSelector:
    r"""
    Selector for a list of CatalogTable in glue to populate tables.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderCatalogTargetItems0TablesSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameRef:
    r"""
    Reference to a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameSelector:
    r"""
    Selector for a CatalogDatabase in glue to populate databaseName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDatabaseNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDeltaTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider delta target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    createNativeDeltaTable : bool, default is Undefined, optional
        Specifies whether the crawler will create native tables, to allow integration with query engines that support querying of the Delta transaction log directly.
    deltaTables : [str], default is Undefined, optional
        A list of the Amazon S3 paths to the Delta tables.
    writeManifest : bool, default is Undefined, optional
        Specifies whether to write the manifest files to the Delta table path.
    """


    connectionName?: str

    createNativeDeltaTable?: bool

    deltaTables?: [str]

    writeManifest?: bool


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderDynamodbTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider dynamodb target items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    scanAll : bool, default is Undefined, optional
        Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.
    scanRate : float, default is Undefined, optional
        The percentage of the configured read capacity units to use by the AWS Glue crawler. The valid values are null or a value between 0.1 to 1.5.
    """


    path?: str

    scanAll?: bool

    scanRate?: float


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderHudiTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider hudi target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    maximumTraversalDepth : float, default is Undefined, optional
        The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Hudi metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between 1 and 20.
    paths : [str], default is Undefined, optional
        One or more Amazon S3 paths that contains Hudi metadata folders as s3://bucket/prefix.
    """


    connectionName?: str

    exclusions?: [str]

    maximumTraversalDepth?: float

    paths?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderIcebergTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider iceberg target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    maximumTraversalDepth : float, default is Undefined, optional
        The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Hudi metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between 1 and 20.
    paths : [str], default is Undefined, optional
        One or more Amazon S3 paths that contains Hudi metadata folders as s3://bucket/prefix.
    """


    connectionName?: str

    exclusions?: [str]

    maximumTraversalDepth?: float

    paths?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider jdbc target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    connectionNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameRef, default is Undefined, optional
        connection name ref
    connectionNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameSelector, default is Undefined, optional
        connection name selector
    enableAdditionalMetadata : [str], default is Undefined, optional
        Specify a value of RAWTYPES or COMMENTS to enable additional metadata intable responses. RAWTYPES provides the native-level datatype. COMMENTS provides comments associated with a column or table in the database.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    """


    connectionName?: str

    connectionNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameRef

    connectionNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameSelector

    enableAdditionalMetadata?: [str]

    exclusions?: [str]

    path?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameRef:
    r"""
    Reference to a Connection in glue to populate connectionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameSelector:
    r"""
    Selector for a Connection in glue to populate connectionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderJdbcTargetItems0ConnectionNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderLakeFormationConfiguration:
    r"""
    Specifies Lake Formation configuration settings for the crawler. See Lake Formation Configuration below.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        Required for cross account crawls. For same account crawls as the target data, this can omitted.
    useLakeFormationCredentials : bool, default is Undefined, optional
        Specifies whether to use Lake Formation credentials for the crawler instead of the IAM role credentials.
    """


    accountId?: str

    useLakeFormationCredentials?: bool


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderLineageConfiguration:
    r"""
    Specifies data lineage configuration settings for the crawler. See Lineage Configuration below.

    Attributes
    ----------
    crawlerLineageSettings : str, default is Undefined, optional
        Specifies whether data lineage is enabled for the crawler. Valid values are: ENABLE and DISABLE. Default value is DISABLE.
    """


    crawlerLineageSettings?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider mongodb target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    connectionNameRef : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameRef, default is Undefined, optional
        connection name ref
    connectionNameSelector : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameSelector, default is Undefined, optional
        connection name selector
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    scanAll : bool, default is Undefined, optional
        Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.
    """


    connectionName?: str

    connectionNameRef?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameRef

    connectionNameSelector?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameSelector

    path?: str

    scanAll?: bool


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameRef:
    r"""
    Reference to a Connection in glue to populate connectionName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameSelector:
    r"""
    Selector for a Connection in glue to populate connectionName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderMongodbTargetItems0ConnectionNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRecrawlPolicy:
    r"""
    A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.. See Recrawl Policy below.

    Attributes
    ----------
    recrawlBehavior : str, default is Undefined, optional
        Specifies whether to crawl the entire dataset again, crawl only folders that were added since the last crawler run, or crawl what S3 notifies the crawler of via SQS. Valid Values are: CRAWL_EVENT_MODE, CRAWL_EVERYTHING and CRAWL_NEW_FOLDERS_ONLY. Default value is CRAWL_EVERYTHING.
    """


    recrawlBehavior?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleRef:
    r"""
    Reference to a Role in iam to populate role.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleSelector:
    r"""
    Selector for a Role in iam to populate role.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleSelectorPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderS3TargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler spec init provider s3 target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    dlqEventQueueArn : str, default is Undefined, optional
        The ARN of the dead-letter SQS queue.
    eventQueueArn : str, default is Undefined, optional
        The ARN of the SQS queue to receive S3 notifications from.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    sampleSize : float, default is Undefined, optional
        Sets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.
    """


    connectionName?: str

    dlqEventQueueArn?: str

    eventQueueArn?: str

    exclusions?: [str]

    path?: str

    sampleSize?: float


schema GlueAwsUpboundIoV1beta2CrawlerSpecInitProviderSchemaChangePolicy:
    r"""
    Policy for the crawler's update and deletion behavior. See Schema Change Policy below.

    Attributes
    ----------
    deleteBehavior : str, default is Undefined, optional
        The deletion behavior when the crawler finds a deleted object. Valid values: LOG, DELETE_FROM_DATABASE, or DEPRECATE_IN_DATABASE. Defaults to DEPRECATE_IN_DATABASE.
    updateBehavior : str, default is Undefined, optional
        The update behavior when the crawler finds a changed schema. Valid values: LOG or UPDATE_IN_DATABASE. Defaults to UPDATE_IN_DATABASE.
    """


    deleteBehavior?: str

    updateBehavior?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecProviderConfigRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToConfigRef

    metadata?: GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToMetadata

    name: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToConfigRefPolicy


schema GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2CrawlerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta2CrawlerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GlueAwsUpboundIoV1beta2CrawlerStatus:
    r"""
    CrawlerStatus defines the observed state of Crawler.

    Attributes
    ----------
    atProvider : GlueAwsUpboundIoV1beta2CrawlerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GlueAwsUpboundIoV1beta2CrawlerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GlueAwsUpboundIoV1beta2CrawlerStatusAtProvider

    conditions?: [GlueAwsUpboundIoV1beta2CrawlerStatusConditionsItems0]

    observedGeneration?: int


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProvider:
    r"""
    glue aws upbound io v1beta2 crawler status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the crawler
    catalogTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderCatalogTargetItems0], default is Undefined, optional
        List of nested AWS Glue Data Catalog target arguments. See Catalog Target below.
    classifiers : [str], default is Undefined, optional
        List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
    configuration : str, default is Undefined, optional
        JSON string of configuration information. For more details see Setting Crawler Configuration Options.
    databaseName : str, default is Undefined, optional
        Glue database where results are written.
    deltaTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderDeltaTargetItems0], default is Undefined, optional
        List of nested Delta Lake target arguments. See Delta Target below.
    description : str, default is Undefined, optional
        Description of the crawler.
    dynamodbTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderDynamodbTargetItems0], default is Undefined, optional
        List of nested DynamoDB target arguments. See Dynamodb Target below.
    hudiTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderHudiTargetItems0], default is Undefined, optional
        List of nested Hudi target arguments. See Iceberg Target below.
    icebergTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderIcebergTargetItems0], default is Undefined, optional
        List of nested Iceberg target arguments. See Iceberg Target below.
    id : str, default is Undefined, optional
        Crawler name
    jdbcTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderJdbcTargetItems0], default is Undefined, optional
        List of nested JDBC target arguments. See JDBC Target below.
    lakeFormationConfiguration : GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderLakeFormationConfiguration, default is Undefined, optional
        lake formation configuration
    lineageConfiguration : GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderLineageConfiguration, default is Undefined, optional
        lineage configuration
    mongodbTarget : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderMongodbTargetItems0], default is Undefined, optional
        List of nested MongoDB target arguments. See MongoDB Target below.
    recrawlPolicy : GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderRecrawlPolicy, default is Undefined, optional
        recrawl policy
    role : str, default is Undefined, optional
        The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
    s3Target : [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderS3TargetItems0], default is Undefined, optional
        List of nested Amazon S3 target arguments. See S3 Target below.
    schedule : str, default is Undefined, optional
        Based Schedules for Jobs and Crawlers. For example, to run something every day at 12:15 UTC, you would specify: cron(15 12 * * ? *).
    schemaChangePolicy : GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderSchemaChangePolicy, default is Undefined, optional
        schema change policy
    securityConfiguration : str, default is Undefined, optional
        The name of Security Configuration to be used by the crawler
    tablePrefix : str, default is Undefined, optional
        The table prefix used for catalog tables that are created.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    catalogTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderCatalogTargetItems0]

    classifiers?: [str]

    configuration?: str

    databaseName?: str

    deltaTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderDeltaTargetItems0]

    description?: str

    dynamodbTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderDynamodbTargetItems0]

    hudiTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderHudiTargetItems0]

    icebergTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderIcebergTargetItems0]

    id?: str

    jdbcTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderJdbcTargetItems0]

    lakeFormationConfiguration?: GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderLakeFormationConfiguration

    lineageConfiguration?: GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderLineageConfiguration

    mongodbTarget?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderMongodbTargetItems0]

    recrawlPolicy?: GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderRecrawlPolicy

    role?: str

    s3Target?: [GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderS3TargetItems0]

    schedule?: str

    schemaChangePolicy?: GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderSchemaChangePolicy

    securityConfiguration?: str

    tablePrefix?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderCatalogTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider catalog target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    databaseName : str, default is Undefined, optional
        Glue database where results are written.
    dlqEventQueueArn : str, default is Undefined, optional
        The ARN of the dead-letter SQS queue.
    eventQueueArn : str, default is Undefined, optional
        The ARN of the SQS queue to receive S3 notifications from.
    tables : [str], default is Undefined, optional
        A list of catalog tables to be synchronized.
    """


    connectionName?: str

    databaseName?: str

    dlqEventQueueArn?: str

    eventQueueArn?: str

    tables?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderDeltaTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider delta target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    createNativeDeltaTable : bool, default is Undefined, optional
        Specifies whether the crawler will create native tables, to allow integration with query engines that support querying of the Delta transaction log directly.
    deltaTables : [str], default is Undefined, optional
        A list of the Amazon S3 paths to the Delta tables.
    writeManifest : bool, default is Undefined, optional
        Specifies whether to write the manifest files to the Delta table path.
    """


    connectionName?: str

    createNativeDeltaTable?: bool

    deltaTables?: [str]

    writeManifest?: bool


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderDynamodbTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider dynamodb target items0

    Attributes
    ----------
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    scanAll : bool, default is Undefined, optional
        Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.
    scanRate : float, default is Undefined, optional
        The percentage of the configured read capacity units to use by the AWS Glue crawler. The valid values are null or a value between 0.1 to 1.5.
    """


    path?: str

    scanAll?: bool

    scanRate?: float


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderHudiTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider hudi target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    maximumTraversalDepth : float, default is Undefined, optional
        The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Hudi metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between 1 and 20.
    paths : [str], default is Undefined, optional
        One or more Amazon S3 paths that contains Hudi metadata folders as s3://bucket/prefix.
    """


    connectionName?: str

    exclusions?: [str]

    maximumTraversalDepth?: float

    paths?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderIcebergTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider iceberg target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    maximumTraversalDepth : float, default is Undefined, optional
        The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Hudi metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between 1 and 20.
    paths : [str], default is Undefined, optional
        One or more Amazon S3 paths that contains Hudi metadata folders as s3://bucket/prefix.
    """


    connectionName?: str

    exclusions?: [str]

    maximumTraversalDepth?: float

    paths?: [str]


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderJdbcTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider jdbc target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    enableAdditionalMetadata : [str], default is Undefined, optional
        Specify a value of RAWTYPES or COMMENTS to enable additional metadata intable responses. RAWTYPES provides the native-level datatype. COMMENTS provides comments associated with a column or table in the database.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    """


    connectionName?: str

    enableAdditionalMetadata?: [str]

    exclusions?: [str]

    path?: str


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderLakeFormationConfiguration:
    r"""
    Specifies Lake Formation configuration settings for the crawler. See Lake Formation Configuration below.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        Required for cross account crawls. For same account crawls as the target data, this can omitted.
    useLakeFormationCredentials : bool, default is Undefined, optional
        Specifies whether to use Lake Formation credentials for the crawler instead of the IAM role credentials.
    """


    accountId?: str

    useLakeFormationCredentials?: bool


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderLineageConfiguration:
    r"""
    Specifies data lineage configuration settings for the crawler. See Lineage Configuration below.

    Attributes
    ----------
    crawlerLineageSettings : str, default is Undefined, optional
        Specifies whether data lineage is enabled for the crawler. Valid values are: ENABLE and DISABLE. Default value is DISABLE.
    """


    crawlerLineageSettings?: str


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderMongodbTargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider mongodb target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    scanAll : bool, default is Undefined, optional
        Indicates whether to scan all the records, or to sample rows from the table. Scanning all the records can take a long time when the table is not a high throughput table.  defaults to true.
    """


    connectionName?: str

    path?: str

    scanAll?: bool


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderRecrawlPolicy:
    r"""
    A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.. See Recrawl Policy below.

    Attributes
    ----------
    recrawlBehavior : str, default is Undefined, optional
        Specifies whether to crawl the entire dataset again, crawl only folders that were added since the last crawler run, or crawl what S3 notifies the crawler of via SQS. Valid Values are: CRAWL_EVENT_MODE, CRAWL_EVERYTHING and CRAWL_NEW_FOLDERS_ONLY. Default value is CRAWL_EVERYTHING.
    """


    recrawlBehavior?: str


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderS3TargetItems0:
    r"""
    glue aws upbound io v1beta2 crawler status at provider s3 target items0

    Attributes
    ----------
    connectionName : str, default is Undefined, optional
        The name of the connection to use to connect to the JDBC target.
    dlqEventQueueArn : str, default is Undefined, optional
        The ARN of the dead-letter SQS queue.
    eventQueueArn : str, default is Undefined, optional
        The ARN of the SQS queue to receive S3 notifications from.
    exclusions : [str], default is Undefined, optional
        A list of glob patterns used to exclude from the crawl.
    path : str, default is Undefined, optional
        The name of the DynamoDB table to crawl.
    sampleSize : float, default is Undefined, optional
        Sets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.
    """


    connectionName?: str

    dlqEventQueueArn?: str

    eventQueueArn?: str

    exclusions?: [str]

    path?: str

    sampleSize?: float


schema GlueAwsUpboundIoV1beta2CrawlerStatusAtProviderSchemaChangePolicy:
    r"""
    Policy for the crawler's update and deletion behavior. See Schema Change Policy below.

    Attributes
    ----------
    deleteBehavior : str, default is Undefined, optional
        The deletion behavior when the crawler finds a deleted object. Valid values: LOG, DELETE_FROM_DATABASE, or DEPRECATE_IN_DATABASE. Defaults to DEPRECATE_IN_DATABASE.
    updateBehavior : str, default is Undefined, optional
        The update behavior when the crawler finds a changed schema. Valid values: LOG or UPDATE_IN_DATABASE. Defaults to UPDATE_IN_DATABASE.
    """


    deleteBehavior?: str

    updateBehavior?: str


schema GlueAwsUpboundIoV1beta2CrawlerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


