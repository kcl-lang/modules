"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Repository:
    r"""
    Repository is the Schema for the Repositorys API. Creates and manages repositories within GitHub organizations or personal accounts

    Attributes
    ----------
    apiVersion : str, default is "repo.github.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Repository", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RepoGithubUpboundIoV1alpha1RepositorySpec, default is Undefined, required
        spec
    status : RepoGithubUpboundIoV1alpha1RepositoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "repo.github.upbound.io/v1alpha1" = "repo.github.upbound.io/v1alpha1"

    kind: "Repository" = "Repository"

    metadata?: v1.ObjectMeta

    spec: RepoGithubUpboundIoV1alpha1RepositorySpec

    status?: RepoGithubUpboundIoV1alpha1RepositoryStatus


schema RepoGithubUpboundIoV1alpha1RepositorySpec:
    r"""
    RepositorySpec defines the desired state of Repository

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RepoGithubUpboundIoV1alpha1RepositorySpecForProvider, default is Undefined, required
        for provider
    initProvider : RepoGithubUpboundIoV1alpha1RepositorySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RepoGithubUpboundIoV1alpha1RepositorySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RepoGithubUpboundIoV1alpha1RepositorySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RepoGithubUpboundIoV1alpha1RepositorySpecForProvider

    initProvider?: RepoGithubUpboundIoV1alpha1RepositorySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RepoGithubUpboundIoV1alpha1RepositorySpecProviderConfigRef

    publishConnectionDetailsTo?: RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RepoGithubUpboundIoV1alpha1RepositorySpecWriteConnectionSecretToRef


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProvider:
    r"""
    repo github upbound io v1alpha1 repository spec for provider

    Attributes
    ----------
    allowAutoMerge : bool, default is Undefined, optional
        Set to true to allow auto-merging pull requests on the repository.
        Set to 'true' to allow auto-merging pull requests on the repository.
    allowMergeCommit : bool, default is Undefined, optional
        (including the related merge_commit_title and merge_commit_message)
        Set to 'false' to disable merge commits on the repository.
    allowRebaseMerge : bool, default is Undefined, optional
        Set to false to disable rebase merges on the repository.
        Set to 'false' to disable rebase merges on the repository.
    allowSquashMerge : bool, default is Undefined, optional
        (including the related squash_merge_commit_title and squash_merge_commit_message)
        Set to 'false' to disable squash merges on the repository.
    allowUpdateBranch : bool, default is Undefined, optional
        Set to true to always suggest updating pull request branches.
        Set to 'true' to always suggest updating pull request branches.
    archiveOnDestroy : bool, default is Undefined, optional
        Set to true to archive the repository instead of deleting on destroy.
        Set to 'true' to archive the repository instead of deleting on destroy.
    archived : bool, default is Undefined, optional
        Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
        Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
    autoInit : bool, default is Undefined, optional
        Set to true to produce an initial commit in the repository.
        Set to 'true' to produce an initial commit in the repository.
    defaultBranch : str, default is Undefined, optional
        (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
        and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
        initial repository creation and create the target branch inside of the repository prior to setting this attribute.
        Can only be set after initial repository creation, and only if the target branch exists
    deleteBranchOnMerge : bool, default is Undefined, optional
        Automatically delete head branch after a pull request is merged. Defaults to false.
        Automatically delete head branch after a pull request is merged. Defaults to 'false'.
    description : str, default is Undefined, optional
        A description of the repository.
        A description of the repository.
    gitignoreTemplate : str, default is Undefined, optional
        Use the name of the template without the extension. For example, "Haskell".
        Use the name of the template without the extension. For example, 'Haskell'.
    hasDiscussions : bool, default is Undefined, optional
        Set to true to enable GitHub Discussions on the repository. Defaults to false.
        Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
    hasDownloads : bool, default is Undefined, optional
        Set to true to enable the (deprecated) downloads features on the repository.
        Set to 'true' to enable the (deprecated) downloads features on the repository.
    hasIssues : bool, default is Undefined, optional
        Set to true to enable the GitHub Issues features
        on the repository.
        Set to 'true' to enable the GitHub Issues features on the repository
    hasProjects : bool, default is Undefined, optional
        Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
        Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
    hasWiki : bool, default is Undefined, optional
        Set to true to enable the GitHub Wiki features on
        the repository.
        Set to 'true' to enable the GitHub Wiki features on the repository.
    homepageUrl : str, default is Undefined, optional
        URL of a page describing the project.
        URL of a page describing the project.
    ignoreVulnerabilityAlertsDuringRead : bool, default is Undefined, optional
        Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
        Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
    isTemplate : bool, default is Undefined, optional
        Set to true to tell GitHub that this is a template repository.
        Set to 'true' to tell GitHub that this is a template repository.
    licenseTemplate : str, default is Undefined, optional
        Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
        Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
    mergeCommitMessage : str, default is Undefined, optional
        Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
        Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
    mergeCommitTitle : str, default is Undefined, optional
        Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
        Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
    name : str, default is Undefined, optional
        The name of the repository.
        The name of the repository.
    pages : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderPagesItems0], default is Undefined, optional
        The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
        The repository's GitHub Pages configuration
    private : bool, default is Undefined, optional
        Set to true to create a private repository.
        Repositories are created as public (e.g. open source) by default.
    securityAndAnalysis : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0], default is Undefined, optional
        The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
        Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
    squashMergeCommitMessage : str, default is Undefined, optional
        Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
        Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
    squashMergeCommitTitle : str, default is Undefined, optional
        Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
        Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
    template : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderTemplateItems0], default is Undefined, optional
        Use a template repository to create this resource. See Template Repositories below for details.
        Use a template repository to create this resource.
    topics : [str], default is Undefined, optional
        The list of topics of the repository.
        The list of topics of the repository.
    visibility : str, default is Undefined, optional
        Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
        Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
    vulnerabilityAlerts : bool, default is Undefined, optional
        Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
        Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
    webCommitSignoffRequired : bool, default is Undefined, optional
        Require contributors to sign off on web-based commits. See more here. Defaults to false.
        Require contributors to sign off on web-based commits. Defaults to 'false'.
    """


    allowAutoMerge?: bool

    allowMergeCommit?: bool

    allowRebaseMerge?: bool

    allowSquashMerge?: bool

    allowUpdateBranch?: bool

    archiveOnDestroy?: bool

    archived?: bool

    autoInit?: bool

    defaultBranch?: str

    deleteBranchOnMerge?: bool

    description?: str

    gitignoreTemplate?: str

    hasDiscussions?: bool

    hasDownloads?: bool

    hasIssues?: bool

    hasProjects?: bool

    hasWiki?: bool

    homepageUrl?: str

    ignoreVulnerabilityAlertsDuringRead?: bool

    isTemplate?: bool

    licenseTemplate?: str

    mergeCommitMessage?: str

    mergeCommitTitle?: str

    name?: str

    pages?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderPagesItems0]

    private?: bool

    securityAndAnalysis?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0]

    squashMergeCommitMessage?: str

    squashMergeCommitTitle?: str

    template?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderTemplateItems0]

    topics?: [str]

    visibility?: str

    vulnerabilityAlerts?: bool

    webCommitSignoffRequired?: bool


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderPagesItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider pages items0

    Attributes
    ----------
    buildType : str, default is Undefined, optional
        The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
        The type the page should be sourced.
    cname : str, default is Undefined, optional
        The custom domain for the repository. This can only be set after the repository has been created.
        The custom domain for the repository. This can only be set after the repository has been created.
    source : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderPagesItems0SourceItems0], default is Undefined, optional
        The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
        The source branch and directory for the rendered Pages site.
    """


    buildType?: str

    cname?: str

    source?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderPagesItems0SourceItems0]


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderPagesItems0SourceItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider pages items0 source items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        The repository branch used to publish the site's source files. (i.e. main or gh-pages.
        The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
    path : str, default is Undefined, optional
        The repository directory from which the site publishes (Default: /).
        The repository directory from which the site publishes (Default: '/')
    """


    branch?: str

    path?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider security and analysis items0

    Attributes
    ----------
    advancedSecurity : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0AdvancedSecurityItems0], default is Undefined, optional
        The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
        The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
    secretScanning : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0SecretScanningItems0], default is Undefined, optional
        The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
        The secret scanning configuration for the repository.
    secretScanningPushProtection : [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0], default is Undefined, optional
        The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
        The secret scanning push protection configuration for the repository.
    """


    advancedSecurity?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0AdvancedSecurityItems0]

    secretScanning?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0SecretScanningItems0]

    secretScanningPushProtection?: [RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0]


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0AdvancedSecurityItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider security and analysis items0 advanced security items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0SecretScanningItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider security and analysis items0 secret scanning items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider security and analysis items0 secret scanning push protection items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecForProviderTemplateItems0:
    r"""
    repo github upbound io v1alpha1 repository spec for provider template items0

    Attributes
    ----------
    includeAllBranches : bool, default is Undefined, optional
        : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
        Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
    owner : str, default is Undefined, optional
        : The GitHub organization or user the template repository is owned by.
        The GitHub organization or user the template repository is owned by.
    repository : str, default is Undefined, optional
        : The name of the template repository.
        The name of the template repository.
    """


    includeAllBranches?: bool

    owner?: str

    repository?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowAutoMerge : bool, default is Undefined, optional
        Set to true to allow auto-merging pull requests on the repository.
        Set to 'true' to allow auto-merging pull requests on the repository.
    allowMergeCommit : bool, default is Undefined, optional
        (including the related merge_commit_title and merge_commit_message)
        Set to 'false' to disable merge commits on the repository.
    allowRebaseMerge : bool, default is Undefined, optional
        Set to false to disable rebase merges on the repository.
        Set to 'false' to disable rebase merges on the repository.
    allowSquashMerge : bool, default is Undefined, optional
        (including the related squash_merge_commit_title and squash_merge_commit_message)
        Set to 'false' to disable squash merges on the repository.
    allowUpdateBranch : bool, default is Undefined, optional
        Set to true to always suggest updating pull request branches.
        Set to 'true' to always suggest updating pull request branches.
    archiveOnDestroy : bool, default is Undefined, optional
        Set to true to archive the repository instead of deleting on destroy.
        Set to 'true' to archive the repository instead of deleting on destroy.
    archived : bool, default is Undefined, optional
        Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
        Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
    autoInit : bool, default is Undefined, optional
        Set to true to produce an initial commit in the repository.
        Set to 'true' to produce an initial commit in the repository.
    defaultBranch : str, default is Undefined, optional
        (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
        and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
        initial repository creation and create the target branch inside of the repository prior to setting this attribute.
        Can only be set after initial repository creation, and only if the target branch exists
    deleteBranchOnMerge : bool, default is Undefined, optional
        Automatically delete head branch after a pull request is merged. Defaults to false.
        Automatically delete head branch after a pull request is merged. Defaults to 'false'.
    description : str, default is Undefined, optional
        A description of the repository.
        A description of the repository.
    gitignoreTemplate : str, default is Undefined, optional
        Use the name of the template without the extension. For example, "Haskell".
        Use the name of the template without the extension. For example, 'Haskell'.
    hasDiscussions : bool, default is Undefined, optional
        Set to true to enable GitHub Discussions on the repository. Defaults to false.
        Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
    hasDownloads : bool, default is Undefined, optional
        Set to true to enable the (deprecated) downloads features on the repository.
        Set to 'true' to enable the (deprecated) downloads features on the repository.
    hasIssues : bool, default is Undefined, optional
        Set to true to enable the GitHub Issues features
        on the repository.
        Set to 'true' to enable the GitHub Issues features on the repository
    hasProjects : bool, default is Undefined, optional
        Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
        Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
    hasWiki : bool, default is Undefined, optional
        Set to true to enable the GitHub Wiki features on
        the repository.
        Set to 'true' to enable the GitHub Wiki features on the repository.
    homepageUrl : str, default is Undefined, optional
        URL of a page describing the project.
        URL of a page describing the project.
    ignoreVulnerabilityAlertsDuringRead : bool, default is Undefined, optional
        Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
        Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
    isTemplate : bool, default is Undefined, optional
        Set to true to tell GitHub that this is a template repository.
        Set to 'true' to tell GitHub that this is a template repository.
    licenseTemplate : str, default is Undefined, optional
        Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
        Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
    mergeCommitMessage : str, default is Undefined, optional
        Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
        Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
    mergeCommitTitle : str, default is Undefined, optional
        Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
        Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
    name : str, default is Undefined, optional
        The name of the repository.
        The name of the repository.
    pages : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderPagesItems0], default is Undefined, optional
        The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
        The repository's GitHub Pages configuration
    private : bool, default is Undefined, optional
        Set to true to create a private repository.
        Repositories are created as public (e.g. open source) by default.
    securityAndAnalysis : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0], default is Undefined, optional
        The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
        Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
    squashMergeCommitMessage : str, default is Undefined, optional
        Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
        Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
    squashMergeCommitTitle : str, default is Undefined, optional
        Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
        Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
    template : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderTemplateItems0], default is Undefined, optional
        Use a template repository to create this resource. See Template Repositories below for details.
        Use a template repository to create this resource.
    topics : [str], default is Undefined, optional
        The list of topics of the repository.
        The list of topics of the repository.
    visibility : str, default is Undefined, optional
        Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
        Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
    vulnerabilityAlerts : bool, default is Undefined, optional
        Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
        Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
    webCommitSignoffRequired : bool, default is Undefined, optional
        Require contributors to sign off on web-based commits. See more here. Defaults to false.
        Require contributors to sign off on web-based commits. Defaults to 'false'.
    """


    allowAutoMerge?: bool

    allowMergeCommit?: bool

    allowRebaseMerge?: bool

    allowSquashMerge?: bool

    allowUpdateBranch?: bool

    archiveOnDestroy?: bool

    archived?: bool

    autoInit?: bool

    defaultBranch?: str

    deleteBranchOnMerge?: bool

    description?: str

    gitignoreTemplate?: str

    hasDiscussions?: bool

    hasDownloads?: bool

    hasIssues?: bool

    hasProjects?: bool

    hasWiki?: bool

    homepageUrl?: str

    ignoreVulnerabilityAlertsDuringRead?: bool

    isTemplate?: bool

    licenseTemplate?: str

    mergeCommitMessage?: str

    mergeCommitTitle?: str

    name?: str

    pages?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderPagesItems0]

    private?: bool

    securityAndAnalysis?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0]

    squashMergeCommitMessage?: str

    squashMergeCommitTitle?: str

    template?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderTemplateItems0]

    topics?: [str]

    visibility?: str

    vulnerabilityAlerts?: bool

    webCommitSignoffRequired?: bool


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderPagesItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider pages items0

    Attributes
    ----------
    buildType : str, default is Undefined, optional
        The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
        The type the page should be sourced.
    cname : str, default is Undefined, optional
        The custom domain for the repository. This can only be set after the repository has been created.
        The custom domain for the repository. This can only be set after the repository has been created.
    source : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderPagesItems0SourceItems0], default is Undefined, optional
        The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
        The source branch and directory for the rendered Pages site.
    """


    buildType?: str

    cname?: str

    source?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderPagesItems0SourceItems0]


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderPagesItems0SourceItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider pages items0 source items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        The repository branch used to publish the site's source files. (i.e. main or gh-pages.
        The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
    path : str, default is Undefined, optional
        The repository directory from which the site publishes (Default: /).
        The repository directory from which the site publishes (Default: '/')
    """


    branch?: str

    path?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider security and analysis items0

    Attributes
    ----------
    advancedSecurity : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0AdvancedSecurityItems0], default is Undefined, optional
        The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
        The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
    secretScanning : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0SecretScanningItems0], default is Undefined, optional
        The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
        The secret scanning configuration for the repository.
    secretScanningPushProtection : [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0], default is Undefined, optional
        The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
        The secret scanning push protection configuration for the repository.
    """


    advancedSecurity?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0AdvancedSecurityItems0]

    secretScanning?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0SecretScanningItems0]

    secretScanningPushProtection?: [RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0]


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0AdvancedSecurityItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider security and analysis items0 advanced security items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0SecretScanningItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider security and analysis items0 secret scanning items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider security and analysis items0 secret scanning push protection items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecInitProviderTemplateItems0:
    r"""
    repo github upbound io v1alpha1 repository spec init provider template items0

    Attributes
    ----------
    includeAllBranches : bool, default is Undefined, optional
        : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
        Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
    owner : str, default is Undefined, optional
        : The GitHub organization or user the template repository is owned by.
        The GitHub organization or user the template repository is owned by.
    repository : str, default is Undefined, optional
        : The name of the template repository.
        The name of the template repository.
    """


    includeAllBranches?: bool

    owner?: str

    repository?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1RepositorySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1RepositorySpecProviderConfigRefPolicy


schema RepoGithubUpboundIoV1alpha1RepositorySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRef

    metadata?: RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToMetadata

    name: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRefPolicy


schema RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1RepositorySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RepoGithubUpboundIoV1alpha1RepositorySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatus:
    r"""
    RepositoryStatus defines the observed state of Repository.

    Attributes
    ----------
    atProvider : RepoGithubUpboundIoV1alpha1RepositoryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RepoGithubUpboundIoV1alpha1RepositoryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RepoGithubUpboundIoV1alpha1RepositoryStatusAtProvider

    conditions?: [RepoGithubUpboundIoV1alpha1RepositoryStatusConditionsItems0]

    observedGeneration?: int


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProvider:
    r"""
    repo github upbound io v1alpha1 repository status at provider

    Attributes
    ----------
    allowAutoMerge : bool, default is Undefined, optional
        Set to true to allow auto-merging pull requests on the repository.
        Set to 'true' to allow auto-merging pull requests on the repository.
    allowMergeCommit : bool, default is Undefined, optional
        (including the related merge_commit_title and merge_commit_message)
        Set to 'false' to disable merge commits on the repository.
    allowRebaseMerge : bool, default is Undefined, optional
        Set to false to disable rebase merges on the repository.
        Set to 'false' to disable rebase merges on the repository.
    allowSquashMerge : bool, default is Undefined, optional
        (including the related squash_merge_commit_title and squash_merge_commit_message)
        Set to 'false' to disable squash merges on the repository.
    allowUpdateBranch : bool, default is Undefined, optional
        Set to true to always suggest updating pull request branches.
        Set to 'true' to always suggest updating pull request branches.
    archiveOnDestroy : bool, default is Undefined, optional
        Set to true to archive the repository instead of deleting on destroy.
        Set to 'true' to archive the repository instead of deleting on destroy.
    archived : bool, default is Undefined, optional
        Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
        Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
    autoInit : bool, default is Undefined, optional
        Set to true to produce an initial commit in the repository.
        Set to 'true' to produce an initial commit in the repository.
    defaultBranch : str, default is Undefined, optional
        (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
        and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
        initial repository creation and create the target branch inside of the repository prior to setting this attribute.
        Can only be set after initial repository creation, and only if the target branch exists
    deleteBranchOnMerge : bool, default is Undefined, optional
        Automatically delete head branch after a pull request is merged. Defaults to false.
        Automatically delete head branch after a pull request is merged. Defaults to 'false'.
    description : str, default is Undefined, optional
        A description of the repository.
        A description of the repository.
    etag : str, default is Undefined, optional
        etag
    fullName : str, default is Undefined, optional
        A string of the form "orgname/reponame".
        A string of the form 'orgname/reponame'.
    gitCloneUrl : str, default is Undefined, optional
        URL that can be provided to git clone to clone the repository anonymously via the git protocol.
        URL that can be provided to 'git clone' to clone the repository anonymously via the git protocol.
    gitignoreTemplate : str, default is Undefined, optional
        Use the name of the template without the extension. For example, "Haskell".
        Use the name of the template without the extension. For example, 'Haskell'.
    hasDiscussions : bool, default is Undefined, optional
        Set to true to enable GitHub Discussions on the repository. Defaults to false.
        Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
    hasDownloads : bool, default is Undefined, optional
        Set to true to enable the (deprecated) downloads features on the repository.
        Set to 'true' to enable the (deprecated) downloads features on the repository.
    hasIssues : bool, default is Undefined, optional
        Set to true to enable the GitHub Issues features
        on the repository.
        Set to 'true' to enable the GitHub Issues features on the repository
    hasProjects : bool, default is Undefined, optional
        Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
        Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
    hasWiki : bool, default is Undefined, optional
        Set to true to enable the GitHub Wiki features on
        the repository.
        Set to 'true' to enable the GitHub Wiki features on the repository.
    homepageUrl : str, default is Undefined, optional
        URL of a page describing the project.
        URL of a page describing the project.
    htmlUrl : str, default is Undefined, optional
        URL to the repository on the web.
        URL to the repository on the web.
    httpCloneUrl : str, default is Undefined, optional
        URL that can be provided to git clone to clone the repository via HTTPS.
        URL that can be provided to 'git clone' to clone the repository via HTTPS.
    id : str, default is Undefined, optional
        id
    ignoreVulnerabilityAlertsDuringRead : bool, default is Undefined, optional
        Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
        Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
    isTemplate : bool, default is Undefined, optional
        Set to true to tell GitHub that this is a template repository.
        Set to 'true' to tell GitHub that this is a template repository.
    licenseTemplate : str, default is Undefined, optional
        Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
        Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
    mergeCommitMessage : str, default is Undefined, optional
        Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
        Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
    mergeCommitTitle : str, default is Undefined, optional
        Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
        Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
    name : str, default is Undefined, optional
        The name of the repository.
        The name of the repository.
    nodeId : str, default is Undefined, optional
        GraphQL global node id for use with v4 API
        GraphQL global node id for use with v4 API.
    pages : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderPagesItems0], default is Undefined, optional
        The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
        The repository's GitHub Pages configuration
    primaryLanguage : str, default is Undefined, optional
        The primary language used in the repository.
    private : bool, default is Undefined, optional
        Set to true to create a private repository.
        Repositories are created as public (e.g. open source) by default.
    repoId : int, default is Undefined, optional
        GitHub ID for the repository
        GitHub ID for the repository.
    securityAndAnalysis : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0], default is Undefined, optional
        The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
        Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
    squashMergeCommitMessage : str, default is Undefined, optional
        Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
        Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
    squashMergeCommitTitle : str, default is Undefined, optional
        Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
        Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
    sshCloneUrl : str, default is Undefined, optional
        URL that can be provided to git clone to clone the repository via SSH.
        URL that can be provided to 'git clone' to clone the repository via SSH.
    svnUrl : str, default is Undefined, optional
        URL that can be provided to svn checkout to check out the repository via GitHub's Subversion protocol emulation.
        URL that can be provided to 'svn checkout' to check out the repository via GitHub's Subversion protocol emulation.
    template : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderTemplateItems0], default is Undefined, optional
        Use a template repository to create this resource. See Template Repositories below for details.
        Use a template repository to create this resource.
    topics : [str], default is Undefined, optional
        The list of topics of the repository.
        The list of topics of the repository.
    visibility : str, default is Undefined, optional
        Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
        Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
    vulnerabilityAlerts : bool, default is Undefined, optional
        Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
        Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
    webCommitSignoffRequired : bool, default is Undefined, optional
        Require contributors to sign off on web-based commits. See more here. Defaults to false.
        Require contributors to sign off on web-based commits. Defaults to 'false'.
    """


    allowAutoMerge?: bool

    allowMergeCommit?: bool

    allowRebaseMerge?: bool

    allowSquashMerge?: bool

    allowUpdateBranch?: bool

    archiveOnDestroy?: bool

    archived?: bool

    autoInit?: bool

    defaultBranch?: str

    deleteBranchOnMerge?: bool

    description?: str

    etag?: str

    fullName?: str

    gitCloneUrl?: str

    gitignoreTemplate?: str

    hasDiscussions?: bool

    hasDownloads?: bool

    hasIssues?: bool

    hasProjects?: bool

    hasWiki?: bool

    homepageUrl?: str

    htmlUrl?: str

    httpCloneUrl?: str

    id?: str

    ignoreVulnerabilityAlertsDuringRead?: bool

    isTemplate?: bool

    licenseTemplate?: str

    mergeCommitMessage?: str

    mergeCommitTitle?: str

    name?: str

    nodeId?: str

    pages?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderPagesItems0]

    primaryLanguage?: str

    private?: bool

    repoId?: int

    securityAndAnalysis?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0]

    squashMergeCommitMessage?: str

    squashMergeCommitTitle?: str

    sshCloneUrl?: str

    svnUrl?: str

    template?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderTemplateItems0]

    topics?: [str]

    visibility?: str

    vulnerabilityAlerts?: bool

    webCommitSignoffRequired?: bool


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderPagesItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider pages items0

    Attributes
    ----------
    buildType : str, default is Undefined, optional
        The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
        The type the page should be sourced.
    cname : str, default is Undefined, optional
        The custom domain for the repository. This can only be set after the repository has been created.
        The custom domain for the repository. This can only be set after the repository has been created.
    custom404 : bool, default is Undefined, optional
        Whether the rendered GitHub Pages site has a custom 404 page.
        Whether the rendered GitHub Pages site has a custom 404 page
    htmlUrl : str, default is Undefined, optional
        URL to the repository on the web.
        URL to the repository on the web.
    source : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderPagesItems0SourceItems0], default is Undefined, optional
        The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
        The source branch and directory for the rendered Pages site.
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        The GitHub Pages site's build status e.g. building or built.
    url : str, default is Undefined, optional
        url
    """


    buildType?: str

    cname?: str

    custom404?: bool

    htmlUrl?: str

    source?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderPagesItems0SourceItems0]

    status?: str

    url?: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderPagesItems0SourceItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider pages items0 source items0

    Attributes
    ----------
    branch : str, default is Undefined, optional
        The repository branch used to publish the site's source files. (i.e. main or gh-pages.
        The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
    path : str, default is Undefined, optional
        The repository directory from which the site publishes (Default: /).
        The repository directory from which the site publishes (Default: '/')
    """


    branch?: str

    path?: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider security and analysis items0

    Attributes
    ----------
    advancedSecurity : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0AdvancedSecurityItems0], default is Undefined, optional
        The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
        The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
    secretScanning : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0SecretScanningItems0], default is Undefined, optional
        The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
        The secret scanning configuration for the repository.
    secretScanningPushProtection : [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0], default is Undefined, optional
        The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
        The secret scanning push protection configuration for the repository.
    """


    advancedSecurity?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0AdvancedSecurityItems0]

    secretScanning?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0SecretScanningItems0]

    secretScanningPushProtection?: [RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0]


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0AdvancedSecurityItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider security and analysis items0 advanced security items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0SecretScanningItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider security and analysis items0 secret scanning items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderSecurityAndAnalysisItems0SecretScanningPushProtectionItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider security and analysis items0 secret scanning push protection items0

    Attributes
    ----------
    status : str, default is Undefined, optional
        Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
        Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
    """


    status?: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatusAtProviderTemplateItems0:
    r"""
    repo github upbound io v1alpha1 repository status at provider template items0

    Attributes
    ----------
    includeAllBranches : bool, default is Undefined, optional
        : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
        Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
    owner : str, default is Undefined, optional
        : The GitHub organization or user the template repository is owned by.
        The GitHub organization or user the template repository is owned by.
    repository : str, default is Undefined, optional
        : The name of the template repository.
        The name of the template repository.
    """


    includeAllBranches?: bool

    owner?: str

    repository?: str


schema RepoGithubUpboundIoV1alpha1RepositoryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


