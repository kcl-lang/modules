"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPCConnector:
    r"""
    VPCConnector is the Schema for the VPCConnectors API. Manages an App Runner VPC Connector.

    Attributes
    ----------
    apiVersion : str, default is "apprunner.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPCConnector", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpec, default is Undefined, required
        spec
    status : ApprunnerAwsUpboundIoV1beta1VPCConnectorStatus, default is Undefined, optional
        status
    """


    apiVersion: "apprunner.aws.upbound.io/v1beta1" = "apprunner.aws.upbound.io/v1beta1"

    kind: "VPCConnector" = "VPCConnector"

    metadata?: v1.ObjectMeta

    spec: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpec

    status?: ApprunnerAwsUpboundIoV1beta1VPCConnectorStatus


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpec:
    r"""
    VPCConnectorSpec defines the desired state of VPCConnector

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProvider

    initProvider?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecProviderConfigRef

    publishConnectionDetailsTo?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecWriteConnectionSecretToRef


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProvider:
    r"""
    apprunner aws upbound io v1beta1 v p c connector spec for provider

    Attributes
    ----------
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupRefs : [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupSelector : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        List of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
    subnetRefs : [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnets.
    subnetSelector : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        List of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConnectorName : str, default is Undefined, optional
        Name for the VPC connector.
    """


    region: str

    securityGroupRefs?: [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupRefsItems0]

    securityGroupSelector?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupSelector

    securityGroups?: [str]

    subnetRefs?: [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetRefsItems0]

    subnetSelector?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetSelector

    subnets?: [str]

    tags?: {str:str}

    vpcConnectorName?: str


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupRefsItems0Policy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSecurityGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetRefsItems0Policy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecForProviderSubnetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    securityGroupRefs : [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupSelector : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        List of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
    subnetRefs : [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnets.
    subnetSelector : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        List of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConnectorName : str, default is Undefined, optional
        Name for the VPC connector.
    """


    securityGroupRefs?: [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupRefsItems0]

    securityGroupSelector?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupSelector

    securityGroups?: [str]

    subnetRefs?: [ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetRefsItems0]

    subnetSelector?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetSelector

    subnets?: [str]

    tags?: {str:str}

    vpcConnectorName?: str


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupRefsItems0Policy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSecurityGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetRefsItems0Policy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecInitProviderSubnetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecProviderConfigRefPolicy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToConfigRef

    metadata?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToMetadata

    name: str


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToConfigRefPolicy


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorStatus:
    r"""
    VPCConnectorStatus defines the observed state of VPCConnector.

    Attributes
    ----------
    atProvider : ApprunnerAwsUpboundIoV1beta1VPCConnectorStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApprunnerAwsUpboundIoV1beta1VPCConnectorStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApprunnerAwsUpboundIoV1beta1VPCConnectorStatusAtProvider

    conditions?: [ApprunnerAwsUpboundIoV1beta1VPCConnectorStatusConditionsItems0]

    observedGeneration?: int


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorStatusAtProvider:
    r"""
    apprunner aws upbound io v1beta1 v p c connector status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of VPC connector.
    id : str, default is Undefined, optional
        id
    securityGroups : [str], default is Undefined, optional
        List of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
    status : str, default is Undefined, optional
        Current state of the VPC connector. If the status of a connector revision is INACTIVE, it was deleted and can't be used. Inactive connector revisions are permanently removed some time after they are deleted.
    subnets : [str], default is Undefined, optional
        List of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcConnectorName : str, default is Undefined, optional
        Name for the VPC connector.
    vpcConnectorRevision : float, default is Undefined, optional
        The revision of VPC connector. It's unique among all the active connectors ("Status": "ACTIVE") that share the same Name.
    """


    arn?: str

    id?: str

    securityGroups?: [str]

    status?: str

    subnets?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcConnectorName?: str

    vpcConnectorRevision?: float


schema ApprunnerAwsUpboundIoV1beta1VPCConnectorStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


