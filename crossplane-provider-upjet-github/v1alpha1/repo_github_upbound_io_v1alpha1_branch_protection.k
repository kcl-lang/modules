"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BranchProtection:
    r"""
    BranchProtection is the Schema for the BranchProtections API. Protects a GitHub branch.

    Attributes
    ----------
    apiVersion : str, default is "repo.github.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BranchProtection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RepoGithubUpboundIoV1alpha1BranchProtectionSpec, default is Undefined, required
        spec
    status : RepoGithubUpboundIoV1alpha1BranchProtectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "repo.github.upbound.io/v1alpha1" = "repo.github.upbound.io/v1alpha1"

    kind: "BranchProtection" = "BranchProtection"

    metadata?: v1.ObjectMeta

    spec: RepoGithubUpboundIoV1alpha1BranchProtectionSpec

    status?: RepoGithubUpboundIoV1alpha1BranchProtectionStatus


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpec:
    r"""
    BranchProtectionSpec defines the desired state of BranchProtection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProvider, default is Undefined, required
        for provider
    initProvider : RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RepoGithubUpboundIoV1alpha1BranchProtectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RepoGithubUpboundIoV1alpha1BranchProtectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProvider

    initProvider?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecProviderConfigRef

    publishConnectionDetailsTo?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecWriteConnectionSecretToRef


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProvider:
    r"""
    repo github upbound io v1alpha1 branch protection spec for provider

    Attributes
    ----------
    allowsDeletions : bool, default is Undefined, optional
        Boolean, setting this to true to allow the branch to be deleted.
        Setting this to 'true' to allow the branch to be deleted.
    allowsForcePushes : bool, default is Undefined, optional
        Boolean, setting this to true to allow force pushes on the branch to everyone. Set it to false if you specify force_push_bypassers.
        Setting this to 'true' to allow force pushes on the branch.
    enforceAdmins : bool, default is Undefined, optional
        Boolean, setting this to true enforces status checks for repository administrators.
        Setting this to 'true' enforces status checks for repository administrators.
    forcePushBypassers : [str], default is Undefined, optional
        The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. If the list is not empty, allows_force_pushes should be set to false.
        The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    lockBranch : bool, default is Undefined, optional
        Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
        Setting this to 'true' will make the branch read-only and preventing any pushes to it.
    pattern : str, default is Undefined, optional
        Identifies the protection rule pattern.
        Identifies the protection rule pattern.
    repositoryId : str, default is Undefined, optional
        The name or node ID of the repository associated with this branch protection rule.
        The name or node ID of the repository associated with this branch protection rule.
    repositoryIdRef : RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDRef, default is Undefined, optional
        repository Id ref
    repositoryIdSelector : RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDSelector, default is Undefined, optional
        repository Id selector
    requireConversationResolution : bool, default is Undefined, optional
        Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
        Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
    requireSignedCommits : bool, default is Undefined, optional
        Boolean, setting this to true requires all commits to be signed with GPG.
        Setting this to 'true' requires all commits to be signed with GPG.
    requiredLinearHistory : bool, default is Undefined, optional
        Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
        Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
    requiredPullRequestReviews : [RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRequiredPullRequestReviewsItems0], default is Undefined, optional
        Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
        Enforce restrictions for pull request reviews.
    requiredStatusChecks : [RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRequiredStatusChecksItems0], default is Undefined, optional
        Enforce restrictions for required status checks. See Required Status Checks below for details.
        Enforce restrictions for required status checks.
    restrictPushes : [RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRestrictPushesItems0], default is Undefined, optional
        Restrict pushes to matching branches. See Restrict Pushes below for details.
        Restrict who can push to matching branches.
    """


    allowsDeletions?: bool

    allowsForcePushes?: bool

    enforceAdmins?: bool

    forcePushBypassers?: [str]

    lockBranch?: bool

    pattern?: str

    repositoryId?: str

    repositoryIdRef?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDRef

    repositoryIdSelector?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDSelector

    requireConversationResolution?: bool

    requireSignedCommits?: bool

    requiredLinearHistory?: bool

    requiredPullRequestReviews?: [RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRequiredPullRequestReviewsItems0]

    requiredStatusChecks?: [RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRequiredStatusChecksItems0]

    restrictPushes?: [RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRestrictPushesItems0]


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDRef:
    r"""
    Reference to a Repository in repo to populate repositoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDRefPolicy


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDSelector:
    r"""
    Selector for a Repository in repo to populate repositoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDSelectorPolicy


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRepositoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRequiredPullRequestReviewsItems0:
    r"""
    repo github upbound io v1alpha1 branch protection spec for provider required pull request reviews items0

    Attributes
    ----------
    dismissStaleReviews : bool, default is Undefined, optional
        :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
        Dismiss approved reviews automatically when a new commit is pushed.
    dismissalRestrictions : [str], default is Undefined, optional
        :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
        The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    pullRequestBypassers : [str], default is Undefined, optional
        :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
        The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    requireCodeOwnerReviews : bool, default is Undefined, optional
        :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
        Require an approved review in pull requests including files with a designated code owner.
    requireLastPushApproval : bool, default is Undefined, optional
        :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
        Require that The most recent push must be approved by someone other than the last pusher.
    requiredApprovingReviewCount : int, default is Undefined, optional
        6. This requirement matches GitHub's API, see the upstream documentation for more information.
        (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
        Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
    restrictDismissals : bool, default is Undefined, optional
        :  Restrict pull request review dismissals.
        Restrict pull request review dismissals.
    """


    dismissStaleReviews?: bool

    dismissalRestrictions?: [str]

    pullRequestBypassers?: [str]

    requireCodeOwnerReviews?: bool

    requireLastPushApproval?: bool

    requiredApprovingReviewCount?: int

    restrictDismissals?: bool


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRequiredStatusChecksItems0:
    r"""
    repo github upbound io v1alpha1 branch protection spec for provider required status checks items0

    Attributes
    ----------
    contexts : [str], default is Undefined, optional
        :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
        The list of status checks to require in order to merge into this branch. No status checks are required by default.
    strict : bool, default is Undefined, optional
        :  Require branches to be up to date before merging. Defaults to false.
        Require branches to be up to date before merging.
    """


    contexts?: [str]

    strict?: bool


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecForProviderRestrictPushesItems0:
    r"""
    repo github upbound io v1alpha1 branch protection spec for provider restrict pushes items0

    Attributes
    ----------
    blocksCreations : bool, default is Undefined, optional
        Boolean, setting this to false allows people, teams, or apps to create new branches matching this rule. Defaults to true.
        Restrict pushes that create matching branches.
    pushAllowances : [str], default is Undefined, optional
        A list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. Organization administrators, repository administrators, and users with the Maintain role on the repository can always push when all other requirements have passed.
        The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    """


    blocksCreations?: bool

    pushAllowances?: [str]


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowsDeletions : bool, default is Undefined, optional
        Boolean, setting this to true to allow the branch to be deleted.
        Setting this to 'true' to allow the branch to be deleted.
    allowsForcePushes : bool, default is Undefined, optional
        Boolean, setting this to true to allow force pushes on the branch to everyone. Set it to false if you specify force_push_bypassers.
        Setting this to 'true' to allow force pushes on the branch.
    enforceAdmins : bool, default is Undefined, optional
        Boolean, setting this to true enforces status checks for repository administrators.
        Setting this to 'true' enforces status checks for repository administrators.
    forcePushBypassers : [str], default is Undefined, optional
        The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. If the list is not empty, allows_force_pushes should be set to false.
        The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    lockBranch : bool, default is Undefined, optional
        Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
        Setting this to 'true' will make the branch read-only and preventing any pushes to it.
    pattern : str, default is Undefined, optional
        Identifies the protection rule pattern.
        Identifies the protection rule pattern.
    repositoryId : str, default is Undefined, optional
        The name or node ID of the repository associated with this branch protection rule.
        The name or node ID of the repository associated with this branch protection rule.
    repositoryIdRef : RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDRef, default is Undefined, optional
        repository Id ref
    repositoryIdSelector : RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDSelector, default is Undefined, optional
        repository Id selector
    requireConversationResolution : bool, default is Undefined, optional
        Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
        Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
    requireSignedCommits : bool, default is Undefined, optional
        Boolean, setting this to true requires all commits to be signed with GPG.
        Setting this to 'true' requires all commits to be signed with GPG.
    requiredLinearHistory : bool, default is Undefined, optional
        Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
        Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
    requiredPullRequestReviews : [RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRequiredPullRequestReviewsItems0], default is Undefined, optional
        Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
        Enforce restrictions for pull request reviews.
    requiredStatusChecks : [RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRequiredStatusChecksItems0], default is Undefined, optional
        Enforce restrictions for required status checks. See Required Status Checks below for details.
        Enforce restrictions for required status checks.
    restrictPushes : [RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRestrictPushesItems0], default is Undefined, optional
        Restrict pushes to matching branches. See Restrict Pushes below for details.
        Restrict who can push to matching branches.
    """


    allowsDeletions?: bool

    allowsForcePushes?: bool

    enforceAdmins?: bool

    forcePushBypassers?: [str]

    lockBranch?: bool

    pattern?: str

    repositoryId?: str

    repositoryIdRef?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDRef

    repositoryIdSelector?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDSelector

    requireConversationResolution?: bool

    requireSignedCommits?: bool

    requiredLinearHistory?: bool

    requiredPullRequestReviews?: [RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRequiredPullRequestReviewsItems0]

    requiredStatusChecks?: [RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRequiredStatusChecksItems0]

    restrictPushes?: [RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRestrictPushesItems0]


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDRef:
    r"""
    Reference to a Repository in repo to populate repositoryId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDRefPolicy


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDSelector:
    r"""
    Selector for a Repository in repo to populate repositoryId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDSelectorPolicy


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRepositoryIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRequiredPullRequestReviewsItems0:
    r"""
    repo github upbound io v1alpha1 branch protection spec init provider required pull request reviews items0

    Attributes
    ----------
    dismissStaleReviews : bool, default is Undefined, optional
        :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
        Dismiss approved reviews automatically when a new commit is pushed.
    dismissalRestrictions : [str], default is Undefined, optional
        :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
        The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    pullRequestBypassers : [str], default is Undefined, optional
        :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
        The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    requireCodeOwnerReviews : bool, default is Undefined, optional
        :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
        Require an approved review in pull requests including files with a designated code owner.
    requireLastPushApproval : bool, default is Undefined, optional
        :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
        Require that The most recent push must be approved by someone other than the last pusher.
    requiredApprovingReviewCount : int, default is Undefined, optional
        6. This requirement matches GitHub's API, see the upstream documentation for more information.
        (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
        Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
    restrictDismissals : bool, default is Undefined, optional
        :  Restrict pull request review dismissals.
        Restrict pull request review dismissals.
    """


    dismissStaleReviews?: bool

    dismissalRestrictions?: [str]

    pullRequestBypassers?: [str]

    requireCodeOwnerReviews?: bool

    requireLastPushApproval?: bool

    requiredApprovingReviewCount?: int

    restrictDismissals?: bool


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRequiredStatusChecksItems0:
    r"""
    repo github upbound io v1alpha1 branch protection spec init provider required status checks items0

    Attributes
    ----------
    contexts : [str], default is Undefined, optional
        :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
        The list of status checks to require in order to merge into this branch. No status checks are required by default.
    strict : bool, default is Undefined, optional
        :  Require branches to be up to date before merging. Defaults to false.
        Require branches to be up to date before merging.
    """


    contexts?: [str]

    strict?: bool


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecInitProviderRestrictPushesItems0:
    r"""
    repo github upbound io v1alpha1 branch protection spec init provider restrict pushes items0

    Attributes
    ----------
    blocksCreations : bool, default is Undefined, optional
        Boolean, setting this to false allows people, teams, or apps to create new branches matching this rule. Defaults to true.
        Restrict pushes that create matching branches.
    pushAllowances : [str], default is Undefined, optional
        A list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. Organization administrators, repository administrators, and users with the Maintain role on the repository can always push when all other requirements have passed.
        The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    """


    blocksCreations?: bool

    pushAllowances?: [str]


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1BranchProtectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecProviderConfigRefPolicy


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToConfigRef

    metadata?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToMetadata

    name: str


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToConfigRefPolicy


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RepoGithubUpboundIoV1alpha1BranchProtectionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RepoGithubUpboundIoV1alpha1BranchProtectionStatus:
    r"""
    BranchProtectionStatus defines the observed state of BranchProtection.

    Attributes
    ----------
    atProvider : RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RepoGithubUpboundIoV1alpha1BranchProtectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProvider

    conditions?: [RepoGithubUpboundIoV1alpha1BranchProtectionStatusConditionsItems0]

    observedGeneration?: int


schema RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProvider:
    r"""
    repo github upbound io v1alpha1 branch protection status at provider

    Attributes
    ----------
    allowsDeletions : bool, default is Undefined, optional
        Boolean, setting this to true to allow the branch to be deleted.
        Setting this to 'true' to allow the branch to be deleted.
    allowsForcePushes : bool, default is Undefined, optional
        Boolean, setting this to true to allow force pushes on the branch to everyone. Set it to false if you specify force_push_bypassers.
        Setting this to 'true' to allow force pushes on the branch.
    enforceAdmins : bool, default is Undefined, optional
        Boolean, setting this to true enforces status checks for repository administrators.
        Setting this to 'true' enforces status checks for repository administrators.
    forcePushBypassers : [str], default is Undefined, optional
        The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. If the list is not empty, allows_force_pushes should be set to false.
        The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    id : str, default is Undefined, optional
        id
    lockBranch : bool, default is Undefined, optional
        Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
        Setting this to 'true' will make the branch read-only and preventing any pushes to it.
    pattern : str, default is Undefined, optional
        Identifies the protection rule pattern.
        Identifies the protection rule pattern.
    repositoryId : str, default is Undefined, optional
        The name or node ID of the repository associated with this branch protection rule.
        The name or node ID of the repository associated with this branch protection rule.
    requireConversationResolution : bool, default is Undefined, optional
        Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
        Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
    requireSignedCommits : bool, default is Undefined, optional
        Boolean, setting this to true requires all commits to be signed with GPG.
        Setting this to 'true' requires all commits to be signed with GPG.
    requiredLinearHistory : bool, default is Undefined, optional
        Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
        Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
    requiredPullRequestReviews : [RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRequiredPullRequestReviewsItems0], default is Undefined, optional
        Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
        Enforce restrictions for pull request reviews.
    requiredStatusChecks : [RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRequiredStatusChecksItems0], default is Undefined, optional
        Enforce restrictions for required status checks. See Required Status Checks below for details.
        Enforce restrictions for required status checks.
    restrictPushes : [RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRestrictPushesItems0], default is Undefined, optional
        Restrict pushes to matching branches. See Restrict Pushes below for details.
        Restrict who can push to matching branches.
    """


    allowsDeletions?: bool

    allowsForcePushes?: bool

    enforceAdmins?: bool

    forcePushBypassers?: [str]

    id?: str

    lockBranch?: bool

    pattern?: str

    repositoryId?: str

    requireConversationResolution?: bool

    requireSignedCommits?: bool

    requiredLinearHistory?: bool

    requiredPullRequestReviews?: [RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRequiredPullRequestReviewsItems0]

    requiredStatusChecks?: [RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRequiredStatusChecksItems0]

    restrictPushes?: [RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRestrictPushesItems0]


schema RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRequiredPullRequestReviewsItems0:
    r"""
    repo github upbound io v1alpha1 branch protection status at provider required pull request reviews items0

    Attributes
    ----------
    dismissStaleReviews : bool, default is Undefined, optional
        :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
        Dismiss approved reviews automatically when a new commit is pushed.
    dismissalRestrictions : [str], default is Undefined, optional
        :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
        The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    pullRequestBypassers : [str], default is Undefined, optional
        :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
        The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    requireCodeOwnerReviews : bool, default is Undefined, optional
        :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
        Require an approved review in pull requests including files with a designated code owner.
    requireLastPushApproval : bool, default is Undefined, optional
        :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
        Require that The most recent push must be approved by someone other than the last pusher.
    requiredApprovingReviewCount : int, default is Undefined, optional
        6. This requirement matches GitHub's API, see the upstream documentation for more information.
        (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
        Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
    restrictDismissals : bool, default is Undefined, optional
        :  Restrict pull request review dismissals.
        Restrict pull request review dismissals.
    """


    dismissStaleReviews?: bool

    dismissalRestrictions?: [str]

    pullRequestBypassers?: [str]

    requireCodeOwnerReviews?: bool

    requireLastPushApproval?: bool

    requiredApprovingReviewCount?: int

    restrictDismissals?: bool


schema RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRequiredStatusChecksItems0:
    r"""
    repo github upbound io v1alpha1 branch protection status at provider required status checks items0

    Attributes
    ----------
    contexts : [str], default is Undefined, optional
        :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
        The list of status checks to require in order to merge into this branch. No status checks are required by default.
    strict : bool, default is Undefined, optional
        :  Require branches to be up to date before merging. Defaults to false.
        Require branches to be up to date before merging.
    """


    contexts?: [str]

    strict?: bool


schema RepoGithubUpboundIoV1alpha1BranchProtectionStatusAtProviderRestrictPushesItems0:
    r"""
    repo github upbound io v1alpha1 branch protection status at provider restrict pushes items0

    Attributes
    ----------
    blocksCreations : bool, default is Undefined, optional
        Boolean, setting this to false allows people, teams, or apps to create new branches matching this rule. Defaults to true.
        Restrict pushes that create matching branches.
    pushAllowances : [str], default is Undefined, optional
        A list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. Organization administrators, repository administrators, and users with the Maintain role on the repository can always push when all other requirements have passed.
        The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
    """


    blocksCreations?: bool

    pushAllowances?: [str]


schema RepoGithubUpboundIoV1alpha1BranchProtectionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


