"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Datasource:
    r"""
    Datasource is the Schema for the Datasources API. Provides an AppSync Data Source.

    Attributes
    ----------
    apiVersion : str, default is "appsync.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Datasource", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsyncAwsUpboundIoV1beta2DatasourceSpec, default is Undefined, required
        spec
    status : AppsyncAwsUpboundIoV1beta2DatasourceStatus, default is Undefined, optional
        status
    """


    apiVersion: "appsync.aws.upbound.io/v1beta2" = "appsync.aws.upbound.io/v1beta2"

    kind: "Datasource" = "Datasource"

    metadata?: v1.ObjectMeta

    spec: AppsyncAwsUpboundIoV1beta2DatasourceSpec

    status?: AppsyncAwsUpboundIoV1beta2DatasourceStatus


schema AppsyncAwsUpboundIoV1beta2DatasourceSpec:
    r"""
    DatasourceSpec defines the desired state of Datasource

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProvider

    initProvider?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecProviderConfigRef

    publishConnectionDetailsTo?: AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecWriteConnectionSecretToRef


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProvider:
    r"""
    appsync aws upbound io v1beta2 datasource spec for provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API ID for the GraphQL API for the data source.
    apiIdRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    description : str, default is Undefined, optional
        Description of the data source.
    dynamodbConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfig, default is Undefined, optional
        dynamodb config
    elasticsearchConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderElasticsearchConfig, default is Undefined, optional
        elasticsearch config
    eventBridgeConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderEventBridgeConfig, default is Undefined, optional
        event bridge config
    httpConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfig, default is Undefined, optional
        http config
    lambdaConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderLambdaConfig, default is Undefined, optional
        lambda config
    opensearchserviceConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderOpensearchserviceConfig, default is Undefined, optional
        opensearchservice config
    region : str, default is Undefined, required
        AWS Region for RDS HTTP endpoint. Defaults to current region.
        Region is the region you'd like your resource to be created in.
    relationalDatabaseConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderRelationalDatabaseConfig, default is Undefined, optional
        relational database config
    serviceRoleArn : str, default is Undefined, optional
        IAM service role ARN for the data source. Required if type is specified as AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, AMAZON_EVENTBRIDGE, or AMAZON_OPENSEARCH_SERVICE.
    serviceRoleArnRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnRef, default is Undefined, optional
        service role arn ref
    serviceRoleArnSelector : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnSelector, default is Undefined, optional
        service role arn selector
    $type : str, default is Undefined, optional
        Type of the Data Source. Valid values: AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, HTTP, NONE, RELATIONAL_DATABASE, AMAZON_EVENTBRIDGE, AMAZON_OPENSEARCH_SERVICE.
    """


    apiId?: str

    apiIdRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDRef

    apiIdSelector?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDSelector

    description?: str

    dynamodbConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfig

    elasticsearchConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderElasticsearchConfig

    eventBridgeConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderEventBridgeConfig

    httpConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfig

    lambdaConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderLambdaConfig

    opensearchserviceConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderOpensearchserviceConfig

    region: str

    relationalDatabaseConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderRelationalDatabaseConfig

    serviceRoleArn?: str

    serviceRoleArnRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnRef

    serviceRoleArnSelector?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnSelector

    $type?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDRef:
    r"""
    Reference to a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDSelector:
    r"""
    Selector for a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfig:
    r"""
    DynamoDB settings. See dynamodb_config Block for details.

    Attributes
    ----------
    deltaSyncConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigDeltaSyncConfig, default is Undefined, optional
        delta sync config
    region : str, default is Undefined, optional
        AWS region of the DynamoDB table. Defaults to current region.
    tableName : str, default is Undefined, optional
        Name of the DynamoDB table.
    tableNameRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameSelector, default is Undefined, optional
        table name selector
    useCallerCredentials : bool, default is Undefined, optional
        Set to true to use Amazon Cognito credentials with this data source.
    versioned : bool, default is Undefined, optional
        Detects Conflict Detection and Resolution with this data source.
    """


    deltaSyncConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigDeltaSyncConfig

    region?: str

    tableName?: str

    tableNameRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameRef

    tableNameSelector?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameSelector

    useCallerCredentials?: bool

    versioned?: bool


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigDeltaSyncConfig:
    r"""
    The DeltaSyncConfig for a versioned data source. See delta_sync_config Block for details.

    Attributes
    ----------
    baseTableTtl : float, default is Undefined, optional
        The number of minutes that an Item is stored in the data source.
    deltaSyncTableName : str, default is Undefined, optional
        The table name.
    deltaSyncTableTtl : float, default is Undefined, optional
        The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
    """


    baseTableTtl?: float

    deltaSyncTableName?: str

    deltaSyncTableTtl?: float


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameRef:
    r"""
    Reference to a Table in dynamodb to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameSelector:
    r"""
    Selector for a Table in dynamodb to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderDynamodbConfigTableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderElasticsearchConfig:
    r"""
    Amazon Elasticsearch settings. See elasticsearch_config Block for details.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        HTTP endpoint of the Elasticsearch domain.
    region : str, default is Undefined, optional
        AWS region of Elasticsearch domain. Defaults to current region.
    """


    endpoint?: str

    region?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderEventBridgeConfig:
    r"""
    AWS EventBridge settings. See event_bridge_config Block for details.

    Attributes
    ----------
    eventBusArn : str, default is Undefined, optional
        ARN for the EventBridge bus.
    """


    eventBusArn?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfig:
    r"""
    HTTP settings. See http_config Block for details.

    Attributes
    ----------
    authorizationConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfigAuthorizationConfig, default is Undefined, optional
        authorization config
    endpoint : str, default is Undefined, optional
        HTTP URL.
    """


    authorizationConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfigAuthorizationConfig

    endpoint?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfigAuthorizationConfig:
    r"""
    Authorization configuration in case the HTTP endpoint requires authorization. See authorization_config Block for details.

    Attributes
    ----------
    authorizationType : str, default is Undefined, optional
        Authorization type that the HTTP endpoint requires. Default values is AWS_IAM.
    awsIamConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfigAuthorizationConfigAwsIamConfig, default is Undefined, optional
        aws iam config
    """


    authorizationType?: str

    awsIamConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfigAuthorizationConfigAwsIamConfig


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderHTTPConfigAuthorizationConfigAwsIamConfig:
    r"""
    Identity and Access Management (IAM) settings. See aws_iam_config Block for details.

    Attributes
    ----------
    signingRegion : str, default is Undefined, optional
        Signing Amazon Web Services Region for IAM authorization.
    signingServiceName : str, default is Undefined, optional
        Signing service name for IAM authorization.
    """


    signingRegion?: str

    signingServiceName?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderLambdaConfig:
    r"""
    AWS Lambda settings. See lambda_config Block for details.

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        ARN for the Lambda function.
    """


    functionArn?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderOpensearchserviceConfig:
    r"""
    Amazon OpenSearch Service settings. See opensearchservice_config Block for details.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        HTTP endpoint of the OpenSearch domain.
    region : str, default is Undefined, optional
        AWS region of the OpenSearch domain. Defaults to current region.
    """


    endpoint?: str

    region?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderRelationalDatabaseConfig:
    r"""
    AWS RDS settings. See relational_database_config Block for details.

    Attributes
    ----------
    httpEndpointConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderRelationalDatabaseConfigHTTPEndpointConfig, default is Undefined, optional
        http endpoint config
    sourceType : str, default is Undefined, optional
        Source type for the relational database. Valid values: RDS_HTTP_ENDPOINT.
    """


    httpEndpointConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderRelationalDatabaseConfigHTTPEndpointConfig

    sourceType?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderRelationalDatabaseConfigHTTPEndpointConfig:
    r"""
    Amazon RDS HTTP endpoint configuration. See http_endpoint_config Block for details.

    Attributes
    ----------
    awsSecretStoreArn : str, default is Undefined, optional
        AWS secret store ARN for database credentials.
    databaseName : str, default is Undefined, optional
        Logical database name.
    dbClusterIdentifier : str, default is Undefined, optional
        Amazon RDS cluster identifier.
    region : str, default is Undefined, optional
        AWS Region for RDS HTTP endpoint. Defaults to current region.
    $schema : str, default is Undefined, optional
        Logical schema name.
    """


    awsSecretStoreArn?: str

    databaseName?: str

    dbClusterIdentifier?: str

    region?: str

    $schema?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecForProviderServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the data source.
    dynamodbConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfig, default is Undefined, optional
        dynamodb config
    elasticsearchConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderElasticsearchConfig, default is Undefined, optional
        elasticsearch config
    eventBridgeConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderEventBridgeConfig, default is Undefined, optional
        event bridge config
    httpConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfig, default is Undefined, optional
        http config
    lambdaConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderLambdaConfig, default is Undefined, optional
        lambda config
    opensearchserviceConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderOpensearchserviceConfig, default is Undefined, optional
        opensearchservice config
    relationalDatabaseConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderRelationalDatabaseConfig, default is Undefined, optional
        relational database config
    serviceRoleArn : str, default is Undefined, optional
        IAM service role ARN for the data source. Required if type is specified as AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, AMAZON_EVENTBRIDGE, or AMAZON_OPENSEARCH_SERVICE.
    serviceRoleArnRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnRef, default is Undefined, optional
        service role arn ref
    serviceRoleArnSelector : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnSelector, default is Undefined, optional
        service role arn selector
    $type : str, default is Undefined, optional
        Type of the Data Source. Valid values: AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, HTTP, NONE, RELATIONAL_DATABASE, AMAZON_EVENTBRIDGE, AMAZON_OPENSEARCH_SERVICE.
    """


    description?: str

    dynamodbConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfig

    elasticsearchConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderElasticsearchConfig

    eventBridgeConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderEventBridgeConfig

    httpConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfig

    lambdaConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderLambdaConfig

    opensearchserviceConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderOpensearchserviceConfig

    relationalDatabaseConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderRelationalDatabaseConfig

    serviceRoleArn?: str

    serviceRoleArnRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnRef

    serviceRoleArnSelector?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnSelector

    $type?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfig:
    r"""
    DynamoDB settings. See dynamodb_config Block for details.

    Attributes
    ----------
    deltaSyncConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigDeltaSyncConfig, default is Undefined, optional
        delta sync config
    tableName : str, default is Undefined, optional
        Name of the DynamoDB table.
    tableNameRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameRef, default is Undefined, optional
        table name ref
    tableNameSelector : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameSelector, default is Undefined, optional
        table name selector
    useCallerCredentials : bool, default is Undefined, optional
        Set to true to use Amazon Cognito credentials with this data source.
    versioned : bool, default is Undefined, optional
        Detects Conflict Detection and Resolution with this data source.
    """


    deltaSyncConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigDeltaSyncConfig

    tableName?: str

    tableNameRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameRef

    tableNameSelector?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameSelector

    useCallerCredentials?: bool

    versioned?: bool


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigDeltaSyncConfig:
    r"""
    The DeltaSyncConfig for a versioned data source. See delta_sync_config Block for details.

    Attributes
    ----------
    baseTableTtl : float, default is Undefined, optional
        The number of minutes that an Item is stored in the data source.
    deltaSyncTableName : str, default is Undefined, optional
        The table name.
    deltaSyncTableTtl : float, default is Undefined, optional
        The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
    """


    baseTableTtl?: float

    deltaSyncTableName?: str

    deltaSyncTableTtl?: float


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameRef:
    r"""
    Reference to a Table in dynamodb to populate tableName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameSelector:
    r"""
    Selector for a Table in dynamodb to populate tableName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderDynamodbConfigTableNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderElasticsearchConfig:
    r"""
    Amazon Elasticsearch settings. See elasticsearch_config Block for details.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        HTTP endpoint of the Elasticsearch domain.
    """


    endpoint?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderEventBridgeConfig:
    r"""
    AWS EventBridge settings. See event_bridge_config Block for details.

    Attributes
    ----------
    eventBusArn : str, default is Undefined, optional
        ARN for the EventBridge bus.
    """


    eventBusArn?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfig:
    r"""
    HTTP settings. See http_config Block for details.

    Attributes
    ----------
    authorizationConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfigAuthorizationConfig, default is Undefined, optional
        authorization config
    endpoint : str, default is Undefined, optional
        HTTP URL.
    """


    authorizationConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfigAuthorizationConfig

    endpoint?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfigAuthorizationConfig:
    r"""
    Authorization configuration in case the HTTP endpoint requires authorization. See authorization_config Block for details.

    Attributes
    ----------
    authorizationType : str, default is Undefined, optional
        Authorization type that the HTTP endpoint requires. Default values is AWS_IAM.
    awsIamConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfigAuthorizationConfigAwsIamConfig, default is Undefined, optional
        aws iam config
    """


    authorizationType?: str

    awsIamConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfigAuthorizationConfigAwsIamConfig


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderHTTPConfigAuthorizationConfigAwsIamConfig:
    r"""
    Identity and Access Management (IAM) settings. See aws_iam_config Block for details.

    Attributes
    ----------
    signingRegion : str, default is Undefined, optional
        Signing Amazon Web Services Region for IAM authorization.
    signingServiceName : str, default is Undefined, optional
        Signing service name for IAM authorization.
    """


    signingRegion?: str

    signingServiceName?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderLambdaConfig:
    r"""
    AWS Lambda settings. See lambda_config Block for details.

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        ARN for the Lambda function.
    """


    functionArn?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderOpensearchserviceConfig:
    r"""
    Amazon OpenSearch Service settings. See opensearchservice_config Block for details.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        HTTP endpoint of the OpenSearch domain.
    """


    endpoint?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderRelationalDatabaseConfig:
    r"""
    AWS RDS settings. See relational_database_config Block for details.

    Attributes
    ----------
    httpEndpointConfig : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderRelationalDatabaseConfigHTTPEndpointConfig, default is Undefined, optional
        http endpoint config
    sourceType : str, default is Undefined, optional
        Source type for the relational database. Valid values: RDS_HTTP_ENDPOINT.
    """


    httpEndpointConfig?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderRelationalDatabaseConfigHTTPEndpointConfig

    sourceType?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderRelationalDatabaseConfigHTTPEndpointConfig:
    r"""
    Amazon RDS HTTP endpoint configuration. See http_endpoint_config Block for details.

    Attributes
    ----------
    awsSecretStoreArn : str, default is Undefined, optional
        AWS secret store ARN for database credentials.
    databaseName : str, default is Undefined, optional
        Logical database name.
    dbClusterIdentifier : str, default is Undefined, optional
        Amazon RDS cluster identifier.
    $schema : str, default is Undefined, optional
        Logical schema name.
    """


    awsSecretStoreArn?: str

    databaseName?: str

    dbClusterIdentifier?: str

    $schema?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecInitProviderServiceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecProviderConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToConfigRef

    metadata?: AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToMetadata

    name: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatus:
    r"""
    DatasourceStatus defines the observed state of Datasource.

    Attributes
    ----------
    atProvider : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppsyncAwsUpboundIoV1beta2DatasourceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProvider

    conditions?: [AppsyncAwsUpboundIoV1beta2DatasourceStatusConditionsItems0]

    observedGeneration?: int


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProvider:
    r"""
    appsync aws upbound io v1beta2 datasource status at provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API ID for the GraphQL API for the data source.
    arn : str, default is Undefined, optional
        ARN
    description : str, default is Undefined, optional
        Description of the data source.
    dynamodbConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderDynamodbConfig, default is Undefined, optional
        dynamodb config
    elasticsearchConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderElasticsearchConfig, default is Undefined, optional
        elasticsearch config
    eventBridgeConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderEventBridgeConfig, default is Undefined, optional
        event bridge config
    httpConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfig, default is Undefined, optional
        http config
    id : str, default is Undefined, optional
        id
    lambdaConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderLambdaConfig, default is Undefined, optional
        lambda config
    opensearchserviceConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderOpensearchserviceConfig, default is Undefined, optional
        opensearchservice config
    relationalDatabaseConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderRelationalDatabaseConfig, default is Undefined, optional
        relational database config
    serviceRoleArn : str, default is Undefined, optional
        IAM service role ARN for the data source. Required if type is specified as AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, AMAZON_EVENTBRIDGE, or AMAZON_OPENSEARCH_SERVICE.
    $type : str, default is Undefined, optional
        Type of the Data Source. Valid values: AWS_LAMBDA, AMAZON_DYNAMODB, AMAZON_ELASTICSEARCH, HTTP, NONE, RELATIONAL_DATABASE, AMAZON_EVENTBRIDGE, AMAZON_OPENSEARCH_SERVICE.
    """


    apiId?: str

    arn?: str

    description?: str

    dynamodbConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderDynamodbConfig

    elasticsearchConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderElasticsearchConfig

    eventBridgeConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderEventBridgeConfig

    httpConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfig

    id?: str

    lambdaConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderLambdaConfig

    opensearchserviceConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderOpensearchserviceConfig

    relationalDatabaseConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderRelationalDatabaseConfig

    serviceRoleArn?: str

    $type?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderDynamodbConfig:
    r"""
    DynamoDB settings. See dynamodb_config Block for details.

    Attributes
    ----------
    deltaSyncConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderDynamodbConfigDeltaSyncConfig, default is Undefined, optional
        delta sync config
    region : str, default is Undefined, optional
        AWS region of the DynamoDB table. Defaults to current region.
    tableName : str, default is Undefined, optional
        Name of the DynamoDB table.
    useCallerCredentials : bool, default is Undefined, optional
        Set to true to use Amazon Cognito credentials with this data source.
    versioned : bool, default is Undefined, optional
        Detects Conflict Detection and Resolution with this data source.
    """


    deltaSyncConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderDynamodbConfigDeltaSyncConfig

    region?: str

    tableName?: str

    useCallerCredentials?: bool

    versioned?: bool


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderDynamodbConfigDeltaSyncConfig:
    r"""
    The DeltaSyncConfig for a versioned data source. See delta_sync_config Block for details.

    Attributes
    ----------
    baseTableTtl : float, default is Undefined, optional
        The number of minutes that an Item is stored in the data source.
    deltaSyncTableName : str, default is Undefined, optional
        The table name.
    deltaSyncTableTtl : float, default is Undefined, optional
        The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
    """


    baseTableTtl?: float

    deltaSyncTableName?: str

    deltaSyncTableTtl?: float


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderElasticsearchConfig:
    r"""
    Amazon Elasticsearch settings. See elasticsearch_config Block for details.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        HTTP endpoint of the Elasticsearch domain.
    region : str, default is Undefined, optional
        AWS region of Elasticsearch domain. Defaults to current region.
    """


    endpoint?: str

    region?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderEventBridgeConfig:
    r"""
    AWS EventBridge settings. See event_bridge_config Block for details.

    Attributes
    ----------
    eventBusArn : str, default is Undefined, optional
        ARN for the EventBridge bus.
    """


    eventBusArn?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfig:
    r"""
    HTTP settings. See http_config Block for details.

    Attributes
    ----------
    authorizationConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfigAuthorizationConfig, default is Undefined, optional
        authorization config
    endpoint : str, default is Undefined, optional
        HTTP URL.
    """


    authorizationConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfigAuthorizationConfig

    endpoint?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfigAuthorizationConfig:
    r"""
    Authorization configuration in case the HTTP endpoint requires authorization. See authorization_config Block for details.

    Attributes
    ----------
    authorizationType : str, default is Undefined, optional
        Authorization type that the HTTP endpoint requires. Default values is AWS_IAM.
    awsIamConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfigAuthorizationConfigAwsIamConfig, default is Undefined, optional
        aws iam config
    """


    authorizationType?: str

    awsIamConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfigAuthorizationConfigAwsIamConfig


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderHTTPConfigAuthorizationConfigAwsIamConfig:
    r"""
    Identity and Access Management (IAM) settings. See aws_iam_config Block for details.

    Attributes
    ----------
    signingRegion : str, default is Undefined, optional
        Signing Amazon Web Services Region for IAM authorization.
    signingServiceName : str, default is Undefined, optional
        Signing service name for IAM authorization.
    """


    signingRegion?: str

    signingServiceName?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderLambdaConfig:
    r"""
    AWS Lambda settings. See lambda_config Block for details.

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        ARN for the Lambda function.
    """


    functionArn?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderOpensearchserviceConfig:
    r"""
    Amazon OpenSearch Service settings. See opensearchservice_config Block for details.

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        HTTP endpoint of the OpenSearch domain.
    region : str, default is Undefined, optional
        AWS region of the OpenSearch domain. Defaults to current region.
    """


    endpoint?: str

    region?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderRelationalDatabaseConfig:
    r"""
    AWS RDS settings. See relational_database_config Block for details.

    Attributes
    ----------
    httpEndpointConfig : AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderRelationalDatabaseConfigHTTPEndpointConfig, default is Undefined, optional
        http endpoint config
    sourceType : str, default is Undefined, optional
        Source type for the relational database. Valid values: RDS_HTTP_ENDPOINT.
    """


    httpEndpointConfig?: AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderRelationalDatabaseConfigHTTPEndpointConfig

    sourceType?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusAtProviderRelationalDatabaseConfigHTTPEndpointConfig:
    r"""
    Amazon RDS HTTP endpoint configuration. See http_endpoint_config Block for details.

    Attributes
    ----------
    awsSecretStoreArn : str, default is Undefined, optional
        AWS secret store ARN for database credentials.
    databaseName : str, default is Undefined, optional
        Logical database name.
    dbClusterIdentifier : str, default is Undefined, optional
        Amazon RDS cluster identifier.
    region : str, default is Undefined, optional
        AWS Region for RDS HTTP endpoint. Defaults to current region.
    $schema : str, default is Undefined, optional
        Logical schema name.
    """


    awsSecretStoreArn?: str

    databaseName?: str

    dbClusterIdentifier?: str

    region?: str

    $schema?: str


schema AppsyncAwsUpboundIoV1beta2DatasourceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


