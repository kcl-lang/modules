"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema WebACLLoggingConfiguration:
    r"""
    WebACLLoggingConfiguration is the Schema for the WebACLLoggingConfigurations API. Create a resource for WAFv2 Web ACL Logging Configuration.

    Attributes
    ----------
    apiVersion : str, default is "wafv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "WebACLLoggingConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpec, default is Undefined, required
        spec
    status : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "wafv2.aws.upbound.io/v1beta1" = "wafv2.aws.upbound.io/v1beta1"

    kind: "WebACLLoggingConfiguration" = "WebACLLoggingConfiguration"

    metadata?: v1.ObjectMeta

    spec: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpec

    status?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatus


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpec:
    r"""
    WebACLLoggingConfigurationSpec defines the desired state of WebACLLoggingConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProvider

    initProvider?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecWriteConnectionSecretToRef


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProvider:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec for provider

    Attributes
    ----------
    logDestinationConfigs : [str], default is Undefined, optional
        Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. Note: data firehose, log group, or bucket name must be prefixed with aws-waf-logs-, e.g. aws-waf-logs-example-firehose, aws-waf-logs-example-log-group, or aws-waf-logs-example-bucket.
        AWS Kinesis Firehose Delivery Stream ARNs
    logDestinationConfigsRefs : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsRefsItems0], default is Undefined, optional
        References to DeliveryStream in firehose to populate logDestinationConfigs.
    logDestinationConfigsSelector : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsSelector, default is Undefined, optional
        log destination configs selector
    loggingFilter : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilter, default is Undefined, optional
        logging filter
    redactedFields : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderRedactedFieldsItems0], default is Undefined, optional
        Configuration for parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
        Parts of the request to exclude from logs
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.
        AWS WebACL ARN
    resourceArnRef : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnRef, default is Undefined, optional
        resource arn ref
    resourceArnSelector : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnSelector, default is Undefined, optional
        resource arn selector
    """


    logDestinationConfigs?: [str]

    logDestinationConfigsRefs?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsRefsItems0]

    logDestinationConfigsSelector?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsSelector

    loggingFilter?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilter

    redactedFields?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderRedactedFieldsItems0]

    region: str

    resourceArn?: str

    resourceArnRef?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnRef

    resourceArnSelector?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnSelector


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsRefsItems0Policy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsSelector:
    r"""
    Selector for a list of DeliveryStream in firehose to populate logDestinationConfigs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsSelectorPolicy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLogDestinationConfigsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilter:
    r"""
    Configuration block that specifies which web requests are kept in the logs and which are dropped. It allows filtering based on the rule action and the web request labels applied by matching rules during web ACL evaluation. For more details, refer to the Logging Filter section below.

    Attributes
    ----------
    defaultBehavior : str, default is Undefined, optional
        Default handling for logs that don't match any of the specified filtering conditions. Valid values for default_behavior are KEEP or DROP.
    $filter : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0], default is Undefined, optional
        Filter(s) that you want to apply to the logs. See Filter below for more details.
    """


    defaultBehavior?: str

    $filter?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0]


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec for provider logging filter filter items0

    Attributes
    ----------
    behavior : str, default is Undefined, optional
        Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for behavior are KEEP or DROP.
    condition : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0], default is Undefined, optional
        Match condition(s) for the filter. See Condition below for more details.
    requirement : str, default is Undefined, optional
        Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for requirement are MEETS_ALL or MEETS_ANY.
    """


    behavior?: str

    condition?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0]

    requirement?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec for provider logging filter filter items0 condition items0

    Attributes
    ----------
    actionCondition : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0ActionCondition, default is Undefined, optional
        action condition
    labelNameCondition : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition, default is Undefined, optional
        label name condition
    """


    actionCondition?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0ActionCondition

    labelNameCondition?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0ActionCondition:
    r"""
    Configuration for a single action condition. See Action Condition below for more details.

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action setting that a log record must contain in order to meet the condition. Valid values for action are ALLOW, BLOCK, and COUNT.
    """


    action?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition:
    r"""
    Condition for a single label name. See Label Name Condition below for more details.

    Attributes
    ----------
    labelName : str, default is Undefined, optional
        Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
    """


    labelName?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderRedactedFieldsItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec for provider redacted fields items0

    Attributes
    ----------
    method : any, default is Undefined, optional
        HTTP method to be redacted. It must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
    queryString : any, default is Undefined, optional
        Whether to redact the query string. It must be specified as an empty configuration block {}. The query string is the part of a URL that appears after a ? character, if any.
    singleHeader : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderRedactedFieldsItems0SingleHeader, default is Undefined, optional
        single header
    uriPath : any, default is Undefined, optional
        Configuration block that redacts the request URI path. It should be specified as an empty configuration block {}. The URI path is the part of a web request that identifies a resource, such as /images/daily-ad.jpg.
    """


    method?: any

    queryString?: any

    singleHeader?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderRedactedFieldsItems0SingleHeader

    uriPath?: any


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderRedactedFieldsItems0SingleHeader:
    r"""
    "single_header" refers to the redaction of a single header. For more information, please see the details below under Single Header.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the query header to redact. This setting must be provided in lowercase characters.
    """


    name?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnRef:
    r"""
    Reference to a WebACL in wafv2 to populate resourceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnRefPolicy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnSelector:
    r"""
    Selector for a WebACL in wafv2 to populate resourceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnSelectorPolicy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecForProviderResourceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    logDestinationConfigs : [str], default is Undefined, optional
        Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. Note: data firehose, log group, or bucket name must be prefixed with aws-waf-logs-, e.g. aws-waf-logs-example-firehose, aws-waf-logs-example-log-group, or aws-waf-logs-example-bucket.
        AWS Kinesis Firehose Delivery Stream ARNs
    logDestinationConfigsRefs : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsRefsItems0], default is Undefined, optional
        References to DeliveryStream in firehose to populate logDestinationConfigs.
    logDestinationConfigsSelector : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsSelector, default is Undefined, optional
        log destination configs selector
    loggingFilter : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilter, default is Undefined, optional
        logging filter
    redactedFields : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderRedactedFieldsItems0], default is Undefined, optional
        Configuration for parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
        Parts of the request to exclude from logs
    """


    logDestinationConfigs?: [str]

    logDestinationConfigsRefs?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsRefsItems0]

    logDestinationConfigsSelector?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsSelector

    loggingFilter?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilter

    redactedFields?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderRedactedFieldsItems0]


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsRefsItems0Policy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsSelector:
    r"""
    Selector for a list of DeliveryStream in firehose to populate logDestinationConfigs.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsSelectorPolicy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLogDestinationConfigsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilter:
    r"""
    Configuration block that specifies which web requests are kept in the logs and which are dropped. It allows filtering based on the rule action and the web request labels applied by matching rules during web ACL evaluation. For more details, refer to the Logging Filter section below.

    Attributes
    ----------
    defaultBehavior : str, default is Undefined, optional
        Default handling for logs that don't match any of the specified filtering conditions. Valid values for default_behavior are KEEP or DROP.
    $filter : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0], default is Undefined, optional
        Filter(s) that you want to apply to the logs. See Filter below for more details.
    """


    defaultBehavior?: str

    $filter?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0]


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec init provider logging filter filter items0

    Attributes
    ----------
    behavior : str, default is Undefined, optional
        Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for behavior are KEEP or DROP.
    condition : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0], default is Undefined, optional
        Match condition(s) for the filter. See Condition below for more details.
    requirement : str, default is Undefined, optional
        Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for requirement are MEETS_ALL or MEETS_ANY.
    """


    behavior?: str

    condition?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0]

    requirement?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec init provider logging filter filter items0 condition items0

    Attributes
    ----------
    actionCondition : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0ActionCondition, default is Undefined, optional
        action condition
    labelNameCondition : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition, default is Undefined, optional
        label name condition
    """


    actionCondition?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0ActionCondition

    labelNameCondition?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0ActionCondition:
    r"""
    Configuration for a single action condition. See Action Condition below for more details.

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action setting that a log record must contain in order to meet the condition. Valid values for action are ALLOW, BLOCK, and COUNT.
    """


    action?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition:
    r"""
    Condition for a single label name. See Label Name Condition below for more details.

    Attributes
    ----------
    labelName : str, default is Undefined, optional
        Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
    """


    labelName?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderRedactedFieldsItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration spec init provider redacted fields items0

    Attributes
    ----------
    method : any, default is Undefined, optional
        HTTP method to be redacted. It must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
    queryString : any, default is Undefined, optional
        Whether to redact the query string. It must be specified as an empty configuration block {}. The query string is the part of a URL that appears after a ? character, if any.
    singleHeader : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderRedactedFieldsItems0SingleHeader, default is Undefined, optional
        single header
    uriPath : any, default is Undefined, optional
        Configuration block that redacts the request URI path. It should be specified as an empty configuration block {}. The URI path is the part of a web request that identifies a resource, such as /images/daily-ad.jpg.
    """


    method?: any

    queryString?: any

    singleHeader?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderRedactedFieldsItems0SingleHeader

    uriPath?: any


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecInitProviderRedactedFieldsItems0SingleHeader:
    r"""
    "single_header" refers to the redaction of a single header. For more information, please see the details below under Single Header.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the query header to redact. This setting must be provided in lowercase characters.
    """


    name?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecProviderConfigRefPolicy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatus:
    r"""
    WebACLLoggingConfigurationStatus defines the observed state of WebACLLoggingConfiguration.

    Attributes
    ----------
    atProvider : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProvider

    conditions?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProvider:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the WAFv2 Web ACL.
    logDestinationConfigs : [str], default is Undefined, optional
        Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. Note: data firehose, log group, or bucket name must be prefixed with aws-waf-logs-, e.g. aws-waf-logs-example-firehose, aws-waf-logs-example-log-group, or aws-waf-logs-example-bucket.
        AWS Kinesis Firehose Delivery Stream ARNs
    loggingFilter : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilter, default is Undefined, optional
        logging filter
    redactedFields : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderRedactedFieldsItems0], default is Undefined, optional
        Configuration for parts of the request that you want to keep out of the logs. Up to 100 redacted_fields blocks are supported. See Redacted Fields below for more details.
        Parts of the request to exclude from logs
    resourceArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the web ACL that you want to associate with log_destination_configs.
        AWS WebACL ARN
    """


    id?: str

    logDestinationConfigs?: [str]

    loggingFilter?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilter

    redactedFields?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderRedactedFieldsItems0]

    resourceArn?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilter:
    r"""
    Configuration block that specifies which web requests are kept in the logs and which are dropped. It allows filtering based on the rule action and the web request labels applied by matching rules during web ACL evaluation. For more details, refer to the Logging Filter section below.

    Attributes
    ----------
    defaultBehavior : str, default is Undefined, optional
        Default handling for logs that don't match any of the specified filtering conditions. Valid values for default_behavior are KEEP or DROP.
    $filter : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0], default is Undefined, optional
        Filter(s) that you want to apply to the logs. See Filter below for more details.
    """


    defaultBehavior?: str

    $filter?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0]


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration status at provider logging filter filter items0

    Attributes
    ----------
    behavior : str, default is Undefined, optional
        Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for behavior are KEEP or DROP.
    condition : [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0], default is Undefined, optional
        Match condition(s) for the filter. See Condition below for more details.
    requirement : str, default is Undefined, optional
        Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for requirement are MEETS_ALL or MEETS_ANY.
    """


    behavior?: str

    condition?: [Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0]

    requirement?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration status at provider logging filter filter items0 condition items0

    Attributes
    ----------
    actionCondition : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0ActionCondition, default is Undefined, optional
        action condition
    labelNameCondition : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition, default is Undefined, optional
        label name condition
    """


    actionCondition?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0ActionCondition

    labelNameCondition?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0ActionCondition:
    r"""
    Configuration for a single action condition. See Action Condition below for more details.

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action setting that a log record must contain in order to meet the condition. Valid values for action are ALLOW, BLOCK, and COUNT.
    """


    action?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderLoggingFilterFilterItems0ConditionItems0LabelNameCondition:
    r"""
    Condition for a single label name. See Label Name Condition below for more details.

    Attributes
    ----------
    labelName : str, default is Undefined, optional
        Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label.
    """


    labelName?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderRedactedFieldsItems0:
    r"""
    wafv2 aws upbound io v1beta1 web ACL logging configuration status at provider redacted fields items0

    Attributes
    ----------
    method : any, default is Undefined, optional
        HTTP method to be redacted. It must be specified as an empty configuration block {}. The method indicates the type of operation that the request is asking the origin to perform.
    queryString : any, default is Undefined, optional
        Whether to redact the query string. It must be specified as an empty configuration block {}. The query string is the part of a URL that appears after a ? character, if any.
    singleHeader : Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderRedactedFieldsItems0SingleHeader, default is Undefined, optional
        single header
    uriPath : any, default is Undefined, optional
        Configuration block that redacts the request URI path. It should be specified as an empty configuration block {}. The URI path is the part of a web request that identifies a resource, such as /images/daily-ad.jpg.
    """


    method?: any

    queryString?: any

    singleHeader?: Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderRedactedFieldsItems0SingleHeader

    uriPath?: any


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusAtProviderRedactedFieldsItems0SingleHeader:
    r"""
    "single_header" refers to the redaction of a single header. For more information, please see the details below under Single Header.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the query header to redact. This setting must be provided in lowercase characters.
    """


    name?: str


schema Wafv2AwsUpboundIoV1beta1WebACLLoggingConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


