"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IdentityProvider:
    r"""
    IdentityProvider is the Schema for the IdentityProviders API.

    Attributes
    ----------
    apiVersion : str, default is "saml.keycloak.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IdentityProvider", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpec, default is Undefined, required
        spec
    status : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatus, default is Undefined, optional
        status
    """


    apiVersion: "saml.keycloak.crossplane.io/v1alpha1" = "saml.keycloak.crossplane.io/v1alpha1"

    kind: "IdentityProvider" = "IdentityProvider"

    metadata?: v1.ObjectMeta

    spec: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpec

    status?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatus


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpec:
    r"""
    IdentityProviderSpec defines the desired state of IdentityProvider

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProvider, default is Undefined, required
        for provider
    initProvider : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProvider

    initProvider?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRef

    writeConnectionSecretToRef?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecWriteConnectionSecretToRef


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProvider:
    r"""
    saml keycloak crossplane io v1alpha1 identity provider spec for provider

    Attributes
    ----------
    addReadTokenRoleOnCreate : bool, default is Undefined, optional
        When true, new users will be able to read stored tokens. This will automatically assign the broker.read-token role. Defaults to false.
        Enable/disable if new users can read any stored tokens. This assigns the broker.read-token role.
    alias : str, default is Undefined, optional
        The unique name of identity provider.
        The alias uniquely identifies an identity provider and it is also used to build the redirect uri.
    authenticateByDefault : bool, default is Undefined, optional
        Authenticate users by default. Defaults to false.
        Enable/disable authenticate users by default.
    authnContextClassRefs : [str], default is Undefined, optional
        Ordered list of requested AuthnContext ClassRefs.
        AuthnContext ClassRefs
    authnContextComparisonType : str, default is Undefined, optional
        Specifies the comparison method used to evaluate the requested context classes or statements.
        AuthnContext Comparison
    authnContextDeclRefs : [str], default is Undefined, optional
        Ordered list of requested AuthnContext DeclRefs.
        AuthnContext DeclRefs
    backchannelSupported : bool, default is Undefined, optional
        Does the external IDP support backchannel logout?. Defaults to false.
        Does the external IDP support backchannel logout?
    displayName : str, default is Undefined, optional
        The display name for the realm that is shown when logging in to the admin console.
        Friendly name for Identity Providers.
    enabled : bool, default is Undefined, optional
        When false, users and clients will not be able to access this realm. Defaults to true.
        Enable/disable this identity provider.
    entityId : str, default is Undefined, optional
        The Entity ID that will be used to uniquely identify this SAML Service Provider.
        The Entity ID that will be used to uniquely identify this SAML Service Provider.
    extraConfig : {str:str}, default is Undefined, optional
        A map of key/value pairs to add extra configuration to this identity provider. Use this attribute at your own risk, as custom attributes may conflict with top-level configuration attributes in future provider updates.
    firstBrokerLoginFlowAlias : str, default is Undefined, optional
        Alias of authentication flow, which is triggered after first login with this identity provider. Term 'First Login' means that there is not yet existing Keycloak account linked with the authenticated identity provider account. Defaults to first broker login.
        Alias of authentication flow, which is triggered after first login with this identity provider. Term 'First Login' means that there is not yet existing Keycloak account linked with the authenticated identity provider account.
    forceAuthn : bool, default is Undefined, optional
        Indicates whether the identity provider must authenticate the presenter directly rather than rely on a previous security context.
        Require Force Authn.
    guiOrder : str, default is Undefined, optional
        A number defining the order of this identity provider in the GUI.
        GUI Order
    hideOnLoginPage : bool, default is Undefined, optional
        If hidden, then login with this provider is possible only if requested explicitly, e.g. using the 'kc_idp_hint' parameter.
        Hide On Login Page.
    linkOnly : bool, default is Undefined, optional
        When true, users cannot log in using this provider, but their existing accounts will be linked when possible. Defaults to false.
        If true, users cannot log in through this provider.  They can only link to this provider.  This is useful if you don't want to allow login from the provider, but want to integrate with a provider
    loginHint : str, default is Undefined, optional
        Login Hint.
    nameIdPolicyFormat : str, default is Undefined, optional
        Specifies the URI reference corresponding to a name identifier format. Defaults to empty.
        Name ID Policy Format.
    orgDomain : str, default is Undefined, optional
        The organization domain to associate this identity provider with. It is used to map users to an organization based on their email domain and to authenticate them accordingly in the scope of the organization.
    orgRedirectModeEmailMatches : bool, default is Undefined, optional
        Indicates whether to automatically redirect users to this identity provider when email domain matches domain.
    organizationId : str, default is Undefined, optional
        The ID of the organization to link this identity provider to.
        ID of organization with which this identity is linked.
    organizationIdRef : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDRef, default is Undefined, optional
        organization Id ref
    organizationIdSelector : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDSelector, default is Undefined, optional
        organization Id selector
    postBindingAuthnRequest : bool, default is Undefined, optional
        Indicates whether the AuthnRequest must be sent using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Authn Request.
    postBindingLogout : bool, default is Undefined, optional
        Indicates whether to respond to requests using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Logout.
    postBindingResponse : bool, default is Undefined, optional
        Indicates whether to respond to requests using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Response.
    postBrokerLoginFlowAlias : str, default is Undefined, optional
        Alias of authentication flow, which is triggered after each login with this identity provider. Useful if you want additional verification of each user authenticated with this identity provider (for example OTP). Leave this empty if you don't want any additional authenticators to be triggered after login with this identity provider. Also note, that authenticator implementations must assume that user is already set in ClientSession as identity provider already set it. Defaults to empty.
        Alias of authentication flow, which is triggered after each login with this identity provider. Useful if you want additional verification of each user authenticated with this identity provider (for example OTP). Leave this empty if you don't want any additional authenticators to be triggered after login with this identity provider. Also note, that authenticator implementations must assume that user is already set in ClientSession as identity provider already set it.
    principalAttribute : str, default is Undefined, optional
        The principal attribute.
        Principal Attribute
    principalType : str, default is Undefined, optional
        The principal type. Can be one of SUBJECT, ATTRIBUTE or FRIENDLY_ATTRIBUTE.
        Principal Type
    providerId : str, default is Undefined, optional
        The ID of the identity provider to use. Defaults to saml, which should be used unless you have extended Keycloak and provided your own implementation.
        provider id, is always saml, unless you have a custom implementation
    realm : str, default is Undefined, optional
        The name of the realm. This is unique across Keycloak.
        Realm Name
    realmRef : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmRef, default is Undefined, optional
        realm ref
    realmSelector : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmSelector, default is Undefined, optional
        realm selector
    signatureAlgorithm : str, default is Undefined, optional
        Signing Algorithm. Defaults to empty.
        Signing Algorithm.
    signingCertificate : str, default is Undefined, optional
        Signing Certificate.
        Signing Certificate.
    singleLogoutServiceUrl : str, default is Undefined, optional
        The Url that must be used to send logout requests.
        Logout URL.
    singleSignOnServiceUrl : str, default is Undefined, optional
        The Url that must be used to send authentication requests (SAML AuthnRequest).
        SSO Logout URL.
    storeToken : bool, default is Undefined, optional
        When true, tokens will be stored after authenticating users. Defaults to true.
        Enable/disable if tokens must be stored after authenticating users.
    syncMode : str, default is Undefined, optional
        The default sync mode to use for all mappers attached to this identity provider. Can be one of IMPORT, FORCE, or LEGACY.
        Sync Mode
    trustEmail : bool, default is Undefined, optional
        When true, email addresses for users in this provider will automatically be verified regardless of the realm's email verification policy. Defaults to false.
        If enabled then email provided by this provider is not verified even if verification is enabled for the realm.
    validateSignature : bool, default is Undefined, optional
        Enable/disable signature validation of SAML responses.
        Enable/disable signature validation of SAML responses.
    wantAssertionsEncrypted : bool, default is Undefined, optional
        Indicates whether this service provider expects an encrypted Assertion.
        Want Assertions Encrypted.
    wantAssertionsSigned : bool, default is Undefined, optional
        Indicates whether this service provider expects a signed Assertion.
        Want Assertions Signed.
    xmlSignKeyInfoKeyNameTransformer : str, default is Undefined, optional
        The SAML signature key name. Can be one of NONE, KEY_ID, or CERT_SUBJECT.
        Sign Key Transformer.
    """


    addReadTokenRoleOnCreate?: bool

    alias?: str

    authenticateByDefault?: bool

    authnContextClassRefs?: [str]

    authnContextComparisonType?: str

    authnContextDeclRefs?: [str]

    backchannelSupported?: bool

    displayName?: str

    enabled?: bool

    entityId?: str

    extraConfig?: {str:str}

    firstBrokerLoginFlowAlias?: str

    forceAuthn?: bool

    guiOrder?: str

    hideOnLoginPage?: bool

    linkOnly?: bool

    loginHint?: str

    nameIdPolicyFormat?: str

    orgDomain?: str

    orgRedirectModeEmailMatches?: bool

    organizationId?: str

    organizationIdRef?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDRef

    organizationIdSelector?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDSelector

    postBindingAuthnRequest?: bool

    postBindingLogout?: bool

    postBindingResponse?: bool

    postBrokerLoginFlowAlias?: str

    principalAttribute?: str

    principalType?: str

    providerId?: str

    realm?: str

    realmRef?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmRef

    realmSelector?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmSelector

    signatureAlgorithm?: str

    signingCertificate?: str

    singleLogoutServiceUrl?: str

    singleSignOnServiceUrl?: str

    storeToken?: bool

    syncMode?: str

    trustEmail?: bool

    validateSignature?: bool

    wantAssertionsEncrypted?: bool

    wantAssertionsSigned?: bool

    xmlSignKeyInfoKeyNameTransformer?: str


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDRef:
    r"""
    Reference to a Organization in organization to populate organizationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDRefPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDSelector:
    r"""
    Selector for a Organization in organization to populate organizationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDSelectorPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderOrganizationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmRef:
    r"""
    Reference to a Realm in realm to populate realm.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmRefPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmSelector:
    r"""
    Selector for a Realm in realm to populate realm.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmSelectorPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecForProviderRealmSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    addReadTokenRoleOnCreate : bool, default is Undefined, optional
        When true, new users will be able to read stored tokens. This will automatically assign the broker.read-token role. Defaults to false.
        Enable/disable if new users can read any stored tokens. This assigns the broker.read-token role.
    alias : str, default is Undefined, optional
        The unique name of identity provider.
        The alias uniquely identifies an identity provider and it is also used to build the redirect uri.
    authenticateByDefault : bool, default is Undefined, optional
        Authenticate users by default. Defaults to false.
        Enable/disable authenticate users by default.
    authnContextClassRefs : [str], default is Undefined, optional
        Ordered list of requested AuthnContext ClassRefs.
        AuthnContext ClassRefs
    authnContextComparisonType : str, default is Undefined, optional
        Specifies the comparison method used to evaluate the requested context classes or statements.
        AuthnContext Comparison
    authnContextDeclRefs : [str], default is Undefined, optional
        Ordered list of requested AuthnContext DeclRefs.
        AuthnContext DeclRefs
    backchannelSupported : bool, default is Undefined, optional
        Does the external IDP support backchannel logout?. Defaults to false.
        Does the external IDP support backchannel logout?
    displayName : str, default is Undefined, optional
        The display name for the realm that is shown when logging in to the admin console.
        Friendly name for Identity Providers.
    enabled : bool, default is Undefined, optional
        When false, users and clients will not be able to access this realm. Defaults to true.
        Enable/disable this identity provider.
    entityId : str, default is Undefined, optional
        The Entity ID that will be used to uniquely identify this SAML Service Provider.
        The Entity ID that will be used to uniquely identify this SAML Service Provider.
    extraConfig : {str:str}, default is Undefined, optional
        A map of key/value pairs to add extra configuration to this identity provider. Use this attribute at your own risk, as custom attributes may conflict with top-level configuration attributes in future provider updates.
    firstBrokerLoginFlowAlias : str, default is Undefined, optional
        Alias of authentication flow, which is triggered after first login with this identity provider. Term 'First Login' means that there is not yet existing Keycloak account linked with the authenticated identity provider account. Defaults to first broker login.
        Alias of authentication flow, which is triggered after first login with this identity provider. Term 'First Login' means that there is not yet existing Keycloak account linked with the authenticated identity provider account.
    forceAuthn : bool, default is Undefined, optional
        Indicates whether the identity provider must authenticate the presenter directly rather than rely on a previous security context.
        Require Force Authn.
    guiOrder : str, default is Undefined, optional
        A number defining the order of this identity provider in the GUI.
        GUI Order
    hideOnLoginPage : bool, default is Undefined, optional
        If hidden, then login with this provider is possible only if requested explicitly, e.g. using the 'kc_idp_hint' parameter.
        Hide On Login Page.
    linkOnly : bool, default is Undefined, optional
        When true, users cannot log in using this provider, but their existing accounts will be linked when possible. Defaults to false.
        If true, users cannot log in through this provider.  They can only link to this provider.  This is useful if you don't want to allow login from the provider, but want to integrate with a provider
    loginHint : str, default is Undefined, optional
        Login Hint.
    nameIdPolicyFormat : str, default is Undefined, optional
        Specifies the URI reference corresponding to a name identifier format. Defaults to empty.
        Name ID Policy Format.
    orgDomain : str, default is Undefined, optional
        The organization domain to associate this identity provider with. It is used to map users to an organization based on their email domain and to authenticate them accordingly in the scope of the organization.
    orgRedirectModeEmailMatches : bool, default is Undefined, optional
        Indicates whether to automatically redirect users to this identity provider when email domain matches domain.
    organizationId : str, default is Undefined, optional
        The ID of the organization to link this identity provider to.
        ID of organization with which this identity is linked.
    organizationIdRef : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDRef, default is Undefined, optional
        organization Id ref
    organizationIdSelector : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDSelector, default is Undefined, optional
        organization Id selector
    postBindingAuthnRequest : bool, default is Undefined, optional
        Indicates whether the AuthnRequest must be sent using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Authn Request.
    postBindingLogout : bool, default is Undefined, optional
        Indicates whether to respond to requests using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Logout.
    postBindingResponse : bool, default is Undefined, optional
        Indicates whether to respond to requests using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Response.
    postBrokerLoginFlowAlias : str, default is Undefined, optional
        Alias of authentication flow, which is triggered after each login with this identity provider. Useful if you want additional verification of each user authenticated with this identity provider (for example OTP). Leave this empty if you don't want any additional authenticators to be triggered after login with this identity provider. Also note, that authenticator implementations must assume that user is already set in ClientSession as identity provider already set it. Defaults to empty.
        Alias of authentication flow, which is triggered after each login with this identity provider. Useful if you want additional verification of each user authenticated with this identity provider (for example OTP). Leave this empty if you don't want any additional authenticators to be triggered after login with this identity provider. Also note, that authenticator implementations must assume that user is already set in ClientSession as identity provider already set it.
    principalAttribute : str, default is Undefined, optional
        The principal attribute.
        Principal Attribute
    principalType : str, default is Undefined, optional
        The principal type. Can be one of SUBJECT, ATTRIBUTE or FRIENDLY_ATTRIBUTE.
        Principal Type
    providerId : str, default is Undefined, optional
        The ID of the identity provider to use. Defaults to saml, which should be used unless you have extended Keycloak and provided your own implementation.
        provider id, is always saml, unless you have a custom implementation
    realm : str, default is Undefined, optional
        The name of the realm. This is unique across Keycloak.
        Realm Name
    realmRef : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmRef, default is Undefined, optional
        realm ref
    realmSelector : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmSelector, default is Undefined, optional
        realm selector
    signatureAlgorithm : str, default is Undefined, optional
        Signing Algorithm. Defaults to empty.
        Signing Algorithm.
    signingCertificate : str, default is Undefined, optional
        Signing Certificate.
        Signing Certificate.
    singleLogoutServiceUrl : str, default is Undefined, optional
        The Url that must be used to send logout requests.
        Logout URL.
    singleSignOnServiceUrl : str, default is Undefined, optional
        The Url that must be used to send authentication requests (SAML AuthnRequest).
        SSO Logout URL.
    storeToken : bool, default is Undefined, optional
        When true, tokens will be stored after authenticating users. Defaults to true.
        Enable/disable if tokens must be stored after authenticating users.
    syncMode : str, default is Undefined, optional
        The default sync mode to use for all mappers attached to this identity provider. Can be one of IMPORT, FORCE, or LEGACY.
        Sync Mode
    trustEmail : bool, default is Undefined, optional
        When true, email addresses for users in this provider will automatically be verified regardless of the realm's email verification policy. Defaults to false.
        If enabled then email provided by this provider is not verified even if verification is enabled for the realm.
    validateSignature : bool, default is Undefined, optional
        Enable/disable signature validation of SAML responses.
        Enable/disable signature validation of SAML responses.
    wantAssertionsEncrypted : bool, default is Undefined, optional
        Indicates whether this service provider expects an encrypted Assertion.
        Want Assertions Encrypted.
    wantAssertionsSigned : bool, default is Undefined, optional
        Indicates whether this service provider expects a signed Assertion.
        Want Assertions Signed.
    xmlSignKeyInfoKeyNameTransformer : str, default is Undefined, optional
        The SAML signature key name. Can be one of NONE, KEY_ID, or CERT_SUBJECT.
        Sign Key Transformer.
    """


    addReadTokenRoleOnCreate?: bool

    alias?: str

    authenticateByDefault?: bool

    authnContextClassRefs?: [str]

    authnContextComparisonType?: str

    authnContextDeclRefs?: [str]

    backchannelSupported?: bool

    displayName?: str

    enabled?: bool

    entityId?: str

    extraConfig?: {str:str}

    firstBrokerLoginFlowAlias?: str

    forceAuthn?: bool

    guiOrder?: str

    hideOnLoginPage?: bool

    linkOnly?: bool

    loginHint?: str

    nameIdPolicyFormat?: str

    orgDomain?: str

    orgRedirectModeEmailMatches?: bool

    organizationId?: str

    organizationIdRef?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDRef

    organizationIdSelector?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDSelector

    postBindingAuthnRequest?: bool

    postBindingLogout?: bool

    postBindingResponse?: bool

    postBrokerLoginFlowAlias?: str

    principalAttribute?: str

    principalType?: str

    providerId?: str

    realm?: str

    realmRef?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmRef

    realmSelector?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmSelector

    signatureAlgorithm?: str

    signingCertificate?: str

    singleLogoutServiceUrl?: str

    singleSignOnServiceUrl?: str

    storeToken?: bool

    syncMode?: str

    trustEmail?: bool

    validateSignature?: bool

    wantAssertionsEncrypted?: bool

    wantAssertionsSigned?: bool

    xmlSignKeyInfoKeyNameTransformer?: str


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDRef:
    r"""
    Reference to a Organization in organization to populate organizationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDRefPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDSelector:
    r"""
    Selector for a Organization in organization to populate organizationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDSelectorPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderOrganizationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmRef:
    r"""
    Reference to a Realm in realm to populate realm.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmRefPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmSelector:
    r"""
    Selector for a Realm in realm to populate realm.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmSelectorPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecInitProviderRealmSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRefPolicy


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatus:
    r"""
    IdentityProviderStatus defines the observed state of IdentityProvider.

    Attributes
    ----------
    atProvider : SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatusAtProvider

    conditions?: [SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatusConditionsItems0]

    observedGeneration?: int


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatusAtProvider:
    r"""
    saml keycloak crossplane io v1alpha1 identity provider status at provider

    Attributes
    ----------
    addReadTokenRoleOnCreate : bool, default is Undefined, optional
        When true, new users will be able to read stored tokens. This will automatically assign the broker.read-token role. Defaults to false.
        Enable/disable if new users can read any stored tokens. This assigns the broker.read-token role.
    alias : str, default is Undefined, optional
        The unique name of identity provider.
        The alias uniquely identifies an identity provider and it is also used to build the redirect uri.
    authenticateByDefault : bool, default is Undefined, optional
        Authenticate users by default. Defaults to false.
        Enable/disable authenticate users by default.
    authnContextClassRefs : [str], default is Undefined, optional
        Ordered list of requested AuthnContext ClassRefs.
        AuthnContext ClassRefs
    authnContextComparisonType : str, default is Undefined, optional
        Specifies the comparison method used to evaluate the requested context classes or statements.
        AuthnContext Comparison
    authnContextDeclRefs : [str], default is Undefined, optional
        Ordered list of requested AuthnContext DeclRefs.
        AuthnContext DeclRefs
    backchannelSupported : bool, default is Undefined, optional
        Does the external IDP support backchannel logout?. Defaults to false.
        Does the external IDP support backchannel logout?
    displayName : str, default is Undefined, optional
        The display name for the realm that is shown when logging in to the admin console.
        Friendly name for Identity Providers.
    enabled : bool, default is Undefined, optional
        When false, users and clients will not be able to access this realm. Defaults to true.
        Enable/disable this identity provider.
    entityId : str, default is Undefined, optional
        The Entity ID that will be used to uniquely identify this SAML Service Provider.
        The Entity ID that will be used to uniquely identify this SAML Service Provider.
    extraConfig : {str:str}, default is Undefined, optional
        A map of key/value pairs to add extra configuration to this identity provider. Use this attribute at your own risk, as custom attributes may conflict with top-level configuration attributes in future provider updates.
    firstBrokerLoginFlowAlias : str, default is Undefined, optional
        Alias of authentication flow, which is triggered after first login with this identity provider. Term 'First Login' means that there is not yet existing Keycloak account linked with the authenticated identity provider account. Defaults to first broker login.
        Alias of authentication flow, which is triggered after first login with this identity provider. Term 'First Login' means that there is not yet existing Keycloak account linked with the authenticated identity provider account.
    forceAuthn : bool, default is Undefined, optional
        Indicates whether the identity provider must authenticate the presenter directly rather than rely on a previous security context.
        Require Force Authn.
    guiOrder : str, default is Undefined, optional
        A number defining the order of this identity provider in the GUI.
        GUI Order
    hideOnLoginPage : bool, default is Undefined, optional
        If hidden, then login with this provider is possible only if requested explicitly, e.g. using the 'kc_idp_hint' parameter.
        Hide On Login Page.
    id : str, default is Undefined, optional
        id
    internalId : str, default is Undefined, optional
        Internal Identity Provider Id
    linkOnly : bool, default is Undefined, optional
        When true, users cannot log in using this provider, but their existing accounts will be linked when possible. Defaults to false.
        If true, users cannot log in through this provider.  They can only link to this provider.  This is useful if you don't want to allow login from the provider, but want to integrate with a provider
    loginHint : str, default is Undefined, optional
        Login Hint.
    nameIdPolicyFormat : str, default is Undefined, optional
        Specifies the URI reference corresponding to a name identifier format. Defaults to empty.
        Name ID Policy Format.
    orgDomain : str, default is Undefined, optional
        The organization domain to associate this identity provider with. It is used to map users to an organization based on their email domain and to authenticate them accordingly in the scope of the organization.
    orgRedirectModeEmailMatches : bool, default is Undefined, optional
        Indicates whether to automatically redirect users to this identity provider when email domain matches domain.
    organizationId : str, default is Undefined, optional
        The ID of the organization to link this identity provider to.
        ID of organization with which this identity is linked.
    postBindingAuthnRequest : bool, default is Undefined, optional
        Indicates whether the AuthnRequest must be sent using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Authn Request.
    postBindingLogout : bool, default is Undefined, optional
        Indicates whether to respond to requests using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Logout.
    postBindingResponse : bool, default is Undefined, optional
        Indicates whether to respond to requests using HTTP-POST binding. If false, HTTP-REDIRECT binding will be used.
        Post Binding Response.
    postBrokerLoginFlowAlias : str, default is Undefined, optional
        Alias of authentication flow, which is triggered after each login with this identity provider. Useful if you want additional verification of each user authenticated with this identity provider (for example OTP). Leave this empty if you don't want any additional authenticators to be triggered after login with this identity provider. Also note, that authenticator implementations must assume that user is already set in ClientSession as identity provider already set it. Defaults to empty.
        Alias of authentication flow, which is triggered after each login with this identity provider. Useful if you want additional verification of each user authenticated with this identity provider (for example OTP). Leave this empty if you don't want any additional authenticators to be triggered after login with this identity provider. Also note, that authenticator implementations must assume that user is already set in ClientSession as identity provider already set it.
    principalAttribute : str, default is Undefined, optional
        The principal attribute.
        Principal Attribute
    principalType : str, default is Undefined, optional
        The principal type. Can be one of SUBJECT, ATTRIBUTE or FRIENDLY_ATTRIBUTE.
        Principal Type
    providerId : str, default is Undefined, optional
        The ID of the identity provider to use. Defaults to saml, which should be used unless you have extended Keycloak and provided your own implementation.
        provider id, is always saml, unless you have a custom implementation
    realm : str, default is Undefined, optional
        The name of the realm. This is unique across Keycloak.
        Realm Name
    signatureAlgorithm : str, default is Undefined, optional
        Signing Algorithm. Defaults to empty.
        Signing Algorithm.
    signingCertificate : str, default is Undefined, optional
        Signing Certificate.
        Signing Certificate.
    singleLogoutServiceUrl : str, default is Undefined, optional
        The Url that must be used to send logout requests.
        Logout URL.
    singleSignOnServiceUrl : str, default is Undefined, optional
        The Url that must be used to send authentication requests (SAML AuthnRequest).
        SSO Logout URL.
    storeToken : bool, default is Undefined, optional
        When true, tokens will be stored after authenticating users. Defaults to true.
        Enable/disable if tokens must be stored after authenticating users.
    syncMode : str, default is Undefined, optional
        The default sync mode to use for all mappers attached to this identity provider. Can be one of IMPORT, FORCE, or LEGACY.
        Sync Mode
    trustEmail : bool, default is Undefined, optional
        When true, email addresses for users in this provider will automatically be verified regardless of the realm's email verification policy. Defaults to false.
        If enabled then email provided by this provider is not verified even if verification is enabled for the realm.
    validateSignature : bool, default is Undefined, optional
        Enable/disable signature validation of SAML responses.
        Enable/disable signature validation of SAML responses.
    wantAssertionsEncrypted : bool, default is Undefined, optional
        Indicates whether this service provider expects an encrypted Assertion.
        Want Assertions Encrypted.
    wantAssertionsSigned : bool, default is Undefined, optional
        Indicates whether this service provider expects a signed Assertion.
        Want Assertions Signed.
    xmlSignKeyInfoKeyNameTransformer : str, default is Undefined, optional
        The SAML signature key name. Can be one of NONE, KEY_ID, or CERT_SUBJECT.
        Sign Key Transformer.
    """


    addReadTokenRoleOnCreate?: bool

    alias?: str

    authenticateByDefault?: bool

    authnContextClassRefs?: [str]

    authnContextComparisonType?: str

    authnContextDeclRefs?: [str]

    backchannelSupported?: bool

    displayName?: str

    enabled?: bool

    entityId?: str

    extraConfig?: {str:str}

    firstBrokerLoginFlowAlias?: str

    forceAuthn?: bool

    guiOrder?: str

    hideOnLoginPage?: bool

    id?: str

    internalId?: str

    linkOnly?: bool

    loginHint?: str

    nameIdPolicyFormat?: str

    orgDomain?: str

    orgRedirectModeEmailMatches?: bool

    organizationId?: str

    postBindingAuthnRequest?: bool

    postBindingLogout?: bool

    postBindingResponse?: bool

    postBrokerLoginFlowAlias?: str

    principalAttribute?: str

    principalType?: str

    providerId?: str

    realm?: str

    signatureAlgorithm?: str

    signingCertificate?: str

    singleLogoutServiceUrl?: str

    singleSignOnServiceUrl?: str

    storeToken?: bool

    syncMode?: str

    trustEmail?: bool

    validateSignature?: bool

    wantAssertionsEncrypted?: bool

    wantAssertionsSigned?: bool

    xmlSignKeyInfoKeyNameTransformer?: str


schema SamlKeycloakCrossplaneIoV1alpha1IdentityProviderStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


