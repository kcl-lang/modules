"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CompositeAlarm:
    r"""
    CompositeAlarm is the Schema for the CompositeAlarms API. Provides a CloudWatch Composite Alarm resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatch.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CompositeAlarm", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpec, default is Undefined, required
        spec
    status : CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatch.aws.upbound.io/v1beta1" = "cloudwatch.aws.upbound.io/v1beta1"

    kind: "CompositeAlarm" = "CompositeAlarm"

    metadata?: v1.ObjectMeta

    spec: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpec

    status?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatus


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpec:
    r"""
    CompositeAlarmSpec defines the desired state of CompositeAlarm

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProvider

    initProvider?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecWriteConnectionSecretToRef


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProvider:
    r"""
    cloudwatch aws upbound io v1beta1 composite alarm spec for provider

    Attributes
    ----------
    actionsEnabled : bool, default is Undefined, optional
        Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. Defaults to true.
    actionsSuppressor : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderActionsSuppressorItems0], default is Undefined, optional
        Actions will be suppressed if the suppressor alarm is in the ALARM state.
    alarmActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    alarmActionsRefs : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsRefsItems0], default is Undefined, optional
        References to Topic in sns to populate alarmActions.
    alarmActionsSelector : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsSelector, default is Undefined, optional
        alarm actions selector
    alarmDescription : str, default is Undefined, optional
        The description for the composite alarm.
    alarmRule : str, default is Undefined, optional
        An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For syntax, see Creating a Composite Alarm. The maximum length is 10240 characters.
    insufficientDataActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    okActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    okActionsRefs : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsRefsItems0], default is Undefined, optional
        References to Topic in sns to populate okActions.
    okActionsSelector : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsSelector, default is Undefined, optional
        ok actions selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    actionsEnabled?: bool

    actionsSuppressor?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderActionsSuppressorItems0]

    alarmActions?: [str]

    alarmActionsRefs?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsRefsItems0]

    alarmActionsSelector?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsSelector

    alarmDescription?: str

    alarmRule?: str

    insufficientDataActions?: [str]

    okActions?: [str]

    okActionsRefs?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsRefsItems0]

    okActionsSelector?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsSelector

    region: str

    tags?: {str:str}


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderActionsSuppressorItems0:
    r"""
    cloudwatch aws upbound io v1beta1 composite alarm spec for provider actions suppressor items0

    Attributes
    ----------
    alarm : str, default is Undefined, optional
        Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
    extensionPeriod : float, default is Undefined, optional
        The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the ALARM state. After this time, the composite alarm performs its actions.
    waitPeriod : float, default is Undefined, optional
        The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the ALARM state. After this time, the composite alarm performs its actions.
    """


    alarm?: str

    extensionPeriod?: float

    waitPeriod?: float


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsSelector:
    r"""
    Selector for a list of Topic in sns to populate alarmActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderAlarmActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsSelector:
    r"""
    Selector for a list of Topic in sns to populate okActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecForProviderOkActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    actionsEnabled : bool, default is Undefined, optional
        Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. Defaults to true.
    actionsSuppressor : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderActionsSuppressorItems0], default is Undefined, optional
        Actions will be suppressed if the suppressor alarm is in the ALARM state.
    alarmActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    alarmActionsRefs : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsRefsItems0], default is Undefined, optional
        References to Topic in sns to populate alarmActions.
    alarmActionsSelector : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsSelector, default is Undefined, optional
        alarm actions selector
    alarmDescription : str, default is Undefined, optional
        The description for the composite alarm.
    alarmRule : str, default is Undefined, optional
        An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For syntax, see Creating a Composite Alarm. The maximum length is 10240 characters.
    insufficientDataActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    okActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    okActionsRefs : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsRefsItems0], default is Undefined, optional
        References to Topic in sns to populate okActions.
    okActionsSelector : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsSelector, default is Undefined, optional
        ok actions selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    actionsEnabled?: bool

    actionsSuppressor?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderActionsSuppressorItems0]

    alarmActions?: [str]

    alarmActionsRefs?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsRefsItems0]

    alarmActionsSelector?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsSelector

    alarmDescription?: str

    alarmRule?: str

    insufficientDataActions?: [str]

    okActions?: [str]

    okActionsRefs?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsRefsItems0]

    okActionsSelector?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsSelector

    tags?: {str:str}


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderActionsSuppressorItems0:
    r"""
    cloudwatch aws upbound io v1beta1 composite alarm spec init provider actions suppressor items0

    Attributes
    ----------
    alarm : str, default is Undefined, optional
        Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
    extensionPeriod : float, default is Undefined, optional
        The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the ALARM state. After this time, the composite alarm performs its actions.
    waitPeriod : float, default is Undefined, optional
        The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the ALARM state. After this time, the composite alarm performs its actions.
    """


    alarm?: str

    extensionPeriod?: float

    waitPeriod?: float


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsSelector:
    r"""
    Selector for a list of Topic in sns to populate alarmActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderAlarmActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsSelector:
    r"""
    Selector for a list of Topic in sns to populate okActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecInitProviderOkActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecProviderConfigRefPolicy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatus:
    r"""
    CompositeAlarmStatus defines the observed state of CompositeAlarm.

    Attributes
    ----------
    atProvider : CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusAtProvider

    conditions?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusAtProvider:
    r"""
    cloudwatch aws upbound io v1beta1 composite alarm status at provider

    Attributes
    ----------
    actionsEnabled : bool, default is Undefined, optional
        Indicates whether actions should be executed during any changes to the alarm state of the composite alarm. Defaults to true.
    actionsSuppressor : [CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusAtProviderActionsSuppressorItems0], default is Undefined, optional
        Actions will be suppressed if the suppressor alarm is in the ALARM state.
    alarmActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to the ALARM state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    alarmDescription : str, default is Undefined, optional
        The description for the composite alarm.
    alarmRule : str, default is Undefined, optional
        An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For syntax, see Creating a Composite Alarm. The maximum length is 10240 characters.
    arn : str, default is Undefined, optional
        The ARN of the composite alarm.
    id : str, default is Undefined, optional
        The ID of the composite alarm resource, which is equivalent to its alarm_name.
    insufficientDataActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to the INSUFFICIENT_DATA state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    okActions : [str], default is Undefined, optional
        The set of actions to execute when this alarm transitions to an OK state from any other state. Each action is specified as an ARN. Up to 5 actions are allowed.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    actionsEnabled?: bool

    actionsSuppressor?: [CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusAtProviderActionsSuppressorItems0]

    alarmActions?: [str]

    alarmDescription?: str

    alarmRule?: str

    arn?: str

    id?: str

    insufficientDataActions?: [str]

    okActions?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusAtProviderActionsSuppressorItems0:
    r"""
    cloudwatch aws upbound io v1beta1 composite alarm status at provider actions suppressor items0

    Attributes
    ----------
    alarm : str, default is Undefined, optional
        Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
    extensionPeriod : float, default is Undefined, optional
        The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the ALARM state. After this time, the composite alarm performs its actions.
    waitPeriod : float, default is Undefined, optional
        The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the ALARM state. After this time, the composite alarm performs its actions.
    """


    alarm?: str

    extensionPeriod?: float

    waitPeriod?: float


schema CloudwatchAwsUpboundIoV1beta1CompositeAlarmStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


