"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IntegrationResponse:
    r"""
    IntegrationResponse is the Schema for the IntegrationResponses API. Manages an Amazon API Gateway Version 2 integration response.

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IntegrationResponse", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.upbound.io/v1beta1" = "apigatewayv2.aws.upbound.io/v1beta1"

    kind: "IntegrationResponse" = "IntegrationResponse"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpec

    status?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatus


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpec:
    r"""
    IntegrationResponseSpec defines the desired state of IntegrationResponse

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProvider, default is Undefined, required
        for provider
    initProvider : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProvider

    initProvider?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecProviderConfigRef

    publishConnectionDetailsTo?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProvider:
    r"""
    apigatewayv2 aws upbound io v1beta1 integration response spec for provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API identifier.
    apiIdRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    contentHandlingStrategy : str, default is Undefined, optional
        How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT.
    integrationId : str, default is Undefined, optional
        Identifier of the aws_apigatewayv2_integration.
    integrationIdRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDRef, default is Undefined, optional
        integration Id ref
    integrationIdSelector : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDSelector, default is Undefined, optional
        integration Id selector
    integrationResponseKey : str, default is Undefined, optional
        Integration response key.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    responseTemplates : {str:str}, default is Undefined, optional
        Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
    templateSelectionExpression : str, default is Undefined, optional
        The template selection expression for the integration response.
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDSelector

    contentHandlingStrategy?: str

    integrationId?: str

    integrationIdRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDRef

    integrationIdSelector?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDSelector

    integrationResponseKey?: str

    region: str

    responseTemplates?: {str:str}

    templateSelectionExpression?: str


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDRef:
    r"""
    Reference to a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDSelector:
    r"""
    Selector for a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDRef:
    r"""
    Reference to a Integration in apigatewayv2 to populate integrationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDSelector:
    r"""
    Selector for a Integration in apigatewayv2 to populate integrationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecForProviderIntegrationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API identifier.
    apiIdRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    contentHandlingStrategy : str, default is Undefined, optional
        How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT.
    integrationId : str, default is Undefined, optional
        Identifier of the aws_apigatewayv2_integration.
    integrationIdRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDRef, default is Undefined, optional
        integration Id ref
    integrationIdSelector : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDSelector, default is Undefined, optional
        integration Id selector
    integrationResponseKey : str, default is Undefined, optional
        Integration response key.
    responseTemplates : {str:str}, default is Undefined, optional
        Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
    templateSelectionExpression : str, default is Undefined, optional
        The template selection expression for the integration response.
    """


    apiId?: str

    apiIdRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDSelector

    contentHandlingStrategy?: str

    integrationId?: str

    integrationIdRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDRef

    integrationIdSelector?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDSelector

    integrationResponseKey?: str

    responseTemplates?: {str:str}

    templateSelectionExpression?: str


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDRef:
    r"""
    Reference to a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDSelector:
    r"""
    Selector for a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDRef:
    r"""
    Reference to a Integration in apigatewayv2 to populate integrationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDSelector:
    r"""
    Selector for a Integration in apigatewayv2 to populate integrationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecInitProviderIntegrationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecProviderConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatus:
    r"""
    IntegrationResponseStatus defines the observed state of IntegrationResponse.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatusAtProvider

    conditions?: [Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatusConditionsItems0]

    observedGeneration?: int


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatusAtProvider:
    r"""
    apigatewayv2 aws upbound io v1beta1 integration response status at provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API identifier.
    contentHandlingStrategy : str, default is Undefined, optional
        How to handle response payload content type conversions. Valid values: CONVERT_TO_BINARY, CONVERT_TO_TEXT.
    id : str, default is Undefined, optional
        Integration response identifier.
    integrationId : str, default is Undefined, optional
        Identifier of the aws_apigatewayv2_integration.
    integrationResponseKey : str, default is Undefined, optional
        Integration response key.
    responseTemplates : {str:str}, default is Undefined, optional
        Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
    templateSelectionExpression : str, default is Undefined, optional
        The template selection expression for the integration response.
    """


    apiId?: str

    contentHandlingStrategy?: str

    id?: str

    integrationId?: str

    integrationResponseKey?: str

    responseTemplates?: {str:str}

    templateSelectionExpression?: str


schema Apigatewayv2AwsUpboundIoV1beta1IntegrationResponseStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


