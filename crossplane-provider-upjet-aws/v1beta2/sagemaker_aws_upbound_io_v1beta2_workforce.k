"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Workforce:
    r"""
    Workforce is the Schema for the Workforces API. Provides a SageMaker Workforce resource.

    Attributes
    ----------
    apiVersion : str, default is "sagemaker.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Workforce", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SagemakerAwsUpboundIoV1beta2WorkforceSpec, default is Undefined, required
        spec
    status : SagemakerAwsUpboundIoV1beta2WorkforceStatus, default is Undefined, optional
        status
    """


    apiVersion: "sagemaker.aws.upbound.io/v1beta2" = "sagemaker.aws.upbound.io/v1beta2"

    kind: "Workforce" = "Workforce"

    metadata?: v1.ObjectMeta

    spec: SagemakerAwsUpboundIoV1beta2WorkforceSpec

    status?: SagemakerAwsUpboundIoV1beta2WorkforceStatus


schema SagemakerAwsUpboundIoV1beta2WorkforceSpec:
    r"""
    WorkforceSpec defines the desired state of Workforce

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProvider, default is Undefined, required
        for provider
    initProvider : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProvider

    initProvider?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecProviderConfigRef

    publishConnectionDetailsTo?: SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecWriteConnectionSecretToRef


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProvider:
    r"""
    sagemaker aws upbound io v1beta2 workforce spec for provider

    Attributes
    ----------
    cognitoConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfig, default is Undefined, optional
        cognito config
    oidcConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderOidcConfig, default is Undefined, optional
        oidc config
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    sourceIpConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderSourceIPConfig, default is Undefined, optional
        source Ip config
    workforceVpcConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderWorkforceVpcConfig, default is Undefined, optional
        workforce vpc config
    """


    cognitoConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfig

    oidcConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderOidcConfig

    region: str

    sourceIpConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderSourceIPConfig

    workforceVpcConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderWorkforceVpcConfig


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfig:
    r"""
    Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The client ID for your Amazon Cognito user pool.
    clientIdRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDSelector, default is Undefined, optional
        client Id selector
    userPool : str, default is Undefined, optional
        ID for your Amazon Cognito user pool.
    userPoolRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolRef, default is Undefined, optional
        user pool ref
    userPoolSelector : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolSelector, default is Undefined, optional
        user pool selector
    """


    clientId?: str

    clientIdRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDRef

    clientIdSelector?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDSelector

    userPool?: str

    userPoolRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolRef

    userPoolSelector?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolSelector


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDRef:
    r"""
    Reference to a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDRefPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDSelector:
    r"""
    Selector for a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolRef:
    r"""
    Reference to a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolRefPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolSelector:
    r"""
    Selector for a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolSelectorPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderCognitoConfigUserPoolSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderOidcConfig:
    r"""
    Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        A string to string map of identifiers specific to the custom identity provider (IdP) being used.
    authorizationEndpoint : str, default is Undefined, optional
        The OIDC IdP authorization endpoint used to configure your private workforce.
    clientId : str, default is Undefined, optional
        The client ID for your Amazon Cognito user pool.
    clientSecretSecretRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderOidcConfigClientSecretSecretRef, default is Undefined, optional
        client secret secret ref
    issuer : str, default is Undefined, optional
        The OIDC IdP issuer used to configure your private workforce.
    jwksUri : str, default is Undefined, optional
        The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
    logoutEndpoint : str, default is Undefined, optional
        The OIDC IdP logout endpoint used to configure your private workforce.
    scope : str, default is Undefined, optional
        An array of string identifiers used to refer to the specific pieces of user data or claims that the client application wants to access.
    tokenEndpoint : str, default is Undefined, optional
        The OIDC IdP token endpoint used to configure your private workforce.
    userInfoEndpoint : str, default is Undefined, optional
        The OIDC IdP user information endpoint used to configure your private workforce.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    clientSecretSecretRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderOidcConfigClientSecretSecretRef

    issuer?: str

    jwksUri?: str

    logoutEndpoint?: str

    scope?: str

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderOidcConfigClientSecretSecretRef:
    r"""
    The OIDC IdP client secret used to configure your private workforce.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderSourceIPConfig:
    r"""
    A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        A list of up to 10 CIDR values.
    """


    cidrs?: [str]


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecForProviderWorkforceVpcConfig:
    r"""
    configure a workforce using VPC. see Workforce VPC Config details below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
    subnets : [str], default is Undefined, optional
        The ID of the subnets in the VPC that you want to connect.
    vpcId : str, default is Undefined, optional
        The ID of the VPC that the workforce uses for communication.
    """


    securityGroupIds?: [str]

    subnets?: [str]

    vpcId?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cognitoConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfig, default is Undefined, optional
        cognito config
    oidcConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderOidcConfig, default is Undefined, optional
        oidc config
    sourceIpConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderSourceIPConfig, default is Undefined, optional
        source Ip config
    workforceVpcConfig : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderWorkforceVpcConfig, default is Undefined, optional
        workforce vpc config
    """


    cognitoConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfig

    oidcConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderOidcConfig

    sourceIpConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderSourceIPConfig

    workforceVpcConfig?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderWorkforceVpcConfig


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfig:
    r"""
    Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The client ID for your Amazon Cognito user pool.
    clientIdRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDSelector, default is Undefined, optional
        client Id selector
    userPool : str, default is Undefined, optional
        ID for your Amazon Cognito user pool.
    userPoolRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolRef, default is Undefined, optional
        user pool ref
    userPoolSelector : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolSelector, default is Undefined, optional
        user pool selector
    """


    clientId?: str

    clientIdRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDRef

    clientIdSelector?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDSelector

    userPool?: str

    userPoolRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolRef

    userPoolSelector?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolSelector


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDRef:
    r"""
    Reference to a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDRefPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDSelector:
    r"""
    Selector for a UserPoolClient in cognitoidp to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolRef:
    r"""
    Reference to a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolRefPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolSelector:
    r"""
    Selector for a UserPoolDomain in cognitoidp to populate userPool.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolSelectorPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderCognitoConfigUserPoolSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderOidcConfig:
    r"""
    Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        A string to string map of identifiers specific to the custom identity provider (IdP) being used.
    authorizationEndpoint : str, default is Undefined, optional
        The OIDC IdP authorization endpoint used to configure your private workforce.
    clientId : str, default is Undefined, optional
        The client ID for your Amazon Cognito user pool.
    clientSecretSecretRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderOidcConfigClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    issuer : str, default is Undefined, optional
        The OIDC IdP issuer used to configure your private workforce.
    jwksUri : str, default is Undefined, optional
        The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
    logoutEndpoint : str, default is Undefined, optional
        The OIDC IdP logout endpoint used to configure your private workforce.
    scope : str, default is Undefined, optional
        An array of string identifiers used to refer to the specific pieces of user data or claims that the client application wants to access.
    tokenEndpoint : str, default is Undefined, optional
        The OIDC IdP token endpoint used to configure your private workforce.
    userInfoEndpoint : str, default is Undefined, optional
        The OIDC IdP user information endpoint used to configure your private workforce.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    clientSecretSecretRef: SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderOidcConfigClientSecretSecretRef

    issuer?: str

    jwksUri?: str

    logoutEndpoint?: str

    scope?: str

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderOidcConfigClientSecretSecretRef:
    r"""
    The OIDC IdP client secret used to configure your private workforce.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderSourceIPConfig:
    r"""
    A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        A list of up to 10 CIDR values.
    """


    cidrs?: [str]


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecInitProviderWorkforceVpcConfig:
    r"""
    configure a workforce using VPC. see Workforce VPC Config details below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
    subnets : [str], default is Undefined, optional
        The ID of the subnets in the VPC that you want to connect.
    vpcId : str, default is Undefined, optional
        The ID of the VPC that the workforce uses for communication.
    """


    securityGroupIds?: [str]

    subnets?: [str]

    vpcId?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecProviderConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToConfigRef

    metadata?: SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToMetadata

    name: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta2WorkforceStatus:
    r"""
    WorkforceStatus defines the observed state of Workforce.

    Attributes
    ----------
    atProvider : SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SagemakerAwsUpboundIoV1beta2WorkforceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProvider

    conditions?: [SagemakerAwsUpboundIoV1beta2WorkforceStatusConditionsItems0]

    observedGeneration?: int


schema SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProvider:
    r"""
    sagemaker aws upbound io v1beta2 workforce status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) assigned by AWS to this Workforce.
    cognitoConfig : SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderCognitoConfig, default is Undefined, optional
        cognito config
    id : str, default is Undefined, optional
        The name of the Workforce.
    oidcConfig : SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderOidcConfig, default is Undefined, optional
        oidc config
    sourceIpConfig : SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderSourceIPConfig, default is Undefined, optional
        source Ip config
    subdomain : str, default is Undefined, optional
        The subdomain for your OIDC Identity Provider.
    workforceVpcConfig : SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderWorkforceVpcConfig, default is Undefined, optional
        workforce vpc config
    """


    arn?: str

    cognitoConfig?: SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderCognitoConfig

    id?: str

    oidcConfig?: SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderOidcConfig

    sourceIpConfig?: SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderSourceIPConfig

    subdomain?: str

    workforceVpcConfig?: SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderWorkforceVpcConfig


schema SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderCognitoConfig:
    r"""
    Use this parameter to configure an Amazon Cognito private workforce. A single Cognito workforce is created using and corresponds to a single Amazon Cognito user pool. Conflicts with oidc_config. see Cognito Config details below.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The client ID for your Amazon Cognito user pool.
    userPool : str, default is Undefined, optional
        ID for your Amazon Cognito user pool.
    """


    clientId?: str

    userPool?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderOidcConfig:
    r"""
    Use this parameter to configure a private workforce using your own OIDC Identity Provider. Conflicts with cognito_config. see OIDC Config details below.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        A string to string map of identifiers specific to the custom identity provider (IdP) being used.
    authorizationEndpoint : str, default is Undefined, optional
        The OIDC IdP authorization endpoint used to configure your private workforce.
    clientId : str, default is Undefined, optional
        The client ID for your Amazon Cognito user pool.
    issuer : str, default is Undefined, optional
        The OIDC IdP issuer used to configure your private workforce.
    jwksUri : str, default is Undefined, optional
        The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.
    logoutEndpoint : str, default is Undefined, optional
        The OIDC IdP logout endpoint used to configure your private workforce.
    scope : str, default is Undefined, optional
        An array of string identifiers used to refer to the specific pieces of user data or claims that the client application wants to access.
    tokenEndpoint : str, default is Undefined, optional
        The OIDC IdP token endpoint used to configure your private workforce.
    userInfoEndpoint : str, default is Undefined, optional
        The OIDC IdP user information endpoint used to configure your private workforce.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    issuer?: str

    jwksUri?: str

    logoutEndpoint?: str

    scope?: str

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderSourceIPConfig:
    r"""
    A list of IP address ranges Used to create an allow list of IP addresses for a private workforce. By default, a workforce isn't restricted to specific IP addresses. see Source Ip Config details below.

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        A list of up to 10 CIDR values.
    """


    cidrs?: [str]


schema SagemakerAwsUpboundIoV1beta2WorkforceStatusAtProviderWorkforceVpcConfig:
    r"""
    configure a workforce using VPC. see Workforce VPC Config details below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The VPC security group IDs. The security groups must be for the same VPC as specified in the subnet.
    subnets : [str], default is Undefined, optional
        The ID of the subnets in the VPC that you want to connect.
    vpcEndpointId : str, default is Undefined, optional
        The IDs for the VPC service endpoints of your VPC workforce.
    vpcId : str, default is Undefined, optional
        The ID of the VPC that the workforce uses for communication.
    """


    securityGroupIds?: [str]

    subnets?: [str]

    vpcEndpointId?: str

    vpcId?: str


schema SagemakerAwsUpboundIoV1beta2WorkforceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


