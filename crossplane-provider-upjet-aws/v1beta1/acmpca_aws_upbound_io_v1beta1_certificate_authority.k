"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CertificateAuthority:
    r"""
    CertificateAuthority is the Schema for the CertificateAuthoritys API. Provides a resource to manage AWS Certificate Manager Private Certificate Authorities

    Attributes
    ----------
    apiVersion : str, default is "acmpca.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CertificateAuthority", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpec, default is Undefined, required
        spec
    status : AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatus, default is Undefined, optional
        status
    """


    apiVersion: "acmpca.aws.upbound.io/v1beta1" = "acmpca.aws.upbound.io/v1beta1"

    kind: "CertificateAuthority" = "CertificateAuthority"

    metadata?: v1.ObjectMeta

    spec: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpec

    status?: AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatus


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpec:
    r"""
    CertificateAuthoritySpec defines the desired state of CertificateAuthority

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProvider, default is Undefined, required
        for provider
    initProvider : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProvider

    initProvider?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRef

    publishConnectionDetailsTo?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecWriteConnectionSecretToRef


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProvider:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec for provider

    Attributes
    ----------
    certificateAuthorityConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationItems0], default is Undefined, optional
        Nested argument containing algorithms and certificate subject information. Defined below.
    enabled : bool, default is Undefined, optional
        Whether the certificate authority is enabled or disabled. Defaults to true. Can only be disabled if the CA is in an ACTIVE state.
    keyStorageSecurityStandard : str, default is Undefined, optional
        Cryptographic key management compliance standard used for handling CA keys. Defaults to FIPS_140_2_LEVEL_3_OR_HIGHER. Valid values: FIPS_140_2_LEVEL_3_OR_HIGHER and FIPS_140_2_LEVEL_2_OR_HIGHER. Supported standard for each region can be found in the Storage and security compliance of AWS Private CA private keys Documentation.
    permanentDeletionTimeInDays : float, default is Undefined, optional
        Number of days to make a CA restorable after it has been deleted, must be between 7 to 30 days, with default to 30 days.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    revocationConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0], default is Undefined, optional
        Nested argument containing revocation configuration. Defined below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Type of the certificate authority. Defaults to SUBORDINATE. Valid values: ROOT and SUBORDINATE.
    usageMode : str, default is Undefined, optional
        Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days. Defaults to GENERAL_PURPOSE. Valid values: GENERAL_PURPOSE and SHORT_LIVED_CERTIFICATE.
    """


    certificateAuthorityConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationItems0]

    enabled?: bool

    keyStorageSecurityStandard?: str

    permanentDeletionTimeInDays?: float

    region: str

    revocationConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0]

    tags?: {str:str}

    $type?: str

    usageMode?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec for provider certificate authority configuration items0

    Attributes
    ----------
    keyAlgorithm : str, default is Undefined, optional
        Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the ACM PCA Documentation.
    signingAlgorithm : str, default is Undefined, optional
        Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the ACM PCA Documentation.
    subject : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationItems0SubjectItems0], default is Undefined, optional
        Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
    """


    keyAlgorithm?: str

    signingAlgorithm?: str

    subject?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationItems0SubjectItems0]


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderCertificateAuthorityConfigurationItems0SubjectItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec for provider certificate authority configuration items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        Fully qualified domain name (FQDN) associated with the certificate subject. Must be less than or equal to 64 characters in length.
    country : str, default is Undefined, optional
        Two digit code that specifies the country in which the certificate subject located. Must be less than or equal to 2 characters in length.
    distinguishedNameQualifier : str, default is Undefined, optional
        Disambiguating information for the certificate subject. Must be less than or equal to 64 characters in length.
    generationQualifier : str, default is Undefined, optional
        Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third. Must be less than or equal to 3 characters in length.
    givenName : str, default is Undefined, optional
        First name. Must be less than or equal to 16 characters in length.
    initials : str, default is Undefined, optional
        Concatenation that typically contains the first letter of the given_name, the first letter of the middle name if one exists, and the first letter of the surname. Must be less than or equal to 5 characters in length.
    locality : str, default is Undefined, optional
        Locality (such as a city or town) in which the certificate subject is located. Must be less than or equal to 128 characters in length.
    organization : str, default is Undefined, optional
        Legal name of the organization with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
    organizationalUnit : str, default is Undefined, optional
        Subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
    pseudonym : str, default is Undefined, optional
        Typically a shortened version of a longer given_name. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza. Must be less than or equal to 128 characters in length.
    state : str, default is Undefined, optional
        State in which the subject of the certificate is located. Must be less than or equal to 128 characters in length.
    surname : str, default is Undefined, optional
        Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first. Must be less than or equal to 40 characters in length.
    title : str, default is Undefined, optional
        Title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject. Must be less than or equal to 64 characters in length.
    """


    commonName?: str

    country?: str

    distinguishedNameQualifier?: str

    generationQualifier?: str

    givenName?: str

    initials?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    pseudonym?: str

    state?: str

    surname?: str

    title?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec for provider revocation configuration items0

    Attributes
    ----------
    crlConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0CrlConfigurationItems0], default is Undefined, optional
        Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
    ocspConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0OcspConfigurationItems0], default is Undefined, optional
        Nested argument containing configuration of
        the custom OCSP responder endpoint. Defined below.
    """


    crlConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0CrlConfigurationItems0]

    ocspConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0OcspConfigurationItems0]


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0CrlConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec for provider revocation configuration items0 crl configuration items0

    Attributes
    ----------
    customCname : str, default is Undefined, optional
        Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public. Must be less than or equal to 253 characters in length.
    enabled : bool, default is Undefined, optional
        Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to false.
    expirationInDays : float, default is Undefined, optional
        Number of days until a certificate expires. Must be between 1 and 5000.
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket that contains the CRL. If you do not provide a value for the custom_cname argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket. Must be between 3 and 255 characters in length.
    s3ObjectAcl : str, default is Undefined, optional
        Determines whether the CRL will be publicly readable or privately held in the CRL Amazon S3 bucket. Defaults to PUBLIC_READ.
    """


    customCname?: str

    enabled?: bool

    expirationInDays?: float

    s3BucketName?: str

    s3ObjectAcl?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecForProviderRevocationConfigurationItems0OcspConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec for provider revocation configuration items0 ocsp configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Boolean value that specifies whether a custom OCSP responder is enabled.
    ocspCustomCname : str, default is Undefined, optional
        CNAME specifying a customized OCSP domain. Note: The value of the CNAME must not include a protocol prefix such as "http://" or "https://".
    """


    enabled?: bool

    ocspCustomCname?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificateAuthorityConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderCertificateAuthorityConfigurationItems0], default is Undefined, optional
        Nested argument containing algorithms and certificate subject information. Defined below.
    enabled : bool, default is Undefined, optional
        Whether the certificate authority is enabled or disabled. Defaults to true. Can only be disabled if the CA is in an ACTIVE state.
    keyStorageSecurityStandard : str, default is Undefined, optional
        Cryptographic key management compliance standard used for handling CA keys. Defaults to FIPS_140_2_LEVEL_3_OR_HIGHER. Valid values: FIPS_140_2_LEVEL_3_OR_HIGHER and FIPS_140_2_LEVEL_2_OR_HIGHER. Supported standard for each region can be found in the Storage and security compliance of AWS Private CA private keys Documentation.
    permanentDeletionTimeInDays : float, default is Undefined, optional
        Number of days to make a CA restorable after it has been deleted, must be between 7 to 30 days, with default to 30 days.
    revocationConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0], default is Undefined, optional
        Nested argument containing revocation configuration. Defined below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Type of the certificate authority. Defaults to SUBORDINATE. Valid values: ROOT and SUBORDINATE.
    usageMode : str, default is Undefined, optional
        Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days. Defaults to GENERAL_PURPOSE. Valid values: GENERAL_PURPOSE and SHORT_LIVED_CERTIFICATE.
    """


    certificateAuthorityConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderCertificateAuthorityConfigurationItems0]

    enabled?: bool

    keyStorageSecurityStandard?: str

    permanentDeletionTimeInDays?: float

    revocationConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0]

    tags?: {str:str}

    $type?: str

    usageMode?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderCertificateAuthorityConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec init provider certificate authority configuration items0

    Attributes
    ----------
    keyAlgorithm : str, default is Undefined, optional
        Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the ACM PCA Documentation.
    signingAlgorithm : str, default is Undefined, optional
        Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the ACM PCA Documentation.
    subject : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderCertificateAuthorityConfigurationItems0SubjectItems0], default is Undefined, optional
        Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
    """


    keyAlgorithm?: str

    signingAlgorithm?: str

    subject?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderCertificateAuthorityConfigurationItems0SubjectItems0]


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderCertificateAuthorityConfigurationItems0SubjectItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec init provider certificate authority configuration items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        Fully qualified domain name (FQDN) associated with the certificate subject. Must be less than or equal to 64 characters in length.
    country : str, default is Undefined, optional
        Two digit code that specifies the country in which the certificate subject located. Must be less than or equal to 2 characters in length.
    distinguishedNameQualifier : str, default is Undefined, optional
        Disambiguating information for the certificate subject. Must be less than or equal to 64 characters in length.
    generationQualifier : str, default is Undefined, optional
        Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third. Must be less than or equal to 3 characters in length.
    givenName : str, default is Undefined, optional
        First name. Must be less than or equal to 16 characters in length.
    initials : str, default is Undefined, optional
        Concatenation that typically contains the first letter of the given_name, the first letter of the middle name if one exists, and the first letter of the surname. Must be less than or equal to 5 characters in length.
    locality : str, default is Undefined, optional
        Locality (such as a city or town) in which the certificate subject is located. Must be less than or equal to 128 characters in length.
    organization : str, default is Undefined, optional
        Legal name of the organization with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
    organizationalUnit : str, default is Undefined, optional
        Subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
    pseudonym : str, default is Undefined, optional
        Typically a shortened version of a longer given_name. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza. Must be less than or equal to 128 characters in length.
    state : str, default is Undefined, optional
        State in which the subject of the certificate is located. Must be less than or equal to 128 characters in length.
    surname : str, default is Undefined, optional
        Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first. Must be less than or equal to 40 characters in length.
    title : str, default is Undefined, optional
        Title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject. Must be less than or equal to 64 characters in length.
    """


    commonName?: str

    country?: str

    distinguishedNameQualifier?: str

    generationQualifier?: str

    givenName?: str

    initials?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    pseudonym?: str

    state?: str

    surname?: str

    title?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec init provider revocation configuration items0

    Attributes
    ----------
    crlConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0CrlConfigurationItems0], default is Undefined, optional
        Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
    ocspConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0OcspConfigurationItems0], default is Undefined, optional
        Nested argument containing configuration of
        the custom OCSP responder endpoint. Defined below.
    """


    crlConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0CrlConfigurationItems0]

    ocspConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0OcspConfigurationItems0]


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0CrlConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec init provider revocation configuration items0 crl configuration items0

    Attributes
    ----------
    customCname : str, default is Undefined, optional
        Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public. Must be less than or equal to 253 characters in length.
    enabled : bool, default is Undefined, optional
        Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to false.
    expirationInDays : float, default is Undefined, optional
        Number of days until a certificate expires. Must be between 1 and 5000.
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket that contains the CRL. If you do not provide a value for the custom_cname argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket. Must be between 3 and 255 characters in length.
    s3ObjectAcl : str, default is Undefined, optional
        Determines whether the CRL will be publicly readable or privately held in the CRL Amazon S3 bucket. Defaults to PUBLIC_READ.
    """


    customCname?: str

    enabled?: bool

    expirationInDays?: float

    s3BucketName?: str

    s3ObjectAcl?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecInitProviderRevocationConfigurationItems0OcspConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority spec init provider revocation configuration items0 ocsp configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Boolean value that specifies whether a custom OCSP responder is enabled.
    ocspCustomCname : str, default is Undefined, optional
        CNAME specifying a customized OCSP domain. Note: The value of the CNAME must not include a protocol prefix such as "http://" or "https://".
    """


    enabled?: bool

    ocspCustomCname?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRefPolicy


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef

    metadata?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToMetadata

    name: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthoritySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatus:
    r"""
    CertificateAuthorityStatus defines the observed state of CertificateAuthority.

    Attributes
    ----------
    atProvider : AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProvider

    conditions?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusConditionsItems0]

    observedGeneration?: int


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProvider:
    r"""
    acmpca aws upbound io v1beta1 certificate authority status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the certificate authority.
    certificate : str, default is Undefined, optional
        Base64-encoded certificate authority (CA) certificate. Only available after the certificate authority certificate has been imported.
    certificateAuthorityConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderCertificateAuthorityConfigurationItems0], default is Undefined, optional
        Nested argument containing algorithms and certificate subject information. Defined below.
    certificateChain : str, default is Undefined, optional
        Base64-encoded certificate chain that includes any intermediate certificates and chains up to root on-premises certificate that you used to sign your private CA certificate. The chain does not include your private CA certificate. Only available after the certificate authority certificate has been imported.
    certificateSigningRequest : str, default is Undefined, optional
        The base64 PEM-encoded certificate signing request (CSR) for your private CA certificate.
    enabled : bool, default is Undefined, optional
        Whether the certificate authority is enabled or disabled. Defaults to true. Can only be disabled if the CA is in an ACTIVE state.
    id : str, default is Undefined, optional
        ARN of the certificate authority.
    keyStorageSecurityStandard : str, default is Undefined, optional
        Cryptographic key management compliance standard used for handling CA keys. Defaults to FIPS_140_2_LEVEL_3_OR_HIGHER. Valid values: FIPS_140_2_LEVEL_3_OR_HIGHER and FIPS_140_2_LEVEL_2_OR_HIGHER. Supported standard for each region can be found in the Storage and security compliance of AWS Private CA private keys Documentation.
    notAfter : str, default is Undefined, optional
        Date and time after which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.
    notBefore : str, default is Undefined, optional
        Date and time before which the certificate authority is not valid. Only available after the certificate authority certificate has been imported.
    permanentDeletionTimeInDays : float, default is Undefined, optional
        Number of days to make a CA restorable after it has been deleted, must be between 7 to 30 days, with default to 30 days.
    revocationConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0], default is Undefined, optional
        Nested argument containing revocation configuration. Defined below.
    serial : str, default is Undefined, optional
        Serial number of the certificate authority. Only available after the certificate authority certificate has been imported.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        Type of the certificate authority. Defaults to SUBORDINATE. Valid values: ROOT and SUBORDINATE.
    usageMode : str, default is Undefined, optional
        Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days. Defaults to GENERAL_PURPOSE. Valid values: GENERAL_PURPOSE and SHORT_LIVED_CERTIFICATE.
    """


    arn?: str

    certificate?: str

    certificateAuthorityConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderCertificateAuthorityConfigurationItems0]

    certificateChain?: str

    certificateSigningRequest?: str

    enabled?: bool

    id?: str

    keyStorageSecurityStandard?: str

    notAfter?: str

    notBefore?: str

    permanentDeletionTimeInDays?: float

    revocationConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0]

    serial?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    usageMode?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderCertificateAuthorityConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority status at provider certificate authority configuration items0

    Attributes
    ----------
    keyAlgorithm : str, default is Undefined, optional
        Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the ACM PCA Documentation.
    signingAlgorithm : str, default is Undefined, optional
        Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the ACM PCA Documentation.
    subject : [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderCertificateAuthorityConfigurationItems0SubjectItems0], default is Undefined, optional
        Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified.
    """


    keyAlgorithm?: str

    signingAlgorithm?: str

    subject?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderCertificateAuthorityConfigurationItems0SubjectItems0]


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderCertificateAuthorityConfigurationItems0SubjectItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority status at provider certificate authority configuration items0 subject items0

    Attributes
    ----------
    commonName : str, default is Undefined, optional
        Fully qualified domain name (FQDN) associated with the certificate subject. Must be less than or equal to 64 characters in length.
    country : str, default is Undefined, optional
        Two digit code that specifies the country in which the certificate subject located. Must be less than or equal to 2 characters in length.
    distinguishedNameQualifier : str, default is Undefined, optional
        Disambiguating information for the certificate subject. Must be less than or equal to 64 characters in length.
    generationQualifier : str, default is Undefined, optional
        Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third. Must be less than or equal to 3 characters in length.
    givenName : str, default is Undefined, optional
        First name. Must be less than or equal to 16 characters in length.
    initials : str, default is Undefined, optional
        Concatenation that typically contains the first letter of the given_name, the first letter of the middle name if one exists, and the first letter of the surname. Must be less than or equal to 5 characters in length.
    locality : str, default is Undefined, optional
        Locality (such as a city or town) in which the certificate subject is located. Must be less than or equal to 128 characters in length.
    organization : str, default is Undefined, optional
        Legal name of the organization with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
    organizationalUnit : str, default is Undefined, optional
        Subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated. Must be less than or equal to 64 characters in length.
    pseudonym : str, default is Undefined, optional
        Typically a shortened version of a longer given_name. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza. Must be less than or equal to 128 characters in length.
    state : str, default is Undefined, optional
        State in which the subject of the certificate is located. Must be less than or equal to 128 characters in length.
    surname : str, default is Undefined, optional
        Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first. Must be less than or equal to 40 characters in length.
    title : str, default is Undefined, optional
        Title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject. Must be less than or equal to 64 characters in length.
    """


    commonName?: str

    country?: str

    distinguishedNameQualifier?: str

    generationQualifier?: str

    givenName?: str

    initials?: str

    locality?: str

    organization?: str

    organizationalUnit?: str

    pseudonym?: str

    state?: str

    surname?: str

    title?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority status at provider revocation configuration items0

    Attributes
    ----------
    crlConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0CrlConfigurationItems0], default is Undefined, optional
        Nested argument containing configuration of the certificate revocation list (CRL), if any, maintained by the certificate authority. Defined below.
    ocspConfiguration : [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0OcspConfigurationItems0], default is Undefined, optional
        Nested argument containing configuration of
        the custom OCSP responder endpoint. Defined below.
    """


    crlConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0CrlConfigurationItems0]

    ocspConfiguration?: [AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0OcspConfigurationItems0]


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0CrlConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority status at provider revocation configuration items0 crl configuration items0

    Attributes
    ----------
    customCname : str, default is Undefined, optional
        Name inserted into the certificate CRL Distribution Points extension that enables the use of an alias for the CRL distribution point. Use this value if you don't want the name of your S3 bucket to be public. Must be less than or equal to 253 characters in length.
    enabled : bool, default is Undefined, optional
        Boolean value that specifies whether certificate revocation lists (CRLs) are enabled. Defaults to false.
    expirationInDays : float, default is Undefined, optional
        Number of days until a certificate expires. Must be between 1 and 5000.
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket that contains the CRL. If you do not provide a value for the custom_cname argument, the name of your S3 bucket is placed into the CRL Distribution Points extension of the issued certificate. You must specify a bucket policy that allows ACM PCA to write the CRL to your bucket. Must be between 3 and 255 characters in length.
    s3ObjectAcl : str, default is Undefined, optional
        Determines whether the CRL will be publicly readable or privately held in the CRL Amazon S3 bucket. Defaults to PUBLIC_READ.
    """


    customCname?: str

    enabled?: bool

    expirationInDays?: float

    s3BucketName?: str

    s3ObjectAcl?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusAtProviderRevocationConfigurationItems0OcspConfigurationItems0:
    r"""
    acmpca aws upbound io v1beta1 certificate authority status at provider revocation configuration items0 ocsp configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Boolean value that specifies whether a custom OCSP responder is enabled.
    ocspCustomCname : str, default is Undefined, optional
        CNAME specifying a customized OCSP domain. Note: The value of the CNAME must not include a protocol prefix such as "http://" or "https://".
    """


    enabled?: bool

    ocspCustomCname?: str


schema AcmpcaAwsUpboundIoV1beta1CertificateAuthorityStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


