"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RuleGroup:
    r"""
    RuleGroup is the Schema for the RuleGroups API. Creates a WAFv2 rule group resource. The 'rule' field is not supported due to Kubernetes CRD size limitations with deeply nested fields. Please use the 'ruleJson' field to define rules.

    Attributes
    ----------
    apiVersion : str, default is "wafv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RuleGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Wafv2AwsUpboundIoV1beta1RuleGroupSpec, default is Undefined, required
        spec
    status : Wafv2AwsUpboundIoV1beta1RuleGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "wafv2.aws.upbound.io/v1beta1" = "wafv2.aws.upbound.io/v1beta1"

    kind: "RuleGroup" = "RuleGroup"

    metadata?: v1.ObjectMeta

    spec: Wafv2AwsUpboundIoV1beta1RuleGroupSpec

    status?: Wafv2AwsUpboundIoV1beta1RuleGroupStatus


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpec:
    r"""
    RuleGroupSpec defines the desired state of RuleGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Wafv2AwsUpboundIoV1beta1RuleGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Wafv2AwsUpboundIoV1beta1RuleGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProvider

    initProvider?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecWriteConnectionSecretToRef


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProvider:
    r"""
    wafv2 aws upbound io v1beta1 rule group spec for provider

    Attributes
    ----------
    capacity : float, default is Undefined, optional
        The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.
    customResponseBody : [Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProviderCustomResponseBodyItems0], default is Undefined, optional
        Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.
    description : str, default is Undefined, optional
        A friendly description of the rule group.
    name : str, default is Undefined, optional
        A friendly name of the rule group.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    ruleJson : str, default is Undefined, optional
        A raw JSON string used to define the rules for allowing, blocking, or counting web requests. When this field is used, Crossplane cannot observe changes in the configuration through the AWS API; therefore, drift detection cannot be performed. Refer to the AWS documentation for the expected JSON structure: https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html
    scope : str, default is Undefined, optional
        Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    visibilityConfig : Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProviderVisibilityConfig, default is Undefined, optional
        visibility config
    """


    capacity?: float

    customResponseBody?: [Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProviderCustomResponseBodyItems0]

    description?: str

    name?: str

    region: str

    ruleJson?: str

    scope?: str

    tags?: {str:str}

    visibilityConfig?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProviderVisibilityConfig


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProviderCustomResponseBodyItems0:
    r"""
    wafv2 aws upbound io v1beta1 rule group spec for provider custom response body items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The payload of the custom response.
    contentType : str, default is Undefined, optional
        The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
    key : str, default is Undefined, optional
        A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.
    """


    content?: str

    contentType?: str

    key?: str


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecForProviderVisibilityConfig:
    r"""
    Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.

    Attributes
    ----------
    cloudwatchMetricsEnabled : bool, default is Undefined, optional
        A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.
    metricName : str, default is Undefined, optional
        A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.
    sampledRequestsEnabled : bool, default is Undefined, optional
        A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
    """


    cloudwatchMetricsEnabled?: bool

    metricName?: str

    sampledRequestsEnabled?: bool


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    capacity : float, default is Undefined, optional
        The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.
    customResponseBody : [Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProviderCustomResponseBodyItems0], default is Undefined, optional
        Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.
    description : str, default is Undefined, optional
        A friendly description of the rule group.
    name : str, default is Undefined, optional
        A friendly name of the rule group.
    ruleJson : str, default is Undefined, optional
        A raw JSON string used to define the rules for allowing, blocking, or counting web requests. When this field is used, Crossplane cannot observe changes in the configuration through the AWS API; therefore, drift detection cannot be performed. Refer to the AWS documentation for the expected JSON structure: https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html
    scope : str, default is Undefined, optional
        Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    visibilityConfig : Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProviderVisibilityConfig, default is Undefined, optional
        visibility config
    """


    capacity?: float

    customResponseBody?: [Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProviderCustomResponseBodyItems0]

    description?: str

    name?: str

    ruleJson?: str

    scope?: str

    tags?: {str:str}

    visibilityConfig?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProviderVisibilityConfig


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProviderCustomResponseBodyItems0:
    r"""
    wafv2 aws upbound io v1beta1 rule group spec init provider custom response body items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The payload of the custom response.
    contentType : str, default is Undefined, optional
        The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
    key : str, default is Undefined, optional
        A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.
    """


    content?: str

    contentType?: str

    key?: str


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecInitProviderVisibilityConfig:
    r"""
    Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.

    Attributes
    ----------
    cloudwatchMetricsEnabled : bool, default is Undefined, optional
        A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.
    metricName : str, default is Undefined, optional
        A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.
    sampledRequestsEnabled : bool, default is Undefined, optional
        A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
    """


    cloudwatchMetricsEnabled?: bool

    metricName?: str

    sampledRequestsEnabled?: bool


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1RuleGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecProviderConfigRefPolicy


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Wafv2AwsUpboundIoV1beta1RuleGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Wafv2AwsUpboundIoV1beta1RuleGroupStatus:
    r"""
    RuleGroupStatus defines the observed state of RuleGroup.

    Attributes
    ----------
    atProvider : Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Wafv2AwsUpboundIoV1beta1RuleGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProvider

    conditions?: [Wafv2AwsUpboundIoV1beta1RuleGroupStatusConditionsItems0]

    observedGeneration?: int


schema Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProvider:
    r"""
    wafv2 aws upbound io v1beta1 rule group status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the WAF rule group.
    capacity : float, default is Undefined, optional
        The web ACL capacity units (WCUs) required for this rule group. See here for general information and here for capacity specific information.
    customResponseBody : [Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProviderCustomResponseBodyItems0], default is Undefined, optional
        Defines custom response bodies that can be referenced by custom_response actions. See Custom Response Body below for details.
    description : str, default is Undefined, optional
        A friendly description of the rule group.
    id : str, default is Undefined, optional
        The ID of the WAF rule group.
    lockToken : str, default is Undefined, optional
        lock token
    name : str, default is Undefined, optional
        A friendly name of the rule group.
    ruleJson : str, default is Undefined, optional
        A raw JSON string used to define the rules for allowing, blocking, or counting web requests. When this field is used, Crossplane cannot observe changes in the configuration through the AWS API; therefore, drift detection cannot be performed. Refer to the AWS documentation for the expected JSON structure: https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html
    scope : str, default is Undefined, optional
        Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are CLOUDFRONT or REGIONAL. To work with CloudFront, you must also specify the region us-east-1 (N. Virginia) on the AWS provider.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    visibilityConfig : Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProviderVisibilityConfig, default is Undefined, optional
        visibility config
    """


    arn?: str

    capacity?: float

    customResponseBody?: [Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProviderCustomResponseBodyItems0]

    description?: str

    id?: str

    lockToken?: str

    name?: str

    ruleJson?: str

    scope?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    visibilityConfig?: Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProviderVisibilityConfig


schema Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProviderCustomResponseBodyItems0:
    r"""
    wafv2 aws upbound io v1beta1 rule group status at provider custom response body items0

    Attributes
    ----------
    content : str, default is Undefined, optional
        The payload of the custom response.
    contentType : str, default is Undefined, optional
        The type of content in the payload that you are defining in the content argument. Valid values are TEXT_PLAIN, TEXT_HTML, or APPLICATION_JSON.
    key : str, default is Undefined, optional
        A unique key identifying the custom response body. This is referenced by the custom_response_body_key argument in the Custom Response block.
    """


    content?: str

    contentType?: str

    key?: str


schema Wafv2AwsUpboundIoV1beta1RuleGroupStatusAtProviderVisibilityConfig:
    r"""
    Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.

    Attributes
    ----------
    cloudwatchMetricsEnabled : bool, default is Undefined, optional
        A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see AWS WAF Metrics.
    metricName : str, default is Undefined, optional
        A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example All and Default_Action.
    sampledRequestsEnabled : bool, default is Undefined, optional
        A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.
    """


    cloudwatchMetricsEnabled?: bool

    metricName?: str

    sampledRequestsEnabled?: bool


schema Wafv2AwsUpboundIoV1beta1RuleGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


