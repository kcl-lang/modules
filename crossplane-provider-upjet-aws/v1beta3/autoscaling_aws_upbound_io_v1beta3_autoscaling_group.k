"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AutoscalingGroup:
    r"""
    AutoscalingGroup is the Schema for the AutoscalingGroups API. Provides an Auto Scaling Group resource.

    Attributes
    ----------
    apiVersion : str, default is "autoscaling.aws.upbound.io/v1beta3", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AutoscalingGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpec, default is Undefined, required
        spec
    status : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "autoscaling.aws.upbound.io/v1beta3" = "autoscaling.aws.upbound.io/v1beta3"

    kind: "AutoscalingGroup" = "AutoscalingGroup"

    metadata?: v1.ObjectMeta

    spec: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpec

    status?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatus


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpec:
    r"""
    AutoscalingGroupSpec defines the desired state of AutoscalingGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProvider

    initProvider?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecWriteConnectionSecretToRef


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProvider:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec for provider

    Attributes
    ----------
    availabilityZoneDistribution : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderAvailabilityZoneDistribution, default is Undefined, optional
        availability zone distribution
    availabilityZones : [str], default is Undefined, optional
        A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the vpc_zone_identifier attribute, or for attaching a network interface when an existing network interface ID is specified in a launch template. Conflicts with vpc_zone_identifier.
    capacityRebalance : bool, default is Undefined, optional
        Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.
    context : str, default is Undefined, optional
        Reserved.
    defaultCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
    defaultInstanceWarmup : float, default is Undefined, optional
        Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)
    desiredCapacity : float, default is Undefined, optional
        Number of Amazon EC2 instances that
        should be running in the group. (See also Waiting for
        Capacity below.)
    desiredCapacityType : str, default is Undefined, optional
        The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: "units", "vcpu", "memory-mib".
    enabledMetrics : [str], default is Undefined, optional
        List of metrics to collect. The allowed values are defined by the underlying AWS API.
    forceDelete : bool, default is Undefined, optional
        Allows deleting the Auto Scaling Group without waiting
        for all instances in the pool to terminate. You can force an Auto Scaling Group to delete
        even if it's in the process of scaling a resource. This bypasses that
        behavior and potentially leaves resources dangling.
    forceDeleteWarmPool : bool, default is Undefined, optional
        Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate.
    healthCheckGracePeriod : float, default is Undefined, optional
        Time (in seconds) after instance comes into service before checking health.
    healthCheckType : str, default is Undefined, optional
        "EC2" or "ELB". Controls how health checking is done.
    ignoreFailedScalingActivities : bool, default is Undefined, optional
        Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned.
    initialLifecycleHook : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInitialLifecycleHookItems0], default is Undefined, optional
        One or more
        Lifecycle Hooks
        to attach to the Auto Scaling Group before instances are launched. The
        syntax is exactly the same as the separate
        aws_autoscaling_lifecycle_hook
        resource, without the autoscaling_group_name attribute. Please note that this will only work when creating
        a new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.
    instanceMaintenancePolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceMaintenancePolicy, default is Undefined, optional
        instance maintenance policy
    instanceRefresh : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefresh, default is Undefined, optional
        instance refresh
    launchConfiguration : str, default is Undefined, optional
        Name of the launch configuration to use.
    launchConfigurationRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationRef, default is Undefined, optional
        launch configuration ref
    launchConfigurationSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationSelector, default is Undefined, optional
        launch configuration selector
    launchTemplate : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplate, default is Undefined, optional
        launch template
    maxInstanceLifetime : float, default is Undefined, optional
        Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.
    maxSize : float, default is Undefined, optional
        Maximum size of the Auto Scaling Group.
    metricsGranularity : str, default is Undefined, optional
        Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.
    minElbCapacity : float, default is Undefined, optional
        Updates will not wait on ELB instance number changes.
        (See also Waiting for Capacity below.)
    minSize : float, default is Undefined, optional
        Minimum size of the Auto Scaling Group.
        (See also Waiting for Capacity below.)
    mixedInstancesPolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicy, default is Undefined, optional
        mixed instances policy
    placementGroup : str, default is Undefined, optional
        Name of the placement group into which you'll launch your instances, if any.
    placementGroupRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupRef, default is Undefined, optional
        placement group ref
    placementGroupSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupSelector, default is Undefined, optional
        placement group selector
    protectFromScaleIn : bool, default is Undefined, optional
        Whether newly launched instances
        are automatically protected from termination by Amazon EC2 Auto Scaling when
        scaling in. For more information about preventing instances from terminating
        on scale in, see Using instance scale-in protection
        in the Amazon EC2 Auto Scaling User Guide.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serviceLinkedRoleArn : str, default is Undefined, optional
        ARN of the service-linked role that the ASG will use to call other AWS services
    serviceLinkedRoleArnRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnRef, default is Undefined, optional
        service linked role arn ref
    serviceLinkedRoleArnSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnSelector, default is Undefined, optional
        service linked role arn selector
    suspendedProcesses : [str], default is Undefined, optional
        List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.
        Note that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
    tag : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderTagItems0], default is Undefined, optional
        Configuration block(s) containing resource tags. See Tag below for more details.
    terminationPolicies : [str], default is Undefined, optional
        List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.
    trafficSource : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderTrafficSourceItems0], default is Undefined, optional
        Attaches one or more traffic sources to the specified Auto Scaling group.
    vpcZoneIdentifier : [str], default is Undefined, optional
        List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.
    vpcZoneIdentifierRefs : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate vpcZoneIdentifier.
    vpcZoneIdentifierSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierSelector, default is Undefined, optional
        vpc zone identifier selector
    waitForCapacityTimeout : str, default is Undefined, optional
        (See also Waiting
        for Capacity below.
    waitForElbCapacity : float, default is Undefined, optional
        (Takes
        precedence over min_elb_capacity behavior.)
        (See also Waiting for Capacity below.)
    warmPool : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderWarmPool, default is Undefined, optional
        warm pool
    """


    availabilityZoneDistribution?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderAvailabilityZoneDistribution

    availabilityZones?: [str]

    capacityRebalance?: bool

    context?: str

    defaultCooldown?: float

    defaultInstanceWarmup?: float

    desiredCapacity?: float

    desiredCapacityType?: str

    enabledMetrics?: [str]

    forceDelete?: bool

    forceDeleteWarmPool?: bool

    healthCheckGracePeriod?: float

    healthCheckType?: str

    ignoreFailedScalingActivities?: bool

    initialLifecycleHook?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInitialLifecycleHookItems0]

    instanceMaintenancePolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceMaintenancePolicy

    instanceRefresh?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefresh

    launchConfiguration?: str

    launchConfigurationRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationRef

    launchConfigurationSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationSelector

    launchTemplate?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplate

    maxInstanceLifetime?: float

    maxSize?: float

    metricsGranularity?: str

    minElbCapacity?: float

    minSize?: float

    mixedInstancesPolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicy

    placementGroup?: str

    placementGroupRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupRef

    placementGroupSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupSelector

    protectFromScaleIn?: bool

    region: str

    serviceLinkedRoleArn?: str

    serviceLinkedRoleArnRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnRef

    serviceLinkedRoleArnSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnSelector

    suspendedProcesses?: [str]

    tag?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderTagItems0]

    terminationPolicies?: [str]

    trafficSource?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderTrafficSourceItems0]

    vpcZoneIdentifier?: [str]

    vpcZoneIdentifierRefs?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierRefsItems0]

    vpcZoneIdentifierSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierSelector

    waitForCapacityTimeout?: str

    waitForElbCapacity?: float

    warmPool?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderWarmPool


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderAvailabilityZoneDistribution:
    r"""
    The instance capacity distribution across Availability Zones. See Availability Zone Distribution below for more details.

    Attributes
    ----------
    capacityDistributionStrategy : str, default is Undefined, optional
        The strategy to use for distributing capacity across the Availability Zones. Valid values are balanced-only and balanced-best-effort. Default is balanced-best-effort.
    """


    capacityDistributionStrategy?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInitialLifecycleHookItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec for provider initial lifecycle hook items0

    Attributes
    ----------
    defaultResult : str, default is Undefined, optional
        default result
    heartbeatTimeout : float, default is Undefined, optional
        heartbeat timeout
    lifecycleTransition : str, default is Undefined, optional
        lifecycle transition
    name : str, default is Undefined, optional
        Name of the Auto Scaling Group. Conflicts with name_prefix.
    notificationMetadata : str, default is Undefined, optional
        notification metadata
    notificationTargetArn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    roleArn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    """


    defaultResult?: str

    heartbeatTimeout?: float

    lifecycleTransition?: str

    name?: str

    notificationMetadata?: str

    notificationTargetArn?: str

    roleArn?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceMaintenancePolicy:
    r"""
    If this block is configured, add a instance maintenance policy to the specified Auto Scaling group. Defined below.

    Attributes
    ----------
    maxHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.
    minHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
    """


    maxHealthyPercentage?: float

    minHealthyPercentage?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefresh:
    r"""
    If this block is configured, start an
    Instance Refresh
    when this Auto Scaling Group is updated. Defined below.

    Attributes
    ----------
    preferences : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefreshPreferences, default is Undefined, optional
        preferences
    strategy : str, default is Undefined, optional
        Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.
    triggers : [str], default is Undefined, optional
        Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.
    """


    preferences?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefreshPreferences

    strategy?: str

    triggers?: [str]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefreshPreferences:
    r"""
    Override default parameters for Instance Refresh.

    Attributes
    ----------
    alarmSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefreshPreferencesAlarmSpecification, default is Undefined, optional
        alarm specification
    autoRollback : bool, default is Undefined, optional
        Automatically rollback if instance refresh fails. Defaults to false. This option may only be set to true when specifying a launch_template or mixed_instances_policy.
    checkpointDelay : str, default is Undefined, optional
        Number of seconds to wait after a checkpoint. Defaults to 3600.
    checkpointPercentages : [float], default is Undefined, optional
        List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.
    instanceWarmup : str, default is Undefined, optional
        Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
    maxHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.
    minHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
    scaleInProtectedInstances : str, default is Undefined, optional
        Behavior when encountering instances protected from scale in are found. Available behaviors are Refresh, Ignore, and Wait. Default is Ignore.
    skipMatching : bool, default is Undefined, optional
        Replace instances that already have your desired configuration. Defaults to false.
    standbyInstances : str, default is Undefined, optional
        Behavior when encountering instances in the Standby state in are found. Available behaviors are Terminate, Ignore, and Wait. Default is Ignore.
    """


    alarmSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefreshPreferencesAlarmSpecification

    autoRollback?: bool

    checkpointDelay?: str

    checkpointPercentages?: [float]

    instanceWarmup?: str

    maxHealthyPercentage?: float

    minHealthyPercentage?: float

    scaleInProtectedInstances?: str

    skipMatching?: bool

    standbyInstances?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderInstanceRefreshPreferencesAlarmSpecification:
    r"""
    Alarm Specification for Instance Refresh.

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        List of Cloudwatch alarms. If any of these alarms goes into ALARM state, Instance Refresh is failed.
    """


    alarms?: [str]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationRef:
    r"""
    Reference to a LaunchConfiguration in autoscaling to populate launchConfiguration.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationSelector:
    r"""
    Selector for a LaunchConfiguration in autoscaling to populate launchConfiguration.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchConfigurationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplate:
    r"""
    Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID of the launch template. Conflicts with name.
    idRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDRef, default is Undefined, optional
        id ref
    idSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDSelector, default is Undefined, optional
        id selector
    name : str, default is Undefined, optional
        Name of the launch template. Conflicts with id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    id?: str

    idRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDRef

    idSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDSelector

    name?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate id.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate id.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicy:
    r"""
    Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.

    Attributes
    ----------
    instancesDistribution : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution, default is Undefined, optional
        instances distribution
    launchTemplate : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate, default is Undefined, optional
        launch template
    """


    instancesDistribution?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution

    launchTemplate?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyInstancesDistribution:
    r"""
    Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.

    Attributes
    ----------
    onDemandAllocationStrategy : str, default is Undefined, optional
        Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.
    onDemandBaseCapacity : float, default is Undefined, optional
        Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.
    onDemandPercentageAboveBaseCapacity : float, default is Undefined, optional
        Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.
    spotAllocationStrategy : str, default is Undefined, optional
        How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.
    spotInstancePools : float, default is Undefined, optional
        Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.
    spotMaxPrice : str, default is Undefined, optional
        Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
    """


    onDemandAllocationStrategy?: str

    onDemandBaseCapacity?: float

    onDemandPercentageAboveBaseCapacity?: float

    spotAllocationStrategy?: str

    spotInstancePools?: float

    spotMaxPrice?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplate:
    r"""
    Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.

    Attributes
    ----------
    launchTemplateSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    override : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0], default is Undefined, optional
        List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
    """


    launchTemplateSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification

    override?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification:
    r"""
    Nested argument defines the Launch Template. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. Conflicts with launch_template_name.
    launchTemplateIdRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRef, default is Undefined, optional
        launch template Id ref
    launchTemplateIdSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelector, default is Undefined, optional
        launch template Id selector
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template. Conflicts with launch_template_id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    launchTemplateId?: str

    launchTemplateIdRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRef

    launchTemplateIdSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelector

    launchTemplateName?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec for provider mixed instances policy launch template override items0

    Attributes
    ----------
    instanceRequirements : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        Override the instance type in the Launch Template.
    launchTemplateSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    weightedCapacity : str, default is Undefined, optional
        Number of capacity units, which gives the instance type a proportional weight to other instance types.
    """


    instanceRequirements?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements

    instanceType?: str

    launchTemplateSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification

    weightedCapacity?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements:
    r"""
    Override the instance type in the Launch Template with instance types that satisfy the requirements.

    Attributes
    ----------
    acceleratorCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        List of accelerator types. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        List of CPU manufacturer names. Default is any manufacturer.
    excludedInstanceTypes : [str], default is Undefined, optional
        List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        List of instance generation names. Default is any generation.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu

    memoryMib?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib

    networkBandwidthGbps?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb

    vcpuCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib:
    r"""
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps:
    r"""
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification:
    r"""
    Nested argument defines the Launch Template. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. Conflicts with launch_template_name.
    launchTemplateIdRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRef, default is Undefined, optional
        launch template Id ref
    launchTemplateIdSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelector, default is Undefined, optional
        launch template Id selector
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template. Conflicts with launch_template_id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    launchTemplateId?: str

    launchTemplateIdRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRef

    launchTemplateIdSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelector

    launchTemplateName?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupRef:
    r"""
    Reference to a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupSelector:
    r"""
    Selector for a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderPlacementGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceLinkedRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceLinkedRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderServiceLinkedRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderTagItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec for provider tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key
    propagateAtLaunch : bool, default is Undefined, optional
        Enables propagation of the tag to
        Amazon EC2 instances launched via this ASG
    value : str, default is Undefined, optional
        Value
    """


    key?: str

    propagateAtLaunch?: bool

    value?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderTrafficSourceItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec for provider traffic source items0

    Attributes
    ----------
    identifier : str, default is Undefined, optional
        Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.
    $type : str, default is Undefined, optional
        Provides additional context for the value of Identifier.
        The following lists the valid values:
        elb if identifier is the name of a Classic Load Balancer.
        elbv2 if identifier is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.
        vpc-lattice if identifier is the ARN of a VPC Lattice target group.
    """


    identifier?: str

    $type?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierRefsItems0Policy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate vpcZoneIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderVpcZoneIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderWarmPool:
    r"""
    If this block is configured, add a Warm Pool
    to the specified Auto Scaling group. Defined below

    Attributes
    ----------
    instanceReusePolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderWarmPoolInstanceReusePolicy, default is Undefined, optional
        instance reuse policy
    maxGroupPreparedCapacity : float, default is Undefined, optional
        Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
    minSize : float, default is Undefined, optional
        Minimum size of the Auto Scaling Group.
        (See also Waiting for Capacity below.)
    poolState : str, default is Undefined, optional
        Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.
    """


    instanceReusePolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderWarmPoolInstanceReusePolicy

    maxGroupPreparedCapacity?: float

    minSize?: float

    poolState?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecForProviderWarmPoolInstanceReusePolicy:
    r"""
    Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.

    Attributes
    ----------
    reuseOnScaleIn : bool, default is Undefined, optional
        Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.
    """


    reuseOnScaleIn?: bool


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    availabilityZoneDistribution : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderAvailabilityZoneDistribution, default is Undefined, optional
        availability zone distribution
    availabilityZones : [str], default is Undefined, optional
        A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the vpc_zone_identifier attribute, or for attaching a network interface when an existing network interface ID is specified in a launch template. Conflicts with vpc_zone_identifier.
    capacityRebalance : bool, default is Undefined, optional
        Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.
    context : str, default is Undefined, optional
        Reserved.
    defaultCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
    defaultInstanceWarmup : float, default is Undefined, optional
        Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)
    desiredCapacity : float, default is Undefined, optional
        Number of Amazon EC2 instances that
        should be running in the group. (See also Waiting for
        Capacity below.)
    desiredCapacityType : str, default is Undefined, optional
        The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: "units", "vcpu", "memory-mib".
    enabledMetrics : [str], default is Undefined, optional
        List of metrics to collect. The allowed values are defined by the underlying AWS API.
    forceDelete : bool, default is Undefined, optional
        Allows deleting the Auto Scaling Group without waiting
        for all instances in the pool to terminate. You can force an Auto Scaling Group to delete
        even if it's in the process of scaling a resource. This bypasses that
        behavior and potentially leaves resources dangling.
    forceDeleteWarmPool : bool, default is Undefined, optional
        Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate.
    healthCheckGracePeriod : float, default is Undefined, optional
        Time (in seconds) after instance comes into service before checking health.
    healthCheckType : str, default is Undefined, optional
        "EC2" or "ELB". Controls how health checking is done.
    ignoreFailedScalingActivities : bool, default is Undefined, optional
        Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned.
    initialLifecycleHook : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInitialLifecycleHookItems0], default is Undefined, optional
        One or more
        Lifecycle Hooks
        to attach to the Auto Scaling Group before instances are launched. The
        syntax is exactly the same as the separate
        aws_autoscaling_lifecycle_hook
        resource, without the autoscaling_group_name attribute. Please note that this will only work when creating
        a new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.
    instanceMaintenancePolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceMaintenancePolicy, default is Undefined, optional
        instance maintenance policy
    instanceRefresh : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefresh, default is Undefined, optional
        instance refresh
    launchConfiguration : str, default is Undefined, optional
        Name of the launch configuration to use.
    launchConfigurationRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationRef, default is Undefined, optional
        launch configuration ref
    launchConfigurationSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationSelector, default is Undefined, optional
        launch configuration selector
    launchTemplate : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplate, default is Undefined, optional
        launch template
    maxInstanceLifetime : float, default is Undefined, optional
        Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.
    maxSize : float, default is Undefined, optional
        Maximum size of the Auto Scaling Group.
    metricsGranularity : str, default is Undefined, optional
        Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.
    minElbCapacity : float, default is Undefined, optional
        Updates will not wait on ELB instance number changes.
        (See also Waiting for Capacity below.)
    minSize : float, default is Undefined, optional
        Minimum size of the Auto Scaling Group.
        (See also Waiting for Capacity below.)
    mixedInstancesPolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicy, default is Undefined, optional
        mixed instances policy
    placementGroup : str, default is Undefined, optional
        Name of the placement group into which you'll launch your instances, if any.
    placementGroupRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupRef, default is Undefined, optional
        placement group ref
    placementGroupSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupSelector, default is Undefined, optional
        placement group selector
    protectFromScaleIn : bool, default is Undefined, optional
        Whether newly launched instances
        are automatically protected from termination by Amazon EC2 Auto Scaling when
        scaling in. For more information about preventing instances from terminating
        on scale in, see Using instance scale-in protection
        in the Amazon EC2 Auto Scaling User Guide.
    serviceLinkedRoleArn : str, default is Undefined, optional
        ARN of the service-linked role that the ASG will use to call other AWS services
    serviceLinkedRoleArnRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnRef, default is Undefined, optional
        service linked role arn ref
    serviceLinkedRoleArnSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnSelector, default is Undefined, optional
        service linked role arn selector
    suspendedProcesses : [str], default is Undefined, optional
        List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.
        Note that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
    tag : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderTagItems0], default is Undefined, optional
        Configuration block(s) containing resource tags. See Tag below for more details.
    terminationPolicies : [str], default is Undefined, optional
        List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.
    trafficSource : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderTrafficSourceItems0], default is Undefined, optional
        Attaches one or more traffic sources to the specified Auto Scaling group.
    vpcZoneIdentifier : [str], default is Undefined, optional
        List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.
    vpcZoneIdentifierRefs : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate vpcZoneIdentifier.
    vpcZoneIdentifierSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierSelector, default is Undefined, optional
        vpc zone identifier selector
    waitForCapacityTimeout : str, default is Undefined, optional
        (See also Waiting
        for Capacity below.
    waitForElbCapacity : float, default is Undefined, optional
        (Takes
        precedence over min_elb_capacity behavior.)
        (See also Waiting for Capacity below.)
    warmPool : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderWarmPool, default is Undefined, optional
        warm pool
    """


    availabilityZoneDistribution?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderAvailabilityZoneDistribution

    availabilityZones?: [str]

    capacityRebalance?: bool

    context?: str

    defaultCooldown?: float

    defaultInstanceWarmup?: float

    desiredCapacity?: float

    desiredCapacityType?: str

    enabledMetrics?: [str]

    forceDelete?: bool

    forceDeleteWarmPool?: bool

    healthCheckGracePeriod?: float

    healthCheckType?: str

    ignoreFailedScalingActivities?: bool

    initialLifecycleHook?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInitialLifecycleHookItems0]

    instanceMaintenancePolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceMaintenancePolicy

    instanceRefresh?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefresh

    launchConfiguration?: str

    launchConfigurationRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationRef

    launchConfigurationSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationSelector

    launchTemplate?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplate

    maxInstanceLifetime?: float

    maxSize?: float

    metricsGranularity?: str

    minElbCapacity?: float

    minSize?: float

    mixedInstancesPolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicy

    placementGroup?: str

    placementGroupRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupRef

    placementGroupSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupSelector

    protectFromScaleIn?: bool

    serviceLinkedRoleArn?: str

    serviceLinkedRoleArnRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnRef

    serviceLinkedRoleArnSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnSelector

    suspendedProcesses?: [str]

    tag?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderTagItems0]

    terminationPolicies?: [str]

    trafficSource?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderTrafficSourceItems0]

    vpcZoneIdentifier?: [str]

    vpcZoneIdentifierRefs?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierRefsItems0]

    vpcZoneIdentifierSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierSelector

    waitForCapacityTimeout?: str

    waitForElbCapacity?: float

    warmPool?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderWarmPool


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderAvailabilityZoneDistribution:
    r"""
    The instance capacity distribution across Availability Zones. See Availability Zone Distribution below for more details.

    Attributes
    ----------
    capacityDistributionStrategy : str, default is Undefined, optional
        The strategy to use for distributing capacity across the Availability Zones. Valid values are balanced-only and balanced-best-effort. Default is balanced-best-effort.
    """


    capacityDistributionStrategy?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInitialLifecycleHookItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec init provider initial lifecycle hook items0

    Attributes
    ----------
    defaultResult : str, default is Undefined, optional
        default result
    heartbeatTimeout : float, default is Undefined, optional
        heartbeat timeout
    lifecycleTransition : str, default is Undefined, optional
        lifecycle transition
    name : str, default is Undefined, optional
        Name of the Auto Scaling Group. Conflicts with name_prefix.
    notificationMetadata : str, default is Undefined, optional
        notification metadata
    notificationTargetArn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    roleArn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    """


    defaultResult?: str

    heartbeatTimeout?: float

    lifecycleTransition?: str

    name?: str

    notificationMetadata?: str

    notificationTargetArn?: str

    roleArn?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceMaintenancePolicy:
    r"""
    If this block is configured, add a instance maintenance policy to the specified Auto Scaling group. Defined below.

    Attributes
    ----------
    maxHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.
    minHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
    """


    maxHealthyPercentage?: float

    minHealthyPercentage?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefresh:
    r"""
    If this block is configured, start an
    Instance Refresh
    when this Auto Scaling Group is updated. Defined below.

    Attributes
    ----------
    preferences : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefreshPreferences, default is Undefined, optional
        preferences
    strategy : str, default is Undefined, optional
        Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.
    triggers : [str], default is Undefined, optional
        Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.
    """


    preferences?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefreshPreferences

    strategy?: str

    triggers?: [str]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefreshPreferences:
    r"""
    Override default parameters for Instance Refresh.

    Attributes
    ----------
    alarmSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefreshPreferencesAlarmSpecification, default is Undefined, optional
        alarm specification
    autoRollback : bool, default is Undefined, optional
        Automatically rollback if instance refresh fails. Defaults to false. This option may only be set to true when specifying a launch_template or mixed_instances_policy.
    checkpointDelay : str, default is Undefined, optional
        Number of seconds to wait after a checkpoint. Defaults to 3600.
    checkpointPercentages : [float], default is Undefined, optional
        List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.
    instanceWarmup : str, default is Undefined, optional
        Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
    maxHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.
    minHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
    scaleInProtectedInstances : str, default is Undefined, optional
        Behavior when encountering instances protected from scale in are found. Available behaviors are Refresh, Ignore, and Wait. Default is Ignore.
    skipMatching : bool, default is Undefined, optional
        Replace instances that already have your desired configuration. Defaults to false.
    standbyInstances : str, default is Undefined, optional
        Behavior when encountering instances in the Standby state in are found. Available behaviors are Terminate, Ignore, and Wait. Default is Ignore.
    """


    alarmSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefreshPreferencesAlarmSpecification

    autoRollback?: bool

    checkpointDelay?: str

    checkpointPercentages?: [float]

    instanceWarmup?: str

    maxHealthyPercentage?: float

    minHealthyPercentage?: float

    scaleInProtectedInstances?: str

    skipMatching?: bool

    standbyInstances?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderInstanceRefreshPreferencesAlarmSpecification:
    r"""
    Alarm Specification for Instance Refresh.

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        List of Cloudwatch alarms. If any of these alarms goes into ALARM state, Instance Refresh is failed.
    """


    alarms?: [str]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationRef:
    r"""
    Reference to a LaunchConfiguration in autoscaling to populate launchConfiguration.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationSelector:
    r"""
    Selector for a LaunchConfiguration in autoscaling to populate launchConfiguration.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchConfigurationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplate:
    r"""
    Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID of the launch template. Conflicts with name.
    idRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDRef, default is Undefined, optional
        id ref
    idSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDSelector, default is Undefined, optional
        id selector
    name : str, default is Undefined, optional
        Name of the launch template. Conflicts with id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    id?: str

    idRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDRef

    idSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDSelector

    name?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate id.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate id.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicy:
    r"""
    Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.

    Attributes
    ----------
    instancesDistribution : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyInstancesDistribution, default is Undefined, optional
        instances distribution
    launchTemplate : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplate, default is Undefined, optional
        launch template
    """


    instancesDistribution?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyInstancesDistribution

    launchTemplate?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplate


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyInstancesDistribution:
    r"""
    Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.

    Attributes
    ----------
    onDemandAllocationStrategy : str, default is Undefined, optional
        Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.
    onDemandBaseCapacity : float, default is Undefined, optional
        Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.
    onDemandPercentageAboveBaseCapacity : float, default is Undefined, optional
        Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.
    spotAllocationStrategy : str, default is Undefined, optional
        How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.
    spotInstancePools : float, default is Undefined, optional
        Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.
    spotMaxPrice : str, default is Undefined, optional
        Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
    """


    onDemandAllocationStrategy?: str

    onDemandBaseCapacity?: float

    onDemandPercentageAboveBaseCapacity?: float

    spotAllocationStrategy?: str

    spotInstancePools?: float

    spotMaxPrice?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplate:
    r"""
    Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.

    Attributes
    ----------
    launchTemplateSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    override : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0], default is Undefined, optional
        List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
    """


    launchTemplateSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification

    override?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification:
    r"""
    Nested argument defines the Launch Template. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. Conflicts with launch_template_name.
    launchTemplateIdRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRef, default is Undefined, optional
        launch template Id ref
    launchTemplateIdSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelector, default is Undefined, optional
        launch template Id selector
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template. Conflicts with launch_template_id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    launchTemplateId?: str

    launchTemplateIdRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRef

    launchTemplateIdSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelector

    launchTemplateName?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec init provider mixed instances policy launch template override items0

    Attributes
    ----------
    instanceRequirements : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        Override the instance type in the Launch Template.
    launchTemplateSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    weightedCapacity : str, default is Undefined, optional
        Number of capacity units, which gives the instance type a proportional weight to other instance types.
    """


    instanceRequirements?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements

    instanceType?: str

    launchTemplateSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification

    weightedCapacity?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements:
    r"""
    Override the instance type in the Launch Template with instance types that satisfy the requirements.

    Attributes
    ----------
    acceleratorCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        List of accelerator types. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        List of CPU manufacturer names. Default is any manufacturer.
    excludedInstanceTypes : [str], default is Undefined, optional
        List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        List of instance generation names. Default is any generation.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu

    memoryMib?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib

    networkBandwidthGbps?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb

    vcpuCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib:
    r"""
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps:
    r"""
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification:
    r"""
    Nested argument defines the Launch Template. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. Conflicts with launch_template_name.
    launchTemplateIdRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRef, default is Undefined, optional
        launch template Id ref
    launchTemplateIdSelector : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelector, default is Undefined, optional
        launch template Id selector
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template. Conflicts with launch_template_id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    launchTemplateId?: str

    launchTemplateIdRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRef

    launchTemplateIdSelector?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelector

    launchTemplateName?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupRef:
    r"""
    Reference to a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupSelector:
    r"""
    Selector for a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderPlacementGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceLinkedRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceLinkedRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderServiceLinkedRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderTagItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec init provider tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key
    propagateAtLaunch : bool, default is Undefined, optional
        Enables propagation of the tag to
        Amazon EC2 instances launched via this ASG
    value : str, default is Undefined, optional
        Value
    """


    key?: str

    propagateAtLaunch?: bool

    value?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderTrafficSourceItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group spec init provider traffic source items0

    Attributes
    ----------
    identifier : str, default is Undefined, optional
        Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.
    $type : str, default is Undefined, optional
        Provides additional context for the value of Identifier.
        The following lists the valid values:
        elb if identifier is the name of a Classic Load Balancer.
        elbv2 if identifier is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.
        vpc-lattice if identifier is the ARN of a VPC Lattice target group.
    """


    identifier?: str

    $type?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierRefsItems0Policy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate vpcZoneIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderVpcZoneIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderWarmPool:
    r"""
    If this block is configured, add a Warm Pool
    to the specified Auto Scaling group. Defined below

    Attributes
    ----------
    instanceReusePolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderWarmPoolInstanceReusePolicy, default is Undefined, optional
        instance reuse policy
    maxGroupPreparedCapacity : float, default is Undefined, optional
        Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
    minSize : float, default is Undefined, optional
        Minimum size of the Auto Scaling Group.
        (See also Waiting for Capacity below.)
    poolState : str, default is Undefined, optional
        Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.
    """


    instanceReusePolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderWarmPoolInstanceReusePolicy

    maxGroupPreparedCapacity?: float

    minSize?: float

    poolState?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecInitProviderWarmPoolInstanceReusePolicy:
    r"""
    Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.

    Attributes
    ----------
    reuseOnScaleIn : bool, default is Undefined, optional
        Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.
    """


    reuseOnScaleIn?: bool


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecProviderConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatus:
    r"""
    AutoscalingGroupStatus defines the observed state of AutoscalingGroup.

    Attributes
    ----------
    atProvider : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProvider

    conditions?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusConditionsItems0]

    observedGeneration?: int


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProvider:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    availabilityZoneDistribution : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderAvailabilityZoneDistribution, default is Undefined, optional
        availability zone distribution
    availabilityZones : [str], default is Undefined, optional
        A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the vpc_zone_identifier attribute, or for attaching a network interface when an existing network interface ID is specified in a launch template. Conflicts with vpc_zone_identifier.
    capacityRebalance : bool, default is Undefined, optional
        Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.
    context : str, default is Undefined, optional
        Reserved.
    defaultCooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
    defaultInstanceWarmup : float, default is Undefined, optional
        Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)
    desiredCapacity : float, default is Undefined, optional
        Number of Amazon EC2 instances that
        should be running in the group. (See also Waiting for
        Capacity below.)
    desiredCapacityType : str, default is Undefined, optional
        The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: "units", "vcpu", "memory-mib".
    enabledMetrics : [str], default is Undefined, optional
        List of metrics to collect. The allowed values are defined by the underlying AWS API.
    forceDelete : bool, default is Undefined, optional
        Allows deleting the Auto Scaling Group without waiting
        for all instances in the pool to terminate. You can force an Auto Scaling Group to delete
        even if it's in the process of scaling a resource. This bypasses that
        behavior and potentially leaves resources dangling.
    forceDeleteWarmPool : bool, default is Undefined, optional
        Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate.
    healthCheckGracePeriod : float, default is Undefined, optional
        Time (in seconds) after instance comes into service before checking health.
    healthCheckType : str, default is Undefined, optional
        "EC2" or "ELB". Controls how health checking is done.
    id : str, default is Undefined, optional
        Auto Scaling Group id.
    ignoreFailedScalingActivities : bool, default is Undefined, optional
        Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned.
    initialLifecycleHook : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInitialLifecycleHookItems0], default is Undefined, optional
        One or more
        Lifecycle Hooks
        to attach to the Auto Scaling Group before instances are launched. The
        syntax is exactly the same as the separate
        aws_autoscaling_lifecycle_hook
        resource, without the autoscaling_group_name attribute. Please note that this will only work when creating
        a new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.
    instanceMaintenancePolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceMaintenancePolicy, default is Undefined, optional
        instance maintenance policy
    instanceRefresh : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefresh, default is Undefined, optional
        instance refresh
    launchConfiguration : str, default is Undefined, optional
        Name of the launch configuration to use.
    launchTemplate : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderLaunchTemplate, default is Undefined, optional
        launch template
    loadBalancers : [str], default is Undefined, optional
        List of elastic load balancer names to add to the autoscaling
        group names. Only valid for classic load balancers. For ALBs, use target_group_arns instead. To remove all load balancer attachments an empty list should be specified.
    maxInstanceLifetime : float, default is Undefined, optional
        Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.
    maxSize : float, default is Undefined, optional
        Maximum size of the Auto Scaling Group.
    metricsGranularity : str, default is Undefined, optional
        Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.
    minElbCapacity : float, default is Undefined, optional
        Updates will not wait on ELB instance number changes.
        (See also Waiting for Capacity below.)
    minSize : float, default is Undefined, optional
        Minimum size of the Auto Scaling Group.
        (See also Waiting for Capacity below.)
    mixedInstancesPolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicy, default is Undefined, optional
        mixed instances policy
    placementGroup : str, default is Undefined, optional
        Name of the placement group into which you'll launch your instances, if any.
    predictedCapacity : float, default is Undefined, optional
        Predicted capacity of the group.
    protectFromScaleIn : bool, default is Undefined, optional
        Whether newly launched instances
        are automatically protected from termination by Amazon EC2 Auto Scaling when
        scaling in. For more information about preventing instances from terminating
        on scale in, see Using instance scale-in protection
        in the Amazon EC2 Auto Scaling User Guide.
    serviceLinkedRoleArn : str, default is Undefined, optional
        ARN of the service-linked role that the ASG will use to call other AWS services
    suspendedProcesses : [str], default is Undefined, optional
        List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.
        Note that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.
    tag : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderTagItems0], default is Undefined, optional
        Configuration block(s) containing resource tags. See Tag below for more details.
    targetGroupArns : [str], default is Undefined, optional
        Set of aws_alb_target_group ARNs, for use with Application or Network Load Balancing. To remove all target group attachments an empty list should be specified.
    terminationPolicies : [str], default is Undefined, optional
        List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.
    trafficSource : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderTrafficSourceItems0], default is Undefined, optional
        Attaches one or more traffic sources to the specified Auto Scaling group.
    vpcZoneIdentifier : [str], default is Undefined, optional
        List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.
    waitForCapacityTimeout : str, default is Undefined, optional
        (See also Waiting
        for Capacity below.
    waitForElbCapacity : float, default is Undefined, optional
        (Takes
        precedence over min_elb_capacity behavior.)
        (See also Waiting for Capacity below.)
    warmPool : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderWarmPool, default is Undefined, optional
        warm pool
    warmPoolSize : float, default is Undefined, optional
        Current size of the warm pool.
    """


    arn?: str

    availabilityZoneDistribution?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderAvailabilityZoneDistribution

    availabilityZones?: [str]

    capacityRebalance?: bool

    context?: str

    defaultCooldown?: float

    defaultInstanceWarmup?: float

    desiredCapacity?: float

    desiredCapacityType?: str

    enabledMetrics?: [str]

    forceDelete?: bool

    forceDeleteWarmPool?: bool

    healthCheckGracePeriod?: float

    healthCheckType?: str

    id?: str

    ignoreFailedScalingActivities?: bool

    initialLifecycleHook?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInitialLifecycleHookItems0]

    instanceMaintenancePolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceMaintenancePolicy

    instanceRefresh?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefresh

    launchConfiguration?: str

    launchTemplate?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderLaunchTemplate

    loadBalancers?: [str]

    maxInstanceLifetime?: float

    maxSize?: float

    metricsGranularity?: str

    minElbCapacity?: float

    minSize?: float

    mixedInstancesPolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicy

    placementGroup?: str

    predictedCapacity?: float

    protectFromScaleIn?: bool

    serviceLinkedRoleArn?: str

    suspendedProcesses?: [str]

    tag?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderTagItems0]

    targetGroupArns?: [str]

    terminationPolicies?: [str]

    trafficSource?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderTrafficSourceItems0]

    vpcZoneIdentifier?: [str]

    waitForCapacityTimeout?: str

    waitForElbCapacity?: float

    warmPool?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderWarmPool

    warmPoolSize?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderAvailabilityZoneDistribution:
    r"""
    The instance capacity distribution across Availability Zones. See Availability Zone Distribution below for more details.

    Attributes
    ----------
    capacityDistributionStrategy : str, default is Undefined, optional
        The strategy to use for distributing capacity across the Availability Zones. Valid values are balanced-only and balanced-best-effort. Default is balanced-best-effort.
    """


    capacityDistributionStrategy?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInitialLifecycleHookItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group status at provider initial lifecycle hook items0

    Attributes
    ----------
    defaultResult : str, default is Undefined, optional
        default result
    heartbeatTimeout : float, default is Undefined, optional
        heartbeat timeout
    lifecycleTransition : str, default is Undefined, optional
        lifecycle transition
    name : str, default is Undefined, optional
        Name of the Auto Scaling Group. Conflicts with name_prefix.
    notificationMetadata : str, default is Undefined, optional
        notification metadata
    notificationTargetArn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    roleArn : str, default is Undefined, optional
        ARN for this Auto Scaling Group
    """


    defaultResult?: str

    heartbeatTimeout?: float

    lifecycleTransition?: str

    name?: str

    notificationMetadata?: str

    notificationTargetArn?: str

    roleArn?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceMaintenancePolicy:
    r"""
    If this block is configured, add a instance maintenance policy to the specified Auto Scaling group. Defined below.

    Attributes
    ----------
    maxHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.
    minHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
    """


    maxHealthyPercentage?: float

    minHealthyPercentage?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefresh:
    r"""
    If this block is configured, start an
    Instance Refresh
    when this Auto Scaling Group is updated. Defined below.

    Attributes
    ----------
    preferences : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefreshPreferences, default is Undefined, optional
        preferences
    strategy : str, default is Undefined, optional
        Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.
    triggers : [str], default is Undefined, optional
        Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.
    """


    preferences?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefreshPreferences

    strategy?: str

    triggers?: [str]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefreshPreferences:
    r"""
    Override default parameters for Instance Refresh.

    Attributes
    ----------
    alarmSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefreshPreferencesAlarmSpecification, default is Undefined, optional
        alarm specification
    autoRollback : bool, default is Undefined, optional
        Automatically rollback if instance refresh fails. Defaults to false. This option may only be set to true when specifying a launch_template or mixed_instances_policy.
    checkpointDelay : str, default is Undefined, optional
        Number of seconds to wait after a checkpoint. Defaults to 3600.
    checkpointPercentages : [float], default is Undefined, optional
        List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.
    instanceWarmup : str, default is Undefined, optional
        Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
    maxHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.
    minHealthyPercentage : float, default is Undefined, optional
        Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.
    scaleInProtectedInstances : str, default is Undefined, optional
        Behavior when encountering instances protected from scale in are found. Available behaviors are Refresh, Ignore, and Wait. Default is Ignore.
    skipMatching : bool, default is Undefined, optional
        Replace instances that already have your desired configuration. Defaults to false.
    standbyInstances : str, default is Undefined, optional
        Behavior when encountering instances in the Standby state in are found. Available behaviors are Terminate, Ignore, and Wait. Default is Ignore.
    """


    alarmSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefreshPreferencesAlarmSpecification

    autoRollback?: bool

    checkpointDelay?: str

    checkpointPercentages?: [float]

    instanceWarmup?: str

    maxHealthyPercentage?: float

    minHealthyPercentage?: float

    scaleInProtectedInstances?: str

    skipMatching?: bool

    standbyInstances?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderInstanceRefreshPreferencesAlarmSpecification:
    r"""
    Alarm Specification for Instance Refresh.

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        List of Cloudwatch alarms. If any of these alarms goes into ALARM state, Instance Refresh is failed.
    """


    alarms?: [str]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderLaunchTemplate:
    r"""
    Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID of the launch template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the launch template. Conflicts with id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    id?: str

    name?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicy:
    r"""
    Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.

    Attributes
    ----------
    instancesDistribution : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyInstancesDistribution, default is Undefined, optional
        instances distribution
    launchTemplate : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplate, default is Undefined, optional
        launch template
    """


    instancesDistribution?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyInstancesDistribution

    launchTemplate?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplate


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyInstancesDistribution:
    r"""
    Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.

    Attributes
    ----------
    onDemandAllocationStrategy : str, default is Undefined, optional
        Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.
    onDemandBaseCapacity : float, default is Undefined, optional
        Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.
    onDemandPercentageAboveBaseCapacity : float, default is Undefined, optional
        Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.
    spotAllocationStrategy : str, default is Undefined, optional
        How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.
    spotInstancePools : float, default is Undefined, optional
        Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.
    spotMaxPrice : str, default is Undefined, optional
        Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
    """


    onDemandAllocationStrategy?: str

    onDemandBaseCapacity?: float

    onDemandPercentageAboveBaseCapacity?: float

    spotAllocationStrategy?: str

    spotInstancePools?: float

    spotMaxPrice?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplate:
    r"""
    Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.

    Attributes
    ----------
    launchTemplateSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    override : [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0], default is Undefined, optional
        List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
    """


    launchTemplateSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification

    override?: [AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0]


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification:
    r"""
    Nested argument defines the Launch Template. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. Conflicts with launch_template_name.
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template. Conflicts with launch_template_id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    launchTemplateId?: str

    launchTemplateName?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group status at provider mixed instances policy launch template override items0

    Attributes
    ----------
    instanceRequirements : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        Override the instance type in the Launch Template.
    launchTemplateSpecification : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    weightedCapacity : str, default is Undefined, optional
        Number of capacity units, which gives the instance type a proportional weight to other instance types.
    """


    instanceRequirements?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements

    instanceType?: str

    launchTemplateSpecification?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification

    weightedCapacity?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirements:
    r"""
    Override the instance type in the Launch Template with instance types that satisfy the requirements.

    Attributes
    ----------
    acceleratorCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        List of accelerator types. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        List of CPU manufacturer names. Default is any manufacturer.
    excludedInstanceTypes : [str], default is Undefined, optional
        List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        List of instance generation names. Default is any generation.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu

    memoryMib?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib

    networkBandwidthGbps?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb

    vcpuCount?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsMemoryMib:
    r"""
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkBandwidthGbps:
    r"""
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0InstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderMixedInstancesPolicyLaunchTemplateOverrideItems0LaunchTemplateSpecification:
    r"""
    Nested argument defines the Launch Template. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. Conflicts with launch_template_name.
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template. Conflicts with launch_template_id.
    version : str, default is Undefined, optional
        Template version. Can be version number, $Latest, or $Default. (Default: $Default).
    """


    launchTemplateId?: str

    launchTemplateName?: str

    version?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderTagItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group status at provider tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key
    propagateAtLaunch : bool, default is Undefined, optional
        Enables propagation of the tag to
        Amazon EC2 instances launched via this ASG
    value : str, default is Undefined, optional
        Value
    """


    key?: str

    propagateAtLaunch?: bool

    value?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderTrafficSourceItems0:
    r"""
    autoscaling aws upbound io v1beta3 autoscaling group status at provider traffic source items0

    Attributes
    ----------
    identifier : str, default is Undefined, optional
        Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.
    $type : str, default is Undefined, optional
        Provides additional context for the value of Identifier.
        The following lists the valid values:
        elb if identifier is the name of a Classic Load Balancer.
        elbv2 if identifier is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.
        vpc-lattice if identifier is the ARN of a VPC Lattice target group.
    """


    identifier?: str

    $type?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderWarmPool:
    r"""
    If this block is configured, add a Warm Pool
    to the specified Auto Scaling group. Defined below

    Attributes
    ----------
    instanceReusePolicy : AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderWarmPoolInstanceReusePolicy, default is Undefined, optional
        instance reuse policy
    maxGroupPreparedCapacity : float, default is Undefined, optional
        Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.
    minSize : float, default is Undefined, optional
        Minimum size of the Auto Scaling Group.
        (See also Waiting for Capacity below.)
    poolState : str, default is Undefined, optional
        Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.
    """


    instanceReusePolicy?: AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderWarmPoolInstanceReusePolicy

    maxGroupPreparedCapacity?: float

    minSize?: float

    poolState?: str


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusAtProviderWarmPoolInstanceReusePolicy:
    r"""
    Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.

    Attributes
    ----------
    reuseOnScaleIn : bool, default is Undefined, optional
        Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.
    """


    reuseOnScaleIn?: bool


schema AutoscalingAwsUpboundIoV1beta3AutoscalingGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


