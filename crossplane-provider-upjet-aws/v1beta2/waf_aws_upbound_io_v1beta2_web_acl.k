"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema WebACL:
    r"""
    WebACL is the Schema for the WebACLs API. Provides a AWS WAF web access control group (ACL) resource.

    Attributes
    ----------
    apiVersion : str, default is "waf.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "WebACL", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : WafAwsUpboundIoV1beta2WebACLSpec, default is Undefined, required
        spec
    status : WafAwsUpboundIoV1beta2WebACLStatus, default is Undefined, optional
        status
    """


    apiVersion: "waf.aws.upbound.io/v1beta2" = "waf.aws.upbound.io/v1beta2"

    kind: "WebACL" = "WebACL"

    metadata?: v1.ObjectMeta

    spec: WafAwsUpboundIoV1beta2WebACLSpec

    status?: WafAwsUpboundIoV1beta2WebACLStatus


schema WafAwsUpboundIoV1beta2WebACLSpec:
    r"""
    WebACLSpec defines the desired state of WebACL

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : WafAwsUpboundIoV1beta2WebACLSpecForProvider, default is Undefined, required
        for provider
    initProvider : WafAwsUpboundIoV1beta2WebACLSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : WafAwsUpboundIoV1beta2WebACLSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : WafAwsUpboundIoV1beta2WebACLSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: WafAwsUpboundIoV1beta2WebACLSpecForProvider

    initProvider?: WafAwsUpboundIoV1beta2WebACLSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: WafAwsUpboundIoV1beta2WebACLSpecProviderConfigRef

    publishConnectionDetailsTo?: WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: WafAwsUpboundIoV1beta2WebACLSpecWriteConnectionSecretToRef


schema WafAwsUpboundIoV1beta2WebACLSpecForProvider:
    r"""
    waf aws upbound io v1beta2 web ACL spec for provider

    Attributes
    ----------
    defaultAction : WafAwsUpboundIoV1beta2WebACLSpecForProviderDefaultAction, default is Undefined, optional
        default action
    loggingConfiguration : WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    metricName : str, default is Undefined, optional
        The name or description for the Amazon CloudWatch metric of this web ACL.
    name : str, default is Undefined, optional
        The name or description of the web ACL.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rules : [WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0], default is Undefined, optional
        Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    defaultAction?: WafAwsUpboundIoV1beta2WebACLSpecForProviderDefaultAction

    loggingConfiguration?: WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfiguration

    metricName?: str

    name?: str

    region: str

    rules?: [WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0]

    tags?: {str:str}


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderDefaultAction:
    r"""
    Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the rules.
        e.g., ALLOW or BLOCK
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfiguration:
    r"""
    Configuration block to enable WAF logging. Detailed below.

    Attributes
    ----------
    logDestination : str, default is Undefined, optional
        Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
    logDestinationRef : WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationRef, default is Undefined, optional
        log destination ref
    logDestinationSelector : WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationSelector, default is Undefined, optional
        log destination selector
    redactedFields : WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationRedactedFields, default is Undefined, optional
        redacted fields
    """


    logDestination?: str

    logDestinationRef?: WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationRef

    logDestinationSelector?: WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationSelector

    redactedFields?: WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationRedactedFields


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationRef:
    r"""
    Reference to a DeliveryStream in firehose to populate logDestination.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationRefPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate logDestination.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationSelectorPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationLogDestinationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationRedactedFields:
    r"""
    Configuration block containing parts of the request that you want redacted from the logs. Detailed below.

    Attributes
    ----------
    fieldToMatch : [WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0], default is Undefined, optional
        Set of configuration blocks for fields to redact. Detailed below.
    """


    fieldToMatch?: [WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0]


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0:
    r"""
    waf aws upbound io v1beta2 web ACL spec for provider logging configuration redacted fields field to match items0

    Attributes
    ----------
    data : str, default is Undefined, optional
        When the value of type is HEADER, enter the name of the header that you want the WAF to search, for example, User-Agent or Referer. If the value of type is any other value, omit data.
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    data?: str

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0:
    r"""
    waf aws upbound io v1beta2 web ACL spec for provider rules items0

    Attributes
    ----------
    action : WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0Action, default is Undefined, optional
        action
    overrideAction : WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0OverrideAction, default is Undefined, optional
        override action
    priority : float, default is Undefined, optional
        Specifies the order in which the rules in a WebACL are evaluated.
        Rules with a lower value are evaluated before rules with a higher value.
    ruleId : str, default is Undefined, optional
        ID of the associated WAF (Global) rule (e.g., aws_waf_rule). WAF (Regional) rules cannot be used.
    ruleIdRef : WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDRef, default is Undefined, optional
        rule Id ref
    ruleIdSelector : WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDSelector, default is Undefined, optional
        rule Id selector
    $type : str, default is Undefined, optional
        The rule type, either REGULAR, as defined by Rule, RATE_BASED, as defined by RateBasedRule, or GROUP, as defined by RuleGroup. The default is REGULAR. If you add a RATE_BASED rule, you need to set type as RATE_BASED. If you add a GROUP rule, you need to set type as GROUP.
    """


    action?: WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0Action

    overrideAction?: WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0OverrideAction

    priority?: float

    ruleId?: str

    ruleIdRef?: WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDRef

    ruleIdSelector?: WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDSelector

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0Action:
    r"""
    The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if type is GROUP.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0OverrideAction:
    r"""
    Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if type is GROUP.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDRef:
    r"""
    Reference to a Rule in waf to populate ruleId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDRefPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDSelector:
    r"""
    Selector for a Rule in waf to populate ruleId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDSelectorPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecForProviderRulesItems0RuleIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultAction : WafAwsUpboundIoV1beta2WebACLSpecInitProviderDefaultAction, default is Undefined, optional
        default action
    loggingConfiguration : WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    metricName : str, default is Undefined, optional
        The name or description for the Amazon CloudWatch metric of this web ACL.
    name : str, default is Undefined, optional
        The name or description of the web ACL.
    rules : [WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0], default is Undefined, optional
        Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    defaultAction?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderDefaultAction

    loggingConfiguration?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfiguration

    metricName?: str

    name?: str

    rules?: [WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0]

    tags?: {str:str}


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderDefaultAction:
    r"""
    Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the rules.
        e.g., ALLOW or BLOCK
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfiguration:
    r"""
    Configuration block to enable WAF logging. Detailed below.

    Attributes
    ----------
    logDestination : str, default is Undefined, optional
        Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
    logDestinationRef : WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationRef, default is Undefined, optional
        log destination ref
    logDestinationSelector : WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationSelector, default is Undefined, optional
        log destination selector
    redactedFields : WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationRedactedFields, default is Undefined, optional
        redacted fields
    """


    logDestination?: str

    logDestinationRef?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationRef

    logDestinationSelector?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationSelector

    redactedFields?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationRedactedFields


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationRef:
    r"""
    Reference to a DeliveryStream in firehose to populate logDestination.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationRefPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate logDestination.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationSelectorPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationLogDestinationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationRedactedFields:
    r"""
    Configuration block containing parts of the request that you want redacted from the logs. Detailed below.

    Attributes
    ----------
    fieldToMatch : [WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0], default is Undefined, optional
        Set of configuration blocks for fields to redact. Detailed below.
    """


    fieldToMatch?: [WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0]


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0:
    r"""
    waf aws upbound io v1beta2 web ACL spec init provider logging configuration redacted fields field to match items0

    Attributes
    ----------
    data : str, default is Undefined, optional
        When the value of type is HEADER, enter the name of the header that you want the WAF to search, for example, User-Agent or Referer. If the value of type is any other value, omit data.
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    data?: str

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0:
    r"""
    waf aws upbound io v1beta2 web ACL spec init provider rules items0

    Attributes
    ----------
    action : WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0Action, default is Undefined, optional
        action
    overrideAction : WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0OverrideAction, default is Undefined, optional
        override action
    priority : float, default is Undefined, optional
        Specifies the order in which the rules in a WebACL are evaluated.
        Rules with a lower value are evaluated before rules with a higher value.
    ruleId : str, default is Undefined, optional
        ID of the associated WAF (Global) rule (e.g., aws_waf_rule). WAF (Regional) rules cannot be used.
    ruleIdRef : WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDRef, default is Undefined, optional
        rule Id ref
    ruleIdSelector : WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDSelector, default is Undefined, optional
        rule Id selector
    $type : str, default is Undefined, optional
        The rule type, either REGULAR, as defined by Rule, RATE_BASED, as defined by RateBasedRule, or GROUP, as defined by RuleGroup. The default is REGULAR. If you add a RATE_BASED rule, you need to set type as RATE_BASED. If you add a GROUP rule, you need to set type as GROUP.
    """


    action?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0Action

    overrideAction?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0OverrideAction

    priority?: float

    ruleId?: str

    ruleIdRef?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDRef

    ruleIdSelector?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDSelector

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0Action:
    r"""
    The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if type is GROUP.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0OverrideAction:
    r"""
    Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if type is GROUP.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDRef:
    r"""
    Reference to a Rule in waf to populate ruleId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDRefPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDSelector:
    r"""
    Selector for a Rule in waf to populate ruleId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDSelectorPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecInitProviderRulesItems0RuleIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WafAwsUpboundIoV1beta2WebACLSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WafAwsUpboundIoV1beta2WebACLSpecProviderConfigRefPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToConfigRef

    metadata?: WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToMetadata

    name: str


schema WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToConfigRefPolicy


schema WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema WafAwsUpboundIoV1beta2WebACLSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema WafAwsUpboundIoV1beta2WebACLStatus:
    r"""
    WebACLStatus defines the observed state of WebACL.

    Attributes
    ----------
    atProvider : WafAwsUpboundIoV1beta2WebACLStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [WafAwsUpboundIoV1beta2WebACLStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: WafAwsUpboundIoV1beta2WebACLStatusAtProvider

    conditions?: [WafAwsUpboundIoV1beta2WebACLStatusConditionsItems0]

    observedGeneration?: int


schema WafAwsUpboundIoV1beta2WebACLStatusAtProvider:
    r"""
    waf aws upbound io v1beta2 web ACL status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the WAF WebACL.
    defaultAction : WafAwsUpboundIoV1beta2WebACLStatusAtProviderDefaultAction, default is Undefined, optional
        default action
    id : str, default is Undefined, optional
        The ID of the WAF WebACL.
    loggingConfiguration : WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    metricName : str, default is Undefined, optional
        The name or description for the Amazon CloudWatch metric of this web ACL.
    name : str, default is Undefined, optional
        The name or description of the web ACL.
    rules : [WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0], default is Undefined, optional
        Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    defaultAction?: WafAwsUpboundIoV1beta2WebACLStatusAtProviderDefaultAction

    id?: str

    loggingConfiguration?: WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfiguration

    metricName?: str

    name?: str

    rules?: [WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0]

    tags?: {str:str}

    tagsAll?: {str:str}


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderDefaultAction:
    r"""
    Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Specifies how you want AWS WAF to respond to requests that don't match the criteria in any of the rules.
        e.g., ALLOW or BLOCK
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfiguration:
    r"""
    Configuration block to enable WAF logging. Detailed below.

    Attributes
    ----------
    logDestination : str, default is Undefined, optional
        Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
    redactedFields : WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfigurationRedactedFields, default is Undefined, optional
        redacted fields
    """


    logDestination?: str

    redactedFields?: WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfigurationRedactedFields


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfigurationRedactedFields:
    r"""
    Configuration block containing parts of the request that you want redacted from the logs. Detailed below.

    Attributes
    ----------
    fieldToMatch : [WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0], default is Undefined, optional
        Set of configuration blocks for fields to redact. Detailed below.
    """


    fieldToMatch?: [WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0]


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderLoggingConfigurationRedactedFieldsFieldToMatchItems0:
    r"""
    waf aws upbound io v1beta2 web ACL status at provider logging configuration redacted fields field to match items0

    Attributes
    ----------
    data : str, default is Undefined, optional
        When the value of type is HEADER, enter the name of the header that you want the WAF to search, for example, User-Agent or Referer. If the value of type is any other value, omit data.
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    data?: str

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0:
    r"""
    waf aws upbound io v1beta2 web ACL status at provider rules items0

    Attributes
    ----------
    action : WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0Action, default is Undefined, optional
        action
    overrideAction : WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0OverrideAction, default is Undefined, optional
        override action
    priority : float, default is Undefined, optional
        Specifies the order in which the rules in a WebACL are evaluated.
        Rules with a lower value are evaluated before rules with a higher value.
    ruleId : str, default is Undefined, optional
        ID of the associated WAF (Global) rule (e.g., aws_waf_rule). WAF (Regional) rules cannot be used.
    $type : str, default is Undefined, optional
        The rule type, either REGULAR, as defined by Rule, RATE_BASED, as defined by RateBasedRule, or GROUP, as defined by RuleGroup. The default is REGULAR. If you add a RATE_BASED rule, you need to set type as RATE_BASED. If you add a GROUP rule, you need to set type as GROUP.
    """


    action?: WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0Action

    overrideAction?: WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0OverrideAction

    priority?: float

    ruleId?: str

    $type?: str


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0Action:
    r"""
    The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if type is GROUP.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLStatusAtProviderRulesItems0OverrideAction:
    r"""
    Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if type is GROUP.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        valid values are: BLOCK, ALLOW, or COUNT
    """


    $type?: str


schema WafAwsUpboundIoV1beta2WebACLStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


