"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IPAddressClaim:
    r"""
    IPAddressClaim is the Schema for the ipaddressclaim API.

    Attributes
    ----------
    apiVersion : str, default is "ipam.cluster.x-k8s.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IPAddressClaim", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IpamClusterxK8sIoV1beta1IPAddressClaimSpec, default is Undefined, optional
        spec
    status : IpamClusterxK8sIoV1beta1IPAddressClaimStatus, default is Undefined, optional
        status
    """


    apiVersion: "ipam.cluster.x-k8s.io/v1beta1" = "ipam.cluster.x-k8s.io/v1beta1"

    kind: "IPAddressClaim" = "IPAddressClaim"

    metadata?: v1.ObjectMeta

    spec?: IpamClusterxK8sIoV1beta1IPAddressClaimSpec

    status?: IpamClusterxK8sIoV1beta1IPAddressClaimStatus


schema IpamClusterxK8sIoV1beta1IPAddressClaimSpec:
    r"""
    IPAddressClaimSpec is the desired state of an IPAddressClaim.

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        ClusterName is the name of the Cluster this object belongs to.
    poolRef : IpamClusterxK8sIoV1beta1IPAddressClaimSpecPoolRef, default is Undefined, required
        pool ref
    """


    clusterName?: str

    poolRef: IpamClusterxK8sIoV1beta1IPAddressClaimSpecPoolRef


schema IpamClusterxK8sIoV1beta1IPAddressClaimSpecPoolRef:
    r"""
    PoolRef is a reference to the pool from which an IP address should be created.

    Attributes
    ----------
    apiGroup : str, default is Undefined, optional
        APIGroup is the group for the resource being referenced.
        If APIGroup is not specified, the specified Kind must be in the core API group.
        For any other third-party types, APIGroup is required.
    kind : str, default is Undefined, required
        Kind is the type of resource being referenced
    name : str, default is Undefined, required
        Name is the name of resource being referenced
    """


    apiGroup?: str

    kind: str

    name: str


schema IpamClusterxK8sIoV1beta1IPAddressClaimStatus:
    r"""
    IPAddressClaimStatus is the observed status of a IPAddressClaim.

    Attributes
    ----------
    addressRef : IpamClusterxK8sIoV1beta1IPAddressClaimStatusAddressRef, default is Undefined, optional
        address ref
    conditions : [IpamClusterxK8sIoV1beta1IPAddressClaimStatusConditionsItems0], default is Undefined, optional
        Conditions summarises the current state of the IPAddressClaim
    """


    addressRef?: IpamClusterxK8sIoV1beta1IPAddressClaimStatusAddressRef

    conditions?: [IpamClusterxK8sIoV1beta1IPAddressClaimStatusConditionsItems0]


schema IpamClusterxK8sIoV1beta1IPAddressClaimStatusAddressRef:
    r"""
    AddressRef is a reference to the address that was created for this claim.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent.
        This field is effectively required, but due to backwards compatibility is
        allowed to be empty. Instances of this type with an empty value here are
        almost certainly wrong.
        TODO: Add other useful fields. apiVersion, kind, uid?
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
    """


    name?: str = ""


schema IpamClusterxK8sIoV1beta1IPAddressClaimStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


