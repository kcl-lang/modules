"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CustomPlugin:
    r"""
    CustomPlugin is the Schema for the CustomPlugins API. Provides an Amazon MSK Connect custom plugin resource. This resource can be Created, Observed and Deleted, but not Updated. AWS does not currently provide update APIs.

    Attributes
    ----------
    apiVersion : str, default is "kafkaconnect.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CustomPlugin", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpec, default is Undefined, required
        spec
    status : KafkaconnectAwsUpboundIoV1beta2CustomPluginStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafkaconnect.aws.upbound.io/v1beta2" = "kafkaconnect.aws.upbound.io/v1beta2"

    kind: "CustomPlugin" = "CustomPlugin"

    metadata?: v1.ObjectMeta

    spec: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpec

    status?: KafkaconnectAwsUpboundIoV1beta2CustomPluginStatus


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpec:
    r"""
    CustomPluginSpec defines the desired state of CustomPlugin

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProvider, default is Undefined, required
        for provider
    initProvider : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProvider

    initProvider?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecProviderConfigRef

    publishConnectionDetailsTo?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecWriteConnectionSecretToRef


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProvider:
    r"""
    kafkaconnect aws upbound io v1beta2 custom plugin spec for provider

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The type of the plugin file. Allowed values are ZIP and JAR.
    description : str, default is Undefined, optional
        A summary description of the custom plugin.
    location : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocation, default is Undefined, optional
        location
    name : str, default is Undefined, required
        The name of the custom plugin..
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    contentType?: str

    description?: str

    location?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocation

    name: str

    region: str

    tags?: {str:str}


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocation:
    r"""
    Information about the location of a custom plugin. See location Block for details.

    Attributes
    ----------
    s3 : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3, default is Undefined, optional
        s3
    """


    s3?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3:
    r"""
    Information of the plugin file stored in Amazon S3. See s3 Block for details..

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an S3 bucket.
    bucketArnRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for an object in an S3 bucket.
    fileKeyRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeyRef, default is Undefined, optional
        file key ref
    fileKeySelector : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeySelector, default is Undefined, optional
        file key selector
    objectVersion : str, default is Undefined, optional
        The version of an object in an S3 bucket.
    """


    bucketArn?: str

    bucketArnRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnRef

    bucketArnSelector?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnSelector

    fileKey?: str

    fileKeyRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeyRef

    fileKeySelector?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeySelector

    objectVersion?: str


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeyRef:
    r"""
    Reference to a Object in s3 to populate fileKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeyRefPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeySelector:
    r"""
    Selector for a Object in s3 to populate fileKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeySelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecForProviderLocationS3FileKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The type of the plugin file. Allowed values are ZIP and JAR.
    description : str, default is Undefined, optional
        A summary description of the custom plugin.
    location : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocation, default is Undefined, optional
        location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    contentType?: str

    description?: str

    location?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocation

    tags?: {str:str}


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocation:
    r"""
    Information about the location of a custom plugin. See location Block for details.

    Attributes
    ----------
    s3 : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3, default is Undefined, optional
        s3
    """


    s3?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3:
    r"""
    Information of the plugin file stored in Amazon S3. See s3 Block for details..

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an S3 bucket.
    bucketArnRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnRef, default is Undefined, optional
        bucket arn ref
    bucketArnSelector : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnSelector, default is Undefined, optional
        bucket arn selector
    fileKey : str, default is Undefined, optional
        The file key for an object in an S3 bucket.
    fileKeyRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeyRef, default is Undefined, optional
        file key ref
    fileKeySelector : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeySelector, default is Undefined, optional
        file key selector
    objectVersion : str, default is Undefined, optional
        The version of an object in an S3 bucket.
    """


    bucketArn?: str

    bucketArnRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnRef

    bucketArnSelector?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnSelector

    fileKey?: str

    fileKeyRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeyRef

    fileKeySelector?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeySelector

    objectVersion?: str


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnRef:
    r"""
    Reference to a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3BucketArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeyRef:
    r"""
    Reference to a Object in s3 to populate fileKey.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeyRefPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeySelector:
    r"""
    Selector for a Object in s3 to populate fileKey.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeySelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecInitProviderLocationS3FileKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecProviderConfigRefPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToConfigRef

    metadata?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToMetadata

    name: str


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToConfigRefPolicy


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginStatus:
    r"""
    CustomPluginStatus defines the observed state of CustomPlugin.

    Attributes
    ----------
    atProvider : KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProvider

    conditions?: [KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusConditionsItems0]

    observedGeneration?: int


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProvider:
    r"""
    kafkaconnect aws upbound io v1beta2 custom plugin status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        the Amazon Resource Name (ARN) of the custom plugin.
    contentType : str, default is Undefined, optional
        The type of the plugin file. Allowed values are ZIP and JAR.
    description : str, default is Undefined, optional
        A summary description of the custom plugin.
    id : str, default is Undefined, optional
        id
    latestRevision : float, default is Undefined, optional
        an ID of the latest successfully created revision of the custom plugin.
    location : KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProviderLocation, default is Undefined, optional
        location
    name : str, default is Undefined, optional
        The name of the custom plugin..
    state : str, default is Undefined, optional
        the state of the custom plugin.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    contentType?: str

    description?: str

    id?: str

    latestRevision?: float

    location?: KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProviderLocation

    name?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProviderLocation:
    r"""
    Information about the location of a custom plugin. See location Block for details.

    Attributes
    ----------
    s3 : KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProviderLocationS3, default is Undefined, optional
        s3
    """


    s3?: KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProviderLocationS3


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusAtProviderLocationS3:
    r"""
    Information of the plugin file stored in Amazon S3. See s3 Block for details..

    Attributes
    ----------
    bucketArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an S3 bucket.
    fileKey : str, default is Undefined, optional
        The file key for an object in an S3 bucket.
    objectVersion : str, default is Undefined, optional
        The version of an object in an S3 bucket.
    """


    bucketArn?: str

    fileKey?: str

    objectVersion?: str


schema KafkaconnectAwsUpboundIoV1beta2CustomPluginStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


