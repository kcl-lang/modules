"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VPCIpam:
    r"""
    VPCIpam is the Schema for the VPCIpams API. Provides an IPAM resource.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VPCIpam", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1VPCIpamSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1VPCIpamStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"

    kind: "VPCIpam" = "VPCIpam"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta1VPCIpamSpec

    status?: Ec2AwsUpboundIoV1beta1VPCIpamStatus


schema Ec2AwsUpboundIoV1beta1VPCIpamSpec:
    r"""
    VPCIpamSpec defines the desired state of VPCIpam

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1VPCIpamSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1VPCIpamSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1VPCIpamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1VPCIpamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta1VPCIpamSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta1VPCIpamSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta1VPCIpamSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1VPCIpamSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecForProvider:
    r"""
    ec2 aws upbound io v1beta1 v p c ipam spec for provider

    Attributes
    ----------
    cascade : bool, default is Undefined, optional
        Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
    description : str, default is Undefined, optional
        A description for the IPAM.
    enablePrivateGua : bool, default is Undefined, optional
        Enable this option to use your own GUA ranges as private IPv6 addresses. Default: false.
    operatingRegions : [Ec2AwsUpboundIoV1beta1VPCIpamSpecForProviderOperatingRegionsItems0], default is Undefined, optional
        Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. You must set your provider block region as an operating_region.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tier : str, default is Undefined, optional
        specifies the IPAM tier. Valid options include free and advanced. Default is advanced.
    """


    cascade?: bool

    description?: str

    enablePrivateGua?: bool

    operatingRegions?: [Ec2AwsUpboundIoV1beta1VPCIpamSpecForProviderOperatingRegionsItems0]

    region: str

    tags?: {str:str}

    tier?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecForProviderOperatingRegionsItems0:
    r"""
    ec2 aws upbound io v1beta1 v p c ipam spec for provider operating regions items0

    Attributes
    ----------
    regionName : str, default is Undefined, optional
        The name of the Region you want to add to the IPAM.
    """


    regionName?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cascade : bool, default is Undefined, optional
        Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
    description : str, default is Undefined, optional
        A description for the IPAM.
    enablePrivateGua : bool, default is Undefined, optional
        Enable this option to use your own GUA ranges as private IPv6 addresses. Default: false.
    operatingRegions : [Ec2AwsUpboundIoV1beta1VPCIpamSpecInitProviderOperatingRegionsItems0], default is Undefined, optional
        Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. You must set your provider block region as an operating_region.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tier : str, default is Undefined, optional
        specifies the IPAM tier. Valid options include free and advanced. Default is advanced.
    """


    cascade?: bool

    description?: str

    enablePrivateGua?: bool

    operatingRegions?: [Ec2AwsUpboundIoV1beta1VPCIpamSpecInitProviderOperatingRegionsItems0]

    tags?: {str:str}

    tier?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecInitProviderOperatingRegionsItems0:
    r"""
    ec2 aws upbound io v1beta1 v p c ipam spec init provider operating regions items0

    Attributes
    ----------
    regionName : str, default is Undefined, optional
        The name of the Region you want to add to the IPAM.
    """


    regionName?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1VPCIpamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1VPCIpamSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta1VPCIpamStatus:
    r"""
    VPCIpamStatus defines the observed state of VPCIpam.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1VPCIpamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1VPCIpamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta1VPCIpamStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta1VPCIpamStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta1VPCIpamStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta1 v p c ipam status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of IPAM
    cascade : bool, default is Undefined, optional
        Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
    defaultResourceDiscoveryAssociationId : str, default is Undefined, optional
        The IPAM's default resource discovery association ID.
    defaultResourceDiscoveryId : str, default is Undefined, optional
        The IPAM's default resource discovery ID.
    description : str, default is Undefined, optional
        A description for the IPAM.
    enablePrivateGua : bool, default is Undefined, optional
        Enable this option to use your own GUA ranges as private IPv6 addresses. Default: false.
    id : str, default is Undefined, optional
        The ID of the IPAM
    operatingRegions : [Ec2AwsUpboundIoV1beta1VPCIpamStatusAtProviderOperatingRegionsItems0], default is Undefined, optional
        Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. You must set your provider block region as an operating_region.
    privateDefaultScopeId : str, default is Undefined, optional
        The ID of the IPAM's private scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private IP space. The public scope is intended for all internet-routable IP space.
    publicDefaultScopeId : str, default is Undefined, optional
        The ID of the IPAM's public scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private
        IP space. The public scope is intended for all internet-routable IP space.
    scopeCount : float, default is Undefined, optional
        The number of scopes in the IPAM.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tier : str, default is Undefined, optional
        specifies the IPAM tier. Valid options include free and advanced. Default is advanced.
    """


    arn?: str

    cascade?: bool

    defaultResourceDiscoveryAssociationId?: str

    defaultResourceDiscoveryId?: str

    description?: str

    enablePrivateGua?: bool

    id?: str

    operatingRegions?: [Ec2AwsUpboundIoV1beta1VPCIpamStatusAtProviderOperatingRegionsItems0]

    privateDefaultScopeId?: str

    publicDefaultScopeId?: str

    scopeCount?: float

    tags?: {str:str}

    tagsAll?: {str:str}

    tier?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamStatusAtProviderOperatingRegionsItems0:
    r"""
    ec2 aws upbound io v1beta1 v p c ipam status at provider operating regions items0

    Attributes
    ----------
    regionName : str, default is Undefined, optional
        The name of the Region you want to add to the IPAM.
    """


    regionName?: str


schema Ec2AwsUpboundIoV1beta1VPCIpamStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


