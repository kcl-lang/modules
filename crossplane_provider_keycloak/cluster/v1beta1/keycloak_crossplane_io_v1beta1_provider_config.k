"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProviderConfig:
    r"""
    A ProviderConfig configures a keycloak provider.

    Attributes
    ----------
    apiVersion : str, default is "keycloak.crossplane.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProviderConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeycloakCrossplaneIoV1beta1ProviderConfigSpec, default is Undefined, required
        spec
    status : KeycloakCrossplaneIoV1beta1ProviderConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "keycloak.crossplane.io/v1beta1" = "keycloak.crossplane.io/v1beta1"

    kind: "ProviderConfig" = "ProviderConfig"

    metadata?: v1.ObjectMeta

    spec: KeycloakCrossplaneIoV1beta1ProviderConfigSpec

    status?: KeycloakCrossplaneIoV1beta1ProviderConfigStatus


schema KeycloakCrossplaneIoV1beta1ProviderConfigSpec:
    r"""
    A ProviderConfigSpec defines the desired state of a ProviderConfig.
    A ProviderConfigSpec defines the desired state of a ProviderConfig.

    Attributes
    ----------
    credentials : KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentials, default is Undefined, required
        credentials
    """


    credentials: KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentials


schema KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentials:
    r"""
    Credentials required to authenticate to this provider.

    Attributes
    ----------
    env : KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsEnv, default is Undefined, optional
        env
    fs : KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsFs, default is Undefined, optional
        fs
    secretRef : KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsSecretRef, default is Undefined, optional
        secret ref
    source : str, default is Undefined, required
        Source of the provider credentials.
    """


    env?: KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsEnv

    fs?: KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsFs

    secretRef?: KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsSecretRef

    source: "None" | "Secret" | "InjectedIdentity" | "Environment" | "Filesystem" | "Kubernetes"


schema KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsEnv:
    r"""
    Env is a reference to an environment variable that contains credentials
    that must be used to connect to the provider.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of an environment variable.
    """


    name: str


schema KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsFs:
    r"""
    Fs is a reference to a filesystem location that contains credentials that
    must be used to connect to the provider.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a filesystem path.
    """


    path: str


schema KeycloakCrossplaneIoV1beta1ProviderConfigSpecCredentialsSecretRef:
    r"""
    A SecretRef is a reference to a secret key that contains the credentials
    that must be used to connect to the provider.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KeycloakCrossplaneIoV1beta1ProviderConfigStatus:
    r"""
    A ProviderConfigStatus reflects the observed state of a ProviderConfig.

    Attributes
    ----------
    conditions : [KeycloakCrossplaneIoV1beta1ProviderConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    users : int, default is Undefined, optional
        Users of this provider configuration.
    """


    conditions?: [KeycloakCrossplaneIoV1beta1ProviderConfigStatusConditionsItems0]

    users?: int


schema KeycloakCrossplaneIoV1beta1ProviderConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


