"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Directory:
    r"""
    Directory is the Schema for the Directorys API. Provides a directory in AWS Directory Service.

    Attributes
    ----------
    apiVersion : str, default is "ds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Directory", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DsAwsUpboundIoV1beta1DirectorySpec, default is Undefined, required
        spec
    status : DsAwsUpboundIoV1beta1DirectoryStatus, default is Undefined, optional
        status
    """


    apiVersion: "ds.aws.upbound.io/v1beta1" = "ds.aws.upbound.io/v1beta1"

    kind: "Directory" = "Directory"

    metadata?: v1.ObjectMeta

    spec: DsAwsUpboundIoV1beta1DirectorySpec

    status?: DsAwsUpboundIoV1beta1DirectoryStatus


schema DsAwsUpboundIoV1beta1DirectorySpec:
    r"""
    DirectorySpec defines the desired state of Directory

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DsAwsUpboundIoV1beta1DirectorySpecForProvider, default is Undefined, required
        for provider
    initProvider : DsAwsUpboundIoV1beta1DirectorySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DsAwsUpboundIoV1beta1DirectorySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DsAwsUpboundIoV1beta1DirectorySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DsAwsUpboundIoV1beta1DirectorySpecForProvider

    initProvider?: DsAwsUpboundIoV1beta1DirectorySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DsAwsUpboundIoV1beta1DirectorySpecProviderConfigRef

    publishConnectionDetailsTo?: DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DsAwsUpboundIoV1beta1DirectorySpecWriteConnectionSecretToRef


schema DsAwsUpboundIoV1beta1DirectorySpecForProvider:
    r"""
    ds aws upbound io v1beta1 directory spec for provider

    Attributes
    ----------
    alias : str, default is Undefined, optional
        The alias for the directory (must be unique amongst all aliases in AWS). Required for enable_sso.
    connectSettings : [DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0], default is Undefined, optional
        Connector related information about the directory. Fields documented below.
    description : str, default is Undefined, optional
        A textual description for the directory.
    desiredNumberOfDomainControllers : float, default is Undefined, optional
        The number of domain controllers desired in the directory. Minimum value of 2. Scaling of domain controllers is only supported for MicrosoftAD directories.
    edition : str, default is Undefined, optional
        The MicrosoftAD edition (Standard or Enterprise). Defaults to Enterprise.
    enableSso : bool, default is Undefined, optional
        Whether to enable single-sign on for the directory. Requires alias. Defaults to false.
    name : str, default is Undefined, optional
        The fully qualified name for the directory, such as corp.example.com
    passwordSecretRef : DsAwsUpboundIoV1beta1DirectorySpecForProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    shortName : str, default is Undefined, optional
        The short name of the directory, such as CORP.
    size : str, default is Undefined, optional
        (For SimpleAD and ADConnector types) The size of the directory (Small or Large are accepted values). Large by default.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The directory type (SimpleAD, ADConnector or MicrosoftAD are accepted values). Defaults to SimpleAD.
    vpcSettings : [DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0], default is Undefined, optional
        VPC related information about the directory. Fields documented below.
    """


    alias?: str

    connectSettings?: [DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0]

    description?: str

    desiredNumberOfDomainControllers?: float

    edition?: str

    enableSso?: bool

    name?: str

    passwordSecretRef?: DsAwsUpboundIoV1beta1DirectorySpecForProviderPasswordSecretRef

    region: str

    shortName?: str

    size?: str

    tags?: {str:str}

    $type?: str

    vpcSettings?: [DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0]


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0:
    r"""
    ds aws upbound io v1beta1 directory spec for provider connect settings items0

    Attributes
    ----------
    customerDnsIps : [str], default is Undefined, optional
        The DNS IP addresses of the domain to connect to.
    customerUsername : str, default is Undefined, optional
        The username corresponding to the password provided.
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    subnetIdsRefs : [DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    vpcId : str, default is Undefined, optional
        The identifier of the VPC that the directory is in.
    vpcIdRef : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    customerDnsIps?: [str]

    customerUsername?: str

    subnetIds?: [str]

    subnetIdsRefs?: [DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsRefsItems0]

    subnetIdsSelector?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsSelector

    vpcId?: str

    vpcIdRef?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDRef

    vpcIdSelector?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDSelector


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsRefsItems0Policy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0SubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDRefPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderConnectSettingsItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderPasswordSecretRef:
    r"""
    The password for the directory administrator or connector user.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0:
    r"""
    ds aws upbound io v1beta1 directory spec for provider vpc settings items0

    Attributes
    ----------
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    subnetIdsRefs : [DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    vpcId : str, default is Undefined, optional
        The identifier of the VPC that the directory is in.
    vpcIdRef : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    subnetIds?: [str]

    subnetIdsRefs?: [DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsRefsItems0]

    subnetIdsSelector?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsSelector

    vpcId?: str

    vpcIdRef?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDRef

    vpcIdSelector?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDSelector


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsRefsItems0Policy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0SubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDRefPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecForProviderVpcSettingsItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alias : str, default is Undefined, optional
        The alias for the directory (must be unique amongst all aliases in AWS). Required for enable_sso.
    connectSettings : [DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0], default is Undefined, optional
        Connector related information about the directory. Fields documented below.
    description : str, default is Undefined, optional
        A textual description for the directory.
    desiredNumberOfDomainControllers : float, default is Undefined, optional
        The number of domain controllers desired in the directory. Minimum value of 2. Scaling of domain controllers is only supported for MicrosoftAD directories.
    edition : str, default is Undefined, optional
        The MicrosoftAD edition (Standard or Enterprise). Defaults to Enterprise.
    enableSso : bool, default is Undefined, optional
        Whether to enable single-sign on for the directory. Requires alias. Defaults to false.
    name : str, default is Undefined, optional
        The fully qualified name for the directory, such as corp.example.com
    passwordSecretRef : DsAwsUpboundIoV1beta1DirectorySpecInitProviderPasswordSecretRef, default is Undefined, required
        password secret ref
    shortName : str, default is Undefined, optional
        The short name of the directory, such as CORP.
    size : str, default is Undefined, optional
        (For SimpleAD and ADConnector types) The size of the directory (Small or Large are accepted values). Large by default.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The directory type (SimpleAD, ADConnector or MicrosoftAD are accepted values). Defaults to SimpleAD.
    vpcSettings : [DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0], default is Undefined, optional
        VPC related information about the directory. Fields documented below.
    """


    alias?: str

    connectSettings?: [DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0]

    description?: str

    desiredNumberOfDomainControllers?: float

    edition?: str

    enableSso?: bool

    name?: str

    passwordSecretRef: DsAwsUpboundIoV1beta1DirectorySpecInitProviderPasswordSecretRef

    shortName?: str

    size?: str

    tags?: {str:str}

    $type?: str

    vpcSettings?: [DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0]


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0:
    r"""
    ds aws upbound io v1beta1 directory spec init provider connect settings items0

    Attributes
    ----------
    customerDnsIps : [str], default is Undefined, optional
        The DNS IP addresses of the domain to connect to.
    customerUsername : str, default is Undefined, optional
        The username corresponding to the password provided.
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    subnetIdsRefs : [DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    vpcId : str, default is Undefined, optional
        The identifier of the VPC that the directory is in.
    vpcIdRef : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    customerDnsIps?: [str]

    customerUsername?: str

    subnetIds?: [str]

    subnetIdsRefs?: [DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsRefsItems0]

    subnetIdsSelector?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsSelector

    vpcId?: str

    vpcIdRef?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDRef

    vpcIdSelector?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDSelector


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsRefsItems0Policy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0SubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDRefPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderConnectSettingsItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderPasswordSecretRef:
    r"""
    The password for the directory administrator or connector user.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0:
    r"""
    ds aws upbound io v1beta1 directory spec init provider vpc settings items0

    Attributes
    ----------
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    subnetIdsRefs : [DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdsSelector : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsSelector, default is Undefined, optional
        subnet ids selector
    vpcId : str, default is Undefined, optional
        The identifier of the VPC that the directory is in.
    vpcIdRef : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    subnetIds?: [str]

    subnetIdsRefs?: [DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsRefsItems0]

    subnetIdsSelector?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsSelector

    vpcId?: str

    vpcIdRef?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDRef

    vpcIdSelector?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDSelector


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsRefsItems0Policy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0SubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDRefPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDSelectorPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecInitProviderVpcSettingsItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecProviderConfigRefPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRef

    metadata?: DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToMetadata

    name: str


schema DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRefPolicy


schema DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DsAwsUpboundIoV1beta1DirectorySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DsAwsUpboundIoV1beta1DirectorySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DsAwsUpboundIoV1beta1DirectoryStatus:
    r"""
    DirectoryStatus defines the observed state of Directory.

    Attributes
    ----------
    atProvider : DsAwsUpboundIoV1beta1DirectoryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DsAwsUpboundIoV1beta1DirectoryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DsAwsUpboundIoV1beta1DirectoryStatusAtProvider

    conditions?: [DsAwsUpboundIoV1beta1DirectoryStatusConditionsItems0]

    observedGeneration?: int


schema DsAwsUpboundIoV1beta1DirectoryStatusAtProvider:
    r"""
    ds aws upbound io v1beta1 directory status at provider

    Attributes
    ----------
    accessUrl : str, default is Undefined, optional
        The access URL for the directory, such as http://alias.awsapps.com.
    alias : str, default is Undefined, optional
        The alias for the directory (must be unique amongst all aliases in AWS). Required for enable_sso.
    connectSettings : [DsAwsUpboundIoV1beta1DirectoryStatusAtProviderConnectSettingsItems0], default is Undefined, optional
        Connector related information about the directory. Fields documented below.
    description : str, default is Undefined, optional
        A textual description for the directory.
    desiredNumberOfDomainControllers : float, default is Undefined, optional
        The number of domain controllers desired in the directory. Minimum value of 2. Scaling of domain controllers is only supported for MicrosoftAD directories.
    dnsIpAddresses : [str], default is Undefined, optional
        A list of IP addresses of the DNS servers for the directory or connector.
    edition : str, default is Undefined, optional
        The MicrosoftAD edition (Standard or Enterprise). Defaults to Enterprise.
    enableSso : bool, default is Undefined, optional
        Whether to enable single-sign on for the directory. Requires alias. Defaults to false.
    id : str, default is Undefined, optional
        The directory identifier.
    name : str, default is Undefined, optional
        The fully qualified name for the directory, such as corp.example.com
    securityGroupId : str, default is Undefined, optional
        The ID of the security group created by the directory.
    shortName : str, default is Undefined, optional
        The short name of the directory, such as CORP.
    size : str, default is Undefined, optional
        (For SimpleAD and ADConnector types) The size of the directory (Small or Large are accepted values). Large by default.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        The directory type (SimpleAD, ADConnector or MicrosoftAD are accepted values). Defaults to SimpleAD.
    vpcSettings : [DsAwsUpboundIoV1beta1DirectoryStatusAtProviderVpcSettingsItems0], default is Undefined, optional
        VPC related information about the directory. Fields documented below.
    """


    accessUrl?: str

    alias?: str

    connectSettings?: [DsAwsUpboundIoV1beta1DirectoryStatusAtProviderConnectSettingsItems0]

    description?: str

    desiredNumberOfDomainControllers?: float

    dnsIpAddresses?: [str]

    edition?: str

    enableSso?: bool

    id?: str

    name?: str

    securityGroupId?: str

    shortName?: str

    size?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    vpcSettings?: [DsAwsUpboundIoV1beta1DirectoryStatusAtProviderVpcSettingsItems0]


schema DsAwsUpboundIoV1beta1DirectoryStatusAtProviderConnectSettingsItems0:
    r"""
    ds aws upbound io v1beta1 directory status at provider connect settings items0

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        availability zones
    connectIps : [str], default is Undefined, optional
        The IP addresses of the AD Connector servers.
    customerDnsIps : [str], default is Undefined, optional
        The DNS IP addresses of the domain to connect to.
    customerUsername : str, default is Undefined, optional
        The username corresponding to the password provided.
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    vpcId : str, default is Undefined, optional
        The identifier of the VPC that the directory is in.
    """


    availabilityZones?: [str]

    connectIps?: [str]

    customerDnsIps?: [str]

    customerUsername?: str

    subnetIds?: [str]

    vpcId?: str


schema DsAwsUpboundIoV1beta1DirectoryStatusAtProviderVpcSettingsItems0:
    r"""
    ds aws upbound io v1beta1 directory status at provider vpc settings items0

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        availability zones
    subnetIds : [str], default is Undefined, optional
        The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).
    vpcId : str, default is Undefined, optional
        The identifier of the VPC that the directory is in.
    """


    availabilityZones?: [str]

    subnetIds?: [str]

    vpcId?: str


schema DsAwsUpboundIoV1beta1DirectoryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


