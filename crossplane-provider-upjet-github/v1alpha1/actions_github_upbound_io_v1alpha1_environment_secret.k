"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema EnvironmentSecret:
    r"""
    EnvironmentSecret is the Schema for the EnvironmentSecrets API. Creates and manages an Action Secret within a GitHub repository environment

    Attributes
    ----------
    apiVersion : str, default is "actions.github.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EnvironmentSecret", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpec, default is Undefined, required
        spec
    status : ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatus, default is Undefined, optional
        status
    """


    apiVersion: "actions.github.upbound.io/v1alpha1" = "actions.github.upbound.io/v1alpha1"

    kind: "EnvironmentSecret" = "EnvironmentSecret"

    metadata?: v1.ObjectMeta

    spec: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpec

    status?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatus


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpec:
    r"""
    EnvironmentSecretSpec defines the desired state of EnvironmentSecret

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProvider, default is Undefined, required
        for provider
    initProvider : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProvider

    initProvider?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecProviderConfigRef

    publishConnectionDetailsTo?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecWriteConnectionSecretToRef


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProvider:
    r"""
    actions github upbound io v1alpha1 environment secret spec for provider

    Attributes
    ----------
    encryptedValueSecretRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEncryptedValueSecretRef, default is Undefined, optional
        encrypted value secret ref
    environment : str, default is Undefined, optional
        Name of the environment.
        Name of the environment.
    environmentRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentRef, default is Undefined, optional
        environment ref
    environmentSelector : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentSelector, default is Undefined, optional
        environment selector
    plaintextValueSecretRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderPlaintextValueSecretRef, default is Undefined, optional
        plaintext value secret ref
    repository : str, default is Undefined, optional
        Name of the repository.
        Name of the repository.
    repositoryRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositoryRef, default is Undefined, optional
        repository ref
    repositorySelector : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositorySelector, default is Undefined, optional
        repository selector
    secretName : str, default is Undefined, optional
        Name of the secret.
        Name of the secret.
    """


    encryptedValueSecretRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEncryptedValueSecretRef

    environment?: str

    environmentRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentRef

    environmentSelector?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentSelector

    plaintextValueSecretRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderPlaintextValueSecretRef

    repository?: str

    repositoryRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositoryRef

    repositorySelector?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositorySelector

    secretName?: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEncryptedValueSecretRef:
    r"""
    Encrypted value of the secret using the GitHub public key in Base64 format.
    Encrypted value of the secret using the GitHub public key in Base64 format.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentRef:
    r"""
    Reference to a Environment in repo to populate environment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentRefPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentSelector:
    r"""
    Selector for a Environment in repo to populate environment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentSelectorPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderEnvironmentSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderPlaintextValueSecretRef:
    r"""
    Plaintext value of the secret to be encrypted.
    Plaintext value of the secret to be encrypted.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositoryRef:
    r"""
    Reference to a Repository in repo to populate repository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositoryRefPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositorySelector:
    r"""
    Selector for a Repository in repo to populate repository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositorySelectorPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecForProviderRepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    encryptedValueSecretRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEncryptedValueSecretRef, default is Undefined, optional
        encrypted value secret ref
    environment : str, default is Undefined, optional
        Name of the environment.
        Name of the environment.
    environmentRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentRef, default is Undefined, optional
        environment ref
    environmentSelector : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentSelector, default is Undefined, optional
        environment selector
    plaintextValueSecretRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderPlaintextValueSecretRef, default is Undefined, optional
        plaintext value secret ref
    repository : str, default is Undefined, optional
        Name of the repository.
        Name of the repository.
    repositoryRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositoryRef, default is Undefined, optional
        repository ref
    repositorySelector : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositorySelector, default is Undefined, optional
        repository selector
    secretName : str, default is Undefined, optional
        Name of the secret.
        Name of the secret.
    """


    encryptedValueSecretRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEncryptedValueSecretRef

    environment?: str

    environmentRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentRef

    environmentSelector?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentSelector

    plaintextValueSecretRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderPlaintextValueSecretRef

    repository?: str

    repositoryRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositoryRef

    repositorySelector?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositorySelector

    secretName?: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEncryptedValueSecretRef:
    r"""
    Encrypted value of the secret using the GitHub public key in Base64 format.
    Encrypted value of the secret using the GitHub public key in Base64 format.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentRef:
    r"""
    Reference to a Environment in repo to populate environment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentRefPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentSelector:
    r"""
    Selector for a Environment in repo to populate environment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentSelectorPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderEnvironmentSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderPlaintextValueSecretRef:
    r"""
    Plaintext value of the secret to be encrypted.
    Plaintext value of the secret to be encrypted.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositoryRef:
    r"""
    Reference to a Repository in repo to populate repository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositoryRefPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositorySelector:
    r"""
    Selector for a Repository in repo to populate repository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositorySelectorPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecInitProviderRepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecProviderConfigRefPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToConfigRef

    metadata?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToMetadata

    name: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToConfigRefPolicy


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatus:
    r"""
    EnvironmentSecretStatus defines the observed state of EnvironmentSecret.

    Attributes
    ----------
    atProvider : ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatusAtProvider

    conditions?: [ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatusConditionsItems0]

    observedGeneration?: int


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatusAtProvider:
    r"""
    actions github upbound io v1alpha1 environment secret status at provider

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
        Date of actions_environment_secret creation.
        Date of 'actions_environment_secret' creation.
    environment : str, default is Undefined, optional
        Name of the environment.
        Name of the environment.
    id : str, default is Undefined, optional
        id
    repository : str, default is Undefined, optional
        Name of the repository.
        Name of the repository.
    secretName : str, default is Undefined, optional
        Name of the secret.
        Name of the secret.
    updatedAt : str, default is Undefined, optional
        Date of actions_environment_secret update.
        Date of 'actions_environment_secret' update.
    """


    createdAt?: str

    environment?: str

    id?: str

    repository?: str

    secretName?: str

    updatedAt?: str


schema ActionsGithubUpboundIoV1alpha1EnvironmentSecretStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


