"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Fleet:
    r"""
    Fleet is the Schema for the Fleets API. Provides an AppStream fleet

    Attributes
    ----------
    apiVersion : str, default is "appstream.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Fleet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppstreamAwsUpboundIoV1beta2FleetSpec, default is Undefined, required
        spec
    status : AppstreamAwsUpboundIoV1beta2FleetStatus, default is Undefined, optional
        status
    """


    apiVersion: "appstream.aws.upbound.io/v1beta2" = "appstream.aws.upbound.io/v1beta2"

    kind: "Fleet" = "Fleet"

    metadata?: v1.ObjectMeta

    spec: AppstreamAwsUpboundIoV1beta2FleetSpec

    status?: AppstreamAwsUpboundIoV1beta2FleetStatus


schema AppstreamAwsUpboundIoV1beta2FleetSpec:
    r"""
    FleetSpec defines the desired state of Fleet

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppstreamAwsUpboundIoV1beta2FleetSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppstreamAwsUpboundIoV1beta2FleetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppstreamAwsUpboundIoV1beta2FleetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppstreamAwsUpboundIoV1beta2FleetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppstreamAwsUpboundIoV1beta2FleetSpecForProvider

    initProvider?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppstreamAwsUpboundIoV1beta2FleetSpecProviderConfigRef

    publishConnectionDetailsTo?: AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppstreamAwsUpboundIoV1beta2FleetSpecWriteConnectionSecretToRef


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProvider:
    r"""
    appstream aws upbound io v1beta2 fleet spec for provider

    Attributes
    ----------
    computeCapacity : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderComputeCapacity, default is Undefined, optional
        compute capacity
    description : str, default is Undefined, optional
        Description to display.
    disconnectTimeoutInSeconds : float, default is Undefined, optional
        Amount of time that a streaming session remains active after users disconnect.
    displayName : str, default is Undefined, optional
        Human-readable friendly name for the AppStream fleet.
    domainJoinInfo : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderDomainJoinInfo, default is Undefined, optional
        domain join info
    enableDefaultInternetAccess : bool, default is Undefined, optional
        Enables or disables default internet access for the fleet.
    fleetType : str, default is Undefined, optional
        Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON
    iamRoleArn : str, default is Undefined, optional
        ARN of the IAM role to apply to the fleet.
    iamRoleArnRef : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    idleDisconnectTimeoutInSeconds : float, default is Undefined, optional
        Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins. Defaults to 0. Valid value is between 60 and 3600 seconds.
    imageArn : str, default is Undefined, optional
        ARN of the public, private, or shared image to use.
    imageName : str, default is Undefined, optional
        Name of the image used to create the fleet.
    instanceType : str, default is Undefined, optional
        Instance type to use when launching fleet instances.
    maxSessionsPerInstance : float, default is Undefined, optional
        The maximum number of user sessions on an instance. This only applies to multi-session fleets.
    maxUserDurationInSeconds : float, default is Undefined, optional
        Maximum amount of time that a streaming session can remain active, in seconds.
    name : str, default is Undefined, optional
        Unique name for the fleet.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    streamView : str, default is Undefined, optional
        AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConfig : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    computeCapacity?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderComputeCapacity

    description?: str

    disconnectTimeoutInSeconds?: float

    displayName?: str

    domainJoinInfo?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderDomainJoinInfo

    enableDefaultInternetAccess?: bool

    fleetType?: str

    iamRoleArn?: str

    iamRoleArnRef?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnRef

    iamRoleArnSelector?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnSelector

    idleDisconnectTimeoutInSeconds?: float

    imageArn?: str

    imageName?: str

    instanceType?: str

    maxSessionsPerInstance?: float

    maxUserDurationInSeconds?: float

    name?: str

    region: str

    streamView?: str

    tags?: {str:str}

    vpcConfig?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfig


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderComputeCapacity:
    r"""
    Configuration block for the desired capacity of the fleet. See below.

    Attributes
    ----------
    desiredInstances : float, default is Undefined, optional
        Desired number of streaming instances.
    desiredSessions : float, default is Undefined, optional
        Desired number of user sessions for a multi-session fleet. This is not allowed for single-session fleets.
    """


    desiredInstances?: float

    desiredSessions?: float


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderDomainJoinInfo:
    r"""
    Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.

    Attributes
    ----------
    directoryName : str, default is Undefined, optional
        Fully qualified name of the directory (for example, corp.example.com).
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        Distinguished name of the organizational unit for computer accounts.
    """


    directoryName?: str

    organizationalUnitDistinguishedName?: str


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnRefPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfig:
    r"""
    Configuration block for the VPC configuration for the image builder. See below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Identifiers of the security groups for the fleet or image builder.
    subnetIdRefs : [AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.
    """


    securityGroupIds?: [str]

    subnetIdRefs?: [AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDRefsItems0]

    subnetIdSelector?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDSelector

    subnetIds?: [str]


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDRefsItems0Policy


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecForProviderVpcConfigSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    computeCapacity : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderComputeCapacity, default is Undefined, optional
        compute capacity
    description : str, default is Undefined, optional
        Description to display.
    disconnectTimeoutInSeconds : float, default is Undefined, optional
        Amount of time that a streaming session remains active after users disconnect.
    displayName : str, default is Undefined, optional
        Human-readable friendly name for the AppStream fleet.
    domainJoinInfo : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderDomainJoinInfo, default is Undefined, optional
        domain join info
    enableDefaultInternetAccess : bool, default is Undefined, optional
        Enables or disables default internet access for the fleet.
    fleetType : str, default is Undefined, optional
        Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON
    iamRoleArn : str, default is Undefined, optional
        ARN of the IAM role to apply to the fleet.
    iamRoleArnRef : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    idleDisconnectTimeoutInSeconds : float, default is Undefined, optional
        Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins. Defaults to 0. Valid value is between 60 and 3600 seconds.
    imageArn : str, default is Undefined, optional
        ARN of the public, private, or shared image to use.
    imageName : str, default is Undefined, optional
        Name of the image used to create the fleet.
    instanceType : str, default is Undefined, optional
        Instance type to use when launching fleet instances.
    maxSessionsPerInstance : float, default is Undefined, optional
        The maximum number of user sessions on an instance. This only applies to multi-session fleets.
    maxUserDurationInSeconds : float, default is Undefined, optional
        Maximum amount of time that a streaming session can remain active, in seconds.
    name : str, default is Undefined, optional
        Unique name for the fleet.
    streamView : str, default is Undefined, optional
        AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConfig : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    computeCapacity?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderComputeCapacity

    description?: str

    disconnectTimeoutInSeconds?: float

    displayName?: str

    domainJoinInfo?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderDomainJoinInfo

    enableDefaultInternetAccess?: bool

    fleetType?: str

    iamRoleArn?: str

    iamRoleArnRef?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnRef

    iamRoleArnSelector?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnSelector

    idleDisconnectTimeoutInSeconds?: float

    imageArn?: str

    imageName?: str

    instanceType?: str

    maxSessionsPerInstance?: float

    maxUserDurationInSeconds?: float

    name?: str

    streamView?: str

    tags?: {str:str}

    vpcConfig?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfig


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderComputeCapacity:
    r"""
    Configuration block for the desired capacity of the fleet. See below.

    Attributes
    ----------
    desiredInstances : float, default is Undefined, optional
        Desired number of streaming instances.
    desiredSessions : float, default is Undefined, optional
        Desired number of user sessions for a multi-session fleet. This is not allowed for single-session fleets.
    """


    desiredInstances?: float

    desiredSessions?: float


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderDomainJoinInfo:
    r"""
    Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.

    Attributes
    ----------
    directoryName : str, default is Undefined, optional
        Fully qualified name of the directory (for example, corp.example.com).
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        Distinguished name of the organizational unit for computer accounts.
    """


    directoryName?: str

    organizationalUnitDistinguishedName?: str


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnRefPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfig:
    r"""
    Configuration block for the VPC configuration for the image builder. See below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Identifiers of the security groups for the fleet or image builder.
    subnetIdRefs : [AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.
    """


    securityGroupIds?: [str]

    subnetIdRefs?: [AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDRefsItems0]

    subnetIdSelector?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDSelector

    subnetIds?: [str]


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDRefsItems0Policy


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDSelectorPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecInitProviderVpcConfigSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecProviderConfigRefPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToConfigRef

    metadata?: AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToMetadata

    name: str


schema AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToConfigRefPolicy


schema AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppstreamAwsUpboundIoV1beta2FleetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppstreamAwsUpboundIoV1beta2FleetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppstreamAwsUpboundIoV1beta2FleetStatus:
    r"""
    FleetStatus defines the observed state of Fleet.

    Attributes
    ----------
    atProvider : AppstreamAwsUpboundIoV1beta2FleetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppstreamAwsUpboundIoV1beta2FleetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppstreamAwsUpboundIoV1beta2FleetStatusAtProvider

    conditions?: [AppstreamAwsUpboundIoV1beta2FleetStatusConditionsItems0]

    observedGeneration?: int


schema AppstreamAwsUpboundIoV1beta2FleetStatusAtProvider:
    r"""
    appstream aws upbound io v1beta2 fleet status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the appstream fleet.
    computeCapacity : AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderComputeCapacity, default is Undefined, optional
        compute capacity
    createdTime : str, default is Undefined, optional
        Date and time, in UTC and extended RFC 3339 format, when the fleet was created.
    description : str, default is Undefined, optional
        Description to display.
    disconnectTimeoutInSeconds : float, default is Undefined, optional
        Amount of time that a streaming session remains active after users disconnect.
    displayName : str, default is Undefined, optional
        Human-readable friendly name for the AppStream fleet.
    domainJoinInfo : AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderDomainJoinInfo, default is Undefined, optional
        domain join info
    enableDefaultInternetAccess : bool, default is Undefined, optional
        Enables or disables default internet access for the fleet.
    fleetType : str, default is Undefined, optional
        Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON
    iamRoleArn : str, default is Undefined, optional
        ARN of the IAM role to apply to the fleet.
    id : str, default is Undefined, optional
        Unique identifier (ID) of the appstream fleet.
    idleDisconnectTimeoutInSeconds : float, default is Undefined, optional
        Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins. Defaults to 0. Valid value is between 60 and 3600 seconds.
    imageArn : str, default is Undefined, optional
        ARN of the public, private, or shared image to use.
    imageName : str, default is Undefined, optional
        Name of the image used to create the fleet.
    instanceType : str, default is Undefined, optional
        Instance type to use when launching fleet instances.
    maxSessionsPerInstance : float, default is Undefined, optional
        The maximum number of user sessions on an instance. This only applies to multi-session fleets.
    maxUserDurationInSeconds : float, default is Undefined, optional
        Maximum amount of time that a streaming session can remain active, in seconds.
    name : str, default is Undefined, optional
        Unique name for the fleet.
    state : str, default is Undefined, optional
        State of the fleet. Can be STARTING, RUNNING, STOPPING or STOPPED
    streamView : str, default is Undefined, optional
        AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    vpcConfig : AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderVpcConfig, default is Undefined, optional
        vpc config
    """


    arn?: str

    computeCapacity?: AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderComputeCapacity

    createdTime?: str

    description?: str

    disconnectTimeoutInSeconds?: float

    displayName?: str

    domainJoinInfo?: AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderDomainJoinInfo

    enableDefaultInternetAccess?: bool

    fleetType?: str

    iamRoleArn?: str

    id?: str

    idleDisconnectTimeoutInSeconds?: float

    imageArn?: str

    imageName?: str

    instanceType?: str

    maxSessionsPerInstance?: float

    maxUserDurationInSeconds?: float

    name?: str

    state?: str

    streamView?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcConfig?: AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderVpcConfig


schema AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderComputeCapacity:
    r"""
    Configuration block for the desired capacity of the fleet. See below.

    Attributes
    ----------
    available : float, default is Undefined, optional
        Number of currently available instances that can be used to stream sessions.
    desiredInstances : float, default is Undefined, optional
        Desired number of streaming instances.
    desiredSessions : float, default is Undefined, optional
        Desired number of user sessions for a multi-session fleet. This is not allowed for single-session fleets.
    inUse : float, default is Undefined, optional
        Number of instances in use for streaming.
    running : float, default is Undefined, optional
        Total number of simultaneous streaming instances that are running.
    """


    available?: float

    desiredInstances?: float

    desiredSessions?: float

    inUse?: float

    running?: float


schema AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderDomainJoinInfo:
    r"""
    Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.

    Attributes
    ----------
    directoryName : str, default is Undefined, optional
        Fully qualified name of the directory (for example, corp.example.com).
    organizationalUnitDistinguishedName : str, default is Undefined, optional
        Distinguished name of the organizational unit for computer accounts.
    """


    directoryName?: str

    organizationalUnitDistinguishedName?: str


schema AppstreamAwsUpboundIoV1beta2FleetStatusAtProviderVpcConfig:
    r"""
    Configuration block for the VPC configuration for the image builder. See below.

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        Identifiers of the security groups for the fleet or image builder.
    subnetIds : [str], default is Undefined, optional
        Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema AppstreamAwsUpboundIoV1beta2FleetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


