"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ComputeEnvironment:
    r"""
    ComputeEnvironment is the Schema for the ComputeEnvironments API. Creates a AWS Batch compute environment.

    Attributes
    ----------
    apiVersion : str, default is "batch.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ComputeEnvironment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpec, default is Undefined, required
        spec
    status : BatchAwsUpboundIoV1beta1ComputeEnvironmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "batch.aws.upbound.io/v1beta1" = "batch.aws.upbound.io/v1beta1"

    kind: "ComputeEnvironment" = "ComputeEnvironment"

    metadata?: v1.ObjectMeta

    spec: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpec

    status?: BatchAwsUpboundIoV1beta1ComputeEnvironmentStatus


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpec:
    r"""
    ComputeEnvironmentSpec defines the desired state of ComputeEnvironment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProvider

    initProvider?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecProviderConfigRef

    publishConnectionDetailsTo?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecWriteConnectionSecretToRef


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProvider:
    r"""
    batch aws upbound io v1beta1 compute environment spec for provider

    Attributes
    ----------
    computeResources : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResources, default is Undefined, optional
        compute resources
    eksConfiguration : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderEksConfiguration, default is Undefined, optional
        eks configuration
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serviceRole : str, default is Undefined, optional
        The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
    serviceRoleRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleRef, default is Undefined, optional
        service role ref
    serviceRoleSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleSelector, default is Undefined, optional
        service role selector
    state : str, default is Undefined, optional
        The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The type of the compute environment. Valid items are MANAGED or UNMANAGED.
    updatePolicy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderUpdatePolicy, default is Undefined, optional
        update policy
    """


    computeResources?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResources

    eksConfiguration?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderEksConfiguration

    region: str

    serviceRole?: str

    serviceRoleRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleRef

    serviceRoleSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleSelector

    state?: str

    tags?: {str:str}

    $type?: str

    updatePolicy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderUpdatePolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResources:
    r"""
    Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the AWS documentation. Defaults to BEST_FIT. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    bidPercentage : float, default is Undefined, optional
        Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    desiredVcpus : float, default is Undefined, optional
        The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    ec2Configuration : [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesEc2ConfigurationItems0], default is Undefined, optional
        Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
    ec2KeyPair : str, default is Undefined, optional
        The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    imageId : str, default is Undefined, optional
        The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use ec2_configuration image_id_override instead)
    instanceRole : str, default is Undefined, optional
        The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    instanceRoleRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleRef, default is Undefined, optional
        instance role ref
    instanceRoleSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleSelector, default is Undefined, optional
        instance role selector
    instanceType : [str], default is Undefined, optional
        A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    launchTemplate : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesLaunchTemplate, default is Undefined, optional
        launch template
    maxVcpus : float, default is Undefined, optional
        The maximum number of EC2 vCPUs that an environment can reach.
    minVcpus : float, default is Undefined, optional
        The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    placementGroup : str, default is Undefined, optional
        The Amazon EC2 placement group to associate with your compute resources.
    placementGroupRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupRef, default is Undefined, optional
        placement group ref
    placementGroupSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupSelector, default is Undefined, optional
        placement group selector
    securityGroupIds : [str], default is Undefined, optional
        A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
    securityGroupIdsRefs : [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    spotIamFleetRole : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    subnets : [str], default is Undefined, optional
        A list of VPC subnets into which the compute resources are launched.
    subnetsRefs : [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnets.
    subnetsSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsSelector, default is Undefined, optional
        subnets selector
    tags : {str:str}, default is Undefined, optional
        Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    $type : str, default is Undefined, optional
        The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.
    """


    allocationStrategy?: str

    bidPercentage?: float

    desiredVcpus?: float

    ec2Configuration?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesEc2ConfigurationItems0]

    ec2KeyPair?: str

    imageId?: str

    instanceRole?: str

    instanceRoleRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleRef

    instanceRoleSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleSelector

    instanceType?: [str]

    launchTemplate?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesLaunchTemplate

    maxVcpus?: float

    minVcpus?: float

    placementGroup?: str

    placementGroupRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupRef

    placementGroupSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupSelector

    securityGroupIds?: [str]

    securityGroupIdsRefs?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsSelector

    spotIamFleetRole?: str

    subnets?: [str]

    subnetsRefs?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsRefsItems0]

    subnetsSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsSelector

    tags?: {str:str}

    $type?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesEc2ConfigurationItems0:
    r"""
    batch aws upbound io v1beta1 compute environment spec for provider compute resources ec2 configuration items0

    Attributes
    ----------
    imageIdOverride : str, default is Undefined, optional
        The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.
    imageType : str, default is Undefined, optional
        The image type to match with the instance type to select an AMI. If the image_id_override parameter isn't specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.
    """


    imageIdOverride?: str

    imageType?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleRef:
    r"""
    Reference to a InstanceProfile in iam to populate instanceRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleSelector:
    r"""
    Selector for a InstanceProfile in iam to populate instanceRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesInstanceRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesLaunchTemplate:
    r"""
    The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template.
    version : str, default is Undefined, optional
        The version number of the launch template. Default: The default version of the launch template.
    """


    launchTemplateId?: str

    launchTemplateName?: str

    version?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupRef:
    r"""
    Reference to a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupSelector:
    r"""
    Selector for a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesPlacementGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsRefsItems0Policy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsRefsItems0Policy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderComputeResourcesSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderEksConfiguration:
    r"""
    Details for the Amazon EKS cluster that supports the compute environment. See details below.

    Attributes
    ----------
    eksClusterArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon EKS cluster.
    kubernetesNamespace : str, default is Undefined, optional
        The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
    """


    eksClusterArn?: str

    kubernetesNamespace?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleRef:
    r"""
    Reference to a Role in iam to populate serviceRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderServiceRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecForProviderUpdatePolicy:
    r"""
    Specifies the infrastructure update policy for the compute environment. See details below.

    Attributes
    ----------
    jobExecutionTimeoutMinutes : float, default is Undefined, optional
        Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
    terminateJobsOnUpdate : bool, default is Undefined, optional
        Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
    """


    jobExecutionTimeoutMinutes?: float

    terminateJobsOnUpdate?: bool


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    computeResources : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResources, default is Undefined, optional
        compute resources
    eksConfiguration : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderEksConfiguration, default is Undefined, optional
        eks configuration
    serviceRole : str, default is Undefined, optional
        The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
    serviceRoleRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleRef, default is Undefined, optional
        service role ref
    serviceRoleSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleSelector, default is Undefined, optional
        service role selector
    state : str, default is Undefined, optional
        The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The type of the compute environment. Valid items are MANAGED or UNMANAGED.
    updatePolicy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderUpdatePolicy, default is Undefined, optional
        update policy
    """


    computeResources?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResources

    eksConfiguration?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderEksConfiguration

    serviceRole?: str

    serviceRoleRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleRef

    serviceRoleSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleSelector

    state?: str

    tags?: {str:str}

    $type?: str

    updatePolicy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderUpdatePolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResources:
    r"""
    Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the AWS documentation. Defaults to BEST_FIT. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    bidPercentage : float, default is Undefined, optional
        Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    desiredVcpus : float, default is Undefined, optional
        The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    ec2Configuration : [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesEc2ConfigurationItems0], default is Undefined, optional
        Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
    ec2KeyPair : str, default is Undefined, optional
        The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    imageId : str, default is Undefined, optional
        The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use ec2_configuration image_id_override instead)
    instanceRole : str, default is Undefined, optional
        The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    instanceRoleRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleRef, default is Undefined, optional
        instance role ref
    instanceRoleSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleSelector, default is Undefined, optional
        instance role selector
    instanceType : [str], default is Undefined, optional
        A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    launchTemplate : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesLaunchTemplate, default is Undefined, optional
        launch template
    maxVcpus : float, default is Undefined, optional
        The maximum number of EC2 vCPUs that an environment can reach.
    minVcpus : float, default is Undefined, optional
        The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    placementGroup : str, default is Undefined, optional
        The Amazon EC2 placement group to associate with your compute resources.
    placementGroupRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupRef, default is Undefined, optional
        placement group ref
    placementGroupSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupSelector, default is Undefined, optional
        placement group selector
    securityGroupIds : [str], default is Undefined, optional
        A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
    securityGroupIdsRefs : [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    spotIamFleetRole : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    subnets : [str], default is Undefined, optional
        A list of VPC subnets into which the compute resources are launched.
    subnetsRefs : [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnets.
    subnetsSelector : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsSelector, default is Undefined, optional
        subnets selector
    tags : {str:str}, default is Undefined, optional
        Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    $type : str, default is Undefined, optional
        The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.
    """


    allocationStrategy?: str

    bidPercentage?: float

    desiredVcpus?: float

    ec2Configuration?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesEc2ConfigurationItems0]

    ec2KeyPair?: str

    imageId?: str

    instanceRole?: str

    instanceRoleRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleRef

    instanceRoleSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleSelector

    instanceType?: [str]

    launchTemplate?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesLaunchTemplate

    maxVcpus?: float

    minVcpus?: float

    placementGroup?: str

    placementGroupRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupRef

    placementGroupSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupSelector

    securityGroupIds?: [str]

    securityGroupIdsRefs?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsSelector

    spotIamFleetRole?: str

    subnets?: [str]

    subnetsRefs?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsRefsItems0]

    subnetsSelector?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsSelector

    tags?: {str:str}

    $type?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesEc2ConfigurationItems0:
    r"""
    batch aws upbound io v1beta1 compute environment spec init provider compute resources ec2 configuration items0

    Attributes
    ----------
    imageIdOverride : str, default is Undefined, optional
        The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.
    imageType : str, default is Undefined, optional
        The image type to match with the instance type to select an AMI. If the image_id_override parameter isn't specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.
    """


    imageIdOverride?: str

    imageType?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleRef:
    r"""
    Reference to a InstanceProfile in iam to populate instanceRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleSelector:
    r"""
    Selector for a InstanceProfile in iam to populate instanceRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesInstanceRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesLaunchTemplate:
    r"""
    The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template.
    version : str, default is Undefined, optional
        The version number of the launch template. Default: The default version of the launch template.
    """


    launchTemplateId?: str

    launchTemplateName?: str

    version?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupRef:
    r"""
    Reference to a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupSelector:
    r"""
    Selector for a PlacementGroup in ec2 to populate placementGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesPlacementGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsRefsItems0Policy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsRefsItems0Policy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderComputeResourcesSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderEksConfiguration:
    r"""
    Details for the Amazon EKS cluster that supports the compute environment. See details below.

    Attributes
    ----------
    eksClusterArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon EKS cluster.
    kubernetesNamespace : str, default is Undefined, optional
        The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
    """


    eksClusterArn?: str

    kubernetesNamespace?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleRef:
    r"""
    Reference to a Role in iam to populate serviceRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleSelector:
    r"""
    Selector for a Role in iam to populate serviceRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleSelectorPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderServiceRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecInitProviderUpdatePolicy:
    r"""
    Specifies the infrastructure update policy for the compute environment. See details below.

    Attributes
    ----------
    jobExecutionTimeoutMinutes : float, default is Undefined, optional
        Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
    terminateJobsOnUpdate : bool, default is Undefined, optional
        Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
    """


    jobExecutionTimeoutMinutes?: float

    terminateJobsOnUpdate?: bool


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecProviderConfigRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToConfigRef

    metadata?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToMetadata

    name: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToConfigRefPolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatus:
    r"""
    ComputeEnvironmentStatus defines the observed state of ComputeEnvironment.

    Attributes
    ----------
    atProvider : BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProvider

    conditions?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusConditionsItems0]

    observedGeneration?: int


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProvider:
    r"""
    batch aws upbound io v1beta1 compute environment status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the compute environment.
    computeResources : BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResources, default is Undefined, optional
        compute resources
    ecsClusterArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the underlying Amazon ECS cluster used by the compute environment.
    eksConfiguration : BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderEksConfiguration, default is Undefined, optional
        eks configuration
    id : str, default is Undefined, optional
        id
    serviceRole : str, default is Undefined, optional
        The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf.
    state : str, default is Undefined, optional
        The state of the compute environment. If the state is ENABLED, then the compute environment accepts jobs from a queue and can scale out automatically based on queues. Valid items are ENABLED or DISABLED. Defaults to ENABLED.
    status : str, default is Undefined, optional
        The current status of the compute environment (for example, CREATING or VALID).
    statusReason : str, default is Undefined, optional
        A short, human-readable string to provide additional details about the current status of the compute environment.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        The type of the compute environment. Valid items are MANAGED or UNMANAGED.
    updatePolicy : BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderUpdatePolicy, default is Undefined, optional
        update policy
    """


    arn?: str

    computeResources?: BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResources

    ecsClusterArn?: str

    eksConfiguration?: BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderEksConfiguration

    id?: str

    serviceRole?: str

    state?: str

    status?: str

    statusReason?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    updatePolicy?: BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderUpdatePolicy


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResources:
    r"""
    Details of the compute resources managed by the compute environment. This parameter is required for managed compute environments. See details below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the AWS documentation. Defaults to BEST_FIT. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    bidPercentage : float, default is Undefined, optional
        Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (20), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    desiredVcpus : float, default is Undefined, optional
        The desired number of EC2 vCPUS in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    ec2Configuration : [BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResourcesEc2ConfigurationItems0], default is Undefined, optional
        Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn't specified, the default is ECS_AL2. This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.
    ec2KeyPair : str, default is Undefined, optional
        The EC2 key pair that is used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    imageId : str, default is Undefined, optional
        The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified. (Deprecated, use ec2_configuration image_id_override instead)
    instanceRole : str, default is Undefined, optional
        The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    instanceType : [str], default is Undefined, optional
        A list of instance types that may be launched. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    launchTemplate : BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResourcesLaunchTemplate, default is Undefined, optional
        launch template
    maxVcpus : float, default is Undefined, optional
        The maximum number of EC2 vCPUs that an environment can reach.
    minVcpus : float, default is Undefined, optional
        The minimum number of EC2 vCPUs that an environment should maintain. For EC2 or SPOT compute environments, if the parameter is not explicitly defined, a 0 default value will be set. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    placementGroup : str, default is Undefined, optional
        The Amazon EC2 placement group to associate with your compute resources.
    securityGroupIds : [str], default is Undefined, optional
        A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
    spotIamFleetRole : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    subnets : [str], default is Undefined, optional
        A list of VPC subnets into which the compute resources are launched.
    tags : {str:str}, default is Undefined, optional
        Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.
    $type : str, default is Undefined, optional
        The type of compute environment. Valid items are EC2, SPOT, FARGATE or FARGATE_SPOT.
    """


    allocationStrategy?: str

    bidPercentage?: float

    desiredVcpus?: float

    ec2Configuration?: [BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResourcesEc2ConfigurationItems0]

    ec2KeyPair?: str

    imageId?: str

    instanceRole?: str

    instanceType?: [str]

    launchTemplate?: BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResourcesLaunchTemplate

    maxVcpus?: float

    minVcpus?: float

    placementGroup?: str

    securityGroupIds?: [str]

    spotIamFleetRole?: str

    subnets?: [str]

    tags?: {str:str}

    $type?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResourcesEc2ConfigurationItems0:
    r"""
    batch aws upbound io v1beta1 compute environment status at provider compute resources ec2 configuration items0

    Attributes
    ----------
    imageIdOverride : str, default is Undefined, optional
        The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the image_id argument in the compute_resources block.
    imageType : str, default is Undefined, optional
        The image type to match with the instance type to select an AMI. If the image_id_override parameter isn't specified, then a recent Amazon ECS-optimized Amazon Linux 2 AMI (ECS_AL2) is used.
    """


    imageIdOverride?: str

    imageType?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderComputeResourcesLaunchTemplate:
    r"""
    The launch template to use for your compute resources. See details below. This parameter isn't applicable to jobs running on Fargate resources, and shouldn't be specified.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        ID of the launch template. You must specify either the launch template ID or launch template name in the request, but not both.
    launchTemplateName : str, default is Undefined, optional
        Name of the launch template.
    version : str, default is Undefined, optional
        The version number of the launch template. Default: The default version of the launch template.
    """


    launchTemplateId?: str

    launchTemplateName?: str

    version?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderEksConfiguration:
    r"""
    Details for the Amazon EKS cluster that supports the compute environment. See details below.

    Attributes
    ----------
    eksClusterArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon EKS cluster.
    kubernetesNamespace : str, default is Undefined, optional
        The namespace of the Amazon EKS cluster. AWS Batch manages pods in this namespace.
    """


    eksClusterArn?: str

    kubernetesNamespace?: str


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusAtProviderUpdatePolicy:
    r"""
    Specifies the infrastructure update policy for the compute environment. See details below.

    Attributes
    ----------
    jobExecutionTimeoutMinutes : float, default is Undefined, optional
        Specifies the job timeout (in minutes) when the compute environment infrastructure is updated.
    terminateJobsOnUpdate : bool, default is Undefined, optional
        Specifies whether jobs are automatically terminated when the computer environment infrastructure is updated.
    """


    jobExecutionTimeoutMinutes?: float

    terminateJobsOnUpdate?: bool


schema BatchAwsUpboundIoV1beta1ComputeEnvironmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


