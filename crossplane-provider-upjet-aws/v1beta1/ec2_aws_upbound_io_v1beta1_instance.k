"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    r"""
    Instance is the Schema for the Instances API. Provides an EC2 instance resource. This allows instances to be created, updated, and deleted. Instances also support provisioning.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1InstanceSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta1InstanceSpec

    status?: Ec2AwsUpboundIoV1beta1InstanceStatus


schema Ec2AwsUpboundIoV1beta1InstanceSpec:
    r"""
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta1InstanceSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta1InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProvider:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider

    Attributes
    ----------
    ami : str, default is Undefined, optional
        AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
    associatePublicIpAddress : bool, default is Undefined, optional
        Whether to associate a public IP address with an instance in a VPC.
    availabilityZone : str, default is Undefined, optional
        AZ to start the instance in.
    capacityReservationSpecification : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCapacityReservationSpecificationItems0], default is Undefined, optional
        Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
    cpuCoreCount : float, default is Undefined, optional
        Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    cpuOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCPUOptionsItems0], default is Undefined, optional
        The CPU options for the instance. See CPU Options below for more details.
    cpuThreadsPerCore : float, default is Undefined, optional
        If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    creditSpecification : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCreditSpecificationItems0], default is Undefined, optional
        Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
    disableApiStop : bool, default is Undefined, optional
        If true, enables EC2 Instance Stop Protection.
    disableApiTermination : bool, default is Undefined, optional
        If true, enables EC2 Instance Termination Protection.
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0], default is Undefined, optional
        One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
    ebsOptimized : bool, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
    enablePrimaryIpv6 : bool, default is Undefined, optional
        Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling enable_primary_ipv6 after it has been enabled forces recreation of the instance.
    enclaveOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEnclaveOptionsItems0], default is Undefined, optional
        Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
    getPasswordData : bool, default is Undefined, optional
        If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
    hibernation : bool, default is Undefined, optional
        If true, the launched EC2 instance will support hibernation.
    hostId : str, default is Undefined, optional
        ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
    hostResourceGroupArn : str, default is Undefined, optional
        ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
    iamInstanceProfile : str, default is Undefined, optional
        IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
    instanceMarketOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderInstanceMarketOptionsItems0], default is Undefined, optional
        Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
    instanceType : str, default is Undefined, optional
        Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
    ipv6AddressCount : float, default is Undefined, optional
        Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    ipv6Addresses : [str], default is Undefined, optional
        Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
    keyName : str, default is Undefined, optional
        Key name of the Key Pair to use for the instance; which can be managed using the .
    launchTemplate : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderLaunchTemplateItems0], default is Undefined, optional
        Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
    maintenanceOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderMaintenanceOptionsItems0], default is Undefined, optional
        Maintenance and recovery options for the instance. See Maintenance Options below for more details.
    metadataOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderMetadataOptionsItems0], default is Undefined, optional
        Customize the metadata options of the instance. See Metadata Options below for more details.
    monitoring : bool, default is Undefined, optional
        If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
    networkInterface : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0], default is Undefined, optional
        Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
    placementGroup : str, default is Undefined, optional
        Placement Group to start the instance in.
    placementPartitionNumber : float, default is Undefined, optional
        Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
    privateDnsNameOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderPrivateDNSNameOptionsItems0], default is Undefined, optional
        Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    privateIp : str, default is Undefined, optional
        Private IP address to associate with the instance in a VPC.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rootBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0], default is Undefined, optional
        Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
    secondaryPrivateIps : [str], default is Undefined, optional
        List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
    sourceDestCheck : bool, default is Undefined, optional
        Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
    subnetId : str, default is Undefined, optional
        VPC Subnet ID to launch in.
    subnetIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tenancy : str, default is Undefined, optional
        Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
    userData : str, default is Undefined, optional
        User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    userDataBase64 : str, default is Undefined, optional
        Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    userDataReplaceOnChange : bool, default is Undefined, optional
        When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
    volumeTags : {str:str}, default is Undefined, optional
        Map of tags to assign, at instance-creation time, to root and EBS volumes.
    vpcSecurityGroupIdRefs : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of security group IDs to associate with.
    """


    ami?: str

    associatePublicIpAddress?: bool

    availabilityZone?: str

    capacityReservationSpecification?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCapacityReservationSpecificationItems0]

    cpuCoreCount?: float

    cpuOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCPUOptionsItems0]

    cpuThreadsPerCore?: float

    creditSpecification?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCreditSpecificationItems0]

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enablePrimaryIpv6?: bool

    enclaveOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEnclaveOptionsItems0]

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEphemeralBlockDeviceItems0]

    getPasswordData?: bool

    hibernation?: bool

    hostId?: str

    hostResourceGroupArn?: str

    iamInstanceProfile?: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderInstanceMarketOptionsItems0]

    instanceType?: str

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    keyName?: str

    launchTemplate?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderLaunchTemplateItems0]

    maintenanceOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderMaintenanceOptionsItems0]

    metadataOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderMetadataOptionsItems0]

    monitoring?: bool

    networkInterface?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0]

    placementGroup?: str

    placementPartitionNumber?: float

    privateDnsNameOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderPrivateDNSNameOptionsItems0]

    privateIp?: str

    region: str

    rootBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0]

    secondaryPrivateIps?: [str]

    sourceDestCheck?: bool

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelector

    tags?: {str:str}

    tenancy?: str

    userData?: str

    userDataBase64?: str

    userDataReplaceOnChange?: bool

    volumeTags?: {str:str}

    vpcSecurityGroupIdRefs?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCPUOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider CPU options items0

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    coreCount : float, default is Undefined, optional
        Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    threadsPerCore : float, default is Undefined, optional
        If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCapacityReservationSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider capacity reservation specification items0

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        Indicates the instance's Capacity Reservation preferences. Can be "open" or "none". (Default: "open").
    capacityReservationTarget : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0], default is Undefined, optional
        Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0]


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider capacity reservation specification items0 capacity reservation target items0

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        ID of the Capacity Reservation in which to run the instance.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        ARN of the Capacity Reservation resource group in which to run the instance.
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderCreditSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider credit specification items0

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        Credit option for CPU usage. Valid values include standard or unlimited. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    deviceName : str, default is Undefined, optional
        Name of the device to mount.
    encrypted : bool, default is Undefined, optional
        Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    kmsKeyIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    snapshotId : str, default is Undefined, optional
        Snapshot ID to mount.
    tags : {str:str}, default is Undefined, optional
        Map of tags to assign to the device.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gibibytes (GiB).
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDSelector

    snapshotId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEbsBlockDeviceItems0KmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEnclaveOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider enclave options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether Nitro Enclaves will be enabled on the instance. Defaults to false.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the block device to mount on the instance.
    noDevice : bool, default is Undefined, optional
        Suppresses the specified device included in the AMI's block device mapping.
    virtualName : str, default is Undefined, optional
        Instance Store Device Name (e.g., ephemeral0).
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderInstanceMarketOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider instance market options items0

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        Type of market for the instance. Valid value is spot. Defaults to spot. Required if spot_options is specified.
    spotOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderInstanceMarketOptionsItems0SpotOptionsItems0], default is Undefined, optional
        Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
    """


    marketType?: str

    spotOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecForProviderInstanceMarketOptionsItems0SpotOptionsItems0]


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderInstanceMarketOptionsItems0SpotOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider instance market options items0 spot options items0

    Attributes
    ----------
    instanceInterruptionBehavior : str, default is Undefined, optional
        The behavior when a Spot Instance is interrupted. Valid values include hibernate, stop, terminate . The default is terminate.
    maxPrice : str, default is Undefined, optional
        The maximum hourly price that you're willing to pay for a Spot Instance.
    spotInstanceType : str, default is Undefined, optional
        The Spot Instance request type. Valid values include one-time, persistent. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is one-time.
    validUntil : str, default is Undefined, optional
        The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
    """


    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderLaunchTemplateItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider launch template items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID of the launch template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the launch template. Conflicts with id.
    version : str, default is Undefined, optional
        Template version. Can be a specific version number, $Latest or $Default. The default value is $Default.
    """


    id?: str

    name?: str

    version?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderMaintenanceOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider maintenance options items0

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        Automatic recovery behavior of the Instance. Can be "default" or "disabled". See Recover your instance for more details.
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderMetadataOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider metadata options items0

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        Whether the metadata service is available. Valid values include enabled or disabled. Defaults to enabled.
    httpProtocolIpv6 : str, default is Undefined, optional
        Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to disabled.
    httpPutResponseHopLimit : float, default is Undefined, optional
        Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from 1 to 64. Defaults to 1.
    httpTokens : str, default is Undefined, optional
        Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Valid values include optional or required. Defaults to optional.
    instanceMetadataTags : str, default is Undefined, optional
        Enables or disables access to instance tags from the instance metadata service. Valid values include enabled or disabled. Defaults to disabled.
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider network interface items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.
    deviceIndex : float, default is Undefined, optional
        Integer index of the network interface attachment. Limited by instance type.
    networkCardIndex : float, default is Undefined, optional
        Integer index of the network card. Limited by instance type. The default index is 0.
    networkInterfaceId : str, default is Undefined, optional
        ID of the network interface to attach.
    networkInterfaceIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDRef, default is Undefined, optional
        network interface Id ref
    networkInterfaceIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDSelector, default is Undefined, optional
        network interface Id selector
    """


    deleteOnTermination?: bool

    deviceIndex?: float

    networkCardIndex?: float

    networkInterfaceId?: str

    networkInterfaceIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDRef

    networkInterfaceIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDSelector


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDRef:
    r"""
    Reference to a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDSelector:
    r"""
    Selector for a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderNetworkInterfaceItems0NetworkInterfaceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderPrivateDNSNameOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider private DNS name options items0

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    hostnameType : str, default is Undefined, optional
        Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec for provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    encrypted : bool, default is Undefined, optional
        Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    kmsKeyIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    tags : {str:str}, default is Undefined, optional
        Map of tags to assign to the device.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gibibytes (GiB).
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to the volume type that the AMI uses.
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDSelector

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderRootBlockDeviceItems0KmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    ami : str, default is Undefined, optional
        AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
    associatePublicIpAddress : bool, default is Undefined, optional
        Whether to associate a public IP address with an instance in a VPC.
    availabilityZone : str, default is Undefined, optional
        AZ to start the instance in.
    capacityReservationSpecification : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCapacityReservationSpecificationItems0], default is Undefined, optional
        Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
    cpuCoreCount : float, default is Undefined, optional
        Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    cpuOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCPUOptionsItems0], default is Undefined, optional
        The CPU options for the instance. See CPU Options below for more details.
    cpuThreadsPerCore : float, default is Undefined, optional
        If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    creditSpecification : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCreditSpecificationItems0], default is Undefined, optional
        Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
    disableApiStop : bool, default is Undefined, optional
        If true, enables EC2 Instance Stop Protection.
    disableApiTermination : bool, default is Undefined, optional
        If true, enables EC2 Instance Termination Protection.
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0], default is Undefined, optional
        One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
    ebsOptimized : bool, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
    enablePrimaryIpv6 : bool, default is Undefined, optional
        Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling enable_primary_ipv6 after it has been enabled forces recreation of the instance.
    enclaveOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEnclaveOptionsItems0], default is Undefined, optional
        Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
    getPasswordData : bool, default is Undefined, optional
        If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
    hibernation : bool, default is Undefined, optional
        If true, the launched EC2 instance will support hibernation.
    hostId : str, default is Undefined, optional
        ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
    hostResourceGroupArn : str, default is Undefined, optional
        ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
    iamInstanceProfile : str, default is Undefined, optional
        IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
    instanceMarketOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderInstanceMarketOptionsItems0], default is Undefined, optional
        Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
    instanceType : str, default is Undefined, optional
        Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
    ipv6AddressCount : float, default is Undefined, optional
        Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    ipv6Addresses : [str], default is Undefined, optional
        Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
    keyName : str, default is Undefined, optional
        Key name of the Key Pair to use for the instance; which can be managed using the .
    launchTemplate : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderLaunchTemplateItems0], default is Undefined, optional
        Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
    maintenanceOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderMaintenanceOptionsItems0], default is Undefined, optional
        Maintenance and recovery options for the instance. See Maintenance Options below for more details.
    metadataOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderMetadataOptionsItems0], default is Undefined, optional
        Customize the metadata options of the instance. See Metadata Options below for more details.
    monitoring : bool, default is Undefined, optional
        If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
    networkInterface : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0], default is Undefined, optional
        Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
    placementGroup : str, default is Undefined, optional
        Placement Group to start the instance in.
    placementPartitionNumber : float, default is Undefined, optional
        Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
    privateDnsNameOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderPrivateDNSNameOptionsItems0], default is Undefined, optional
        Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    privateIp : str, default is Undefined, optional
        Private IP address to associate with the instance in a VPC.
    rootBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0], default is Undefined, optional
        Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
    secondaryPrivateIps : [str], default is Undefined, optional
        List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
    sourceDestCheck : bool, default is Undefined, optional
        Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
    subnetId : str, default is Undefined, optional
        VPC Subnet ID to launch in.
    subnetIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tenancy : str, default is Undefined, optional
        Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
    userData : str, default is Undefined, optional
        User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    userDataBase64 : str, default is Undefined, optional
        Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    userDataReplaceOnChange : bool, default is Undefined, optional
        When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
    volumeTags : {str:str}, default is Undefined, optional
        Map of tags to assign, at instance-creation time, to root and EBS volumes.
    vpcSecurityGroupIdRefs : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of security group IDs to associate with.
    """


    ami?: str

    associatePublicIpAddress?: bool

    availabilityZone?: str

    capacityReservationSpecification?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCapacityReservationSpecificationItems0]

    cpuCoreCount?: float

    cpuOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCPUOptionsItems0]

    cpuThreadsPerCore?: float

    creditSpecification?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCreditSpecificationItems0]

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enablePrimaryIpv6?: bool

    enclaveOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEnclaveOptionsItems0]

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEphemeralBlockDeviceItems0]

    getPasswordData?: bool

    hibernation?: bool

    hostId?: str

    hostResourceGroupArn?: str

    iamInstanceProfile?: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderInstanceMarketOptionsItems0]

    instanceType?: str

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    keyName?: str

    launchTemplate?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderLaunchTemplateItems0]

    maintenanceOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderMaintenanceOptionsItems0]

    metadataOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderMetadataOptionsItems0]

    monitoring?: bool

    networkInterface?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0]

    placementGroup?: str

    placementPartitionNumber?: float

    privateDnsNameOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderPrivateDNSNameOptionsItems0]

    privateIp?: str

    rootBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0]

    secondaryPrivateIps?: [str]

    sourceDestCheck?: bool

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelector

    tags?: {str:str}

    tenancy?: str

    userData?: str

    userDataBase64?: str

    userDataReplaceOnChange?: bool

    volumeTags?: {str:str}

    vpcSecurityGroupIdRefs?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCPUOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider CPU options items0

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    coreCount : float, default is Undefined, optional
        Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    threadsPerCore : float, default is Undefined, optional
        If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCapacityReservationSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider capacity reservation specification items0

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        Indicates the instance's Capacity Reservation preferences. Can be "open" or "none". (Default: "open").
    capacityReservationTarget : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0], default is Undefined, optional
        Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0]


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider capacity reservation specification items0 capacity reservation target items0

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        ID of the Capacity Reservation in which to run the instance.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        ARN of the Capacity Reservation resource group in which to run the instance.
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderCreditSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider credit specification items0

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        Credit option for CPU usage. Valid values include standard or unlimited. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    deviceName : str, default is Undefined, optional
        Name of the device to mount.
    encrypted : bool, default is Undefined, optional
        Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    kmsKeyIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    snapshotId : str, default is Undefined, optional
        Snapshot ID to mount.
    tags : {str:str}, default is Undefined, optional
        Map of tags to assign to the device.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gibibytes (GiB).
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDSelector

    snapshotId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEbsBlockDeviceItems0KmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEnclaveOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider enclave options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether Nitro Enclaves will be enabled on the instance. Defaults to false.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the block device to mount on the instance.
    noDevice : bool, default is Undefined, optional
        Suppresses the specified device included in the AMI's block device mapping.
    virtualName : str, default is Undefined, optional
        Instance Store Device Name (e.g., ephemeral0).
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderInstanceMarketOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider instance market options items0

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        Type of market for the instance. Valid value is spot. Defaults to spot. Required if spot_options is specified.
    spotOptions : [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderInstanceMarketOptionsItems0SpotOptionsItems0], default is Undefined, optional
        Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
    """


    marketType?: str

    spotOptions?: [Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderInstanceMarketOptionsItems0SpotOptionsItems0]


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderInstanceMarketOptionsItems0SpotOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider instance market options items0 spot options items0

    Attributes
    ----------
    instanceInterruptionBehavior : str, default is Undefined, optional
        The behavior when a Spot Instance is interrupted. Valid values include hibernate, stop, terminate . The default is terminate.
    maxPrice : str, default is Undefined, optional
        The maximum hourly price that you're willing to pay for a Spot Instance.
    spotInstanceType : str, default is Undefined, optional
        The Spot Instance request type. Valid values include one-time, persistent. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is one-time.
    validUntil : str, default is Undefined, optional
        The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
    """


    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderLaunchTemplateItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider launch template items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID of the launch template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the launch template. Conflicts with id.
    version : str, default is Undefined, optional
        Template version. Can be a specific version number, $Latest or $Default. The default value is $Default.
    """


    id?: str

    name?: str

    version?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderMaintenanceOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider maintenance options items0

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        Automatic recovery behavior of the Instance. Can be "default" or "disabled". See Recover your instance for more details.
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderMetadataOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider metadata options items0

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        Whether the metadata service is available. Valid values include enabled or disabled. Defaults to enabled.
    httpProtocolIpv6 : str, default is Undefined, optional
        Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to disabled.
    httpPutResponseHopLimit : float, default is Undefined, optional
        Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from 1 to 64. Defaults to 1.
    httpTokens : str, default is Undefined, optional
        Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Valid values include optional or required. Defaults to optional.
    instanceMetadataTags : str, default is Undefined, optional
        Enables or disables access to instance tags from the instance metadata service. Valid values include enabled or disabled. Defaults to disabled.
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider network interface items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.
    deviceIndex : float, default is Undefined, optional
        Integer index of the network interface attachment. Limited by instance type.
    networkCardIndex : float, default is Undefined, optional
        Integer index of the network card. Limited by instance type. The default index is 0.
    networkInterfaceId : str, default is Undefined, optional
        ID of the network interface to attach.
    networkInterfaceIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDRef, default is Undefined, optional
        network interface Id ref
    networkInterfaceIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDSelector, default is Undefined, optional
        network interface Id selector
    """


    deleteOnTermination?: bool

    deviceIndex?: float

    networkCardIndex?: float

    networkInterfaceId?: str

    networkInterfaceIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDRef

    networkInterfaceIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDSelector


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDRef:
    r"""
    Reference to a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDSelector:
    r"""
    Selector for a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderNetworkInterfaceItems0NetworkInterfaceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderPrivateDNSNameOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider private DNS name options items0

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    hostnameType : str, default is Undefined, optional
        Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance spec init provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    encrypted : bool, default is Undefined, optional
        Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    kmsKeyIdRef : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    tags : {str:str}, default is Undefined, optional
        Map of tags to assign to the device.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gibibytes (GiB).
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to the volume type that the AMI uses.
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDSelector

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderRootBlockDeviceItems0KmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1InstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta1InstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta1InstanceStatus:
    r"""
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta1InstanceStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta1InstanceStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider

    Attributes
    ----------
    ami : str, default is Undefined, optional
        AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
    arn : str, default is Undefined, optional
        ARN of the instance.
    associatePublicIpAddress : bool, default is Undefined, optional
        Whether to associate a public IP address with an instance in a VPC.
    availabilityZone : str, default is Undefined, optional
        AZ to start the instance in.
    capacityReservationSpecification : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCapacityReservationSpecificationItems0], default is Undefined, optional
        Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
    cpuCoreCount : float, default is Undefined, optional
        Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    cpuOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCPUOptionsItems0], default is Undefined, optional
        The CPU options for the instance. See CPU Options below for more details.
    cpuThreadsPerCore : float, default is Undefined, optional
        If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    creditSpecification : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCreditSpecificationItems0], default is Undefined, optional
        Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
    disableApiStop : bool, default is Undefined, optional
        If true, enables EC2 Instance Stop Protection.
    disableApiTermination : bool, default is Undefined, optional
        If true, enables EC2 Instance Termination Protection.
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEbsBlockDeviceItems0], default is Undefined, optional
        One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
    ebsOptimized : bool, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
    enablePrimaryIpv6 : bool, default is Undefined, optional
        Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling enable_primary_ipv6 after it has been enabled forces recreation of the instance.
    enclaveOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEnclaveOptionsItems0], default is Undefined, optional
        Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
    getPasswordData : bool, default is Undefined, optional
        If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
    hibernation : bool, default is Undefined, optional
        If true, the launched EC2 instance will support hibernation.
    hostId : str, default is Undefined, optional
        ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
    hostResourceGroupArn : str, default is Undefined, optional
        ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
    iamInstanceProfile : str, default is Undefined, optional
        IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
    id : str, default is Undefined, optional
        ID of the instance.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
    instanceLifecycle : str, default is Undefined, optional
        Indicates whether this is a Spot Instance or a Scheduled Instance.
    instanceMarketOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderInstanceMarketOptionsItems0], default is Undefined, optional
        Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
    instanceState : str, default is Undefined, optional
        State of the instance. One of: pending, running, shutting-down, terminated, stopping, stopped. See Instance Lifecycle for more information.
    instanceType : str, default is Undefined, optional
        Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
    ipv6AddressCount : float, default is Undefined, optional
        Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    ipv6Addresses : [str], default is Undefined, optional
        Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
    keyName : str, default is Undefined, optional
        Key name of the Key Pair to use for the instance; which can be managed using the .
    launchTemplate : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderLaunchTemplateItems0], default is Undefined, optional
        Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
    maintenanceOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderMaintenanceOptionsItems0], default is Undefined, optional
        Maintenance and recovery options for the instance. See Maintenance Options below for more details.
    metadataOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderMetadataOptionsItems0], default is Undefined, optional
        Customize the metadata options of the instance. See Metadata Options below for more details.
    monitoring : bool, default is Undefined, optional
        If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
    networkInterface : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderNetworkInterfaceItems0], default is Undefined, optional
        Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
    outpostArn : str, default is Undefined, optional
        ARN of the Outpost the instance is assigned to.
    passwordData : str, default is Undefined, optional
        Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if get_password_data is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See GetPasswordData for more information.
    placementGroup : str, default is Undefined, optional
        Placement Group to start the instance in.
    placementPartitionNumber : float, default is Undefined, optional
        Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
    primaryNetworkInterfaceId : str, default is Undefined, optional
        ID of the instance's primary network interface.
    privateDns : str, default is Undefined, optional
        Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
    privateDnsNameOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderPrivateDNSNameOptionsItems0], default is Undefined, optional
        Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    privateIp : str, default is Undefined, optional
        Private IP address to associate with the instance in a VPC.
    publicDns : str, default is Undefined, optional
        Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
    publicIp : str, default is Undefined, optional
        Public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use public_ip as this field will change after the EIP is attached.
    rootBlockDevice : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderRootBlockDeviceItems0], default is Undefined, optional
        Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
    secondaryPrivateIps : [str], default is Undefined, optional
        List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
    securityGroups : [str], default is Undefined, optional
        List of security group names to associate with.
    sourceDestCheck : bool, default is Undefined, optional
        Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
    spotInstanceRequestId : str, default is Undefined, optional
        If the request is a Spot Instance request, the ID of the request.
    subnetId : str, default is Undefined, optional
        VPC Subnet ID to launch in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tenancy : str, default is Undefined, optional
        Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
    userData : str, default is Undefined, optional
        User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    userDataBase64 : str, default is Undefined, optional
        Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    userDataReplaceOnChange : bool, default is Undefined, optional
        When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
    volumeTags : {str:str}, default is Undefined, optional
        Map of tags to assign, at instance-creation time, to root and EBS volumes.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of security group IDs to associate with.
    """


    ami?: str

    arn?: str

    associatePublicIpAddress?: bool

    availabilityZone?: str

    capacityReservationSpecification?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCapacityReservationSpecificationItems0]

    cpuCoreCount?: float

    cpuOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCPUOptionsItems0]

    cpuThreadsPerCore?: float

    creditSpecification?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCreditSpecificationItems0]

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enablePrimaryIpv6?: bool

    enclaveOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEnclaveOptionsItems0]

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEphemeralBlockDeviceItems0]

    getPasswordData?: bool

    hibernation?: bool

    hostId?: str

    hostResourceGroupArn?: str

    iamInstanceProfile?: str

    id?: str

    instanceInitiatedShutdownBehavior?: str

    instanceLifecycle?: str

    instanceMarketOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderInstanceMarketOptionsItems0]

    instanceState?: str

    instanceType?: str

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    keyName?: str

    launchTemplate?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderLaunchTemplateItems0]

    maintenanceOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderMaintenanceOptionsItems0]

    metadataOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderMetadataOptionsItems0]

    monitoring?: bool

    networkInterface?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderNetworkInterfaceItems0]

    outpostArn?: str

    passwordData?: str

    placementGroup?: str

    placementPartitionNumber?: float

    primaryNetworkInterfaceId?: str

    privateDns?: str

    privateDnsNameOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderPrivateDNSNameOptionsItems0]

    privateIp?: str

    publicDns?: str

    publicIp?: str

    rootBlockDevice?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderRootBlockDeviceItems0]

    secondaryPrivateIps?: [str]

    securityGroups?: [str]

    sourceDestCheck?: bool

    spotInstanceRequestId?: str

    subnetId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    tenancy?: str

    userData?: str

    userDataBase64?: str

    userDataReplaceOnChange?: bool

    volumeTags?: {str:str}

    vpcSecurityGroupIds?: [str]


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCPUOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider CPU options items0

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    coreCount : float, default is Undefined, optional
        Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    threadsPerCore : float, default is Undefined, optional
        If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCapacityReservationSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider capacity reservation specification items0

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        Indicates the instance's Capacity Reservation preferences. Can be "open" or "none". (Default: "open").
    capacityReservationTarget : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0], default is Undefined, optional
        Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0]


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCapacityReservationSpecificationItems0CapacityReservationTargetItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider capacity reservation specification items0 capacity reservation target items0

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        ID of the Capacity Reservation in which to run the instance.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        ARN of the Capacity Reservation resource group in which to run the instance.
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderCreditSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider credit specification items0

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        Credit option for CPU usage. Valid values include standard or unlimited. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    deviceName : str, default is Undefined, optional
        Name of the device to mount.
    encrypted : bool, default is Undefined, optional
        Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    snapshotId : str, default is Undefined, optional
        Snapshot ID to mount.
    tags : {str:str}, default is Undefined, optional
        Map of tags to assign to the device.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    volumeId : str, default is Undefined, optional
        ID of the volume. For example, the ID can be accessed like this, aws_instance.web.ebs_block_device.2.volume_id.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gibibytes (GiB).
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeId?: str

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEnclaveOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider enclave options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether Nitro Enclaves will be enabled on the instance. Defaults to false.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the block device to mount on the instance.
    noDevice : bool, default is Undefined, optional
        Suppresses the specified device included in the AMI's block device mapping.
    virtualName : str, default is Undefined, optional
        Instance Store Device Name (e.g., ephemeral0).
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderInstanceMarketOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider instance market options items0

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        Type of market for the instance. Valid value is spot. Defaults to spot. Required if spot_options is specified.
    spotOptions : [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderInstanceMarketOptionsItems0SpotOptionsItems0], default is Undefined, optional
        Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
    """


    marketType?: str

    spotOptions?: [Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderInstanceMarketOptionsItems0SpotOptionsItems0]


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderInstanceMarketOptionsItems0SpotOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider instance market options items0 spot options items0

    Attributes
    ----------
    instanceInterruptionBehavior : str, default is Undefined, optional
        The behavior when a Spot Instance is interrupted. Valid values include hibernate, stop, terminate . The default is terminate.
    maxPrice : str, default is Undefined, optional
        The maximum hourly price that you're willing to pay for a Spot Instance.
    spotInstanceType : str, default is Undefined, optional
        The Spot Instance request type. Valid values include one-time, persistent. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is one-time.
    validUntil : str, default is Undefined, optional
        The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
    """


    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderLaunchTemplateItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider launch template items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        ID of the launch template. Conflicts with name.
    name : str, default is Undefined, optional
        Name of the launch template. Conflicts with id.
    version : str, default is Undefined, optional
        Template version. Can be a specific version number, $Latest or $Default. The default value is $Default.
    """


    id?: str

    name?: str

    version?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderMaintenanceOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider maintenance options items0

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        Automatic recovery behavior of the Instance. Can be "default" or "disabled". See Recover your instance for more details.
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderMetadataOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider metadata options items0

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        Whether the metadata service is available. Valid values include enabled or disabled. Defaults to enabled.
    httpProtocolIpv6 : str, default is Undefined, optional
        Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to disabled.
    httpPutResponseHopLimit : float, default is Undefined, optional
        Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from 1 to 64. Defaults to 1.
    httpTokens : str, default is Undefined, optional
        Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Valid values include optional or required. Defaults to optional.
    instanceMetadataTags : str, default is Undefined, optional
        Enables or disables access to instance tags from the instance metadata service. Valid values include enabled or disabled. Defaults to disabled.
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderNetworkInterfaceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider network interface items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.
    deviceIndex : float, default is Undefined, optional
        Integer index of the network interface attachment. Limited by instance type.
    networkCardIndex : float, default is Undefined, optional
        Integer index of the network card. Limited by instance type. The default index is 0.
    networkInterfaceId : str, default is Undefined, optional
        ID of the network interface to attach.
    """


    deleteOnTermination?: bool

    deviceIndex?: float

    networkCardIndex?: float

    networkInterfaceId?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderPrivateDNSNameOptionsItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider private DNS name options items0

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    hostnameType : str, default is Undefined, optional
        Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusAtProviderRootBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 instance status at provider root block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Whether the volume should be destroyed on instance termination. Defaults to true.
    deviceName : str, default is Undefined, optional
        Device name, e.g., /dev/sdh or xvdh.
    encrypted : bool, default is Undefined, optional
        Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.
    iops : float, default is Undefined, optional
        Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    tags : {str:str}, default is Undefined, optional
        Map of tags to assign to the device.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    volumeId : str, default is Undefined, optional
        ID of the volume. For example, the ID can be accessed like this, aws_instance.web.root_block_device.0.volume_id.
    volumeSize : float, default is Undefined, optional
        Size of the volume in gibibytes (GiB).
    volumeType : str, default is Undefined, optional
        Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to the volume type that the AMI uses.
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeId?: str

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1InstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


