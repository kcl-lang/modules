"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DeploymentConfig:
    r"""
    DeploymentConfig is the Schema for the DeploymentConfigs API. Provides a CodeDeploy deployment config.

    Attributes
    ----------
    apiVersion : str, default is "deploy.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DeploymentConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DeployAwsUpboundIoV1beta1DeploymentConfigSpec, default is Undefined, required
        spec
    status : DeployAwsUpboundIoV1beta1DeploymentConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "deploy.aws.upbound.io/v1beta1" = "deploy.aws.upbound.io/v1beta1"

    kind: "DeploymentConfig" = "DeploymentConfig"

    metadata?: v1.ObjectMeta

    spec: DeployAwsUpboundIoV1beta1DeploymentConfigSpec

    status?: DeployAwsUpboundIoV1beta1DeploymentConfigStatus


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpec:
    r"""
    DeploymentConfigSpec defines the desired state of DeploymentConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DeployAwsUpboundIoV1beta1DeploymentConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DeployAwsUpboundIoV1beta1DeploymentConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProvider

    initProvider?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecWriteConnectionSecretToRef


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProvider:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider

    Attributes
    ----------
    computePlatform : str, default is Undefined, optional
        The compute platform can be Server, Lambda, or ECS. Default is Server.
    minimumHealthyHosts : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderMinimumHealthyHostsItems0], default is Undefined, optional
        A minimum_healthy_hosts block. Required for Server compute platform. Minimum Healthy Hosts are documented below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    trafficRoutingConfig : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0], default is Undefined, optional
        A traffic_routing_config block. Traffic Routing Config is documented below.
    zonalConfig : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderZonalConfigItems0], default is Undefined, optional
        A zonal_config block. Zonal Config is documented below.
    """


    computePlatform?: str

    minimumHealthyHosts?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderMinimumHealthyHostsItems0]

    region: str

    trafficRoutingConfig?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0]

    zonalConfig?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderZonalConfigItems0]


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderMinimumHealthyHostsItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider minimum healthy hosts items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type can either be FLEET_PERCENT or HOST_COUNT.
    value : float, default is Undefined, optional
        The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as
        a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
        deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
        When the type is HOST_COUNT, the value represents the minimum number of healthy instances as an absolute value.
    """


    $type?: str

    value?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider traffic routing config items0

    Attributes
    ----------
    timeBasedCanary : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0], default is Undefined, optional
        The time based canary configuration information. If type is TimeBasedLinear, use time_based_linear instead.
    timeBasedLinear : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0TimeBasedLinearItems0], default is Undefined, optional
        The time based linear configuration information. If type is TimeBasedCanary, use time_based_canary instead.
    $type : str, default is Undefined, optional
        Type of traffic routing config. One of TimeBasedCanary, TimeBasedLinear, AllAtOnce.
    """


    timeBasedCanary?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0]

    timeBasedLinear?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0TimeBasedLinearItems0]

    $type?: str


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider traffic routing config items0 time based canary items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.
    percentage : float, default is Undefined, optional
        The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.
    """


    interval?: float

    percentage?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderTrafficRoutingConfigItems0TimeBasedLinearItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider traffic routing config items0 time based linear items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.
    percentage : float, default is Undefined, optional
        The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.
    """


    interval?: float

    percentage?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderZonalConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider zonal config items0

    Attributes
    ----------
    firstZoneMonitorDurationInSeconds : float, default is Undefined, optional
        The period of time, in seconds, that CodeDeploy must wait after completing a deployment to the first Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the second Availability Zone. If you don't specify a value for first_zone_monitor_duration_in_seconds, then CodeDeploy uses the monitor_duration_in_seconds value for the first Availability Zone.
    minimumHealthyHostsPerZone : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0], default is Undefined, optional
        The number or percentage of instances that must remain available per Availability Zone during a deployment. If you don't specify a value under minimum_healthy_hosts_per_zone, then CodeDeploy uses a default value of 0 percent. This block is more documented below.
    monitorDurationInSeconds : float, default is Undefined, optional
        The period of time, in seconds, that CodeDeploy must wait after completing a deployment to an Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the next Availability Zone. If you don't specify a monitor_duration_in_seconds, CodeDeploy starts deploying to the next Availability Zone immediately.
    """


    firstZoneMonitorDurationInSeconds?: float

    minimumHealthyHostsPerZone?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0]

    monitorDurationInSeconds?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecForProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec for provider zonal config items0 minimum healthy hosts per zone items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type can either be FLEET_PERCENT or HOST_COUNT.
    value : float, default is Undefined, optional
        The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as a percentage of the total number of instances in the Availability Zone during a deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances. When the type is HOST_COUNT, the value represents the minimum number of healthy instances in the Availability Zone as an absolute value.
    """


    $type?: str

    value?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    computePlatform : str, default is Undefined, optional
        The compute platform can be Server, Lambda, or ECS. Default is Server.
    minimumHealthyHosts : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderMinimumHealthyHostsItems0], default is Undefined, optional
        A minimum_healthy_hosts block. Required for Server compute platform. Minimum Healthy Hosts are documented below.
    trafficRoutingConfig : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0], default is Undefined, optional
        A traffic_routing_config block. Traffic Routing Config is documented below.
    zonalConfig : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderZonalConfigItems0], default is Undefined, optional
        A zonal_config block. Zonal Config is documented below.
    """


    computePlatform?: str

    minimumHealthyHosts?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderMinimumHealthyHostsItems0]

    trafficRoutingConfig?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0]

    zonalConfig?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderZonalConfigItems0]


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderMinimumHealthyHostsItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec init provider minimum healthy hosts items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type can either be FLEET_PERCENT or HOST_COUNT.
    value : float, default is Undefined, optional
        The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as
        a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
        deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
        When the type is HOST_COUNT, the value represents the minimum number of healthy instances as an absolute value.
    """


    $type?: str

    value?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec init provider traffic routing config items0

    Attributes
    ----------
    timeBasedCanary : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0], default is Undefined, optional
        The time based canary configuration information. If type is TimeBasedLinear, use time_based_linear instead.
    timeBasedLinear : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0TimeBasedLinearItems0], default is Undefined, optional
        The time based linear configuration information. If type is TimeBasedCanary, use time_based_canary instead.
    $type : str, default is Undefined, optional
        Type of traffic routing config. One of TimeBasedCanary, TimeBasedLinear, AllAtOnce.
    """


    timeBasedCanary?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0]

    timeBasedLinear?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0TimeBasedLinearItems0]

    $type?: str


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec init provider traffic routing config items0 time based canary items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.
    percentage : float, default is Undefined, optional
        The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.
    """


    interval?: float

    percentage?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderTrafficRoutingConfigItems0TimeBasedLinearItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec init provider traffic routing config items0 time based linear items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.
    percentage : float, default is Undefined, optional
        The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.
    """


    interval?: float

    percentage?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderZonalConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec init provider zonal config items0

    Attributes
    ----------
    firstZoneMonitorDurationInSeconds : float, default is Undefined, optional
        The period of time, in seconds, that CodeDeploy must wait after completing a deployment to the first Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the second Availability Zone. If you don't specify a value for first_zone_monitor_duration_in_seconds, then CodeDeploy uses the monitor_duration_in_seconds value for the first Availability Zone.
    minimumHealthyHostsPerZone : [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0], default is Undefined, optional
        The number or percentage of instances that must remain available per Availability Zone during a deployment. If you don't specify a value under minimum_healthy_hosts_per_zone, then CodeDeploy uses a default value of 0 percent. This block is more documented below.
    monitorDurationInSeconds : float, default is Undefined, optional
        The period of time, in seconds, that CodeDeploy must wait after completing a deployment to an Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the next Availability Zone. If you don't specify a monitor_duration_in_seconds, CodeDeploy starts deploying to the next Availability Zone immediately.
    """


    firstZoneMonitorDurationInSeconds?: float

    minimumHealthyHostsPerZone?: [DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0]

    monitorDurationInSeconds?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecInitProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config spec init provider zonal config items0 minimum healthy hosts per zone items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type can either be FLEET_PERCENT or HOST_COUNT.
    value : float, default is Undefined, optional
        The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as a percentage of the total number of instances in the Availability Zone during a deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances. When the type is HOST_COUNT, the value represents the minimum number of healthy instances in the Availability Zone as an absolute value.
    """


    $type?: str

    value?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecProviderConfigRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DeployAwsUpboundIoV1beta1DeploymentConfigSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatus:
    r"""
    DeploymentConfigStatus defines the observed state of DeploymentConfig.

    Attributes
    ----------
    atProvider : DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProvider

    conditions?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusConditionsItems0]

    observedGeneration?: int


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProvider:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the deployment config.
    computePlatform : str, default is Undefined, optional
        The compute platform can be Server, Lambda, or ECS. Default is Server.
    deploymentConfigId : str, default is Undefined, optional
        The AWS Assigned deployment config id
    id : str, default is Undefined, optional
        The deployment group's config name.
    minimumHealthyHosts : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderMinimumHealthyHostsItems0], default is Undefined, optional
        A minimum_healthy_hosts block. Required for Server compute platform. Minimum Healthy Hosts are documented below.
    trafficRoutingConfig : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0], default is Undefined, optional
        A traffic_routing_config block. Traffic Routing Config is documented below.
    zonalConfig : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderZonalConfigItems0], default is Undefined, optional
        A zonal_config block. Zonal Config is documented below.
    """


    arn?: str

    computePlatform?: str

    deploymentConfigId?: str

    id?: str

    minimumHealthyHosts?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderMinimumHealthyHostsItems0]

    trafficRoutingConfig?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0]

    zonalConfig?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderZonalConfigItems0]


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderMinimumHealthyHostsItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider minimum healthy hosts items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type can either be FLEET_PERCENT or HOST_COUNT.
    value : float, default is Undefined, optional
        The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as
        a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
        deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
        When the type is HOST_COUNT, the value represents the minimum number of healthy instances as an absolute value.
    """


    $type?: str

    value?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider traffic routing config items0

    Attributes
    ----------
    timeBasedCanary : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0], default is Undefined, optional
        The time based canary configuration information. If type is TimeBasedLinear, use time_based_linear instead.
    timeBasedLinear : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0TimeBasedLinearItems0], default is Undefined, optional
        The time based linear configuration information. If type is TimeBasedCanary, use time_based_canary instead.
    $type : str, default is Undefined, optional
        Type of traffic routing config. One of TimeBasedCanary, TimeBasedLinear, AllAtOnce.
    """


    timeBasedCanary?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0]

    timeBasedLinear?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0TimeBasedLinearItems0]

    $type?: str


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0TimeBasedCanaryItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider traffic routing config items0 time based canary items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.
    percentage : float, default is Undefined, optional
        The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.
    """


    interval?: float

    percentage?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderTrafficRoutingConfigItems0TimeBasedLinearItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider traffic routing config items0 time based linear items0

    Attributes
    ----------
    interval : float, default is Undefined, optional
        The number of minutes between the first and second traffic shifts of a TimeBasedCanary deployment.
    percentage : float, default is Undefined, optional
        The percentage of traffic to shift in the first increment of a TimeBasedCanary deployment.
    """


    interval?: float

    percentage?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderZonalConfigItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider zonal config items0

    Attributes
    ----------
    firstZoneMonitorDurationInSeconds : float, default is Undefined, optional
        The period of time, in seconds, that CodeDeploy must wait after completing a deployment to the first Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the second Availability Zone. If you don't specify a value for first_zone_monitor_duration_in_seconds, then CodeDeploy uses the monitor_duration_in_seconds value for the first Availability Zone.
    minimumHealthyHostsPerZone : [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0], default is Undefined, optional
        The number or percentage of instances that must remain available per Availability Zone during a deployment. If you don't specify a value under minimum_healthy_hosts_per_zone, then CodeDeploy uses a default value of 0 percent. This block is more documented below.
    monitorDurationInSeconds : float, default is Undefined, optional
        The period of time, in seconds, that CodeDeploy must wait after completing a deployment to an Availability Zone. CodeDeploy will wait this amount of time before starting a deployment to the next Availability Zone. If you don't specify a monitor_duration_in_seconds, CodeDeploy starts deploying to the next Availability Zone immediately.
    """


    firstZoneMonitorDurationInSeconds?: float

    minimumHealthyHostsPerZone?: [DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0]

    monitorDurationInSeconds?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusAtProviderZonalConfigItems0MinimumHealthyHostsPerZoneItems0:
    r"""
    deploy aws upbound io v1beta1 deployment config status at provider zonal config items0 minimum healthy hosts per zone items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type can either be FLEET_PERCENT or HOST_COUNT.
    value : float, default is Undefined, optional
        The value when the type is FLEET_PERCENT represents the minimum number of healthy instances as a percentage of the total number of instances in the Availability Zone during a deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances. When the type is HOST_COUNT, the value represents the minimum number of healthy instances in the Availability Zone as an absolute value.
    """


    $type?: str

    value?: float


schema DeployAwsUpboundIoV1beta1DeploymentConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


