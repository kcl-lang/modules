"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SecurityConfig:
    r"""
    SecurityConfig is the Schema for the SecurityConfigs API.

    Attributes
    ----------
    apiVersion : str, default is "opensearchserverless.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SecurityConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpec, default is Undefined, required
        spec
    status : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "opensearchserverless.aws.upbound.io/v1beta1" = "opensearchserverless.aws.upbound.io/v1beta1"

    kind: "SecurityConfig" = "SecurityConfig"

    metadata?: v1.ObjectMeta

    spec: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpec

    status?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatus


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpec:
    r"""
    SecurityConfigSpec defines the desired state of SecurityConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecForProvider

    initProvider?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecWriteConnectionSecretToRef


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecForProvider:
    r"""
    opensearchserverless aws upbound io v1beta1 security config spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the security configuration.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    samlOptions : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecForProviderSamlOptions, default is Undefined, optional
        saml options
    $type : str, default is Undefined, required
        Type of configuration. Must be saml.
    """


    description?: str

    region: str

    samlOptions?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecForProviderSamlOptions

    $type: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecForProviderSamlOptions:
    r"""
    Configuration block for SAML options.

    Attributes
    ----------
    groupAttribute : str, default is Undefined, optional
        Group attribute for this SAML integration.
    metadata : str, default is Undefined, optional
        The XML IdP metadata file generated from your identity provider.
    sessionTimeout : float, default is Undefined, optional
        Session timeout, in minutes. Minimum is 5 minutes and maximum is 720 minutes (12 hours). Default is 60 minutes.
    userAttribute : str, default is Undefined, optional
        User attribute for this SAML integration.
    """


    groupAttribute?: str

    metadata?: str

    sessionTimeout?: float

    userAttribute?: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the security configuration.
    samlOptions : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecInitProviderSamlOptions, default is Undefined, optional
        saml options
    """


    description?: str

    samlOptions?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecInitProviderSamlOptions


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecInitProviderSamlOptions:
    r"""
    Configuration block for SAML options.

    Attributes
    ----------
    groupAttribute : str, default is Undefined, optional
        Group attribute for this SAML integration.
    metadata : str, default is Undefined, optional
        The XML IdP metadata file generated from your identity provider.
    sessionTimeout : float, default is Undefined, optional
        Session timeout, in minutes. Minimum is 5 minutes and maximum is 720 minutes (12 hours). Default is 60 minutes.
    userAttribute : str, default is Undefined, optional
        User attribute for this SAML integration.
    """


    groupAttribute?: str

    metadata?: str

    sessionTimeout?: float

    userAttribute?: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecProviderConfigRefPolicy


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatus:
    r"""
    SecurityConfigStatus defines the observed state of SecurityConfig.

    Attributes
    ----------
    atProvider : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusAtProvider

    conditions?: [OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusConditionsItems0]

    observedGeneration?: int


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusAtProvider:
    r"""
    opensearchserverless aws upbound io v1beta1 security config status at provider

    Attributes
    ----------
    configVersion : str, default is Undefined, optional
        Version of the configuration.
    description : str, default is Undefined, optional
        Description of the security configuration.
    id : str, default is Undefined, optional
        id
    samlOptions : OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusAtProviderSamlOptions, default is Undefined, optional
        saml options
    $type : str, default is Undefined, optional
        Type of configuration. Must be saml.
    """


    configVersion?: str

    description?: str

    id?: str

    samlOptions?: OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusAtProviderSamlOptions

    $type?: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusAtProviderSamlOptions:
    r"""
    Configuration block for SAML options.

    Attributes
    ----------
    groupAttribute : str, default is Undefined, optional
        Group attribute for this SAML integration.
    metadata : str, default is Undefined, optional
        The XML IdP metadata file generated from your identity provider.
    sessionTimeout : float, default is Undefined, optional
        Session timeout, in minutes. Minimum is 5 minutes and maximum is 720 minutes (12 hours). Default is 60 minutes.
    userAttribute : str, default is Undefined, optional
        User attribute for this SAML integration.
    """


    groupAttribute?: str

    metadata?: str

    sessionTimeout?: float

    userAttribute?: str


schema OpensearchserverlessAwsUpboundIoV1beta1SecurityConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


