"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TaskDefinition:
    r"""
    TaskDefinition is the Schema for the TaskDefinitions API. Manages a revision of an ECS task definition.

    Attributes
    ----------
    apiVersion : str, default is "ecs.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TaskDefinition", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EcsAwsUpboundIoV1beta1TaskDefinitionSpec, default is Undefined, required
        spec
    status : EcsAwsUpboundIoV1beta1TaskDefinitionStatus, default is Undefined, optional
        status
    """


    apiVersion: "ecs.aws.upbound.io/v1beta1" = "ecs.aws.upbound.io/v1beta1"

    kind: "TaskDefinition" = "TaskDefinition"

    metadata?: v1.ObjectMeta

    spec: EcsAwsUpboundIoV1beta1TaskDefinitionSpec

    status?: EcsAwsUpboundIoV1beta1TaskDefinitionStatus


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpec:
    r"""
    TaskDefinitionSpec defines the desired state of TaskDefinition

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProvider, default is Undefined, required
        for provider
    initProvider : EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EcsAwsUpboundIoV1beta1TaskDefinitionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EcsAwsUpboundIoV1beta1TaskDefinitionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProvider

    initProvider?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecProviderConfigRef

    publishConnectionDetailsTo?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecWriteConnectionSecretToRef


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProvider:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider

    Attributes
    ----------
    containerDefinitions : str, default is Undefined, optional
        A list of valid container definitions provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the Task Definition Parameters section from the official Developer Guide.
    cpu : str, default is Undefined, optional
        Number of cpu units used by the task. If the requires_compatibilities is FARGATE this field is required.
    ephemeralStorage : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderEphemeralStorageItems0], default is Undefined, optional
        The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on AWS Fargate. See Ephemeral Storage.
    executionRoleArn : str, default is Undefined, optional
        ARN of the task execution role that the Amazon ECS container agent and the Docker daemon can assume.
    executionRoleArnRef : EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    family : str, default is Undefined, optional
        A unique name for your task definition.
    inferenceAccelerator : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderInferenceAcceleratorItems0], default is Undefined, optional
        Configuration block(s) with Inference Accelerators settings. Detailed below.
    ipcMode : str, default is Undefined, optional
        IPC resource namespace to be used for the containers in the task The valid values are host, task, and none.
    memory : str, default is Undefined, optional
        Amount (in MiB) of memory used by the task. If the requires_compatibilities is FARGATE this field is required.
    networkMode : str, default is Undefined, optional
        Docker networking mode to use for the containers in the task. Valid values are none, bridge, awsvpc, and host.
    pidMode : str, default is Undefined, optional
        Process namespace to use for the containers in the task. The valid values are host and task.
    placementConstraints : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderPlacementConstraintsItems0], default is Undefined, optional
        Configuration block for rules that are taken into consideration during task placement. Maximum number of placement_constraints is 10. Detailed below.
    proxyConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderProxyConfigurationItems0], default is Undefined, optional
        Configuration block for the App Mesh proxy. Detailed below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requiresCompatibilities : [str], default is Undefined, optional
        Set of launch types required by the task. The valid values are EC2 and FARGATE.
    runtimePlatform : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderRuntimePlatformItems0], default is Undefined, optional
        Configuration block for runtime_platform that containers in your task may use.
    skipDestroy : bool, default is Undefined, optional
        Whether to retain the old revision when the resource is destroyed or replacement is necessary. Default is false.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taskRoleArn : str, default is Undefined, optional
        ARN of IAM role that allows your Amazon ECS container task to make calls to other AWS services.
    trackLatest : bool, default is Undefined, optional
        Whether should track latest task definition or the one created with the resource. Default is false.
    volume : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0], default is Undefined, optional
        Configuration block for volumes that containers in your task may use. Detailed below.
    """


    containerDefinitions?: str

    cpu?: str

    ephemeralStorage?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderEphemeralStorageItems0]

    executionRoleArn?: str

    executionRoleArnRef?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnRef

    executionRoleArnSelector?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnSelector

    family?: str

    inferenceAccelerator?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderInferenceAcceleratorItems0]

    ipcMode?: str

    memory?: str

    networkMode?: str

    pidMode?: str

    placementConstraints?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderPlacementConstraintsItems0]

    proxyConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderProxyConfigurationItems0]

    region: str

    requiresCompatibilities?: [str]

    runtimePlatform?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderRuntimePlatformItems0]

    skipDestroy?: bool

    tags?: {str:str}

    taskRoleArn?: str

    trackLatest?: bool

    volume?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0]


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderEphemeralStorageItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider ephemeral storage items0

    Attributes
    ----------
    sizeInGib : float, default is Undefined, optional
        The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.
    """


    sizeInGib?: float


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnRefPolicy


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnSelectorPolicy


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderInferenceAcceleratorItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider inference accelerator items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
    deviceType : str, default is Undefined, optional
        Elastic Inference accelerator type to use.
    """


    deviceName?: str

    deviceType?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderPlacementConstraintsItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Cluster Query Language expression to apply to the constraint. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.
    $type : str, default is Undefined, optional
        Type of constraint. Use memberOf to restrict selection to a group of valid candidates. Note that distinctInstance is not supported in task definitions.
    """


    expression?: str

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderProxyConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider proxy configuration items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Name of the container that will serve as the App Mesh proxy.
    properties : {str:str}, default is Undefined, optional
        Set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
    $type : str, default is Undefined, optional
        Proxy type. The default value is APPMESH. The only supported value is APPMESH.
    """


    containerName?: str

    properties?: {str:str}

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderRuntimePlatformItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider runtime platform items0

    Attributes
    ----------
    cpuArchitecture : str, default is Undefined, optional
        Must be set to either X86_64 or ARM64; see cpu architecture
    operatingSystemFamily : str, default is Undefined, optional
        If the requires_compatibilities is FARGATE this field is required; must be set to a valid option from the operating system family in the runtime platform setting
    """


    cpuArchitecture?: str

    operatingSystemFamily?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider volume items0

    Attributes
    ----------
    configureAtLaunch : bool, default is Undefined, optional
        Whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.
    dockerVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0DockerVolumeConfigurationItems0], default is Undefined, optional
        Configuration block to configure a docker volume. Detailed below.
    efsVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0EfsVolumeConfigurationItems0], default is Undefined, optional
        Configuration block for an EFS volume. Detailed below.
    fsxWindowsFileServerVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0], default is Undefined, optional
        Configuration block for an FSX Windows File Server volume. Detailed below.
    hostPath : str, default is Undefined, optional
        Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
    name : str, default is Undefined, optional
        Name of the volume. This name is referenced in the sourceVolume
        parameter of container definition in the mountPoints section.
    """


    configureAtLaunch?: bool

    dockerVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0DockerVolumeConfigurationItems0]

    efsVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0EfsVolumeConfigurationItems0]

    fsxWindowsFileServerVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0]

    hostPath?: str

    name?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0DockerVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider volume items0 docker volume configuration items0

    Attributes
    ----------
    autoprovision : bool, default is Undefined, optional
        If this value is true, the Docker volume is created if it does not already exist. Note: This field is only used if the scope is shared.
    driver : str, default is Undefined, optional
        Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
    driverOpts : {str:str}, default is Undefined, optional
        Map of Docker driver specific options.
    labels : {str:str}, default is Undefined, optional
        Map of custom metadata to add to your Docker volume.
    scope : str, default is Undefined, optional
        Scope for the Docker volume, which determines its lifecycle, either task or shared.  Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as shared persist after the task stops.
    """


    autoprovision?: bool

    driver?: str

    driverOpts?: {str:str}

    labels?: {str:str}

    scope?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0EfsVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider volume items0 efs volume configuration items0

    Attributes
    ----------
    authorizationConfig : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0], default is Undefined, optional
        Configuration block for authorization for the Amazon EFS file system. Detailed below.
    fileSystemId : str, default is Undefined, optional
        ID of the EFS File System.
    rootDirectory : str, default is Undefined, optional
        Directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying / will have the same effect as omitting this parameter. This argument is ignored when using authorization_config.
    transitEncryption : str, default is Undefined, optional
        Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.
    transitEncryptionPort : float, default is Undefined, optional
        Port to use for transit encryption. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses.
    """


    authorizationConfig?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0]

    fileSystemId?: str

    rootDirectory?: str

    transitEncryption?: str

    transitEncryptionPort?: float


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider volume items0 efs volume configuration items0 authorization config items0

    Attributes
    ----------
    accessPointId : str, default is Undefined, optional
        Access point ID to use. If an access point is specified, the root directory value will be relative to the directory set for the access point. If specified, transit encryption must be enabled in the EFSVolumeConfiguration.
    iam : str, default is Undefined, optional
        Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.
    """


    accessPointId?: str

    iam?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider volume items0 fsx windows file server volume configuration items0

    Attributes
    ----------
    authorizationConfig : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0], default is Undefined, optional
        Configuration block for authorization for the Amazon FSx for Windows File Server file system detailed below.
    fileSystemId : str, default is Undefined, optional
        The Amazon FSx for Windows File Server file system ID to use.
    rootDirectory : str, default is Undefined, optional
        The directory within the Amazon FSx for Windows File Server file system to mount as the root directory inside the host.
    """


    authorizationConfig?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0]

    fileSystemId?: str

    rootDirectory?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecForProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec for provider volume items0 fsx windows file server volume configuration items0 authorization config items0

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        The authorization credential option to use. The authorization credential options can be provided using either the Amazon Resource Name (ARN) of an AWS Secrets Manager secret or AWS Systems Manager Parameter Store parameter. The ARNs refer to the stored credentials.
    domain : str, default is Undefined, optional
        A fully qualified domain name hosted by an AWS Directory Service Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.
    """


    credentialsParameter?: str

    domain?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    containerDefinitions : str, default is Undefined, optional
        A list of valid container definitions provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the Task Definition Parameters section from the official Developer Guide.
    cpu : str, default is Undefined, optional
        Number of cpu units used by the task. If the requires_compatibilities is FARGATE this field is required.
    ephemeralStorage : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderEphemeralStorageItems0], default is Undefined, optional
        The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on AWS Fargate. See Ephemeral Storage.
    executionRoleArn : str, default is Undefined, optional
        ARN of the task execution role that the Amazon ECS container agent and the Docker daemon can assume.
    executionRoleArnRef : EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    family : str, default is Undefined, optional
        A unique name for your task definition.
    inferenceAccelerator : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderInferenceAcceleratorItems0], default is Undefined, optional
        Configuration block(s) with Inference Accelerators settings. Detailed below.
    ipcMode : str, default is Undefined, optional
        IPC resource namespace to be used for the containers in the task The valid values are host, task, and none.
    memory : str, default is Undefined, optional
        Amount (in MiB) of memory used by the task. If the requires_compatibilities is FARGATE this field is required.
    networkMode : str, default is Undefined, optional
        Docker networking mode to use for the containers in the task. Valid values are none, bridge, awsvpc, and host.
    pidMode : str, default is Undefined, optional
        Process namespace to use for the containers in the task. The valid values are host and task.
    placementConstraints : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderPlacementConstraintsItems0], default is Undefined, optional
        Configuration block for rules that are taken into consideration during task placement. Maximum number of placement_constraints is 10. Detailed below.
    proxyConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderProxyConfigurationItems0], default is Undefined, optional
        Configuration block for the App Mesh proxy. Detailed below.
    requiresCompatibilities : [str], default is Undefined, optional
        Set of launch types required by the task. The valid values are EC2 and FARGATE.
    runtimePlatform : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderRuntimePlatformItems0], default is Undefined, optional
        Configuration block for runtime_platform that containers in your task may use.
    skipDestroy : bool, default is Undefined, optional
        Whether to retain the old revision when the resource is destroyed or replacement is necessary. Default is false.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    taskRoleArn : str, default is Undefined, optional
        ARN of IAM role that allows your Amazon ECS container task to make calls to other AWS services.
    trackLatest : bool, default is Undefined, optional
        Whether should track latest task definition or the one created with the resource. Default is false.
    volume : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0], default is Undefined, optional
        Configuration block for volumes that containers in your task may use. Detailed below.
    """


    containerDefinitions?: str

    cpu?: str

    ephemeralStorage?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderEphemeralStorageItems0]

    executionRoleArn?: str

    executionRoleArnRef?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnRef

    executionRoleArnSelector?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnSelector

    family?: str

    inferenceAccelerator?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderInferenceAcceleratorItems0]

    ipcMode?: str

    memory?: str

    networkMode?: str

    pidMode?: str

    placementConstraints?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderPlacementConstraintsItems0]

    proxyConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderProxyConfigurationItems0]

    requiresCompatibilities?: [str]

    runtimePlatform?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderRuntimePlatformItems0]

    skipDestroy?: bool

    tags?: {str:str}

    taskRoleArn?: str

    trackLatest?: bool

    volume?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0]


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderEphemeralStorageItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider ephemeral storage items0

    Attributes
    ----------
    sizeInGib : float, default is Undefined, optional
        The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.
    """


    sizeInGib?: float


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnRefPolicy


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnSelectorPolicy


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderInferenceAcceleratorItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider inference accelerator items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
    deviceType : str, default is Undefined, optional
        Elastic Inference accelerator type to use.
    """


    deviceName?: str

    deviceType?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderPlacementConstraintsItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Cluster Query Language expression to apply to the constraint. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.
    $type : str, default is Undefined, optional
        Type of constraint. Use memberOf to restrict selection to a group of valid candidates. Note that distinctInstance is not supported in task definitions.
    """


    expression?: str

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderProxyConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider proxy configuration items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Name of the container that will serve as the App Mesh proxy.
    properties : {str:str}, default is Undefined, optional
        Set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
    $type : str, default is Undefined, optional
        Proxy type. The default value is APPMESH. The only supported value is APPMESH.
    """


    containerName?: str

    properties?: {str:str}

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderRuntimePlatformItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider runtime platform items0

    Attributes
    ----------
    cpuArchitecture : str, default is Undefined, optional
        Must be set to either X86_64 or ARM64; see cpu architecture
    operatingSystemFamily : str, default is Undefined, optional
        If the requires_compatibilities is FARGATE this field is required; must be set to a valid option from the operating system family in the runtime platform setting
    """


    cpuArchitecture?: str

    operatingSystemFamily?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider volume items0

    Attributes
    ----------
    configureAtLaunch : bool, default is Undefined, optional
        Whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.
    dockerVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0DockerVolumeConfigurationItems0], default is Undefined, optional
        Configuration block to configure a docker volume. Detailed below.
    efsVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0EfsVolumeConfigurationItems0], default is Undefined, optional
        Configuration block for an EFS volume. Detailed below.
    fsxWindowsFileServerVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0], default is Undefined, optional
        Configuration block for an FSX Windows File Server volume. Detailed below.
    hostPath : str, default is Undefined, optional
        Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
    name : str, default is Undefined, optional
        Name of the volume. This name is referenced in the sourceVolume
        parameter of container definition in the mountPoints section.
    """


    configureAtLaunch?: bool

    dockerVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0DockerVolumeConfigurationItems0]

    efsVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0EfsVolumeConfigurationItems0]

    fsxWindowsFileServerVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0]

    hostPath?: str

    name?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0DockerVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider volume items0 docker volume configuration items0

    Attributes
    ----------
    autoprovision : bool, default is Undefined, optional
        If this value is true, the Docker volume is created if it does not already exist. Note: This field is only used if the scope is shared.
    driver : str, default is Undefined, optional
        Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
    driverOpts : {str:str}, default is Undefined, optional
        Map of Docker driver specific options.
    labels : {str:str}, default is Undefined, optional
        Map of custom metadata to add to your Docker volume.
    scope : str, default is Undefined, optional
        Scope for the Docker volume, which determines its lifecycle, either task or shared.  Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as shared persist after the task stops.
    """


    autoprovision?: bool

    driver?: str

    driverOpts?: {str:str}

    labels?: {str:str}

    scope?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0EfsVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider volume items0 efs volume configuration items0

    Attributes
    ----------
    authorizationConfig : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0], default is Undefined, optional
        Configuration block for authorization for the Amazon EFS file system. Detailed below.
    fileSystemId : str, default is Undefined, optional
        ID of the EFS File System.
    rootDirectory : str, default is Undefined, optional
        Directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying / will have the same effect as omitting this parameter. This argument is ignored when using authorization_config.
    transitEncryption : str, default is Undefined, optional
        Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.
    transitEncryptionPort : float, default is Undefined, optional
        Port to use for transit encryption. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses.
    """


    authorizationConfig?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0]

    fileSystemId?: str

    rootDirectory?: str

    transitEncryption?: str

    transitEncryptionPort?: float


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider volume items0 efs volume configuration items0 authorization config items0

    Attributes
    ----------
    accessPointId : str, default is Undefined, optional
        Access point ID to use. If an access point is specified, the root directory value will be relative to the directory set for the access point. If specified, transit encryption must be enabled in the EFSVolumeConfiguration.
    iam : str, default is Undefined, optional
        Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.
    """


    accessPointId?: str

    iam?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider volume items0 fsx windows file server volume configuration items0

    Attributes
    ----------
    authorizationConfig : [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0], default is Undefined, optional
        Configuration block for authorization for the Amazon FSx for Windows File Server file system detailed below.
    fileSystemId : str, default is Undefined, optional
        The Amazon FSx for Windows File Server file system ID to use.
    rootDirectory : str, default is Undefined, optional
        The directory within the Amazon FSx for Windows File Server file system to mount as the root directory inside the host.
    """


    authorizationConfig?: [EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0]

    fileSystemId?: str

    rootDirectory?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecInitProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0:
    r"""
    ecs aws upbound io v1beta1 task definition spec init provider volume items0 fsx windows file server volume configuration items0 authorization config items0

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        The authorization credential option to use. The authorization credential options can be provided using either the Amazon Resource Name (ARN) of an AWS Secrets Manager secret or AWS Systems Manager Parameter Store parameter. The ARNs refer to the stored credentials.
    domain : str, default is Undefined, optional
        A fully qualified domain name hosted by an AWS Directory Service Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.
    """


    credentialsParameter?: str

    domain?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsUpboundIoV1beta1TaskDefinitionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecProviderConfigRefPolicy


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToConfigRef

    metadata?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToMetadata

    name: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToConfigRefPolicy


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatus:
    r"""
    TaskDefinitionStatus defines the observed state of TaskDefinition.

    Attributes
    ----------
    atProvider : EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProvider

    conditions?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusConditionsItems0]

    observedGeneration?: int


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProvider:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Full ARN of the Task Definition (including both family and revision).
    arnWithoutRevision : str, default is Undefined, optional
        ARN of the Task Definition with the trailing revision removed. This may be useful for situations where the latest task definition is always desired. If a revision isn't specified, the latest ACTIVE revision is used. See the AWS documentation for details.
    containerDefinitions : str, default is Undefined, optional
        A list of valid container definitions provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the Task Definition Parameters section from the official Developer Guide.
    cpu : str, default is Undefined, optional
        Number of cpu units used by the task. If the requires_compatibilities is FARGATE this field is required.
    ephemeralStorage : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderEphemeralStorageItems0], default is Undefined, optional
        The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on AWS Fargate. See Ephemeral Storage.
    executionRoleArn : str, default is Undefined, optional
        ARN of the task execution role that the Amazon ECS container agent and the Docker daemon can assume.
    family : str, default is Undefined, optional
        A unique name for your task definition.
    id : str, default is Undefined, optional
        id
    inferenceAccelerator : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderInferenceAcceleratorItems0], default is Undefined, optional
        Configuration block(s) with Inference Accelerators settings. Detailed below.
    ipcMode : str, default is Undefined, optional
        IPC resource namespace to be used for the containers in the task The valid values are host, task, and none.
    memory : str, default is Undefined, optional
        Amount (in MiB) of memory used by the task. If the requires_compatibilities is FARGATE this field is required.
    networkMode : str, default is Undefined, optional
        Docker networking mode to use for the containers in the task. Valid values are none, bridge, awsvpc, and host.
    pidMode : str, default is Undefined, optional
        Process namespace to use for the containers in the task. The valid values are host and task.
    placementConstraints : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderPlacementConstraintsItems0], default is Undefined, optional
        Configuration block for rules that are taken into consideration during task placement. Maximum number of placement_constraints is 10. Detailed below.
    proxyConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderProxyConfigurationItems0], default is Undefined, optional
        Configuration block for the App Mesh proxy. Detailed below.
    requiresCompatibilities : [str], default is Undefined, optional
        Set of launch types required by the task. The valid values are EC2 and FARGATE.
    revision : float, default is Undefined, optional
        Revision of the task in a particular family.
    runtimePlatform : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderRuntimePlatformItems0], default is Undefined, optional
        Configuration block for runtime_platform that containers in your task may use.
    skipDestroy : bool, default is Undefined, optional
        Whether to retain the old revision when the resource is destroyed or replacement is necessary. Default is false.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    taskRoleArn : str, default is Undefined, optional
        ARN of IAM role that allows your Amazon ECS container task to make calls to other AWS services.
    trackLatest : bool, default is Undefined, optional
        Whether should track latest task definition or the one created with the resource. Default is false.
    volume : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0], default is Undefined, optional
        Configuration block for volumes that containers in your task may use. Detailed below.
    """


    arn?: str

    arnWithoutRevision?: str

    containerDefinitions?: str

    cpu?: str

    ephemeralStorage?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderEphemeralStorageItems0]

    executionRoleArn?: str

    family?: str

    id?: str

    inferenceAccelerator?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderInferenceAcceleratorItems0]

    ipcMode?: str

    memory?: str

    networkMode?: str

    pidMode?: str

    placementConstraints?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderPlacementConstraintsItems0]

    proxyConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderProxyConfigurationItems0]

    requiresCompatibilities?: [str]

    revision?: float

    runtimePlatform?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderRuntimePlatformItems0]

    skipDestroy?: bool

    tags?: {str:str}

    tagsAll?: {str:str}

    taskRoleArn?: str

    trackLatest?: bool

    volume?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0]


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderEphemeralStorageItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider ephemeral storage items0

    Attributes
    ----------
    sizeInGib : float, default is Undefined, optional
        The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.
    """


    sizeInGib?: float


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderInferenceAcceleratorItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider inference accelerator items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
    deviceType : str, default is Undefined, optional
        Elastic Inference accelerator type to use.
    """


    deviceName?: str

    deviceType?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderPlacementConstraintsItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider placement constraints items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Cluster Query Language expression to apply to the constraint. For more information, see Cluster Query Language in the Amazon EC2 Container Service Developer Guide.
    $type : str, default is Undefined, optional
        Type of constraint. Use memberOf to restrict selection to a group of valid candidates. Note that distinctInstance is not supported in task definitions.
    """


    expression?: str

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderProxyConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider proxy configuration items0

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Name of the container that will serve as the App Mesh proxy.
    properties : {str:str}, default is Undefined, optional
        Set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
    $type : str, default is Undefined, optional
        Proxy type. The default value is APPMESH. The only supported value is APPMESH.
    """


    containerName?: str

    properties?: {str:str}

    $type?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderRuntimePlatformItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider runtime platform items0

    Attributes
    ----------
    cpuArchitecture : str, default is Undefined, optional
        Must be set to either X86_64 or ARM64; see cpu architecture
    operatingSystemFamily : str, default is Undefined, optional
        If the requires_compatibilities is FARGATE this field is required; must be set to a valid option from the operating system family in the runtime platform setting
    """


    cpuArchitecture?: str

    operatingSystemFamily?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider volume items0

    Attributes
    ----------
    configureAtLaunch : bool, default is Undefined, optional
        Whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.
    dockerVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0DockerVolumeConfigurationItems0], default is Undefined, optional
        Configuration block to configure a docker volume. Detailed below.
    efsVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0EfsVolumeConfigurationItems0], default is Undefined, optional
        Configuration block for an EFS volume. Detailed below.
    fsxWindowsFileServerVolumeConfiguration : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0], default is Undefined, optional
        Configuration block for an FSX Windows File Server volume. Detailed below.
    hostPath : str, default is Undefined, optional
        Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
    name : str, default is Undefined, optional
        Name of the volume. This name is referenced in the sourceVolume
        parameter of container definition in the mountPoints section.
    """


    configureAtLaunch?: bool

    dockerVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0DockerVolumeConfigurationItems0]

    efsVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0EfsVolumeConfigurationItems0]

    fsxWindowsFileServerVolumeConfiguration?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0]

    hostPath?: str

    name?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0DockerVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider volume items0 docker volume configuration items0

    Attributes
    ----------
    autoprovision : bool, default is Undefined, optional
        If this value is true, the Docker volume is created if it does not already exist. Note: This field is only used if the scope is shared.
    driver : str, default is Undefined, optional
        Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
    driverOpts : {str:str}, default is Undefined, optional
        Map of Docker driver specific options.
    labels : {str:str}, default is Undefined, optional
        Map of custom metadata to add to your Docker volume.
    scope : str, default is Undefined, optional
        Scope for the Docker volume, which determines its lifecycle, either task or shared.  Docker volumes that are scoped to a task are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as shared persist after the task stops.
    """


    autoprovision?: bool

    driver?: str

    driverOpts?: {str:str}

    labels?: {str:str}

    scope?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0EfsVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider volume items0 efs volume configuration items0

    Attributes
    ----------
    authorizationConfig : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0], default is Undefined, optional
        Configuration block for authorization for the Amazon EFS file system. Detailed below.
    fileSystemId : str, default is Undefined, optional
        ID of the EFS File System.
    rootDirectory : str, default is Undefined, optional
        Directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying / will have the same effect as omitting this parameter. This argument is ignored when using authorization_config.
    transitEncryption : str, default is Undefined, optional
        Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.
    transitEncryptionPort : float, default is Undefined, optional
        Port to use for transit encryption. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses.
    """


    authorizationConfig?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0]

    fileSystemId?: str

    rootDirectory?: str

    transitEncryption?: str

    transitEncryptionPort?: float


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0EfsVolumeConfigurationItems0AuthorizationConfigItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider volume items0 efs volume configuration items0 authorization config items0

    Attributes
    ----------
    accessPointId : str, default is Undefined, optional
        Access point ID to use. If an access point is specified, the root directory value will be relative to the directory set for the access point. If specified, transit encryption must be enabled in the EFSVolumeConfiguration.
    iam : str, default is Undefined, optional
        Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the EFSVolumeConfiguration. Valid values: ENABLED, DISABLED. If this parameter is omitted, the default value of DISABLED is used.
    """


    accessPointId?: str

    iam?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider volume items0 fsx windows file server volume configuration items0

    Attributes
    ----------
    authorizationConfig : [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0], default is Undefined, optional
        Configuration block for authorization for the Amazon FSx for Windows File Server file system detailed below.
    fileSystemId : str, default is Undefined, optional
        The Amazon FSx for Windows File Server file system ID to use.
    rootDirectory : str, default is Undefined, optional
        The directory within the Amazon FSx for Windows File Server file system to mount as the root directory inside the host.
    """


    authorizationConfig?: [EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0]

    fileSystemId?: str

    rootDirectory?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusAtProviderVolumeItems0FsxWindowsFileServerVolumeConfigurationItems0AuthorizationConfigItems0:
    r"""
    ecs aws upbound io v1beta1 task definition status at provider volume items0 fsx windows file server volume configuration items0 authorization config items0

    Attributes
    ----------
    credentialsParameter : str, default is Undefined, optional
        The authorization credential option to use. The authorization credential options can be provided using either the Amazon Resource Name (ARN) of an AWS Secrets Manager secret or AWS Systems Manager Parameter Store parameter. The ARNs refer to the stored credentials.
    domain : str, default is Undefined, optional
        A fully qualified domain name hosted by an AWS Directory Service Managed Microsoft AD (Active Directory) or self-hosted AD on Amazon EC2.
    """


    credentialsParameter?: str

    domain?: str


schema EcsAwsUpboundIoV1beta1TaskDefinitionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


