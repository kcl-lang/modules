"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema EndpointAccess:
    r"""
    EndpointAccess is the Schema for the EndpointAccesss API. Provides a Redshift Endpoint Access resource.

    Attributes
    ----------
    apiVersion : str, default is "redshift.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EndpointAccess", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RedshiftAwsUpboundIoV1beta1EndpointAccessSpec, default is Undefined, required
        spec
    status : RedshiftAwsUpboundIoV1beta1EndpointAccessStatus, default is Undefined, optional
        status
    """


    apiVersion: "redshift.aws.upbound.io/v1beta1" = "redshift.aws.upbound.io/v1beta1"

    kind: "EndpointAccess" = "EndpointAccess"

    metadata?: v1.ObjectMeta

    spec: RedshiftAwsUpboundIoV1beta1EndpointAccessSpec

    status?: RedshiftAwsUpboundIoV1beta1EndpointAccessStatus


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpec:
    r"""
    EndpointAccessSpec defines the desired state of EndpointAccess

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProvider, default is Undefined, required
        for provider
    initProvider : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProvider

    initProvider?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecProviderConfigRef

    publishConnectionDetailsTo?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecWriteConnectionSecretToRef


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProvider:
    r"""
    redshift aws upbound io v1beta1 endpoint access spec for provider

    Attributes
    ----------
    clusterIdentifier : str, default is Undefined, optional
        The cluster identifier of the cluster to access.
    clusterIdentifierRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierRef, default is Undefined, optional
        cluster identifier ref
    clusterIdentifierSelector : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierSelector, default is Undefined, optional
        cluster identifier selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceOwner : str, default is Undefined, optional
        The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
    subnetGroupName : str, default is Undefined, optional
        The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
    subnetGroupNameRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    vpcSecurityGroupIdRefs : [RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.
    """


    clusterIdentifier?: str

    clusterIdentifierRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierRef

    clusterIdentifierSelector?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierSelector

    region: str

    resourceOwner?: str

    subnetGroupName?: str

    subnetGroupNameRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameRef

    subnetGroupNameSelector?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameSelector

    vpcSecurityGroupIdRefs?: [RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierRef:
    r"""
    Reference to a Cluster in redshift to populate clusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierRefPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierSelector:
    r"""
    Selector for a Cluster in redshift to populate clusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in redshift to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameRefPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in redshift to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    clusterIdentifier : str, default is Undefined, optional
        The cluster identifier of the cluster to access.
    clusterIdentifierRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierRef, default is Undefined, optional
        cluster identifier ref
    clusterIdentifierSelector : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierSelector, default is Undefined, optional
        cluster identifier selector
    resourceOwner : str, default is Undefined, optional
        The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
    subnetGroupName : str, default is Undefined, optional
        The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
    subnetGroupNameRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    vpcSecurityGroupIdRefs : [RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.
    """


    clusterIdentifier?: str

    clusterIdentifierRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierRef

    clusterIdentifierSelector?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierSelector

    resourceOwner?: str

    subnetGroupName?: str

    subnetGroupNameRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameRef

    subnetGroupNameSelector?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameSelector

    vpcSecurityGroupIdRefs?: [RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierRef:
    r"""
    Reference to a Cluster in redshift to populate clusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierRefPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierSelector:
    r"""
    Selector for a Cluster in redshift to populate clusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in redshift to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameRefPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in redshift to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecProviderConfigRefPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToConfigRef

    metadata?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToMetadata

    name: str


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToConfigRefPolicy


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RedshiftAwsUpboundIoV1beta1EndpointAccessSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RedshiftAwsUpboundIoV1beta1EndpointAccessStatus:
    r"""
    EndpointAccessStatus defines the observed state of EndpointAccess.

    Attributes
    ----------
    atProvider : RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RedshiftAwsUpboundIoV1beta1EndpointAccessStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProvider

    conditions?: [RedshiftAwsUpboundIoV1beta1EndpointAccessStatusConditionsItems0]

    observedGeneration?: int


schema RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProvider:
    r"""
    redshift aws upbound io v1beta1 endpoint access status at provider

    Attributes
    ----------
    address : str, default is Undefined, optional
        The DNS address of the endpoint.
    clusterIdentifier : str, default is Undefined, optional
        The cluster identifier of the cluster to access.
    id : str, default is Undefined, optional
        The Redshift-managed VPC endpoint name.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections.
    resourceOwner : str, default is Undefined, optional
        The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
    subnetGroupName : str, default is Undefined, optional
        The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
    vpcEndpoint : [RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProviderVpcEndpointItems0], default is Undefined, optional
        The connection endpoint for connecting to an Amazon Redshift cluster through the proxy. See details below.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.
    """


    address?: str

    clusterIdentifier?: str

    id?: str

    port?: float

    resourceOwner?: str

    subnetGroupName?: str

    vpcEndpoint?: [RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProviderVpcEndpointItems0]

    vpcSecurityGroupIds?: [str]


schema RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProviderVpcEndpointItems0:
    r"""
    redshift aws upbound io v1beta1 endpoint access status at provider vpc endpoint items0

    Attributes
    ----------
    networkInterface : [RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProviderVpcEndpointItems0NetworkInterfaceItems0], default is Undefined, optional
        One or more network interfaces of the endpoint. Also known as an interface endpoint. See details below.
    vpcEndpointId : str, default is Undefined, optional
        The connection endpoint ID for connecting an Amazon Redshift cluster through the proxy.
    vpcId : str, default is Undefined, optional
        The VPC identifier that the endpoint is associated.
    """


    networkInterface?: [RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProviderVpcEndpointItems0NetworkInterfaceItems0]

    vpcEndpointId?: str

    vpcId?: str


schema RedshiftAwsUpboundIoV1beta1EndpointAccessStatusAtProviderVpcEndpointItems0NetworkInterfaceItems0:
    r"""
    redshift aws upbound io v1beta1 endpoint access status at provider vpc endpoint items0 network interface items0

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The Availability Zone.
    networkInterfaceId : str, default is Undefined, optional
        The network interface identifier.
    privateIpAddress : str, default is Undefined, optional
        The IPv4 address of the network interface within the subnet.
    subnetId : str, default is Undefined, optional
        The subnet identifier.
    """


    availabilityZone?: str

    networkInterfaceId?: str

    privateIpAddress?: str

    subnetId?: str


schema RedshiftAwsUpboundIoV1beta1EndpointAccessStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


