"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PoolRolesAttachment:
    r"""
    PoolRolesAttachment is the Schema for the PoolRolesAttachments API. Provides an AWS Cognito Identity Pool Roles Attachment.

    Attributes
    ----------
    apiVersion : str, default is "cognitoidentity.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PoolRolesAttachment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpec, default is Undefined, required
        spec
    status : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "cognitoidentity.aws.upbound.io/v1beta1" = "cognitoidentity.aws.upbound.io/v1beta1"

    kind: "PoolRolesAttachment" = "PoolRolesAttachment"

    metadata?: v1.ObjectMeta

    spec: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpec

    status?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatus


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpec:
    r"""
    PoolRolesAttachmentSpec defines the desired state of PoolRolesAttachment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProvider

    initProvider?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecProviderConfigRef

    publishConnectionDetailsTo?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecWriteConnectionSecretToRef


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProvider:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment spec for provider

    Attributes
    ----------
    identityPoolId : str, default is Undefined, optional
        An identity pool ID in the format REGION_GUID.
    identityPoolIdRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDRef, default is Undefined, optional
        identity pool Id ref
    identityPoolIdSelector : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDSelector, default is Undefined, optional
        identity pool Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleMapping : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0], default is Undefined, optional
        A List of Role Mapping.
    roles : {str:str}, default is Undefined, optional
        The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.
    """


    identityPoolId?: str

    identityPoolIdRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDRef

    identityPoolIdSelector?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDSelector

    region: str

    roleMapping?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0]

    roles?: {str:str}


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDRef:
    r"""
    Reference to a Pool in cognitoidentity to populate identityPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDRefPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDSelector:
    r"""
    Selector for a Pool in cognitoidentity to populate identityPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDSelectorPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderIdentityPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment spec for provider role mapping items0

    Attributes
    ----------
    ambiguousRoleResolution : str, default is Undefined, optional
        Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. Required if you specify Token or Rules as the Type.
    identityProvider : str, default is Undefined, optional
        A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on cognito_identity_providers set on aws_cognito_identity_pool resource or a aws_cognito_identity_provider resource.
    mappingRule : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0], default is Undefined, optional
        The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
    $type : str, default is Undefined, optional
        The role mapping type.
    """


    ambiguousRoleResolution?: str

    identityProvider?: str

    mappingRule?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0]

    $type?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment spec for provider role mapping items0 mapping rule items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        The claim name that must be present in the token, for example, "isAdmin" or "paid".
    matchType : str, default is Undefined, optional
        The match condition that specifies how closely the claim value in the IdP token must match Value.
    roleArn : str, default is Undefined, optional
        The role ARN.
    roleArnRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    value : str, default is Undefined, optional
        A brief string that the claim must match, for example, "paid" or "yes".
    """


    claim?: str

    matchType?: str

    roleArn?: str

    roleArnRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnRef

    roleArnSelector?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnSelector

    value?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnRefPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnSelectorPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecForProviderRoleMappingItems0MappingRuleItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    identityPoolId : str, default is Undefined, optional
        An identity pool ID in the format REGION_GUID.
    identityPoolIdRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDRef, default is Undefined, optional
        identity pool Id ref
    identityPoolIdSelector : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDSelector, default is Undefined, optional
        identity pool Id selector
    roleMapping : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0], default is Undefined, optional
        A List of Role Mapping.
    roles : {str:str}, default is Undefined, optional
        The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.
    """


    identityPoolId?: str

    identityPoolIdRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDRef

    identityPoolIdSelector?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDSelector

    roleMapping?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0]

    roles?: {str:str}


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDRef:
    r"""
    Reference to a Pool in cognitoidentity to populate identityPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDRefPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDSelector:
    r"""
    Selector for a Pool in cognitoidentity to populate identityPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDSelectorPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderIdentityPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment spec init provider role mapping items0

    Attributes
    ----------
    ambiguousRoleResolution : str, default is Undefined, optional
        Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. Required if you specify Token or Rules as the Type.
    identityProvider : str, default is Undefined, optional
        A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on cognito_identity_providers set on aws_cognito_identity_pool resource or a aws_cognito_identity_provider resource.
    mappingRule : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0], default is Undefined, optional
        The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
    $type : str, default is Undefined, optional
        The role mapping type.
    """


    ambiguousRoleResolution?: str

    identityProvider?: str

    mappingRule?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0]

    $type?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment spec init provider role mapping items0 mapping rule items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        The claim name that must be present in the token, for example, "isAdmin" or "paid".
    matchType : str, default is Undefined, optional
        The match condition that specifies how closely the claim value in the IdP token must match Value.
    roleArn : str, default is Undefined, optional
        The role ARN.
    roleArnRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    value : str, default is Undefined, optional
        A brief string that the claim must match, for example, "paid" or "yes".
    """


    claim?: str

    matchType?: str

    roleArn?: str

    roleArnRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnRef

    roleArnSelector?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnSelector

    value?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnRefPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnSelectorPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecInitProviderRoleMappingItems0MappingRuleItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecProviderConfigRefPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToConfigRef

    metadata?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToMetadata

    name: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToConfigRefPolicy


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatus:
    r"""
    PoolRolesAttachmentStatus defines the observed state of PoolRolesAttachment.

    Attributes
    ----------
    atProvider : CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProvider

    conditions?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusConditionsItems0]

    observedGeneration?: int


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProvider:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment status at provider

    Attributes
    ----------
    id : str, default is Undefined, optional
        The identity pool ID.
    identityPoolId : str, default is Undefined, optional
        An identity pool ID in the format REGION_GUID.
    roleMapping : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProviderRoleMappingItems0], default is Undefined, optional
        A List of Role Mapping.
    roles : {str:str}, default is Undefined, optional
        The map of roles associated with this pool. For a given role, the key will be either "authenticated" or "unauthenticated" and the value will be the Role ARN.
    """


    id?: str

    identityPoolId?: str

    roleMapping?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProviderRoleMappingItems0]

    roles?: {str:str}


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProviderRoleMappingItems0:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment status at provider role mapping items0

    Attributes
    ----------
    ambiguousRoleResolution : str, default is Undefined, optional
        Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. Required if you specify Token or Rules as the Type.
    identityProvider : str, default is Undefined, optional
        A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on cognito_identity_providers set on aws_cognito_identity_pool resource or a aws_cognito_identity_provider resource.
    mappingRule : [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProviderRoleMappingItems0MappingRuleItems0], default is Undefined, optional
        The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
    $type : str, default is Undefined, optional
        The role mapping type.
    """


    ambiguousRoleResolution?: str

    identityProvider?: str

    mappingRule?: [CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProviderRoleMappingItems0MappingRuleItems0]

    $type?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusAtProviderRoleMappingItems0MappingRuleItems0:
    r"""
    cognitoidentity aws upbound io v1beta1 pool roles attachment status at provider role mapping items0 mapping rule items0

    Attributes
    ----------
    claim : str, default is Undefined, optional
        The claim name that must be present in the token, for example, "isAdmin" or "paid".
    matchType : str, default is Undefined, optional
        The match condition that specifies how closely the claim value in the IdP token must match Value.
    roleArn : str, default is Undefined, optional
        The role ARN.
    value : str, default is Undefined, optional
        A brief string that the claim must match, for example, "paid" or "yes".
    """


    claim?: str

    matchType?: str

    roleArn?: str

    value?: str


schema CognitoidentityAwsUpboundIoV1beta1PoolRolesAttachmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


