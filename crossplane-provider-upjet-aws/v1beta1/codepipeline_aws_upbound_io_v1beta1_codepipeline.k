"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Codepipeline:
    r"""
    Codepipeline is the Schema for the Codepipelines API. Provides a CodePipeline

    Attributes
    ----------
    apiVersion : str, default is "codepipeline.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Codepipeline", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CodepipelineAwsUpboundIoV1beta1CodepipelineSpec, default is Undefined, required
        spec
    status : CodepipelineAwsUpboundIoV1beta1CodepipelineStatus, default is Undefined, optional
        status
    """


    apiVersion: "codepipeline.aws.upbound.io/v1beta1" = "codepipeline.aws.upbound.io/v1beta1"

    kind: "Codepipeline" = "Codepipeline"

    metadata?: v1.ObjectMeta

    spec: CodepipelineAwsUpboundIoV1beta1CodepipelineSpec

    status?: CodepipelineAwsUpboundIoV1beta1CodepipelineStatus


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpec:
    r"""
    CodepipelineSpec defines the desired state of Codepipeline

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProvider, default is Undefined, required
        for provider
    initProvider : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProvider

    initProvider?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecProviderConfigRef

    publishConnectionDetailsTo?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecWriteConnectionSecretToRef


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProvider:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider

    Attributes
    ----------
    artifactStore : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0], default is Undefined, optional
        One or more artifact_store blocks. Artifact stores are documented below.
    executionMode : str, default is Undefined, optional
        The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED. For value values, refer to the AWS documentation.
    pipelineType : str, default is Undefined, optional
        Type of the pipeline. Possible values are: V1 and V2. Default value is V1.
    region : str, default is Undefined, required
        The region in which to run the action.
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
    roleArnRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    stage : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderStageItems0], default is Undefined, optional
        (Minimum of at least two stage blocks is required) A stage block. Stages are documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    trigger : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0], default is Undefined, optional
        A trigger block. Valid only when pipeline_type is V2. Triggers are documented below.
    variable : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderVariableItems0], default is Undefined, optional
        A pipeline-level variable block. Valid only when pipeline_type is V2. Variable are documented below.
    """


    artifactStore?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0]

    executionMode?: str

    pipelineType?: str

    region: str

    roleArn?: str

    roleArnRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnRef

    roleArnSelector?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnSelector

    stage?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderStageItems0]

    tags?: {str:str}

    trigger?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0]

    variable?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderVariableItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider artifact store items0

    Attributes
    ----------
    encryptionKey : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0EncryptionKeyItems0], default is Undefined, optional
        The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An encryption_key block is documented below.
    location : str, default is Undefined, optional
        The location where AWS CodePipeline stores artifacts for a pipeline; currently only S3 is supported.
    locationRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationRef, default is Undefined, optional
        location ref
    locationSelector : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationSelector, default is Undefined, optional
        location selector
    region : str, default is Undefined, optional
        The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
    $type : str, default is Undefined, optional
        The type of the artifact store, such as Amazon S3
    """


    encryptionKey?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0EncryptionKeyItems0]

    location?: str

    locationRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationRef

    locationSelector?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationSelector

    region?: str

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0EncryptionKeyItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider artifact store items0 encryption key items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The KMS key ARN or ID
    $type : str, default is Undefined, optional
        The type of key; currently only KMS is supported
    """


    id?: str

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationRef:
    r"""
    Reference to a Bucket in s3 to populate location.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationRefPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationSelector:
    r"""
    Selector for a Bucket in s3 to populate location.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationSelectorPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderArtifactStoreItems0LocationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnRefPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnSelectorPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderStageItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider stage items0

    Attributes
    ----------
    action : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderStageItems0ActionItems0], default is Undefined, optional
        The action(s) to include in the stage. Defined as an action block below
    name : str, default is Undefined, optional
        The name of the stage.
    """


    action?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderStageItems0ActionItems0]

    name?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderStageItems0ActionItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider stage items0 action items0

    Attributes
    ----------
    category : str, default is Undefined, optional
        A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are Approval, Build, Deploy, Invoke, Source and Test.
    configuration : {str:str}, default is Undefined, optional
        A map of the action declaration's configuration. Configurations options for action types and providers can be found in the Pipeline Structure Reference and Action Structure Reference documentation.
    inputArtifacts : [str], default is Undefined, optional
        A list of artifact names to be worked on.
    name : str, default is Undefined, optional
        The action declaration's name.
    namespace : str, default is Undefined, optional
        The namespace all output variables will be accessed from.
    outputArtifacts : [str], default is Undefined, optional
        A list of artifact names to output. Output artifact names must be unique within a pipeline.
    owner : str, default is Undefined, optional
        The creator of the action being called. Possible values are AWS, Custom and ThirdParty.
    provider : str, default is Undefined, optional
        The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the Action Structure Reference documentation.
    region : str, default is Undefined, optional
        The region in which to run the action.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
    runOrder : float, default is Undefined, optional
        The order in which actions are run.
    timeoutInMinutes : float, default is Undefined, optional
        timeout in minutes
    version : str, default is Undefined, optional
        A string that identifies the action type.
    """


    category?: str

    configuration?: {str:str}

    inputArtifacts?: [str]

    name?: str

    namespace?: str

    outputArtifacts?: [str]

    owner?: str

    provider?: str

    region?: str

    roleArn?: str

    runOrder?: float

    timeoutInMinutes?: float

    version?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0

    Attributes
    ----------
    gitConfiguration : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0], default is Undefined, optional
        Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the AWS documentation. A git_configuration block is documented below.
    providerType : str, default is Undefined, optional
        The source provider for the event. Possible value is CodeStarSourceConnection.
    """


    gitConfiguration?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0]

    providerType?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0

    Attributes
    ----------
    pullRequest : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0], default is Undefined, optional
        The field where the repository event that will start the pipeline is specified as pull requests. A pull_request block is documented below.
    push : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0], default is Undefined, optional
        The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A push block is documented below.
    sourceActionName : str, default is Undefined, optional
        The name of the pipeline source action where the trigger configuration.
    """


    pullRequest?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0]

    push?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0]

    sourceActionName?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 pull request items0

    Attributes
    ----------
    branches : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0], default is Undefined, optional
        The field that specifies to filter on branches for the pull request trigger configuration. A branches block is documented below.
    events : [str], default is Undefined, optional
        A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are OPEN, UPDATED  and CLOSED.
    filePaths : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0], default is Undefined, optional
        The field that specifies to filter on file paths for the pull request trigger configuration. A file_paths block is documented below.
    """


    branches?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0]

    events?: [str]

    filePaths?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 pull request items0 branches items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 pull request items0 file paths items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 push items0

    Attributes
    ----------
    branches : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0], default is Undefined, optional
        The field that specifies to filter on branches for the pull request trigger configuration. A branches block is documented below.
    filePaths : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0], default is Undefined, optional
        The field that specifies to filter on file paths for the pull request trigger configuration. A file_paths block is documented below.
    tags : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0], default is Undefined, optional
        Key-value map of resource tags.
    """


    branches?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0]

    filePaths?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0]

    tags?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 push items0 branches items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 push items0 file paths items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider trigger items0 git configuration items0 push items0 tags items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecForProviderVariableItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec for provider variable items0

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        The default value of a pipeline-level variable.
    description : str, default is Undefined, optional
        The description of a pipeline-level variable.
    name : str, default is Undefined, optional
        The name of a pipeline-level variable.
    """


    defaultValue?: str

    description?: str

    name?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    artifactStore : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0], default is Undefined, optional
        One or more artifact_store blocks. Artifact stores are documented below.
    executionMode : str, default is Undefined, optional
        The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED. For value values, refer to the AWS documentation.
    pipelineType : str, default is Undefined, optional
        Type of the pipeline. Possible values are: V1 and V2. Default value is V1.
    roleArn : str, default is Undefined, optional
        A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
    roleArnRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    stage : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderStageItems0], default is Undefined, optional
        (Minimum of at least two stage blocks is required) A stage block. Stages are documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    trigger : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0], default is Undefined, optional
        A trigger block. Valid only when pipeline_type is V2. Triggers are documented below.
    variable : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderVariableItems0], default is Undefined, optional
        A pipeline-level variable block. Valid only when pipeline_type is V2. Variable are documented below.
    """


    artifactStore?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0]

    executionMode?: str

    pipelineType?: str

    roleArn?: str

    roleArnRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnRef

    roleArnSelector?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnSelector

    stage?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderStageItems0]

    tags?: {str:str}

    trigger?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0]

    variable?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderVariableItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider artifact store items0

    Attributes
    ----------
    encryptionKey : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0EncryptionKeyItems0], default is Undefined, optional
        The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An encryption_key block is documented below.
    location : str, default is Undefined, optional
        The location where AWS CodePipeline stores artifacts for a pipeline; currently only S3 is supported.
    locationRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationRef, default is Undefined, optional
        location ref
    locationSelector : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationSelector, default is Undefined, optional
        location selector
    $type : str, default is Undefined, optional
        The type of the artifact store, such as Amazon S3
    """


    encryptionKey?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0EncryptionKeyItems0]

    location?: str

    locationRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationRef

    locationSelector?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationSelector

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0EncryptionKeyItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider artifact store items0 encryption key items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The KMS key ARN or ID
    $type : str, default is Undefined, optional
        The type of key; currently only KMS is supported
    """


    id?: str

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationRef:
    r"""
    Reference to a Bucket in s3 to populate location.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationRefPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationSelector:
    r"""
    Selector for a Bucket in s3 to populate location.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationSelectorPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderArtifactStoreItems0LocationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnRefPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnSelectorPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderStageItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider stage items0

    Attributes
    ----------
    action : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderStageItems0ActionItems0], default is Undefined, optional
        The action(s) to include in the stage. Defined as an action block below
    name : str, default is Undefined, optional
        The name of the stage.
    """


    action?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderStageItems0ActionItems0]

    name?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderStageItems0ActionItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider stage items0 action items0

    Attributes
    ----------
    category : str, default is Undefined, optional
        A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are Approval, Build, Deploy, Invoke, Source and Test.
    configuration : {str:str}, default is Undefined, optional
        A map of the action declaration's configuration. Configurations options for action types and providers can be found in the Pipeline Structure Reference and Action Structure Reference documentation.
    inputArtifacts : [str], default is Undefined, optional
        A list of artifact names to be worked on.
    name : str, default is Undefined, optional
        The action declaration's name.
    namespace : str, default is Undefined, optional
        The namespace all output variables will be accessed from.
    outputArtifacts : [str], default is Undefined, optional
        A list of artifact names to output. Output artifact names must be unique within a pipeline.
    owner : str, default is Undefined, optional
        The creator of the action being called. Possible values are AWS, Custom and ThirdParty.
    provider : str, default is Undefined, optional
        The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the Action Structure Reference documentation.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
    runOrder : float, default is Undefined, optional
        The order in which actions are run.
    timeoutInMinutes : float, default is Undefined, optional
        timeout in minutes
    version : str, default is Undefined, optional
        A string that identifies the action type.
    """


    category?: str

    configuration?: {str:str}

    inputArtifacts?: [str]

    name?: str

    namespace?: str

    outputArtifacts?: [str]

    owner?: str

    provider?: str

    roleArn?: str

    runOrder?: float

    timeoutInMinutes?: float

    version?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0

    Attributes
    ----------
    gitConfiguration : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0], default is Undefined, optional
        Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the AWS documentation. A git_configuration block is documented below.
    providerType : str, default is Undefined, optional
        The source provider for the event. Possible value is CodeStarSourceConnection.
    """


    gitConfiguration?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0]

    providerType?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0

    Attributes
    ----------
    pullRequest : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0], default is Undefined, optional
        The field where the repository event that will start the pipeline is specified as pull requests. A pull_request block is documented below.
    push : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0], default is Undefined, optional
        The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A push block is documented below.
    sourceActionName : str, default is Undefined, optional
        The name of the pipeline source action where the trigger configuration.
    """


    pullRequest?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0]

    push?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0]

    sourceActionName?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 pull request items0

    Attributes
    ----------
    branches : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0], default is Undefined, optional
        The field that specifies to filter on branches for the pull request trigger configuration. A branches block is documented below.
    events : [str], default is Undefined, optional
        A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are OPEN, UPDATED  and CLOSED.
    filePaths : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0], default is Undefined, optional
        The field that specifies to filter on file paths for the pull request trigger configuration. A file_paths block is documented below.
    """


    branches?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0]

    events?: [str]

    filePaths?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 pull request items0 branches items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 pull request items0 file paths items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 push items0

    Attributes
    ----------
    branches : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0], default is Undefined, optional
        The field that specifies to filter on branches for the pull request trigger configuration. A branches block is documented below.
    filePaths : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0], default is Undefined, optional
        The field that specifies to filter on file paths for the pull request trigger configuration. A file_paths block is documented below.
    tags : [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0], default is Undefined, optional
        Key-value map of resource tags.
    """


    branches?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0]

    filePaths?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0]

    tags?: [CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 push items0 branches items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 push items0 file paths items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider trigger items0 git configuration items0 push items0 tags items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecInitProviderVariableItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline spec init provider variable items0

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        The default value of a pipeline-level variable.
    description : str, default is Undefined, optional
        The description of a pipeline-level variable.
    name : str, default is Undefined, optional
        The name of a pipeline-level variable.
    """


    defaultValue?: str

    description?: str

    name?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecProviderConfigRefPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToConfigRef

    metadata?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToMetadata

    name: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToConfigRefPolicy


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatus:
    r"""
    CodepipelineStatus defines the observed state of Codepipeline.

    Attributes
    ----------
    atProvider : CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProvider

    conditions?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusConditionsItems0]

    observedGeneration?: int


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProvider:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The codepipeline ARN.
    artifactStore : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderArtifactStoreItems0], default is Undefined, optional
        One or more artifact_store blocks. Artifact stores are documented below.
    executionMode : str, default is Undefined, optional
        The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED. For value values, refer to the AWS documentation.
    id : str, default is Undefined, optional
        The codepipeline ID.
    pipelineType : str, default is Undefined, optional
        Type of the pipeline. Possible values are: V1 and V2. Default value is V1.
    roleArn : str, default is Undefined, optional
        A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
    stage : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderStageItems0], default is Undefined, optional
        (Minimum of at least two stage blocks is required) A stage block. Stages are documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    trigger : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0], default is Undefined, optional
        A trigger block. Valid only when pipeline_type is V2. Triggers are documented below.
    variable : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderVariableItems0], default is Undefined, optional
        A pipeline-level variable block. Valid only when pipeline_type is V2. Variable are documented below.
    """


    arn?: str

    artifactStore?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderArtifactStoreItems0]

    executionMode?: str

    id?: str

    pipelineType?: str

    roleArn?: str

    stage?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderStageItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    trigger?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0]

    variable?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderVariableItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderArtifactStoreItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider artifact store items0

    Attributes
    ----------
    encryptionKey : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderArtifactStoreItems0EncryptionKeyItems0], default is Undefined, optional
        The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don't specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An encryption_key block is documented below.
    location : str, default is Undefined, optional
        The location where AWS CodePipeline stores artifacts for a pipeline; currently only S3 is supported.
    region : str, default is Undefined, optional
        The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
    $type : str, default is Undefined, optional
        The type of the artifact store, such as Amazon S3
    """


    encryptionKey?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderArtifactStoreItems0EncryptionKeyItems0]

    location?: str

    region?: str

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderArtifactStoreItems0EncryptionKeyItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider artifact store items0 encryption key items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The KMS key ARN or ID
    $type : str, default is Undefined, optional
        The type of key; currently only KMS is supported
    """


    id?: str

    $type?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderStageItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider stage items0

    Attributes
    ----------
    action : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderStageItems0ActionItems0], default is Undefined, optional
        The action(s) to include in the stage. Defined as an action block below
    name : str, default is Undefined, optional
        The name of the stage.
    """


    action?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderStageItems0ActionItems0]

    name?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderStageItems0ActionItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider stage items0 action items0

    Attributes
    ----------
    category : str, default is Undefined, optional
        A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are Approval, Build, Deploy, Invoke, Source and Test.
    configuration : {str:str}, default is Undefined, optional
        A map of the action declaration's configuration. Configurations options for action types and providers can be found in the Pipeline Structure Reference and Action Structure Reference documentation.
    inputArtifacts : [str], default is Undefined, optional
        A list of artifact names to be worked on.
    name : str, default is Undefined, optional
        The action declaration's name.
    namespace : str, default is Undefined, optional
        The namespace all output variables will be accessed from.
    outputArtifacts : [str], default is Undefined, optional
        A list of artifact names to output. Output artifact names must be unique within a pipeline.
    owner : str, default is Undefined, optional
        The creator of the action being called. Possible values are AWS, Custom and ThirdParty.
    provider : str, default is Undefined, optional
        The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the Action Structure Reference documentation.
    region : str, default is Undefined, optional
        The region in which to run the action.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM service role that will perform the declared action. This is assumed through the roleArn for the pipeline.
    runOrder : float, default is Undefined, optional
        The order in which actions are run.
    timeoutInMinutes : float, default is Undefined, optional
        timeout in minutes
    version : str, default is Undefined, optional
        A string that identifies the action type.
    """


    category?: str

    configuration?: {str:str}

    inputArtifacts?: [str]

    name?: str

    namespace?: str

    outputArtifacts?: [str]

    owner?: str

    provider?: str

    region?: str

    roleArn?: str

    runOrder?: float

    timeoutInMinutes?: float

    version?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0

    Attributes
    ----------
    gitConfiguration : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0], default is Undefined, optional
        Provides the filter criteria and the source stage for the repository event that starts the pipeline. For more information, refer to the AWS documentation. A git_configuration block is documented below.
    providerType : str, default is Undefined, optional
        The source provider for the event. Possible value is CodeStarSourceConnection.
    """


    gitConfiguration?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0]

    providerType?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0

    Attributes
    ----------
    pullRequest : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0], default is Undefined, optional
        The field where the repository event that will start the pipeline is specified as pull requests. A pull_request block is documented below.
    push : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0], default is Undefined, optional
        The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A push block is documented below.
    sourceActionName : str, default is Undefined, optional
        The name of the pipeline source action where the trigger configuration.
    """


    pullRequest?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0]

    push?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0]

    sourceActionName?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 pull request items0

    Attributes
    ----------
    branches : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0], default is Undefined, optional
        The field that specifies to filter on branches for the pull request trigger configuration. A branches block is documented below.
    events : [str], default is Undefined, optional
        A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are OPEN, UPDATED  and CLOSED.
    filePaths : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0], default is Undefined, optional
        The field that specifies to filter on file paths for the pull request trigger configuration. A file_paths block is documented below.
    """


    branches?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0]

    events?: [str]

    filePaths?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0BranchesItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 pull request items0 branches items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PullRequestItems0FilePathsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 pull request items0 file paths items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 push items0

    Attributes
    ----------
    branches : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0], default is Undefined, optional
        The field that specifies to filter on branches for the pull request trigger configuration. A branches block is documented below.
    filePaths : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0], default is Undefined, optional
        The field that specifies to filter on file paths for the pull request trigger configuration. A file_paths block is documented below.
    tags : [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0], default is Undefined, optional
        Key-value map of resource tags.
    """


    branches?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0]

    filePaths?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0]

    tags?: [CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0BranchesItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 push items0 branches items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0FilePathsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 push items0 file paths items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderTriggerItems0GitConfigurationItems0PushItems0TagsItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider trigger items0 git configuration items0 push items0 tags items0

    Attributes
    ----------
    excludes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be excluded from starting the pipeline.
    includes : [str], default is Undefined, optional
        A list of patterns of Git tags that, when pushed, are to be included as criteria that starts the pipeline.
    """


    excludes?: [str]

    includes?: [str]


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusAtProviderVariableItems0:
    r"""
    codepipeline aws upbound io v1beta1 codepipeline status at provider variable items0

    Attributes
    ----------
    defaultValue : str, default is Undefined, optional
        The default value of a pipeline-level variable.
    description : str, default is Undefined, optional
        The description of a pipeline-level variable.
    name : str, default is Undefined, optional
        The name of a pipeline-level variable.
    """


    defaultValue?: str

    description?: str

    name?: str


schema CodepipelineAwsUpboundIoV1beta1CodepipelineStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


