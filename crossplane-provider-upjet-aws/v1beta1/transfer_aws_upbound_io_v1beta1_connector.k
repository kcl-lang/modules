"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Connector:
    r"""
    Connector is the Schema for the Connectors API. Provides a AWS Transfer AS2 Connector Resource

    Attributes
    ----------
    apiVersion : str, default is "transfer.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Connector", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : TransferAwsUpboundIoV1beta1ConnectorSpec, default is Undefined, required
        spec
    status : TransferAwsUpboundIoV1beta1ConnectorStatus, default is Undefined, optional
        status
    """


    apiVersion: "transfer.aws.upbound.io/v1beta1" = "transfer.aws.upbound.io/v1beta1"

    kind: "Connector" = "Connector"

    metadata?: v1.ObjectMeta

    spec: TransferAwsUpboundIoV1beta1ConnectorSpec

    status?: TransferAwsUpboundIoV1beta1ConnectorStatus


schema TransferAwsUpboundIoV1beta1ConnectorSpec:
    r"""
    ConnectorSpec defines the desired state of Connector

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : TransferAwsUpboundIoV1beta1ConnectorSpecForProvider, default is Undefined, required
        for provider
    initProvider : TransferAwsUpboundIoV1beta1ConnectorSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : TransferAwsUpboundIoV1beta1ConnectorSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : TransferAwsUpboundIoV1beta1ConnectorSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: TransferAwsUpboundIoV1beta1ConnectorSpecForProvider

    initProvider?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: TransferAwsUpboundIoV1beta1ConnectorSpecProviderConfigRef

    publishConnectionDetailsTo?: TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: TransferAwsUpboundIoV1beta1ConnectorSpecWriteConnectionSecretToRef


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProvider:
    r"""
    transfer aws upbound io v1beta1 connector spec for provider

    Attributes
    ----------
    accessRole : str, default is Undefined, optional
        The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.
    accessRoleRef : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleRef, default is Undefined, optional
        access role ref
    accessRoleSelector : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleSelector, default is Undefined, optional
        access role selector
    as2Config : [TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAs2ConfigItems0], default is Undefined, optional
        Either SFTP or AS2 is configured.The parameters to configure for the connector object. Fields documented below.
    loggingRole : str, default is Undefined, optional
        The IAM Role which is required for allowing the connector to turn on CloudWatch logging for Amazon S3 events.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityPolicyName : str, default is Undefined, optional
        Name of the security policy for the connector.
    sftpConfig : [TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0], default is Undefined, optional
        Either SFTP or AS2 is configured.The parameters to configure for the connector object. Fields documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    url : str, default is Undefined, optional
        The URL of the partners AS2 endpoint or SFTP endpoint.
    """


    accessRole?: str

    accessRoleRef?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleRef

    accessRoleSelector?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleSelector

    as2Config?: [TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAs2ConfigItems0]

    loggingRole?: str

    region: str

    securityPolicyName?: str

    sftpConfig?: [TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0]

    tags?: {str:str}

    url?: str


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleRef:
    r"""
    Reference to a Role in iam to populate accessRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleRefPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleSelector:
    r"""
    Selector for a Role in iam to populate accessRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleSelectorPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAccessRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderAs2ConfigItems0:
    r"""
    transfer aws upbound io v1beta1 connector spec for provider as2 config items0

    Attributes
    ----------
    compression : str, default is Undefined, optional
        Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.
    encryptionAlgorithm : str, default is Undefined, optional
        The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.
    localProfileId : str, default is Undefined, optional
        The unique identifier for the AS2 local profile.
    mdnResponse : str, default is Undefined, optional
        Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.
    mdnSigningAlgorithm : str, default is Undefined, optional
        The signing algorithm for the Mdn response. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE | DEFAULT.
    messageSubject : str, default is Undefined, optional
        Used as the subject HTTP header attribute in AS2 messages that are being sent with the connector.
    partnerProfileId : str, default is Undefined, optional
        The unique identifier for the AS2 partner profile.
    signingAlgorithm : str, default is Undefined, optional
        The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .
    """


    compression?: str

    encryptionAlgorithm?: str

    localProfileId?: str

    mdnResponse?: str

    mdnSigningAlgorithm?: str

    messageSubject?: str

    partnerProfileId?: str

    signingAlgorithm?: str


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0:
    r"""
    transfer aws upbound io v1beta1 connector spec for provider sftp config items0

    Attributes
    ----------
    trustedHostKeys : [str], default is Undefined, optional
        A list of public portion of the host key, or keys, that are used to authenticate the user to the external server to which you are connecting.(https://docs.aws.amazon.com/transfer/latest/userguide/API_SftpConnectorConfig.html)
    userSecretId : str, default is Undefined, optional
        The identifier for the secret (in AWS Secrets Manager) that contains the SFTP user's private key, password, or both. The identifier can be either the Amazon Resource Name (ARN) or the name of the secret.
    userSecretIdRef : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDRef, default is Undefined, optional
        user secret Id ref
    userSecretIdSelector : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDSelector, default is Undefined, optional
        user secret Id selector
    """


    trustedHostKeys?: [str]

    userSecretId?: str

    userSecretIdRef?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDRef

    userSecretIdSelector?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDSelector


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDRef:
    r"""
    Reference to a Secret in secretsmanager to populate userSecretId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDRefPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDSelector:
    r"""
    Selector for a Secret in secretsmanager to populate userSecretId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDSelectorPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecForProviderSftpConfigItems0UserSecretIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessRole : str, default is Undefined, optional
        The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.
    accessRoleRef : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleRef, default is Undefined, optional
        access role ref
    accessRoleSelector : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleSelector, default is Undefined, optional
        access role selector
    as2Config : [TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAs2ConfigItems0], default is Undefined, optional
        Either SFTP or AS2 is configured.The parameters to configure for the connector object. Fields documented below.
    loggingRole : str, default is Undefined, optional
        The IAM Role which is required for allowing the connector to turn on CloudWatch logging for Amazon S3 events.
    securityPolicyName : str, default is Undefined, optional
        Name of the security policy for the connector.
    sftpConfig : [TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0], default is Undefined, optional
        Either SFTP or AS2 is configured.The parameters to configure for the connector object. Fields documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    url : str, default is Undefined, optional
        The URL of the partners AS2 endpoint or SFTP endpoint.
    """


    accessRole?: str

    accessRoleRef?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleRef

    accessRoleSelector?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleSelector

    as2Config?: [TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAs2ConfigItems0]

    loggingRole?: str

    securityPolicyName?: str

    sftpConfig?: [TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0]

    tags?: {str:str}

    url?: str


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleRef:
    r"""
    Reference to a Role in iam to populate accessRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleRefPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleSelector:
    r"""
    Selector for a Role in iam to populate accessRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleSelectorPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAccessRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderAs2ConfigItems0:
    r"""
    transfer aws upbound io v1beta1 connector spec init provider as2 config items0

    Attributes
    ----------
    compression : str, default is Undefined, optional
        Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.
    encryptionAlgorithm : str, default is Undefined, optional
        The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.
    localProfileId : str, default is Undefined, optional
        The unique identifier for the AS2 local profile.
    mdnResponse : str, default is Undefined, optional
        Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.
    mdnSigningAlgorithm : str, default is Undefined, optional
        The signing algorithm for the Mdn response. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE | DEFAULT.
    messageSubject : str, default is Undefined, optional
        Used as the subject HTTP header attribute in AS2 messages that are being sent with the connector.
    partnerProfileId : str, default is Undefined, optional
        The unique identifier for the AS2 partner profile.
    signingAlgorithm : str, default is Undefined, optional
        The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .
    """


    compression?: str

    encryptionAlgorithm?: str

    localProfileId?: str

    mdnResponse?: str

    mdnSigningAlgorithm?: str

    messageSubject?: str

    partnerProfileId?: str

    signingAlgorithm?: str


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0:
    r"""
    transfer aws upbound io v1beta1 connector spec init provider sftp config items0

    Attributes
    ----------
    trustedHostKeys : [str], default is Undefined, optional
        A list of public portion of the host key, or keys, that are used to authenticate the user to the external server to which you are connecting.(https://docs.aws.amazon.com/transfer/latest/userguide/API_SftpConnectorConfig.html)
    userSecretId : str, default is Undefined, optional
        The identifier for the secret (in AWS Secrets Manager) that contains the SFTP user's private key, password, or both. The identifier can be either the Amazon Resource Name (ARN) or the name of the secret.
    userSecretIdRef : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDRef, default is Undefined, optional
        user secret Id ref
    userSecretIdSelector : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDSelector, default is Undefined, optional
        user secret Id selector
    """


    trustedHostKeys?: [str]

    userSecretId?: str

    userSecretIdRef?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDRef

    userSecretIdSelector?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDSelector


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDRef:
    r"""
    Reference to a Secret in secretsmanager to populate userSecretId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDRefPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDSelector:
    r"""
    Selector for a Secret in secretsmanager to populate userSecretId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDSelectorPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecInitProviderSftpConfigItems0UserSecretIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecProviderConfigRefPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRef

    metadata?: TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToMetadata

    name: str


schema TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRefPolicy


schema TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema TransferAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema TransferAwsUpboundIoV1beta1ConnectorSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema TransferAwsUpboundIoV1beta1ConnectorStatus:
    r"""
    ConnectorStatus defines the observed state of Connector.

    Attributes
    ----------
    atProvider : TransferAwsUpboundIoV1beta1ConnectorStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [TransferAwsUpboundIoV1beta1ConnectorStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: TransferAwsUpboundIoV1beta1ConnectorStatusAtProvider

    conditions?: [TransferAwsUpboundIoV1beta1ConnectorStatusConditionsItems0]

    observedGeneration?: int


schema TransferAwsUpboundIoV1beta1ConnectorStatusAtProvider:
    r"""
    transfer aws upbound io v1beta1 connector status at provider

    Attributes
    ----------
    accessRole : str, default is Undefined, optional
        The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.
    arn : str, default is Undefined, optional
        The ARN of the connector.
    as2Config : [TransferAwsUpboundIoV1beta1ConnectorStatusAtProviderAs2ConfigItems0], default is Undefined, optional
        Either SFTP or AS2 is configured.The parameters to configure for the connector object. Fields documented below.
    connectorId : str, default is Undefined, optional
        The unique identifier for the AS2 profile or SFTP Profile.
    id : str, default is Undefined, optional
        id
    loggingRole : str, default is Undefined, optional
        The IAM Role which is required for allowing the connector to turn on CloudWatch logging for Amazon S3 events.
    securityPolicyName : str, default is Undefined, optional
        Name of the security policy for the connector.
    sftpConfig : [TransferAwsUpboundIoV1beta1ConnectorStatusAtProviderSftpConfigItems0], default is Undefined, optional
        Either SFTP or AS2 is configured.The parameters to configure for the connector object. Fields documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    url : str, default is Undefined, optional
        The URL of the partners AS2 endpoint or SFTP endpoint.
    """


    accessRole?: str

    arn?: str

    as2Config?: [TransferAwsUpboundIoV1beta1ConnectorStatusAtProviderAs2ConfigItems0]

    connectorId?: str

    id?: str

    loggingRole?: str

    securityPolicyName?: str

    sftpConfig?: [TransferAwsUpboundIoV1beta1ConnectorStatusAtProviderSftpConfigItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    url?: str


schema TransferAwsUpboundIoV1beta1ConnectorStatusAtProviderAs2ConfigItems0:
    r"""
    transfer aws upbound io v1beta1 connector status at provider as2 config items0

    Attributes
    ----------
    compression : str, default is Undefined, optional
        Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.
    encryptionAlgorithm : str, default is Undefined, optional
        The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.
    localProfileId : str, default is Undefined, optional
        The unique identifier for the AS2 local profile.
    mdnResponse : str, default is Undefined, optional
        Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.
    mdnSigningAlgorithm : str, default is Undefined, optional
        The signing algorithm for the Mdn response. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE | DEFAULT.
    messageSubject : str, default is Undefined, optional
        Used as the subject HTTP header attribute in AS2 messages that are being sent with the connector.
    partnerProfileId : str, default is Undefined, optional
        The unique identifier for the AS2 partner profile.
    signingAlgorithm : str, default is Undefined, optional
        The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .
    """


    compression?: str

    encryptionAlgorithm?: str

    localProfileId?: str

    mdnResponse?: str

    mdnSigningAlgorithm?: str

    messageSubject?: str

    partnerProfileId?: str

    signingAlgorithm?: str


schema TransferAwsUpboundIoV1beta1ConnectorStatusAtProviderSftpConfigItems0:
    r"""
    transfer aws upbound io v1beta1 connector status at provider sftp config items0

    Attributes
    ----------
    trustedHostKeys : [str], default is Undefined, optional
        A list of public portion of the host key, or keys, that are used to authenticate the user to the external server to which you are connecting.(https://docs.aws.amazon.com/transfer/latest/userguide/API_SftpConnectorConfig.html)
    userSecretId : str, default is Undefined, optional
        The identifier for the secret (in AWS Secrets Manager) that contains the SFTP user's private key, password, or both. The identifier can be either the Amazon Resource Name (ARN) or the name of the secret.
    """


    trustedHostKeys?: [str]

    userSecretId?: str


schema TransferAwsUpboundIoV1beta1ConnectorStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


