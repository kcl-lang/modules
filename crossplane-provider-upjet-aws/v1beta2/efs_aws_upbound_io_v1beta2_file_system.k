"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FileSystem:
    r"""
    FileSystem is the Schema for the FileSystems API. Provides an Elastic File System (EFS) File System resource.

    Attributes
    ----------
    apiVersion : str, default is "efs.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FileSystem", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EfsAwsUpboundIoV1beta2FileSystemSpec, default is Undefined, required
        spec
    status : EfsAwsUpboundIoV1beta2FileSystemStatus, default is Undefined, optional
        status
    """


    apiVersion: "efs.aws.upbound.io/v1beta2" = "efs.aws.upbound.io/v1beta2"

    kind: "FileSystem" = "FileSystem"

    metadata?: v1.ObjectMeta

    spec: EfsAwsUpboundIoV1beta2FileSystemSpec

    status?: EfsAwsUpboundIoV1beta2FileSystemStatus


schema EfsAwsUpboundIoV1beta2FileSystemSpec:
    r"""
    FileSystemSpec defines the desired state of FileSystem

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EfsAwsUpboundIoV1beta2FileSystemSpecForProvider, default is Undefined, required
        for provider
    initProvider : EfsAwsUpboundIoV1beta2FileSystemSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EfsAwsUpboundIoV1beta2FileSystemSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EfsAwsUpboundIoV1beta2FileSystemSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EfsAwsUpboundIoV1beta2FileSystemSpecForProvider

    initProvider?: EfsAwsUpboundIoV1beta2FileSystemSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EfsAwsUpboundIoV1beta2FileSystemSpecProviderConfigRef

    publishConnectionDetailsTo?: EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EfsAwsUpboundIoV1beta2FileSystemSpecWriteConnectionSecretToRef


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProvider:
    r"""
    efs aws upbound io v1beta2 file system spec for provider

    Attributes
    ----------
    availabilityZoneName : str, default is Undefined, optional
        the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See user guide for more information.
    creationToken : str, default is Undefined, optional
        A unique name (a maximum of 64 characters are allowed)
        used as reference when creating the Elastic File System to ensure idempotent file
        system creation. See Elastic File System
        user guide for more information.
    encrypted : bool, default is Undefined, optional
        If true, the disk will be encrypted.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    kmsKeyIdRef : EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    lifecyclePolicy : [EfsAwsUpboundIoV1beta2FileSystemSpecForProviderLifecyclePolicyItems0], default is Undefined, optional
        A file system lifecycle policy object. See lifecycle_policy block below for details.
    performanceMode : str, default is Undefined, optional
        The file system performance mode. Can be either "generalPurpose" or "maxIO" (Default: "generalPurpose").
    protection : EfsAwsUpboundIoV1beta2FileSystemSpecForProviderProtection, default is Undefined, optional
        protection
    provisionedThroughputInMibps : float, default is Undefined, optional
        The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with throughput_mode set to provisioned.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    throughputMode : str, default is Undefined, optional
        Throughput mode for the file system. Defaults to bursting. Valid values: bursting, provisioned, or elastic. When using provisioned, also set provisioned_throughput_in_mibps.
    """


    availabilityZoneName?: str

    creationToken?: str

    encrypted?: bool

    kmsKeyId?: str

    kmsKeyIdRef?: EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDSelector

    lifecyclePolicy?: [EfsAwsUpboundIoV1beta2FileSystemSpecForProviderLifecyclePolicyItems0]

    performanceMode?: str

    protection?: EfsAwsUpboundIoV1beta2FileSystemSpecForProviderProtection

    provisionedThroughputInMibps?: float

    region: str

    tags?: {str:str}

    throughputMode?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDRefPolicy


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDSelectorPolicy


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProviderLifecyclePolicyItems0:
    r"""
    efs aws upbound io v1beta2 file system spec for provider lifecycle policy items0

    Attributes
    ----------
    transitionToArchive : str, default is Undefined, optional
        Indicates how long it takes to transition files to the archive storage class. Requires transition_to_ia, Elastic Throughput and General Purpose performance mode. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, AFTER_90_DAYS, AFTER_180_DAYS, AFTER_270_DAYS, or AFTER_365_DAYS.
    transitionToIa : str, default is Undefined, optional
        Indicates how long it takes to transition files to the IA storage class. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, AFTER_90_DAYS, AFTER_180_DAYS, AFTER_270_DAYS, or AFTER_365_DAYS.
    transitionToPrimaryStorageClass : str, default is Undefined, optional
        Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: AFTER_1_ACCESS.
    """


    transitionToArchive?: str

    transitionToIa?: str

    transitionToPrimaryStorageClass?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecForProviderProtection:
    r"""
    A file system protection object. See protection block below for details.

    Attributes
    ----------
    replicationOverwrite : str, default is Undefined, optional
        Indicates whether replication overwrite protection is enabled. Valid values: ENABLED or DISABLED.
    """


    replicationOverwrite?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    availabilityZoneName : str, default is Undefined, optional
        the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See user guide for more information.
    creationToken : str, default is Undefined, optional
        A unique name (a maximum of 64 characters are allowed)
        used as reference when creating the Elastic File System to ensure idempotent file
        system creation. See Elastic File System
        user guide for more information.
    encrypted : bool, default is Undefined, optional
        If true, the disk will be encrypted.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    kmsKeyIdRef : EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    lifecyclePolicy : [EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderLifecyclePolicyItems0], default is Undefined, optional
        A file system lifecycle policy object. See lifecycle_policy block below for details.
    performanceMode : str, default is Undefined, optional
        The file system performance mode. Can be either "generalPurpose" or "maxIO" (Default: "generalPurpose").
    protection : EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderProtection, default is Undefined, optional
        protection
    provisionedThroughputInMibps : float, default is Undefined, optional
        The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with throughput_mode set to provisioned.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    throughputMode : str, default is Undefined, optional
        Throughput mode for the file system. Defaults to bursting. Valid values: bursting, provisioned, or elastic. When using provisioned, also set provisioned_throughput_in_mibps.
    """


    availabilityZoneName?: str

    creationToken?: str

    encrypted?: bool

    kmsKeyId?: str

    kmsKeyIdRef?: EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDSelector

    lifecyclePolicy?: [EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderLifecyclePolicyItems0]

    performanceMode?: str

    protection?: EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderProtection

    provisionedThroughputInMibps?: float

    tags?: {str:str}

    throughputMode?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDRefPolicy


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDSelectorPolicy


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderLifecyclePolicyItems0:
    r"""
    efs aws upbound io v1beta2 file system spec init provider lifecycle policy items0

    Attributes
    ----------
    transitionToArchive : str, default is Undefined, optional
        Indicates how long it takes to transition files to the archive storage class. Requires transition_to_ia, Elastic Throughput and General Purpose performance mode. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, AFTER_90_DAYS, AFTER_180_DAYS, AFTER_270_DAYS, or AFTER_365_DAYS.
    transitionToIa : str, default is Undefined, optional
        Indicates how long it takes to transition files to the IA storage class. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, AFTER_90_DAYS, AFTER_180_DAYS, AFTER_270_DAYS, or AFTER_365_DAYS.
    transitionToPrimaryStorageClass : str, default is Undefined, optional
        Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: AFTER_1_ACCESS.
    """


    transitionToArchive?: str

    transitionToIa?: str

    transitionToPrimaryStorageClass?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecInitProviderProtection:
    r"""
    A file system protection object. See protection block below for details.

    Attributes
    ----------
    replicationOverwrite : str, default is Undefined, optional
        Indicates whether replication overwrite protection is enabled. Valid values: ENABLED or DISABLED.
    """


    replicationOverwrite?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2FileSystemSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2FileSystemSpecProviderConfigRefPolicy


schema EfsAwsUpboundIoV1beta2FileSystemSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToConfigRef

    metadata?: EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToMetadata

    name: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToConfigRefPolicy


schema EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2FileSystemSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EfsAwsUpboundIoV1beta2FileSystemSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EfsAwsUpboundIoV1beta2FileSystemStatus:
    r"""
    FileSystemStatus defines the observed state of FileSystem.

    Attributes
    ----------
    atProvider : EfsAwsUpboundIoV1beta2FileSystemStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EfsAwsUpboundIoV1beta2FileSystemStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EfsAwsUpboundIoV1beta2FileSystemStatusAtProvider

    conditions?: [EfsAwsUpboundIoV1beta2FileSystemStatusConditionsItems0]

    observedGeneration?: int


schema EfsAwsUpboundIoV1beta2FileSystemStatusAtProvider:
    r"""
    efs aws upbound io v1beta2 file system status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name of the file system.
    availabilityZoneId : str, default is Undefined, optional
        The identifier of the Availability Zone in which the file system's One Zone storage classes exist.
    availabilityZoneName : str, default is Undefined, optional
        the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See user guide for more information.
    creationToken : str, default is Undefined, optional
        A unique name (a maximum of 64 characters are allowed)
        used as reference when creating the Elastic File System to ensure idempotent file
        system creation. See Elastic File System
        user guide for more information.
    dnsName : str, default is Undefined, optional
        The DNS name for the filesystem per documented convention.
    encrypted : bool, default is Undefined, optional
        If true, the disk will be encrypted.
    id : str, default is Undefined, optional
        The ID that identifies the file system (e.g., fs-ccfc0d65).
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    lifecyclePolicy : [EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderLifecyclePolicyItems0], default is Undefined, optional
        A file system lifecycle policy object. See lifecycle_policy block below for details.
    name : str, default is Undefined, optional
        The value of the file system's Name tag.
    numberOfMountTargets : float, default is Undefined, optional
        The current number of mount targets that the file system has.
    ownerId : str, default is Undefined, optional
        The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.
    performanceMode : str, default is Undefined, optional
        The file system performance mode. Can be either "generalPurpose" or "maxIO" (Default: "generalPurpose").
    protection : EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderProtection, default is Undefined, optional
        protection
    provisionedThroughputInMibps : float, default is Undefined, optional
        The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with throughput_mode set to provisioned.
    sizeInBytes : [EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderSizeInBytesItems0], default is Undefined, optional
        The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See Size In Bytes.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughputMode : str, default is Undefined, optional
        Throughput mode for the file system. Defaults to bursting. Valid values: bursting, provisioned, or elastic. When using provisioned, also set provisioned_throughput_in_mibps.
    """


    arn?: str

    availabilityZoneId?: str

    availabilityZoneName?: str

    creationToken?: str

    dnsName?: str

    encrypted?: bool

    id?: str

    kmsKeyId?: str

    lifecyclePolicy?: [EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderLifecyclePolicyItems0]

    name?: str

    numberOfMountTargets?: float

    ownerId?: str

    performanceMode?: str

    protection?: EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderProtection

    provisionedThroughputInMibps?: float

    sizeInBytes?: [EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderSizeInBytesItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    throughputMode?: str


schema EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderLifecyclePolicyItems0:
    r"""
    efs aws upbound io v1beta2 file system status at provider lifecycle policy items0

    Attributes
    ----------
    transitionToArchive : str, default is Undefined, optional
        Indicates how long it takes to transition files to the archive storage class. Requires transition_to_ia, Elastic Throughput and General Purpose performance mode. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, AFTER_90_DAYS, AFTER_180_DAYS, AFTER_270_DAYS, or AFTER_365_DAYS.
    transitionToIa : str, default is Undefined, optional
        Indicates how long it takes to transition files to the IA storage class. Valid values: AFTER_1_DAY, AFTER_7_DAYS, AFTER_14_DAYS, AFTER_30_DAYS, AFTER_60_DAYS, AFTER_90_DAYS, AFTER_180_DAYS, AFTER_270_DAYS, or AFTER_365_DAYS.
    transitionToPrimaryStorageClass : str, default is Undefined, optional
        Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: AFTER_1_ACCESS.
    """


    transitionToArchive?: str

    transitionToIa?: str

    transitionToPrimaryStorageClass?: str


schema EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderProtection:
    r"""
    A file system protection object. See protection block below for details.

    Attributes
    ----------
    replicationOverwrite : str, default is Undefined, optional
        Indicates whether replication overwrite protection is enabled. Valid values: ENABLED or DISABLED.
    """


    replicationOverwrite?: str


schema EfsAwsUpboundIoV1beta2FileSystemStatusAtProviderSizeInBytesItems0:
    r"""
    efs aws upbound io v1beta2 file system status at provider size in bytes items0

    Attributes
    ----------
    value : float, default is Undefined, optional
        The latest known metered size (in bytes) of data stored in the file system.
    valueInIa : float, default is Undefined, optional
        The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.
    valueInStandard : float, default is Undefined, optional
        The latest known metered size (in bytes) of data stored in the Standard storage class.
    """


    value?: float

    valueInIa?: float

    valueInStandard?: float


schema EfsAwsUpboundIoV1beta2FileSystemStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


