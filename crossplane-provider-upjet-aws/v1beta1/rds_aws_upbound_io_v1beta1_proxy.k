"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Proxy:
    r"""
    Proxy is the Schema for the Proxys API. Provides an RDS DB proxy resource.

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Proxy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1ProxySpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1ProxyStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"

    kind: "Proxy" = "Proxy"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta1ProxySpec

    status?: RdsAwsUpboundIoV1beta1ProxyStatus


schema RdsAwsUpboundIoV1beta1ProxySpec:
    r"""
    ProxySpec defines the desired state of Proxy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1ProxySpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1ProxySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1ProxySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1ProxySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta1ProxySpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta1ProxySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta1ProxySpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1ProxySpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta1ProxySpecForProvider:
    r"""
    rds aws upbound io v1beta1 proxy spec for provider

    Attributes
    ----------
    auth : [RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0], default is Undefined, optional
        Configuration block(s) with authorization mechanisms to connect to the associated instances or clusters. Described below.
    debugLogging : bool, default is Undefined, optional
        Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
    engineFamily : str, default is Undefined, optional
        The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server, specify SQLSERVER. Valid values are MYSQL, POSTGRESQL, and SQLSERVER.
    idleClientTimeout : float, default is Undefined, optional
        The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requireTls : bool, default is Undefined, optional
        A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
    roleArnRef : RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIds : [str], default is Undefined, optional
        One or more VPC subnet IDs to associate with the new proxy.
    vpcSubnetIdsRefs : [RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate vpcSubnetIds.
    vpcSubnetIdsSelector : RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsSelector, default is Undefined, optional
        vpc subnet ids selector
    """


    auth?: [RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0]

    debugLogging?: bool

    engineFamily?: str

    idleClientTimeout?: float

    region: str

    requireTls?: bool

    roleArn?: str

    roleArnRef?: RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnRef

    roleArnSelector?: RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnSelector

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]

    vpcSubnetIds?: [str]

    vpcSubnetIdsRefs?: [RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsRefsItems0]

    vpcSubnetIdsSelector?: RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsSelector


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0:
    r"""
    rds aws upbound io v1beta1 proxy spec for provider auth items0

    Attributes
    ----------
    authScheme : str, default is Undefined, optional
        The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of SECRETS.
    clientPasswordAuthType : str, default is Undefined, optional
        The type of authentication the proxy uses for connections from clients. Valid values are MYSQL_NATIVE_PASSWORD, POSTGRES_SCRAM_SHA_256, POSTGRES_MD5, and SQL_SERVER_AUTHENTICATION.
    description : str, default is Undefined, optional
        A user-specified description about the authentication used by a proxy to log in as a specific database user.
    iamAuth : str, default is Undefined, optional
        Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of DISABLED, REQUIRED.
    secretArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
    secretArnRef : RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnRef, default is Undefined, optional
        secret arn ref
    secretArnSelector : RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnSelector, default is Undefined, optional
        secret arn selector
    username : str, default is Undefined, optional
        The name of the database user to which the proxy connects.
    """


    authScheme?: str

    clientPasswordAuthType?: str

    description?: str

    iamAuth?: str

    secretArn?: str

    secretArnRef?: RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnRef

    secretArnSelector?: RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnSelector

    username?: str


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnRef:
    r"""
    Reference to a Secret in secretsmanager to populate secretArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnRefPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnSelector:
    r"""
    Selector for a Secret in secretsmanager to populate secretArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderAuthItems0SecretArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnRefPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate vpcSubnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecForProviderVpcSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    auth : [RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0], default is Undefined, optional
        Configuration block(s) with authorization mechanisms to connect to the associated instances or clusters. Described below.
    debugLogging : bool, default is Undefined, optional
        Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
    engineFamily : str, default is Undefined, optional
        The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server, specify SQLSERVER. Valid values are MYSQL, POSTGRESQL, and SQLSERVER.
    idleClientTimeout : float, default is Undefined, optional
        The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
    requireTls : bool, default is Undefined, optional
        A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
    roleArnRef : RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIds : [str], default is Undefined, optional
        One or more VPC subnet IDs to associate with the new proxy.
    vpcSubnetIdsRefs : [RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate vpcSubnetIds.
    vpcSubnetIdsSelector : RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsSelector, default is Undefined, optional
        vpc subnet ids selector
    """


    auth?: [RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0]

    debugLogging?: bool

    engineFamily?: str

    idleClientTimeout?: float

    requireTls?: bool

    roleArn?: str

    roleArnRef?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnRef

    roleArnSelector?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnSelector

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]

    vpcSubnetIds?: [str]

    vpcSubnetIdsRefs?: [RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsRefsItems0]

    vpcSubnetIdsSelector?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsSelector


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0:
    r"""
    rds aws upbound io v1beta1 proxy spec init provider auth items0

    Attributes
    ----------
    authScheme : str, default is Undefined, optional
        The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of SECRETS.
    clientPasswordAuthType : str, default is Undefined, optional
        The type of authentication the proxy uses for connections from clients. Valid values are MYSQL_NATIVE_PASSWORD, POSTGRES_SCRAM_SHA_256, POSTGRES_MD5, and SQL_SERVER_AUTHENTICATION.
    description : str, default is Undefined, optional
        A user-specified description about the authentication used by a proxy to log in as a specific database user.
    iamAuth : str, default is Undefined, optional
        Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of DISABLED, REQUIRED.
    secretArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
    secretArnRef : RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnRef, default is Undefined, optional
        secret arn ref
    secretArnSelector : RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnSelector, default is Undefined, optional
        secret arn selector
    username : str, default is Undefined, optional
        The name of the database user to which the proxy connects.
    """


    authScheme?: str

    clientPasswordAuthType?: str

    description?: str

    iamAuth?: str

    secretArn?: str

    secretArnRef?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnRef

    secretArnSelector?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnSelector

    username?: str


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnRef:
    r"""
    Reference to a Secret in secretsmanager to populate secretArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnRefPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnSelector:
    r"""
    Selector for a Secret in secretsmanager to populate secretArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderAuthItems0SecretArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnRefPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate vpcSubnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecInitProviderVpcSubnetIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta1ProxySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ProxyStatus:
    r"""
    ProxyStatus defines the observed state of Proxy.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1ProxyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1ProxyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta1ProxyStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta1ProxyStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta1ProxyStatusAtProvider:
    r"""
    rds aws upbound io v1beta1 proxy status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the proxy.
    auth : [RdsAwsUpboundIoV1beta1ProxyStatusAtProviderAuthItems0], default is Undefined, optional
        Configuration block(s) with authorization mechanisms to connect to the associated instances or clusters. Described below.
    debugLogging : bool, default is Undefined, optional
        Whether the proxy includes detailed information about SQL statements in its logs. This information helps you to debug issues involving SQL behavior or the performance and scalability of the proxy connections. The debug information includes the text of SQL statements that you submit through the proxy. Thus, only enable this setting when needed for debugging, and only when you have security measures in place to safeguard any sensitive information that appears in the logs.
    endpoint : str, default is Undefined, optional
        The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
    engineFamily : str, default is Undefined, optional
        The kinds of databases that the proxy can connect to. This value determines which database network protocol the proxy recognizes when it interprets network traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server, specify SQLSERVER. Valid values are MYSQL, POSTGRESQL, and SQLSERVER.
    id : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the proxy.
    idleClientTimeout : float, default is Undefined, optional
        The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it. You can set this value higher or lower than the connection timeout limit for the associated database.
    requireTls : bool, default is Undefined, optional
        A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy. By enabling this setting, you can enforce encrypted TLS connections to the proxy.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIds : [str], default is Undefined, optional
        One or more VPC subnet IDs to associate with the new proxy.
    """


    arn?: str

    auth?: [RdsAwsUpboundIoV1beta1ProxyStatusAtProviderAuthItems0]

    debugLogging?: bool

    endpoint?: str

    engineFamily?: str

    id?: str

    idleClientTimeout?: float

    requireTls?: bool

    roleArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcSecurityGroupIds?: [str]

    vpcSubnetIds?: [str]


schema RdsAwsUpboundIoV1beta1ProxyStatusAtProviderAuthItems0:
    r"""
    rds aws upbound io v1beta1 proxy status at provider auth items0

    Attributes
    ----------
    authScheme : str, default is Undefined, optional
        The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of SECRETS.
    clientPasswordAuthType : str, default is Undefined, optional
        The type of authentication the proxy uses for connections from clients. Valid values are MYSQL_NATIVE_PASSWORD, POSTGRES_SCRAM_SHA_256, POSTGRES_MD5, and SQL_SERVER_AUTHENTICATION.
    description : str, default is Undefined, optional
        A user-specified description about the authentication used by a proxy to log in as a specific database user.
    iamAuth : str, default is Undefined, optional
        Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of DISABLED, REQUIRED.
    secretArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
    username : str, default is Undefined, optional
        The name of the database user to which the proxy connects.
    """


    authScheme?: str

    clientPasswordAuthType?: str

    description?: str

    iamAuth?: str

    secretArn?: str

    username?: str


schema RdsAwsUpboundIoV1beta1ProxyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


