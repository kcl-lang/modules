"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Input:
    r"""
    Input is the Schema for the Inputs API.

    Attributes
    ----------
    apiVersion : str, default is "medialive.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Input", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MedialiveAwsUpboundIoV1beta1InputSpec, default is Undefined, required
        spec
    status : MedialiveAwsUpboundIoV1beta1InputStatus, default is Undefined, optional
        status
    """


    apiVersion: "medialive.aws.upbound.io/v1beta1" = "medialive.aws.upbound.io/v1beta1"

    kind: "Input" = "Input"

    metadata?: v1.ObjectMeta

    spec: MedialiveAwsUpboundIoV1beta1InputSpec

    status?: MedialiveAwsUpboundIoV1beta1InputStatus


schema MedialiveAwsUpboundIoV1beta1InputSpec:
    r"""
    InputSpec defines the desired state of Input

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MedialiveAwsUpboundIoV1beta1InputSpecForProvider, default is Undefined, required
        for provider
    initProvider : MedialiveAwsUpboundIoV1beta1InputSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MedialiveAwsUpboundIoV1beta1InputSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MedialiveAwsUpboundIoV1beta1InputSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MedialiveAwsUpboundIoV1beta1InputSpecForProvider

    initProvider?: MedialiveAwsUpboundIoV1beta1InputSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MedialiveAwsUpboundIoV1beta1InputSpecProviderConfigRef

    publishConnectionDetailsTo?: MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MedialiveAwsUpboundIoV1beta1InputSpecWriteConnectionSecretToRef


schema MedialiveAwsUpboundIoV1beta1InputSpecForProvider:
    r"""
    medialive aws upbound io v1beta1 input spec for provider

    Attributes
    ----------
    destinations : [MedialiveAwsUpboundIoV1beta1InputSpecForProviderDestinationsItems0], default is Undefined, optional
        Destination settings for PUSH type inputs. See Destinations for more details.
    inputDevices : [MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputDevicesItems0], default is Undefined, optional
        Settings for the devices. See Input Devices for more details.
    inputSecurityGroups : [str], default is Undefined, optional
        List of input security groups.
    inputSecurityGroupsRefs : [MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsRefsItems0], default is Undefined, optional
        References to InputSecurityGroup in medialive to populate inputSecurityGroups.
    inputSecurityGroupsSelector : MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsSelector, default is Undefined, optional
        input security groups selector
    mediaConnectFlows : [MedialiveAwsUpboundIoV1beta1InputSpecForProviderMediaConnectFlowsItems0], default is Undefined, optional
        A list of the MediaConnect Flows. See Media Connect Flows for more details.
    name : str, default is Undefined, optional
        Name of the input.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        The ARN of the role this input assumes during and after creation.
    roleArnRef : MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    sources : [MedialiveAwsUpboundIoV1beta1InputSpecForProviderSourcesItems0], default is Undefined, optional
        The source URLs for a PULL-type input. See Sources for more details.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The different types of inputs that AWS Elemental MediaLive supports.
    vpc : [MedialiveAwsUpboundIoV1beta1InputSpecForProviderVpcItems0], default is Undefined, optional
        Settings for a private VPC Input. See VPC for more details.
    """


    destinations?: [MedialiveAwsUpboundIoV1beta1InputSpecForProviderDestinationsItems0]

    inputDevices?: [MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputDevicesItems0]

    inputSecurityGroups?: [str]

    inputSecurityGroupsRefs?: [MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsRefsItems0]

    inputSecurityGroupsSelector?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsSelector

    mediaConnectFlows?: [MedialiveAwsUpboundIoV1beta1InputSpecForProviderMediaConnectFlowsItems0]

    name?: str

    region: str

    roleArn?: str

    roleArnRef?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnRef

    roleArnSelector?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnSelector

    sources?: [MedialiveAwsUpboundIoV1beta1InputSpecForProviderSourcesItems0]

    tags?: {str:str}

    $type?: str

    vpc?: [MedialiveAwsUpboundIoV1beta1InputSpecForProviderVpcItems0]


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderDestinationsItems0:
    r"""
    medialive aws upbound io v1beta1 input spec for provider destinations items0

    Attributes
    ----------
    streamName : str, default is Undefined, optional
        A unique name for the location the RTMP stream is being pushed to.
    """


    streamName?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputDevicesItems0:
    r"""
    medialive aws upbound io v1beta1 input spec for provider input devices items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The unique ID for the device.
    """


    id?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsRefsItems0Policy


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsSelector:
    r"""
    Selector for a list of InputSecurityGroup in medialive to populate inputSecurityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsSelectorPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderInputSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderMediaConnectFlowsItems0:
    r"""
    medialive aws upbound io v1beta1 input spec for provider media connect flows items0

    Attributes
    ----------
    flowArn : str, default is Undefined, optional
        The ARN of the MediaConnect Flow
    """


    flowArn?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnRefPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnSelectorPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderSourcesItems0:
    r"""
    medialive aws upbound io v1beta1 input spec for provider sources items0

    Attributes
    ----------
    passwordParam : str, default is Undefined, optional
        The key used to extract the password from EC2 Parameter store.
    url : str, default is Undefined, optional
        The URL where the stream is pulled from.
    username : str, default is Undefined, optional
        The username for the input source.
    """


    passwordParam?: str

    url?: str

    username?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecForProviderVpcItems0:
    r"""
    medialive aws upbound io v1beta1 input spec for provider vpc items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        A list of up to 5 EC2 VPC security group IDs to attach to the Input.
    subnetIds : [str], default is Undefined, optional
        A list of 2 VPC subnet IDs from the same VPC.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    destinations : [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderDestinationsItems0], default is Undefined, optional
        Destination settings for PUSH type inputs. See Destinations for more details.
    inputDevices : [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputDevicesItems0], default is Undefined, optional
        Settings for the devices. See Input Devices for more details.
    inputSecurityGroups : [str], default is Undefined, optional
        List of input security groups.
    inputSecurityGroupsRefs : [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsRefsItems0], default is Undefined, optional
        References to InputSecurityGroup in medialive to populate inputSecurityGroups.
    inputSecurityGroupsSelector : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsSelector, default is Undefined, optional
        input security groups selector
    mediaConnectFlows : [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderMediaConnectFlowsItems0], default is Undefined, optional
        A list of the MediaConnect Flows. See Media Connect Flows for more details.
    name : str, default is Undefined, optional
        Name of the input.
    roleArn : str, default is Undefined, optional
        The ARN of the role this input assumes during and after creation.
    roleArnRef : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    sources : [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderSourcesItems0], default is Undefined, optional
        The source URLs for a PULL-type input. See Sources for more details.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        The different types of inputs that AWS Elemental MediaLive supports.
    vpc : [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderVpcItems0], default is Undefined, optional
        Settings for a private VPC Input. See VPC for more details.
    """


    destinations?: [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderDestinationsItems0]

    inputDevices?: [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputDevicesItems0]

    inputSecurityGroups?: [str]

    inputSecurityGroupsRefs?: [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsRefsItems0]

    inputSecurityGroupsSelector?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsSelector

    mediaConnectFlows?: [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderMediaConnectFlowsItems0]

    name?: str

    roleArn?: str

    roleArnRef?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnRef

    roleArnSelector?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnSelector

    sources?: [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderSourcesItems0]

    tags?: {str:str}

    $type?: str

    vpc?: [MedialiveAwsUpboundIoV1beta1InputSpecInitProviderVpcItems0]


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderDestinationsItems0:
    r"""
    medialive aws upbound io v1beta1 input spec init provider destinations items0

    Attributes
    ----------
    streamName : str, default is Undefined, optional
        A unique name for the location the RTMP stream is being pushed to.
    """


    streamName?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputDevicesItems0:
    r"""
    medialive aws upbound io v1beta1 input spec init provider input devices items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The unique ID for the device.
    """


    id?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsRefsItems0Policy


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsSelector:
    r"""
    Selector for a list of InputSecurityGroup in medialive to populate inputSecurityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsSelectorPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderInputSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderMediaConnectFlowsItems0:
    r"""
    medialive aws upbound io v1beta1 input spec init provider media connect flows items0

    Attributes
    ----------
    flowArn : str, default is Undefined, optional
        The ARN of the MediaConnect Flow
    """


    flowArn?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnRefPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnSelectorPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderSourcesItems0:
    r"""
    medialive aws upbound io v1beta1 input spec init provider sources items0

    Attributes
    ----------
    passwordParam : str, default is Undefined, optional
        The key used to extract the password from EC2 Parameter store.
    url : str, default is Undefined, optional
        The URL where the stream is pulled from.
    username : str, default is Undefined, optional
        The username for the input source.
    """


    passwordParam?: str

    url?: str

    username?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecInitProviderVpcItems0:
    r"""
    medialive aws upbound io v1beta1 input spec init provider vpc items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        A list of up to 5 EC2 VPC security group IDs to attach to the Input.
    subnetIds : [str], default is Undefined, optional
        A list of 2 VPC subnet IDs from the same VPC.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema MedialiveAwsUpboundIoV1beta1InputSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecProviderConfigRefPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToConfigRef

    metadata?: MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToMetadata

    name: str


schema MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToConfigRefPolicy


schema MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MedialiveAwsUpboundIoV1beta1InputSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MedialiveAwsUpboundIoV1beta1InputSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MedialiveAwsUpboundIoV1beta1InputStatus:
    r"""
    InputStatus defines the observed state of Input.

    Attributes
    ----------
    atProvider : MedialiveAwsUpboundIoV1beta1InputStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MedialiveAwsUpboundIoV1beta1InputStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: MedialiveAwsUpboundIoV1beta1InputStatusAtProvider

    conditions?: [MedialiveAwsUpboundIoV1beta1InputStatusConditionsItems0]

    observedGeneration?: int


schema MedialiveAwsUpboundIoV1beta1InputStatusAtProvider:
    r"""
    medialive aws upbound io v1beta1 input status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the Input.
    attachedChannels : [str], default is Undefined, optional
        Channels attached to Input.
    destinations : [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderDestinationsItems0], default is Undefined, optional
        Destination settings for PUSH type inputs. See Destinations for more details.
    id : str, default is Undefined, optional
        The unique ID for the device.
    inputClass : str, default is Undefined, optional
        The input class.
    inputDevices : [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderInputDevicesItems0], default is Undefined, optional
        Settings for the devices. See Input Devices for more details.
    inputPartnerIds : [str], default is Undefined, optional
        A list of IDs for all Inputs which are partners of this one.
    inputSecurityGroups : [str], default is Undefined, optional
        List of input security groups.
    inputSourceType : str, default is Undefined, optional
        Source type of the input.
    mediaConnectFlows : [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderMediaConnectFlowsItems0], default is Undefined, optional
        A list of the MediaConnect Flows. See Media Connect Flows for more details.
    name : str, default is Undefined, optional
        Name of the input.
    roleArn : str, default is Undefined, optional
        The ARN of the role this input assumes during and after creation.
    sources : [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderSourcesItems0], default is Undefined, optional
        The source URLs for a PULL-type input. See Sources for more details.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    $type : str, default is Undefined, optional
        The different types of inputs that AWS Elemental MediaLive supports.
    vpc : [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderVpcItems0], default is Undefined, optional
        Settings for a private VPC Input. See VPC for more details.
    """


    arn?: str

    attachedChannels?: [str]

    destinations?: [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderDestinationsItems0]

    id?: str

    inputClass?: str

    inputDevices?: [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderInputDevicesItems0]

    inputPartnerIds?: [str]

    inputSecurityGroups?: [str]

    inputSourceType?: str

    mediaConnectFlows?: [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderMediaConnectFlowsItems0]

    name?: str

    roleArn?: str

    sources?: [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderSourcesItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    vpc?: [MedialiveAwsUpboundIoV1beta1InputStatusAtProviderVpcItems0]


schema MedialiveAwsUpboundIoV1beta1InputStatusAtProviderDestinationsItems0:
    r"""
    medialive aws upbound io v1beta1 input status at provider destinations items0

    Attributes
    ----------
    streamName : str, default is Undefined, optional
        A unique name for the location the RTMP stream is being pushed to.
    """


    streamName?: str


schema MedialiveAwsUpboundIoV1beta1InputStatusAtProviderInputDevicesItems0:
    r"""
    medialive aws upbound io v1beta1 input status at provider input devices items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The unique ID for the device.
    """


    id?: str


schema MedialiveAwsUpboundIoV1beta1InputStatusAtProviderMediaConnectFlowsItems0:
    r"""
    medialive aws upbound io v1beta1 input status at provider media connect flows items0

    Attributes
    ----------
    flowArn : str, default is Undefined, optional
        The ARN of the MediaConnect Flow
    """


    flowArn?: str


schema MedialiveAwsUpboundIoV1beta1InputStatusAtProviderSourcesItems0:
    r"""
    medialive aws upbound io v1beta1 input status at provider sources items0

    Attributes
    ----------
    passwordParam : str, default is Undefined, optional
        The key used to extract the password from EC2 Parameter store.
    url : str, default is Undefined, optional
        The URL where the stream is pulled from.
    username : str, default is Undefined, optional
        The username for the input source.
    """


    passwordParam?: str

    url?: str

    username?: str


schema MedialiveAwsUpboundIoV1beta1InputStatusAtProviderVpcItems0:
    r"""
    medialive aws upbound io v1beta1 input status at provider vpc items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        A list of up to 5 EC2 VPC security group IDs to attach to the Input.
    subnetIds : [str], default is Undefined, optional
        A list of 2 VPC subnet IDs from the same VPC.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema MedialiveAwsUpboundIoV1beta1InputStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


