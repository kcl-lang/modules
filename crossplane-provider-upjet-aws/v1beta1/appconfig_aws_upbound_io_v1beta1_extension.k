"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Extension:
    r"""
    Extension is the Schema for the Extensions API. Provides an AppConfig Extension resource.

    Attributes
    ----------
    apiVersion : str, default is "appconfig.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Extension", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppconfigAwsUpboundIoV1beta1ExtensionSpec, default is Undefined, required
        spec
    status : AppconfigAwsUpboundIoV1beta1ExtensionStatus, default is Undefined, optional
        status
    """


    apiVersion: "appconfig.aws.upbound.io/v1beta1" = "appconfig.aws.upbound.io/v1beta1"

    kind: "Extension" = "Extension"

    metadata?: v1.ObjectMeta

    spec: AppconfigAwsUpboundIoV1beta1ExtensionSpec

    status?: AppconfigAwsUpboundIoV1beta1ExtensionStatus


schema AppconfigAwsUpboundIoV1beta1ExtensionSpec:
    r"""
    ExtensionSpec defines the desired state of Extension

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProvider

    initProvider?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecProviderConfigRef

    publishConnectionDetailsTo?: AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecWriteConnectionSecretToRef


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProvider:
    r"""
    appconfig aws upbound io v1beta1 extension spec for provider

    Attributes
    ----------
    actionPoint : [AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0], default is Undefined, optional
        The action points defined in the extension. Detailed below.
    description : str, default is Undefined, optional
        Information about the extension.
    name : str, default is Undefined, optional
        A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
    parameter : [AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderParameterItems0], default is Undefined, optional
        The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object. Detailed below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    actionPoint?: [AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0]

    description?: str

    name?: str

    parameter?: [AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderParameterItems0]

    region: str

    tags?: {str:str}


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0:
    r"""
    appconfig aws upbound io v1beta1 extension spec for provider action point items0

    Attributes
    ----------
    action : [AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0], default is Undefined, optional
        An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
    point : str, default is Undefined, optional
        The point at which to perform the defined actions. Valid points are PRE_CREATE_HOSTED_CONFIGURATION_VERSION, PRE_START_DEPLOYMENT, ON_DEPLOYMENT_START, ON_DEPLOYMENT_STEP, ON_DEPLOYMENT_BAKING, ON_DEPLOYMENT_COMPLETE, ON_DEPLOYMENT_ROLLED_BACK.
    """


    action?: [AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0]

    point?: str


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0:
    r"""
    appconfig aws upbound io v1beta1 extension spec for provider action point items0 action items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Information about the action.
    name : str, default is Undefined, optional
        The action name.
    roleArn : str, default is Undefined, optional
        An Amazon Resource Name (ARN) for an Identity and Access Management assume role.
    roleArnRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    uri : str, default is Undefined, optional
        The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.
    uriRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URIRef, default is Undefined, optional
        uri ref
    uriSelector : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URISelector, default is Undefined, optional
        uri selector
    """


    description?: str

    name?: str

    roleArn?: str

    roleArnRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnRef

    roleArnSelector?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnSelector

    uri?: str

    uriRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URIRef

    uriSelector?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URISelector


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URIRef:
    r"""
    Reference to a Topic in sns to populate uri.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URIRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URIRefPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URIRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URISelector:
    r"""
    Selector for a Topic in sns to populate uri.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URISelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URISelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderActionPointItems0ActionItems0URISelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecForProviderParameterItems0:
    r"""
    appconfig aws upbound io v1beta1 extension spec for provider parameter items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Information about the parameter.
    name : str, default is Undefined, optional
        The parameter name.
    required : bool, default is Undefined, optional
        Determines if a parameter value must be specified in the extension association.
    """


    description?: str

    name?: str

    required?: bool


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    actionPoint : [AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0], default is Undefined, optional
        The action points defined in the extension. Detailed below.
    description : str, default is Undefined, optional
        Information about the extension.
    name : str, default is Undefined, optional
        A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
    parameter : [AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderParameterItems0], default is Undefined, optional
        The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    actionPoint?: [AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0]

    description?: str

    name?: str

    parameter?: [AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderParameterItems0]

    tags?: {str:str}


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0:
    r"""
    appconfig aws upbound io v1beta1 extension spec init provider action point items0

    Attributes
    ----------
    action : [AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0], default is Undefined, optional
        An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
    point : str, default is Undefined, optional
        The point at which to perform the defined actions. Valid points are PRE_CREATE_HOSTED_CONFIGURATION_VERSION, PRE_START_DEPLOYMENT, ON_DEPLOYMENT_START, ON_DEPLOYMENT_STEP, ON_DEPLOYMENT_BAKING, ON_DEPLOYMENT_COMPLETE, ON_DEPLOYMENT_ROLLED_BACK.
    """


    action?: [AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0]

    point?: str


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0:
    r"""
    appconfig aws upbound io v1beta1 extension spec init provider action point items0 action items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Information about the action.
    name : str, default is Undefined, optional
        The action name.
    roleArn : str, default is Undefined, optional
        An Amazon Resource Name (ARN) for an Identity and Access Management assume role.
    roleArnRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    uri : str, default is Undefined, optional
        The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.
    uriRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URIRef, default is Undefined, optional
        uri ref
    uriSelector : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URISelector, default is Undefined, optional
        uri selector
    """


    description?: str

    name?: str

    roleArn?: str

    roleArnRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnRef

    roleArnSelector?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnSelector

    uri?: str

    uriRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URIRef

    uriSelector?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URISelector


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URIRef:
    r"""
    Reference to a Topic in sns to populate uri.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URIRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URIRefPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URIRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URISelector:
    r"""
    Selector for a Topic in sns to populate uri.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URISelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URISelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderActionPointItems0ActionItems0URISelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecInitProviderParameterItems0:
    r"""
    appconfig aws upbound io v1beta1 extension spec init provider parameter items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Information about the parameter.
    name : str, default is Undefined, optional
        The parameter name.
    required : bool, default is Undefined, optional
        Determines if a parameter value must be specified in the extension association.
    """


    description?: str

    name?: str

    required?: bool


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecProviderConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToConfigRef

    metadata?: AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToMetadata

    name: str


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppconfigAwsUpboundIoV1beta1ExtensionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppconfigAwsUpboundIoV1beta1ExtensionStatus:
    r"""
    ExtensionStatus defines the observed state of Extension.

    Attributes
    ----------
    atProvider : AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppconfigAwsUpboundIoV1beta1ExtensionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProvider

    conditions?: [AppconfigAwsUpboundIoV1beta1ExtensionStatusConditionsItems0]

    observedGeneration?: int


schema AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProvider:
    r"""
    appconfig aws upbound io v1beta1 extension status at provider

    Attributes
    ----------
    actionPoint : [AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderActionPointItems0], default is Undefined, optional
        The action points defined in the extension. Detailed below.
    arn : str, default is Undefined, optional
        ARN of the AppConfig Extension.
    description : str, default is Undefined, optional
        Information about the extension.
    id : str, default is Undefined, optional
        AppConfig Extension ID.
    name : str, default is Undefined, optional
        A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
    parameter : [AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderParameterItems0], default is Undefined, optional
        The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    version : float, default is Undefined, optional
        The version number for the extension.
    """


    actionPoint?: [AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderActionPointItems0]

    arn?: str

    description?: str

    id?: str

    name?: str

    parameter?: [AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderParameterItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: float


schema AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderActionPointItems0:
    r"""
    appconfig aws upbound io v1beta1 extension status at provider action point items0

    Attributes
    ----------
    action : [AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderActionPointItems0ActionItems0], default is Undefined, optional
        An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
    point : str, default is Undefined, optional
        The point at which to perform the defined actions. Valid points are PRE_CREATE_HOSTED_CONFIGURATION_VERSION, PRE_START_DEPLOYMENT, ON_DEPLOYMENT_START, ON_DEPLOYMENT_STEP, ON_DEPLOYMENT_BAKING, ON_DEPLOYMENT_COMPLETE, ON_DEPLOYMENT_ROLLED_BACK.
    """


    action?: [AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderActionPointItems0ActionItems0]

    point?: str


schema AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderActionPointItems0ActionItems0:
    r"""
    appconfig aws upbound io v1beta1 extension status at provider action point items0 action items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Information about the action.
    name : str, default is Undefined, optional
        The action name.
    roleArn : str, default is Undefined, optional
        An Amazon Resource Name (ARN) for an Identity and Access Management assume role.
    uri : str, default is Undefined, optional
        The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.
    """


    description?: str

    name?: str

    roleArn?: str

    uri?: str


schema AppconfigAwsUpboundIoV1beta1ExtensionStatusAtProviderParameterItems0:
    r"""
    appconfig aws upbound io v1beta1 extension status at provider parameter items0

    Attributes
    ----------
    description : str, default is Undefined, optional
        Information about the parameter.
    name : str, default is Undefined, optional
        The parameter name.
    required : bool, default is Undefined, optional
        Determines if a parameter value must be specified in the extension association.
    """


    description?: str

    name?: str

    required?: bool


schema AppconfigAwsUpboundIoV1beta1ExtensionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


