"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Route:
    r"""
    Route is the Schema for the Routes API. Provides an AWS App Mesh route resource.

    Attributes
    ----------
    apiVersion : str, default is "appmesh.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Route", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppmeshAwsUpboundIoV1beta1RouteSpec, default is Undefined, required
        spec
    status : AppmeshAwsUpboundIoV1beta1RouteStatus, default is Undefined, optional
        status
    """


    apiVersion: "appmesh.aws.upbound.io/v1beta1" = "appmesh.aws.upbound.io/v1beta1"

    kind: "Route" = "Route"

    metadata?: v1.ObjectMeta

    spec: AppmeshAwsUpboundIoV1beta1RouteSpec

    status?: AppmeshAwsUpboundIoV1beta1RouteStatus


schema AppmeshAwsUpboundIoV1beta1RouteSpec:
    r"""
    RouteSpec defines the desired state of Route

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppmeshAwsUpboundIoV1beta1RouteSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppmeshAwsUpboundIoV1beta1RouteSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppmeshAwsUpboundIoV1beta1RouteSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppmeshAwsUpboundIoV1beta1RouteSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppmeshAwsUpboundIoV1beta1RouteSpecForProvider

    initProvider?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppmeshAwsUpboundIoV1beta1RouteSpecProviderConfigRef

    publishConnectionDetailsTo?: AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppmeshAwsUpboundIoV1beta1RouteSpecWriteConnectionSecretToRef


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProvider:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    spec : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0], default is Undefined, optional
        Route specification to apply.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    virtualRouterName : str, default is Undefined, optional
        Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
    virtualRouterNameRef : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameRef, default is Undefined, optional
        virtual router name ref
    virtualRouterNameSelector : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameSelector, default is Undefined, optional
        virtual router name selector
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameSelector

    meshOwner?: str

    name?: str

    region: str

    spec?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0]

    tags?: {str:str}

    virtualRouterName?: str

    virtualRouterNameRef?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameRef

    virtualRouterNameSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameSelector


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0

    Attributes
    ----------
    grpcRoute : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0], default is Undefined, optional
        GRPC routing information for the route.
    http2Route : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0], default is Undefined, optional
        HTTP/2 routing information for the route.
    httpRoute : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0], default is Undefined, optional
        HTTP routing information for the route.
    priority : float, default is Undefined, optional
        Priority for the route, between 0 and 1000.
        Routes are matched based on the specified value, where 0 is the highest priority.
    tcpRoute : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0], default is Undefined, optional
        TCP routing information for the route.
    """


    grpcRoute?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0]

    http2Route?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0]

    httpRoute?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0]

    priority?: float

    tcpRoute?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 match items0

    Attributes
    ----------
    metadata : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0], default is Undefined, optional
        Data to match from the gRPC request.
    methodName : str, default is Undefined, optional
        Method name to match from the request. If you specify a name, you must also specify a service_name.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    serviceName : str, default is Undefined, optional
        Fully qualified domain name for the service to match from the request.
    """


    metadata?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0]

    methodName?: str

    port?: float

    prefix?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 match items0 metadata items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 match items0 metadata items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 match items0 metadata items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 retry policy items0

    Attributes
    ----------
    grpcRetryEvents : [str], default is Undefined, optional
        List of gRPC retry events.
        Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    grpcRetryEvents?: [str]

    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 grpc route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0], default is Undefined, optional
        Client request path to match on.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0]

    method?: str

    path?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0]

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0 header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0 header items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0 header items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0 path items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0 query parameter items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 match items0 query parameter items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 retry policy items0

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 HTTP route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0PathItems0], default is Undefined, optional
        Client request path to match on.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0]

    method?: str

    path?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0PathItems0]

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0 header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0 header items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0 header items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0PathItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0 path items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0 query parameter items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 match items0 query parameter items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 retry policy items0

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 http2 route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 TCP route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0MatchItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 TCP route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 TCP route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 TCP route items0 match items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    """


    port?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 TCP route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec for provider spec items0 TCP route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameRef:
    r"""
    Reference to a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameSelector:
    r"""
    Selector for a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecForProviderVirtualRouterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    spec : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0], default is Undefined, optional
        Route specification to apply.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    virtualRouterName : str, default is Undefined, optional
        Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
    virtualRouterNameRef : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameRef, default is Undefined, optional
        virtual router name ref
    virtualRouterNameSelector : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameSelector, default is Undefined, optional
        virtual router name selector
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameSelector

    meshOwner?: str

    name?: str

    spec?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0]

    tags?: {str:str}

    virtualRouterName?: str

    virtualRouterNameRef?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameRef

    virtualRouterNameSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameSelector


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0

    Attributes
    ----------
    grpcRoute : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0], default is Undefined, optional
        GRPC routing information for the route.
    http2Route : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0], default is Undefined, optional
        HTTP/2 routing information for the route.
    httpRoute : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0], default is Undefined, optional
        HTTP routing information for the route.
    priority : float, default is Undefined, optional
        Priority for the route, between 0 and 1000.
        Routes are matched based on the specified value, where 0 is the highest priority.
    tcpRoute : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0], default is Undefined, optional
        TCP routing information for the route.
    """


    grpcRoute?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0]

    http2Route?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0]

    httpRoute?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0]

    priority?: float

    tcpRoute?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 match items0

    Attributes
    ----------
    metadata : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0], default is Undefined, optional
        Data to match from the gRPC request.
    methodName : str, default is Undefined, optional
        Method name to match from the request. If you specify a name, you must also specify a service_name.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    serviceName : str, default is Undefined, optional
        Fully qualified domain name for the service to match from the request.
    """


    metadata?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0]

    methodName?: str

    port?: float

    prefix?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 match items0 metadata items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 match items0 metadata items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 match items0 metadata items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 retry policy items0

    Attributes
    ----------
    grpcRetryEvents : [str], default is Undefined, optional
        List of gRPC retry events.
        Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    grpcRetryEvents?: [str]

    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 grpc route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0], default is Undefined, optional
        Client request path to match on.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0]

    method?: str

    path?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0]

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0 header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0 header items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0 header items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0 path items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0 query parameter items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 match items0 query parameter items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 retry policy items0

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 HTTP route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0PathItems0], default is Undefined, optional
        Client request path to match on.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0]

    method?: str

    path?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0PathItems0]

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0 header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0 header items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0 header items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0PathItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0 path items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0 query parameter items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 match items0 query parameter items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 retry policy items0

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 http2 route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 TCP route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0MatchItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 TCP route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 TCP route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 TCP route items0 match items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    """


    port?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 TCP route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0]


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route spec init provider spec items0 TCP route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameRef:
    r"""
    Reference to a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameSelector:
    r"""
    Selector for a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecInitProviderVirtualRouterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecProviderConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToConfigRef

    metadata?: AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToMetadata

    name: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta1RouteSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppmeshAwsUpboundIoV1beta1RouteSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppmeshAwsUpboundIoV1beta1RouteStatus:
    r"""
    RouteStatus defines the observed state of Route.

    Attributes
    ----------
    atProvider : AppmeshAwsUpboundIoV1beta1RouteStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppmeshAwsUpboundIoV1beta1RouteStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppmeshAwsUpboundIoV1beta1RouteStatusAtProvider

    conditions?: [AppmeshAwsUpboundIoV1beta1RouteStatusConditionsItems0]

    observedGeneration?: int


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProvider:
    r"""
    appmesh aws upbound io v1beta1 route status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the route.
    createdDate : str, default is Undefined, optional
        Creation date of the route.
    id : str, default is Undefined, optional
        ID of the route.
    lastUpdatedDate : str, default is Undefined, optional
        Last update date of the route.
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    resourceOwner : str, default is Undefined, optional
        Resource owner's AWS account ID.
    spec : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0], default is Undefined, optional
        Route specification to apply.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    virtualRouterName : str, default is Undefined, optional
        Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
    """


    arn?: str

    createdDate?: str

    id?: str

    lastUpdatedDate?: str

    meshName?: str

    meshOwner?: str

    name?: str

    resourceOwner?: str

    spec?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    virtualRouterName?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0

    Attributes
    ----------
    grpcRoute : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0], default is Undefined, optional
        GRPC routing information for the route.
    http2Route : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0], default is Undefined, optional
        HTTP/2 routing information for the route.
    httpRoute : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0], default is Undefined, optional
        HTTP routing information for the route.
    priority : float, default is Undefined, optional
        Priority for the route, between 0 and 1000.
        Routes are matched based on the specified value, where 0 is the highest priority.
    tcpRoute : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0], default is Undefined, optional
        TCP routing information for the route.
    """


    grpcRoute?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0]

    http2Route?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0]

    httpRoute?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0]

    priority?: float

    tcpRoute?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 match items0

    Attributes
    ----------
    metadata : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0], default is Undefined, optional
        Data to match from the gRPC request.
    methodName : str, default is Undefined, optional
        Method name to match from the request. If you specify a name, you must also specify a service_name.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    serviceName : str, default is Undefined, optional
        Fully qualified domain name for the service to match from the request.
    """


    metadata?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0]

    methodName?: str

    port?: float

    prefix?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 match items0 metadata items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 match items0 metadata items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0MatchItems0MetadataItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 match items0 metadata items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 retry policy items0

    Attributes
    ----------
    grpcRetryEvents : [str], default is Undefined, optional
        List of gRPC retry events.
        Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    grpcRetryEvents?: [str]

    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0GrpcRouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 grpc route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0], default is Undefined, optional
        Client request path to match on.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0]

    method?: str

    path?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0]

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0 header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0 header items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0 header items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0PathItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0 path items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0 query parameter items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0MatchItems0QueryParameterItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 match items0 query parameter items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 retry policy items0

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0HTTPRouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 HTTP route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    retryPolicy : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0RetryPolicyItems0], default is Undefined, optional
        Retry policy.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0]

    retryPolicy?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0RetryPolicyItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0PathItems0], default is Undefined, optional
        Client request path to match on.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0]

    method?: str

    path?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0PathItems0]

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0 header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0 header items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0], default is Undefined, optional
        Object that specifies the range of numbers that the value sent by the client must be included in.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0]

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0HeaderItems0MatchItems0RangeItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0 header items0 match items0 range items0

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0PathItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0 path items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0 query parameter items0

    Attributes
    ----------
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0]

    name?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0MatchItems0QueryParameterItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 match items0 query parameter items0 match items0

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0RetryPolicyItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 retry policy items0

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0], default is Undefined, optional
        Per-retry timeout.
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0]

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0RetryPolicyItems0PerRetryTimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 retry policy items0 per retry timeout items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    perRequest : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0], default is Undefined, optional
        Per request timeout.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0]

    perRequest?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0Http2RouteItems0TimeoutItems0PerRequestItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 http2 route items0 timeout items0 per request items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 TCP route items0

    Attributes
    ----------
    action : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0ActionItems0], default is Undefined, optional
        Action to take if a match is determined.
    match : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0MatchItems0], default is Undefined, optional
        Criteria for determining an gRPC request match.
    timeout : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0TimeoutItems0], default is Undefined, optional
        Types of timeouts.
    """


    action?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0ActionItems0]

    match?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0MatchItems0]

    timeout?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0TimeoutItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0ActionItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 TCP route items0 action items0

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0ActionItems0WeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 TCP route items0 action items0 weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0MatchItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 TCP route items0 match items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    """


    port?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0TimeoutItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 TCP route items0 timeout items0

    Attributes
    ----------
    idle : [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0], default is Undefined, optional
        Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.
    """


    idle?: [AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0]


schema AppmeshAwsUpboundIoV1beta1RouteStatusAtProviderSpecItems0TCPRouteItems0TimeoutItems0IdleItems0:
    r"""
    appmesh aws upbound io v1beta1 route status at provider spec items0 TCP route items0 timeout items0 idle items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta1RouteStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


