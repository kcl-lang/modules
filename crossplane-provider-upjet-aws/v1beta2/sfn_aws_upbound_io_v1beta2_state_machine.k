"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema StateMachine:
    r"""
    StateMachine is the Schema for the StateMachines API. Provides a Step Function State Machine resource.

    Attributes
    ----------
    apiVersion : str, default is "sfn.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "StateMachine", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SfnAwsUpboundIoV1beta2StateMachineSpec, default is Undefined, required
        spec
    status : SfnAwsUpboundIoV1beta2StateMachineStatus, default is Undefined, optional
        status
    """


    apiVersion: "sfn.aws.upbound.io/v1beta2" = "sfn.aws.upbound.io/v1beta2"

    kind: "StateMachine" = "StateMachine"

    metadata?: v1.ObjectMeta

    spec: SfnAwsUpboundIoV1beta2StateMachineSpec

    status?: SfnAwsUpboundIoV1beta2StateMachineStatus


schema SfnAwsUpboundIoV1beta2StateMachineSpec:
    r"""
    StateMachineSpec defines the desired state of StateMachine

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SfnAwsUpboundIoV1beta2StateMachineSpecForProvider, default is Undefined, required
        for provider
    initProvider : SfnAwsUpboundIoV1beta2StateMachineSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SfnAwsUpboundIoV1beta2StateMachineSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SfnAwsUpboundIoV1beta2StateMachineSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SfnAwsUpboundIoV1beta2StateMachineSpecForProvider

    initProvider?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SfnAwsUpboundIoV1beta2StateMachineSpecProviderConfigRef

    publishConnectionDetailsTo?: SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SfnAwsUpboundIoV1beta2StateMachineSpecWriteConnectionSecretToRef


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProvider:
    r"""
    sfn aws upbound io v1beta2 state machine spec for provider

    Attributes
    ----------
    definition : str, default is Undefined, optional
        The Amazon States Language definition of the state machine.
    encryptionConfiguration : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    loggingConfiguration : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    publish : bool, default is Undefined, optional
        Set to true to publish a version of the state machine during creation. Default: false.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
    roleArnRef : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tracingConfiguration : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderTracingConfiguration, default is Undefined, optional
        tracing configuration
    $type : str, default is Undefined, optional
        Determines whether a Standard or Express state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. Valid values: STANDARD, EXPRESS.
    """


    definition?: str

    encryptionConfiguration?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfiguration

    loggingConfiguration?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderLoggingConfiguration

    publish?: bool

    region: str

    roleArn?: str

    roleArnRef?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnRef

    roleArnSelector?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnSelector

    tags?: {str:str}

    tracingConfiguration?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderTracingConfiguration

    $type?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfiguration:
    r"""
    Defines what encryption configuration is used to encrypt data in the State Machine. For more information see [TBD] in the AWS Step Functions User Guide.

    Attributes
    ----------
    kmsDataKeyReusePeriodSeconds : float, default is Undefined, optional
        Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when type is AWS_OWNED_KEY.
    kmsKeyId : str, default is Undefined, optional
        The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see KeyId in the KMS documentation.
    kmsKeyIdRef : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    $type : str, default is Undefined, optional
        The encryption option specified for the state machine. Valid values: AWS_OWNED_KEY, CUSTOMER_MANAGED_KMS_KEY
    """


    kmsDataKeyReusePeriodSeconds?: float

    kmsKeyId?: str

    kmsKeyIdRef?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDRef

    kmsKeyIdSelector?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDSelector

    $type?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDRefPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDSelectorPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderEncryptionConfigurationKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderLoggingConfiguration:
    r"""
    Defines what execution history events are logged and where they are logged. The logging_configuration parameter is valid when type is set to STANDARD or EXPRESS. Defaults to OFF. For more information see Logging Express Workflows, Log Levels and Logging Configuration in the AWS Step Functions User Guide.

    Attributes
    ----------
    includeExecutionData : bool, default is Undefined, optional
        Determines whether execution data is included in your log. When set to false, data is excluded.
    level : str, default is Undefined, optional
        Defines which category of execution history events are logged. Valid values: ALL, ERROR, FATAL, OFF
    logDestination : str, default is Undefined, optional
        Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with :*
    """


    includeExecutionData?: bool

    level?: str

    logDestination?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnRefPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnSelectorPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecForProviderTracingConfiguration:
    r"""
    Selects whether AWS X-Ray tracing is enabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        When set to true, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the AWS Step Functions Developer Guide for details.
    """


    enabled?: bool


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    definition : str, default is Undefined, optional
        The Amazon States Language definition of the state machine.
    encryptionConfiguration : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    loggingConfiguration : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    publish : bool, default is Undefined, optional
        Set to true to publish a version of the state machine during creation. Default: false.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
    roleArnRef : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tracingConfiguration : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderTracingConfiguration, default is Undefined, optional
        tracing configuration
    $type : str, default is Undefined, optional
        Determines whether a Standard or Express state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. Valid values: STANDARD, EXPRESS.
    """


    definition?: str

    encryptionConfiguration?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfiguration

    loggingConfiguration?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderLoggingConfiguration

    publish?: bool

    roleArn?: str

    roleArnRef?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnRef

    roleArnSelector?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnSelector

    tags?: {str:str}

    tracingConfiguration?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderTracingConfiguration

    $type?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfiguration:
    r"""
    Defines what encryption configuration is used to encrypt data in the State Machine. For more information see [TBD] in the AWS Step Functions User Guide.

    Attributes
    ----------
    kmsDataKeyReusePeriodSeconds : float, default is Undefined, optional
        Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when type is AWS_OWNED_KEY.
    kmsKeyId : str, default is Undefined, optional
        The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see KeyId in the KMS documentation.
    kmsKeyIdRef : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    $type : str, default is Undefined, optional
        The encryption option specified for the state machine. Valid values: AWS_OWNED_KEY, CUSTOMER_MANAGED_KMS_KEY
    """


    kmsDataKeyReusePeriodSeconds?: float

    kmsKeyId?: str

    kmsKeyIdRef?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDRef

    kmsKeyIdSelector?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDSelector

    $type?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDRefPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDSelectorPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderEncryptionConfigurationKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderLoggingConfiguration:
    r"""
    Defines what execution history events are logged and where they are logged. The logging_configuration parameter is valid when type is set to STANDARD or EXPRESS. Defaults to OFF. For more information see Logging Express Workflows, Log Levels and Logging Configuration in the AWS Step Functions User Guide.

    Attributes
    ----------
    includeExecutionData : bool, default is Undefined, optional
        Determines whether execution data is included in your log. When set to false, data is excluded.
    level : str, default is Undefined, optional
        Defines which category of execution history events are logged. Valid values: ALL, ERROR, FATAL, OFF
    logDestination : str, default is Undefined, optional
        Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with :*
    """


    includeExecutionData?: bool

    level?: str

    logDestination?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnRefPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnSelectorPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecInitProviderTracingConfiguration:
    r"""
    Selects whether AWS X-Ray tracing is enabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        When set to true, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the AWS Step Functions Developer Guide for details.
    """


    enabled?: bool


schema SfnAwsUpboundIoV1beta2StateMachineSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecProviderConfigRefPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToConfigRef

    metadata?: SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToMetadata

    name: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToConfigRefPolicy


schema SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SfnAwsUpboundIoV1beta2StateMachineSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SfnAwsUpboundIoV1beta2StateMachineSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SfnAwsUpboundIoV1beta2StateMachineStatus:
    r"""
    StateMachineStatus defines the observed state of StateMachine.

    Attributes
    ----------
    atProvider : SfnAwsUpboundIoV1beta2StateMachineStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SfnAwsUpboundIoV1beta2StateMachineStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SfnAwsUpboundIoV1beta2StateMachineStatusAtProvider

    conditions?: [SfnAwsUpboundIoV1beta2StateMachineStatusConditionsItems0]

    observedGeneration?: int


schema SfnAwsUpboundIoV1beta2StateMachineStatusAtProvider:
    r"""
    sfn aws upbound io v1beta2 state machine status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the state machine.
    creationDate : str, default is Undefined, optional
        The date the state machine was created.
    definition : str, default is Undefined, optional
        The Amazon States Language definition of the state machine.
    description : str, default is Undefined, optional
        description
    encryptionConfiguration : SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    id : str, default is Undefined, optional
        The ARN of the state machine.
    loggingConfiguration : SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderLoggingConfiguration, default is Undefined, optional
        logging configuration
    publish : bool, default is Undefined, optional
        Set to true to publish a version of the state machine during creation. Default: false.
    revisionId : str, default is Undefined, optional
        The ARN of the state machine.
    roleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role to use for this state machine.
    stateMachineVersionArn : str, default is Undefined, optional
        The ARN of the state machine version.
    status : str, default is Undefined, optional
        The current status of the state machine. Either ACTIVE or DELETING.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tracingConfiguration : SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderTracingConfiguration, default is Undefined, optional
        tracing configuration
    $type : str, default is Undefined, optional
        Determines whether a Standard or Express state machine is created. The default is STANDARD. You cannot update the type of a state machine once it has been created. Valid values: STANDARD, EXPRESS.
    versionDescription : str, default is Undefined, optional
        version description
    """


    arn?: str

    creationDate?: str

    definition?: str

    description?: str

    encryptionConfiguration?: SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderEncryptionConfiguration

    id?: str

    loggingConfiguration?: SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderLoggingConfiguration

    publish?: bool

    revisionId?: str

    roleArn?: str

    stateMachineVersionArn?: str

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    tracingConfiguration?: SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderTracingConfiguration

    $type?: str

    versionDescription?: str


schema SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderEncryptionConfiguration:
    r"""
    Defines what encryption configuration is used to encrypt data in the State Machine. For more information see [TBD] in the AWS Step Functions User Guide.

    Attributes
    ----------
    kmsDataKeyReusePeriodSeconds : float, default is Undefined, optional
        Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when type is AWS_OWNED_KEY.
    kmsKeyId : str, default is Undefined, optional
        The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see KeyId in the KMS documentation.
    $type : str, default is Undefined, optional
        The encryption option specified for the state machine. Valid values: AWS_OWNED_KEY, CUSTOMER_MANAGED_KMS_KEY
    """


    kmsDataKeyReusePeriodSeconds?: float

    kmsKeyId?: str

    $type?: str


schema SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderLoggingConfiguration:
    r"""
    Defines what execution history events are logged and where they are logged. The logging_configuration parameter is valid when type is set to STANDARD or EXPRESS. Defaults to OFF. For more information see Logging Express Workflows, Log Levels and Logging Configuration in the AWS Step Functions User Guide.

    Attributes
    ----------
    includeExecutionData : bool, default is Undefined, optional
        Determines whether execution data is included in your log. When set to false, data is excluded.
    level : str, default is Undefined, optional
        Defines which category of execution history events are logged. Valid values: ALL, ERROR, FATAL, OFF
    logDestination : str, default is Undefined, optional
        Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with :*
    """


    includeExecutionData?: bool

    level?: str

    logDestination?: str


schema SfnAwsUpboundIoV1beta2StateMachineStatusAtProviderTracingConfiguration:
    r"""
    Selects whether AWS X-Ray tracing is enabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        When set to true, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the AWS Step Functions Developer Guide for details.
    """


    enabled?: bool


schema SfnAwsUpboundIoV1beta2StateMachineStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


