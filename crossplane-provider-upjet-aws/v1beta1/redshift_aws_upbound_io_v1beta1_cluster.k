"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Provides a Redshift Cluster resource.

    Attributes
    ----------
    apiVersion : str, default is "redshift.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RedshiftAwsUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : RedshiftAwsUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "redshift.aws.upbound.io/v1beta1" = "redshift.aws.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: RedshiftAwsUpboundIoV1beta1ClusterSpec

    status?: RedshiftAwsUpboundIoV1beta1ClusterStatus


schema RedshiftAwsUpboundIoV1beta1ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RedshiftAwsUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RedshiftAwsUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RedshiftAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RedshiftAwsUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProvider:
    r"""
    redshift aws upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    allowVersionUpgrade : bool, default is Undefined, optional
        If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is true.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
    aquaConfigurationStatus : str, default is Undefined, optional
        The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.
        No longer supported by the AWS API.
        Always returns auto.
    automatedSnapshotRetentionPeriod : float, default is Undefined, optional
        The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.
    availabilityZone : str, default is Undefined, optional
        The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if availability_zone_relocation_enabled is true.
    availabilityZoneRelocationEnabled : bool, default is Undefined, optional
        If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is false. Available for use on clusters from the RA3 instance family.
    clusterParameterGroupName : str, default is Undefined, optional
        The name of the parameter group to be associated with this cluster.
    clusterPublicKey : str, default is Undefined, optional
        The public key for the cluster
    clusterRevisionNumber : str, default is Undefined, optional
        The specific revision number of the database in the cluster
    clusterSubnetGroupName : str, default is Undefined, optional
        The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).
    clusterType : str, default is Undefined, optional
        The cluster type to use. Either single-node or multi-node.
    clusterVersion : str, default is Undefined, optional
        The version of the Amazon Redshift engine software that you want to deploy on the cluster.
        The version selected runs on all the nodes in the cluster.
    databaseName : str, default is Undefined, optional
        The name of the first database to be created when the cluster is created.
        If you do not provide a name, Amazon Redshift will create a default database called dev.
    defaultIamRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
    defaultIamRoleArnRef : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnRef, default is Undefined, optional
        default iam role arn ref
    defaultIamRoleArnSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnSelector, default is Undefined, optional
        default iam role arn selector
    elasticIp : str, default is Undefined, optional
        The Elastic IP (EIP) address for the cluster.
    encrypted : bool, default is Undefined, optional
        If true , the data in the cluster is encrypted at rest.
    endpoint : str, default is Undefined, optional
        The connection endpoint
    enhancedVpcRouting : bool, default is Undefined, optional
        If true , enhanced VPC routing is enabled.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, skip_final_snapshot must be false.
    iamRoleRefs : [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleRefsItems0], default is Undefined, optional
        References to Role in iam to populate iamRoles.
    iamRoleSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleSelector, default is Undefined, optional
        iam role selector
    iamRoles : [str], default is Undefined, optional
        A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    kmsKeyIdRef : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    logging : [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderLoggingItems0], default is Undefined, optional
        Logging, documented below.
    maintenanceTrackName : str, default is Undefined, optional
        The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is current.
    manageMasterPassword : bool, default is Undefined, optional
        Whether to use AWS SecretsManager to manage the cluster admin credentials.
        Conflicts with master_password.
        One of master_password or manage_master_password is required unless snapshot_identifier is provided.
    manualSnapshotRetentionPeriod : float, default is Undefined, optional
        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between -1 and 3653. Default value is -1.
    masterPasswordSecretKmsKeyId : str, default is Undefined, optional
        ID of the KMS key used to encrypt the cluster admin credentials secret.
    masterPasswordSecretRef : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef, default is Undefined, optional
        master password secret ref
    masterUsername : str, default is Undefined, optional
        Username for the master DB user.
    multiAz : bool, default is Undefined, optional
        Specifies if the Redshift cluster is multi-AZ.
    nodeType : str, default is Undefined, optional
        The node type to be provisioned for the cluster.
    numberOfNodes : float, default is Undefined, optional
        The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.
    ownerAccount : str, default is Undefined, optional
        The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections. Valid values are between 1115 and 65535.
        The cluster is accessible only via the JDBC and ODBC connection strings.
        Part of the connection string requires the port on which the cluster will listen for incoming connections.
        Default port is 5439.
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range (in UTC) during which automated cluster maintenance can occur.
        Format: ddd:hh24:mi-ddd:hh24:mi
    publiclyAccessible : bool, default is Undefined, optional
        If true, the cluster can be accessed from a public network. Default is true.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.
    snapshotArn : str, default is Undefined, optional
        The ARN of the snapshot from which to create the new cluster. Conflicts with snapshot_identifier.
    snapshotClusterIdentifier : str, default is Undefined, optional
        The name of the cluster the source snapshot was created from.
    snapshotCopy : [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderSnapshotCopyItems0], default is Undefined, optional
        Configuration of automatic copy of snapshots from one region to another. Documented below.
    snapshotIdentifier : str, default is Undefined, optional
        The name of the snapshot from which to create the new cluster.  Conflicts with snapshot_arn.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
    """


    allowVersionUpgrade?: bool

    applyImmediately?: bool

    aquaConfigurationStatus?: str

    automatedSnapshotRetentionPeriod?: float

    availabilityZone?: str

    availabilityZoneRelocationEnabled?: bool

    clusterParameterGroupName?: str

    clusterPublicKey?: str

    clusterRevisionNumber?: str

    clusterSubnetGroupName?: str

    clusterType?: str

    clusterVersion?: str

    databaseName?: str

    defaultIamRoleArn?: str

    defaultIamRoleArnRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnRef

    defaultIamRoleArnSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnSelector

    elasticIp?: str

    encrypted?: bool

    endpoint?: str

    enhancedVpcRouting?: bool

    finalSnapshotIdentifier?: str

    iamRoleRefs?: [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleRefsItems0]

    iamRoleSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleSelector

    iamRoles?: [str]

    kmsKeyId?: str

    kmsKeyIdRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector

    logging?: [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderLoggingItems0]

    maintenanceTrackName?: str

    manageMasterPassword?: bool

    manualSnapshotRetentionPeriod?: float

    masterPasswordSecretKmsKeyId?: str

    masterPasswordSecretRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef

    masterUsername?: str

    multiAz?: bool

    nodeType?: str

    numberOfNodes?: float

    ownerAccount?: str

    port?: float

    preferredMaintenanceWindow?: str

    publiclyAccessible?: bool

    region: str

    skipFinalSnapshot?: bool

    snapshotArn?: str

    snapshotClusterIdentifier?: str

    snapshotCopy?: [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderSnapshotCopyItems0]

    snapshotIdentifier?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate defaultIamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnRefPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate defaultIamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderDefaultIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleRefsItems0Policy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleSelector:
    r"""
    Selector for a list of Role in iam to populate iamRoles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderIamRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderLoggingItems0:
    r"""
    redshift aws upbound io v1beta1 cluster spec for provider logging items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
        For more information on the permissions required for the bucket, please read the AWS documentation
    enable : bool, default is Undefined, optional
        Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.
    logDestinationType : str, default is Undefined, optional
        The log destination type. An enum with possible values of s3 and cloudwatch.
    logExports : [str], default is Undefined, optional
        The collection of exported log types. Log types include the connection log, user log and user activity log. Required when log_destination_type is cloudwatch. Valid log types are connectionlog, userlog, and useractivitylog.
    s3KeyPrefix : str, default is Undefined, optional
        The prefix applied to the log file names.
    """


    bucketName?: str

    enable?: bool

    logDestinationType?: str

    logExports?: [str]

    s3KeyPrefix?: str


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef:
    r"""
    Password for the master DB user.
    Conflicts with manage_master_password.
    One of master_password or manage_master_password is required unless snapshot_identifier is provided.
    Note that this may show up in logs, and it will be stored in the state file.
    Password must contain at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderSnapshotCopyItems0:
    r"""
    redshift aws upbound io v1beta1 cluster spec for provider snapshot copy items0

    Attributes
    ----------
    destinationRegion : str, default is Undefined, optional
        The destination region that you want to copy snapshots to.
    grantName : str, default is Undefined, optional
        The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
    retentionPeriod : float, default is Undefined, optional
        The number of days to retain automated snapshots in the destination region after they are copied from the source region. Defaults to 7.
    """


    destinationRegion?: str

    grantName?: str

    retentionPeriod?: float


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowVersionUpgrade : bool, default is Undefined, optional
        If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is true.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
    aquaConfigurationStatus : str, default is Undefined, optional
        The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.
        No longer supported by the AWS API.
        Always returns auto.
    automatedSnapshotRetentionPeriod : float, default is Undefined, optional
        The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.
    availabilityZone : str, default is Undefined, optional
        The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if availability_zone_relocation_enabled is true.
    availabilityZoneRelocationEnabled : bool, default is Undefined, optional
        If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is false. Available for use on clusters from the RA3 instance family.
    clusterParameterGroupName : str, default is Undefined, optional
        The name of the parameter group to be associated with this cluster.
    clusterPublicKey : str, default is Undefined, optional
        The public key for the cluster
    clusterRevisionNumber : str, default is Undefined, optional
        The specific revision number of the database in the cluster
    clusterSubnetGroupName : str, default is Undefined, optional
        The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).
    clusterType : str, default is Undefined, optional
        The cluster type to use. Either single-node or multi-node.
    clusterVersion : str, default is Undefined, optional
        The version of the Amazon Redshift engine software that you want to deploy on the cluster.
        The version selected runs on all the nodes in the cluster.
    databaseName : str, default is Undefined, optional
        The name of the first database to be created when the cluster is created.
        If you do not provide a name, Amazon Redshift will create a default database called dev.
    defaultIamRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
    defaultIamRoleArnRef : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnRef, default is Undefined, optional
        default iam role arn ref
    defaultIamRoleArnSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnSelector, default is Undefined, optional
        default iam role arn selector
    elasticIp : str, default is Undefined, optional
        The Elastic IP (EIP) address for the cluster.
    encrypted : bool, default is Undefined, optional
        If true , the data in the cluster is encrypted at rest.
    endpoint : str, default is Undefined, optional
        The connection endpoint
    enhancedVpcRouting : bool, default is Undefined, optional
        If true , enhanced VPC routing is enabled.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, skip_final_snapshot must be false.
    iamRoleRefs : [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleRefsItems0], default is Undefined, optional
        References to Role in iam to populate iamRoles.
    iamRoleSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleSelector, default is Undefined, optional
        iam role selector
    iamRoles : [str], default is Undefined, optional
        A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    kmsKeyIdRef : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    logging : [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderLoggingItems0], default is Undefined, optional
        Logging, documented below.
    maintenanceTrackName : str, default is Undefined, optional
        The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is current.
    manageMasterPassword : bool, default is Undefined, optional
        Whether to use AWS SecretsManager to manage the cluster admin credentials.
        Conflicts with master_password.
        One of master_password or manage_master_password is required unless snapshot_identifier is provided.
    manualSnapshotRetentionPeriod : float, default is Undefined, optional
        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between -1 and 3653. Default value is -1.
    masterPasswordSecretKmsKeyId : str, default is Undefined, optional
        ID of the KMS key used to encrypt the cluster admin credentials secret.
    masterPasswordSecretRef : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef, default is Undefined, optional
        master password secret ref
    masterUsername : str, default is Undefined, optional
        Username for the master DB user.
    multiAz : bool, default is Undefined, optional
        Specifies if the Redshift cluster is multi-AZ.
    nodeType : str, default is Undefined, optional
        The node type to be provisioned for the cluster.
    numberOfNodes : float, default is Undefined, optional
        The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.
    ownerAccount : str, default is Undefined, optional
        The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections. Valid values are between 1115 and 65535.
        The cluster is accessible only via the JDBC and ODBC connection strings.
        Part of the connection string requires the port on which the cluster will listen for incoming connections.
        Default port is 5439.
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range (in UTC) during which automated cluster maintenance can occur.
        Format: ddd:hh24:mi-ddd:hh24:mi
    publiclyAccessible : bool, default is Undefined, optional
        If true, the cluster can be accessed from a public network. Default is true.
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.
    snapshotArn : str, default is Undefined, optional
        The ARN of the snapshot from which to create the new cluster. Conflicts with snapshot_identifier.
    snapshotClusterIdentifier : str, default is Undefined, optional
        The name of the cluster the source snapshot was created from.
    snapshotCopy : [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderSnapshotCopyItems0], default is Undefined, optional
        Configuration of automatic copy of snapshots from one region to another. Documented below.
    snapshotIdentifier : str, default is Undefined, optional
        The name of the snapshot from which to create the new cluster.  Conflicts with snapshot_arn.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
    """


    allowVersionUpgrade?: bool

    applyImmediately?: bool

    aquaConfigurationStatus?: str

    automatedSnapshotRetentionPeriod?: float

    availabilityZone?: str

    availabilityZoneRelocationEnabled?: bool

    clusterParameterGroupName?: str

    clusterPublicKey?: str

    clusterRevisionNumber?: str

    clusterSubnetGroupName?: str

    clusterType?: str

    clusterVersion?: str

    databaseName?: str

    defaultIamRoleArn?: str

    defaultIamRoleArnRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnRef

    defaultIamRoleArnSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnSelector

    elasticIp?: str

    encrypted?: bool

    endpoint?: str

    enhancedVpcRouting?: bool

    finalSnapshotIdentifier?: str

    iamRoleRefs?: [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleRefsItems0]

    iamRoleSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleSelector

    iamRoles?: [str]

    kmsKeyId?: str

    kmsKeyIdRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector

    logging?: [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderLoggingItems0]

    maintenanceTrackName?: str

    manageMasterPassword?: bool

    manualSnapshotRetentionPeriod?: float

    masterPasswordSecretKmsKeyId?: str

    masterPasswordSecretRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef

    masterUsername?: str

    multiAz?: bool

    nodeType?: str

    numberOfNodes?: float

    ownerAccount?: str

    port?: float

    preferredMaintenanceWindow?: str

    publiclyAccessible?: bool

    skipFinalSnapshot?: bool

    snapshotArn?: str

    snapshotClusterIdentifier?: str

    snapshotCopy?: [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderSnapshotCopyItems0]

    snapshotIdentifier?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate defaultIamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnRefPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate defaultIamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderDefaultIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleRefsItems0Policy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleSelector:
    r"""
    Selector for a list of Role in iam to populate iamRoles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderIamRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderLoggingItems0:
    r"""
    redshift aws upbound io v1beta1 cluster spec init provider logging items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
        For more information on the permissions required for the bucket, please read the AWS documentation
    enable : bool, default is Undefined, optional
        Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.
    logDestinationType : str, default is Undefined, optional
        The log destination type. An enum with possible values of s3 and cloudwatch.
    logExports : [str], default is Undefined, optional
        The collection of exported log types. Log types include the connection log, user log and user activity log. Required when log_destination_type is cloudwatch. Valid log types are connectionlog, userlog, and useractivitylog.
    s3KeyPrefix : str, default is Undefined, optional
        The prefix applied to the log file names.
    """


    bucketName?: str

    enable?: bool

    logDestinationType?: str

    logExports?: [str]

    s3KeyPrefix?: str


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef:
    r"""
    Password for the master DB user.
    Conflicts with manage_master_password.
    One of master_password or manage_master_password is required unless snapshot_identifier is provided.
    Note that this may show up in logs, and it will be stored in the state file.
    Password must contain at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderSnapshotCopyItems0:
    r"""
    redshift aws upbound io v1beta1 cluster spec init provider snapshot copy items0

    Attributes
    ----------
    destinationRegion : str, default is Undefined, optional
        The destination region that you want to copy snapshots to.
    grantName : str, default is Undefined, optional
        The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
    retentionPeriod : float, default is Undefined, optional
        The number of days to retain automated snapshots in the destination region after they are copied from the source region. Defaults to 7.
    """


    destinationRegion?: str

    grantName?: str

    retentionPeriod?: float


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RedshiftAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RedshiftAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RedshiftAwsUpboundIoV1beta1ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : RedshiftAwsUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RedshiftAwsUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RedshiftAwsUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [RedshiftAwsUpboundIoV1beta1ClusterStatusConditionsItems0]

    observedGeneration?: int


schema RedshiftAwsUpboundIoV1beta1ClusterStatusAtProvider:
    r"""
    redshift aws upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    allowVersionUpgrade : bool, default is Undefined, optional
        If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is true.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
    aquaConfigurationStatus : str, default is Undefined, optional
        The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.
        No longer supported by the AWS API.
        Always returns auto.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of cluster
    automatedSnapshotRetentionPeriod : float, default is Undefined, optional
        The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.
    availabilityZone : str, default is Undefined, optional
        The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if availability_zone_relocation_enabled is true.
    availabilityZoneRelocationEnabled : bool, default is Undefined, optional
        If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is false. Available for use on clusters from the RA3 instance family.
    clusterNamespaceArn : str, default is Undefined, optional
        The namespace Amazon Resource Name (ARN) of the cluster
    clusterNodes : [RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderClusterNodesItems0], default is Undefined, optional
        The nodes in the cluster. Cluster node blocks are documented below
    clusterParameterGroupName : str, default is Undefined, optional
        The name of the parameter group to be associated with this cluster.
    clusterPublicKey : str, default is Undefined, optional
        The public key for the cluster
    clusterRevisionNumber : str, default is Undefined, optional
        The specific revision number of the database in the cluster
    clusterSubnetGroupName : str, default is Undefined, optional
        The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).
    clusterType : str, default is Undefined, optional
        The cluster type to use. Either single-node or multi-node.
    clusterVersion : str, default is Undefined, optional
        The version of the Amazon Redshift engine software that you want to deploy on the cluster.
        The version selected runs on all the nodes in the cluster.
    databaseName : str, default is Undefined, optional
        The name of the first database to be created when the cluster is created.
        If you do not provide a name, Amazon Redshift will create a default database called dev.
    defaultIamRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
    dnsName : str, default is Undefined, optional
        The DNS name of the cluster
    elasticIp : str, default is Undefined, optional
        The Elastic IP (EIP) address for the cluster.
    encrypted : bool, default is Undefined, optional
        If true , the data in the cluster is encrypted at rest.
    endpoint : str, default is Undefined, optional
        The connection endpoint
    enhancedVpcRouting : bool, default is Undefined, optional
        If true , enhanced VPC routing is enabled.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, skip_final_snapshot must be false.
    iamRoles : [str], default is Undefined, optional
        A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
    id : str, default is Undefined, optional
        The Redshift Cluster ID.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    logging : [RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderLoggingItems0], default is Undefined, optional
        Logging, documented below.
    maintenanceTrackName : str, default is Undefined, optional
        The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is current.
    manageMasterPassword : bool, default is Undefined, optional
        Whether to use AWS SecretsManager to manage the cluster admin credentials.
        Conflicts with master_password.
        One of master_password or manage_master_password is required unless snapshot_identifier is provided.
    manualSnapshotRetentionPeriod : float, default is Undefined, optional
        The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between -1 and 3653. Default value is -1.
    masterPasswordSecretArn : str, default is Undefined, optional
        ARN of the cluster admin credentials secret
    masterPasswordSecretKmsKeyId : str, default is Undefined, optional
        ID of the KMS key used to encrypt the cluster admin credentials secret.
    masterUsername : str, default is Undefined, optional
        Username for the master DB user.
    multiAz : bool, default is Undefined, optional
        Specifies if the Redshift cluster is multi-AZ.
    nodeType : str, default is Undefined, optional
        The node type to be provisioned for the cluster.
    numberOfNodes : float, default is Undefined, optional
        The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.
    ownerAccount : str, default is Undefined, optional
        The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.
    port : float, default is Undefined, optional
        The port number on which the cluster accepts incoming connections. Valid values are between 1115 and 65535.
        The cluster is accessible only via the JDBC and ODBC connection strings.
        Part of the connection string requires the port on which the cluster will listen for incoming connections.
        Default port is 5439.
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range (in UTC) during which automated cluster maintenance can occur.
        Format: ddd:hh24:mi-ddd:hh24:mi
    publiclyAccessible : bool, default is Undefined, optional
        If true, the cluster can be accessed from a public network. Default is true.
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.
    snapshotArn : str, default is Undefined, optional
        The ARN of the snapshot from which to create the new cluster. Conflicts with snapshot_identifier.
    snapshotClusterIdentifier : str, default is Undefined, optional
        The name of the cluster the source snapshot was created from.
    snapshotCopy : [RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderSnapshotCopyItems0], default is Undefined, optional
        Configuration of automatic copy of snapshots from one region to another. Documented below.
    snapshotIdentifier : str, default is Undefined, optional
        The name of the snapshot from which to create the new cluster.  Conflicts with snapshot_arn.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
    """


    allowVersionUpgrade?: bool

    applyImmediately?: bool

    aquaConfigurationStatus?: str

    arn?: str

    automatedSnapshotRetentionPeriod?: float

    availabilityZone?: str

    availabilityZoneRelocationEnabled?: bool

    clusterNamespaceArn?: str

    clusterNodes?: [RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderClusterNodesItems0]

    clusterParameterGroupName?: str

    clusterPublicKey?: str

    clusterRevisionNumber?: str

    clusterSubnetGroupName?: str

    clusterType?: str

    clusterVersion?: str

    databaseName?: str

    defaultIamRoleArn?: str

    dnsName?: str

    elasticIp?: str

    encrypted?: bool

    endpoint?: str

    enhancedVpcRouting?: bool

    finalSnapshotIdentifier?: str

    iamRoles?: [str]

    id?: str

    kmsKeyId?: str

    logging?: [RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderLoggingItems0]

    maintenanceTrackName?: str

    manageMasterPassword?: bool

    manualSnapshotRetentionPeriod?: float

    masterPasswordSecretArn?: str

    masterPasswordSecretKmsKeyId?: str

    masterUsername?: str

    multiAz?: bool

    nodeType?: str

    numberOfNodes?: float

    ownerAccount?: str

    port?: float

    preferredMaintenanceWindow?: str

    publiclyAccessible?: bool

    skipFinalSnapshot?: bool

    snapshotArn?: str

    snapshotClusterIdentifier?: str

    snapshotCopy?: [RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderSnapshotCopyItems0]

    snapshotIdentifier?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcSecurityGroupIds?: [str]


schema RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderClusterNodesItems0:
    r"""
    redshift aws upbound io v1beta1 cluster status at provider cluster nodes items0

    Attributes
    ----------
    nodeRole : str, default is Undefined, optional
        Whether the node is a leader node or a compute node
    privateIpAddress : str, default is Undefined, optional
        The private IP address of a node within a cluster
    publicIpAddress : str, default is Undefined, optional
        The public IP address of a node within a cluster
    """


    nodeRole?: str

    privateIpAddress?: str

    publicIpAddress?: str


schema RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderLoggingItems0:
    r"""
    redshift aws upbound io v1beta1 cluster status at provider logging items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.
        For more information on the permissions required for the bucket, please read the AWS documentation
    enable : bool, default is Undefined, optional
        Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.
    logDestinationType : str, default is Undefined, optional
        The log destination type. An enum with possible values of s3 and cloudwatch.
    logExports : [str], default is Undefined, optional
        The collection of exported log types. Log types include the connection log, user log and user activity log. Required when log_destination_type is cloudwatch. Valid log types are connectionlog, userlog, and useractivitylog.
    s3KeyPrefix : str, default is Undefined, optional
        The prefix applied to the log file names.
    """


    bucketName?: str

    enable?: bool

    logDestinationType?: str

    logExports?: [str]

    s3KeyPrefix?: str


schema RedshiftAwsUpboundIoV1beta1ClusterStatusAtProviderSnapshotCopyItems0:
    r"""
    redshift aws upbound io v1beta1 cluster status at provider snapshot copy items0

    Attributes
    ----------
    destinationRegion : str, default is Undefined, optional
        The destination region that you want to copy snapshots to.
    grantName : str, default is Undefined, optional
        The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
    retentionPeriod : float, default is Undefined, optional
        The number of days to retain automated snapshots in the destination region after they are copied from the source region. Defaults to 7.
    """


    destinationRegion?: str

    grantName?: str

    retentionPeriod?: float


schema RedshiftAwsUpboundIoV1beta1ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


