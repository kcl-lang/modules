"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LBListenerRule:
    r"""
    LBListenerRule is the Schema for the LBListenerRules API. Provides a Load Balancer Listener Rule resource.

    Attributes
    ----------
    apiVersion : str, default is "elbv2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LBListenerRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpec, default is Undefined, required
        spec
    status : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "elbv2.aws.upbound.io/v1beta2" = "elbv2.aws.upbound.io/v1beta2"

    kind: "LBListenerRule" = "LBListenerRule"

    metadata?: v1.ObjectMeta

    spec: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpec

    status?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatus


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpec:
    r"""
    LBListenerRuleSpec defines the desired state of LBListenerRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProvider

    initProvider?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecWriteConnectionSecretToRef


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProvider:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec for provider

    Attributes
    ----------
    action : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0], default is Undefined, optional
        An Action block. Action blocks are documented below.
    condition : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0], default is Undefined, optional
        A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.
    listenerArn : str, default is Undefined, optional
        The ARN of the listener to which to attach the rule.
    listenerArnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnRef, default is Undefined, optional
        listener arn ref
    listenerArnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnSelector, default is Undefined, optional
        listener arn selector
    priority : float, default is Undefined, optional
        The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    action?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0]

    condition?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0]

    listenerArn?: str

    listenerArnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnRef

    listenerArnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnSelector

    priority?: float

    region: str

    tags?: {str:str}


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec for provider action items0

    Attributes
    ----------
    authenticateCognito : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognito, default is Undefined, optional
        authenticate cognito
    authenticateOidc : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateOidc, default is Undefined, optional
        authenticate oidc
    fixedResponse : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0FixedResponse, default is Undefined, optional
        fixed response
    forward : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0Forward, default is Undefined, optional
        forward
    order : float, default is Undefined, optional
        Order for the action.
        The action with the lowest value for order is performed first.
        Valid values are between 1 and 50000.
        Defaults to the position in the list of actions.
    redirect : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0Redirect, default is Undefined, optional
        redirect
    targetGroupArn : str, default is Undefined, optional
        ARN of the Target Group to which to route traffic.
        Specify only if type is forward and you want to route to a single target group.
        To route to one or more target groups, use a forward block instead.
        Cannot be specified with forward.
    targetGroupArnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnRef, default is Undefined, optional
        target group arn ref
    targetGroupArnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnSelector, default is Undefined, optional
        target group arn selector
    $type : str, default is Undefined, optional
        The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.
    """


    authenticateCognito?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognito

    authenticateOidc?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateOidc

    fixedResponse?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0FixedResponse

    forward?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0Forward

    order?: float

    redirect?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0Redirect

    targetGroupArn?: str

    targetGroupArnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnRef

    targetGroupArnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnSelector

    $type?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognito:
    r"""
    Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    onUnauthenticatedRequest : str, default is Undefined, optional
        The behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        The set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        The name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        The maximum duration of the authentication session, in seconds.
    userPoolArn : str, default is Undefined, optional
        The ARN of the Cognito user pool.
    userPoolArnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnRef, default is Undefined, optional
        user pool arn ref
    userPoolArnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnSelector, default is Undefined, optional
        user pool arn selector
    userPoolClientId : str, default is Undefined, optional
        The ID of the Cognito user pool client.
    userPoolClientIdRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDRef, default is Undefined, optional
        user pool client Id ref
    userPoolClientIdSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDSelector, default is Undefined, optional
        user pool client Id selector
    userPoolDomain : str, default is Undefined, optional
        The domain prefix or fully-qualified domain name of the Cognito user pool.
    userPoolDomainRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainRef, default is Undefined, optional
        user pool domain ref
    userPoolDomainSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainSelector, default is Undefined, optional
        user pool domain selector
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    userPoolArn?: str

    userPoolArnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnRef

    userPoolArnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnSelector

    userPoolClientId?: str

    userPoolClientIdRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDRef

    userPoolClientIdSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDSelector

    userPoolDomain?: str

    userPoolDomainRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainRef

    userPoolDomainSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainSelector


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnRef:
    r"""
    Reference to a UserPool in cognitoidp to populate userPoolArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnSelector:
    r"""
    Selector for a UserPool in cognitoidp to populate userPoolArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDRef:
    r"""
    Reference to a UserPoolClient in cognitoidp to populate userPoolClientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDSelector:
    r"""
    Selector for a UserPoolClient in cognitoidp to populate userPoolClientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainRef:
    r"""
    Reference to a UserPoolDomain in cognitoidp to populate userPoolDomain.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainSelector:
    r"""
    Selector for a UserPoolDomain in cognitoidp to populate userPoolDomain.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateCognitoUserPoolDomainSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateOidc:
    r"""
    Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    authorizationEndpoint : str, default is Undefined, optional
        The authorization endpoint of the IdP.
    clientId : str, default is Undefined, optional
        The OAuth 2.0 client identifier.
    clientSecretSecretRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateOidcClientSecretSecretRef, default is Undefined, optional
        client secret secret ref
    issuer : str, default is Undefined, optional
        The OIDC issuer identifier of the IdP.
    onUnauthenticatedRequest : str, default is Undefined, optional
        The behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        The set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        The name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        The maximum duration of the authentication session, in seconds.
    tokenEndpoint : str, default is Undefined, optional
        The token endpoint of the IdP.
    userInfoEndpoint : str, default is Undefined, optional
        The user info endpoint of the IdP.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    clientSecretSecretRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateOidcClientSecretSecretRef

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0AuthenticateOidcClientSecretSecretRef:
    r"""
    The OAuth 2.0 client secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0FixedResponse:
    r"""
    Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.
    messageBody : str, default is Undefined, optional
        The message body.
    statusCode : str, default is Undefined, optional
        The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0Forward:
    r"""
    Configuration block for creating an action that distributes requests among one or more target groups.
    Specify only if type is forward.
    Cannot be specified with target_group_arn.

    Attributes
    ----------
    stickiness : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardStickiness, default is Undefined, optional
        stickiness
    targetGroup : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0], default is Undefined, optional
        One or more target group blocks.
    """


    stickiness?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardStickiness

    targetGroup?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardStickiness:
    r"""
    The target group stickiness for the rule.

    Attributes
    ----------
    duration : float, default is Undefined, optional
        The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
    enabled : bool, default is Undefined, optional
        Indicates whether target group stickiness is enabled.
    """


    duration?: float

    enabled?: bool


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec for provider action items0 forward target group items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target group.
    arnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnSelector, default is Undefined, optional
        arn selector
    weight : float, default is Undefined, optional
        The weight. The range is 0 to 999.
    """


    arn?: str

    arnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnRef

    arnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnSelector

    weight?: float


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0ForwardTargetGroupItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0Redirect:
    r"""
    Information for creating a redirect action. Required if type is redirect.

    Attributes
    ----------
    host : str, default is Undefined, optional
        The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.
    path : str, default is Undefined, optional
        The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.
    port : str, default is Undefined, optional
        The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.
    $protocol : str, default is Undefined, optional
        The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.
    query : str, default is Undefined, optional
        The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.
    statusCode : str, default is Undefined, optional
        The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderActionItems0TargetGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec for provider condition items0

    Attributes
    ----------
    hostHeader : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HostHeader, default is Undefined, optional
        host header
    httpHeader : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HTTPHeader, default is Undefined, optional
        http header
    httpRequestMethod : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HTTPRequestMethod, default is Undefined, optional
        http request method
    pathPattern : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0PathPattern, default is Undefined, optional
        path pattern
    queryString : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0QueryStringItems0], default is Undefined, optional
        Query strings to match. Query String block fields documented below.
    sourceIp : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0SourceIP, default is Undefined, optional
        source Ip
    """


    hostHeader?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HostHeader

    httpHeader?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HTTPHeader

    httpRequestMethod?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HTTPRequestMethod

    pathPattern?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0PathPattern

    queryString?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0QueryStringItems0]

    sourceIp?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0SourceIP


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HTTPHeader:
    r"""
    HTTP headers to match. HTTP Header block fields documented below.

    Attributes
    ----------
    httpHeaderName : str, default is Undefined, optional
        Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.
    values : [str], default is Undefined, optional
        List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
    """


    httpHeaderName?: str

    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HTTPRequestMethod:
    r"""
    Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0HostHeader:
    r"""
    Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0PathPattern:
    r"""
    Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0QueryStringItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec for provider condition items0 query string items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Query string key pattern to match.
    value : str, default is Undefined, optional
        Query string value pattern to match.
    """


    key?: str

    value?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderConditionItems0SourceIP:
    r"""
    Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnRef:
    r"""
    Reference to a LBListener in elbv2 to populate listenerArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnSelector:
    r"""
    Selector for a LBListener in elbv2 to populate listenerArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecForProviderListenerArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    action : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0], default is Undefined, optional
        An Action block. Action blocks are documented below.
    condition : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0], default is Undefined, optional
        A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.
    listenerArn : str, default is Undefined, optional
        The ARN of the listener to which to attach the rule.
    listenerArnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnRef, default is Undefined, optional
        listener arn ref
    listenerArnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnSelector, default is Undefined, optional
        listener arn selector
    priority : float, default is Undefined, optional
        The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    action?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0]

    condition?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0]

    listenerArn?: str

    listenerArnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnRef

    listenerArnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnSelector

    priority?: float

    tags?: {str:str}


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec init provider action items0

    Attributes
    ----------
    authenticateCognito : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognito, default is Undefined, optional
        authenticate cognito
    authenticateOidc : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateOidc, default is Undefined, optional
        authenticate oidc
    fixedResponse : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0FixedResponse, default is Undefined, optional
        fixed response
    forward : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0Forward, default is Undefined, optional
        forward
    order : float, default is Undefined, optional
        Order for the action.
        The action with the lowest value for order is performed first.
        Valid values are between 1 and 50000.
        Defaults to the position in the list of actions.
    redirect : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0Redirect, default is Undefined, optional
        redirect
    targetGroupArn : str, default is Undefined, optional
        ARN of the Target Group to which to route traffic.
        Specify only if type is forward and you want to route to a single target group.
        To route to one or more target groups, use a forward block instead.
        Cannot be specified with forward.
    targetGroupArnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnRef, default is Undefined, optional
        target group arn ref
    targetGroupArnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnSelector, default is Undefined, optional
        target group arn selector
    $type : str, default is Undefined, optional
        The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.
    """


    authenticateCognito?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognito

    authenticateOidc?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateOidc

    fixedResponse?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0FixedResponse

    forward?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0Forward

    order?: float

    redirect?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0Redirect

    targetGroupArn?: str

    targetGroupArnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnRef

    targetGroupArnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnSelector

    $type?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognito:
    r"""
    Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    onUnauthenticatedRequest : str, default is Undefined, optional
        The behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        The set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        The name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        The maximum duration of the authentication session, in seconds.
    userPoolArn : str, default is Undefined, optional
        The ARN of the Cognito user pool.
    userPoolArnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnRef, default is Undefined, optional
        user pool arn ref
    userPoolArnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnSelector, default is Undefined, optional
        user pool arn selector
    userPoolClientId : str, default is Undefined, optional
        The ID of the Cognito user pool client.
    userPoolClientIdRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDRef, default is Undefined, optional
        user pool client Id ref
    userPoolClientIdSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDSelector, default is Undefined, optional
        user pool client Id selector
    userPoolDomain : str, default is Undefined, optional
        The domain prefix or fully-qualified domain name of the Cognito user pool.
    userPoolDomainRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainRef, default is Undefined, optional
        user pool domain ref
    userPoolDomainSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainSelector, default is Undefined, optional
        user pool domain selector
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    userPoolArn?: str

    userPoolArnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnRef

    userPoolArnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnSelector

    userPoolClientId?: str

    userPoolClientIdRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDRef

    userPoolClientIdSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDSelector

    userPoolDomain?: str

    userPoolDomainRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainRef

    userPoolDomainSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainSelector


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnRef:
    r"""
    Reference to a UserPool in cognitoidp to populate userPoolArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnSelector:
    r"""
    Selector for a UserPool in cognitoidp to populate userPoolArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDRef:
    r"""
    Reference to a UserPoolClient in cognitoidp to populate userPoolClientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDSelector:
    r"""
    Selector for a UserPoolClient in cognitoidp to populate userPoolClientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainRef:
    r"""
    Reference to a UserPoolDomain in cognitoidp to populate userPoolDomain.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainSelector:
    r"""
    Selector for a UserPoolDomain in cognitoidp to populate userPoolDomain.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateCognitoUserPoolDomainSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateOidc:
    r"""
    Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    authorizationEndpoint : str, default is Undefined, optional
        The authorization endpoint of the IdP.
    clientId : str, default is Undefined, optional
        The OAuth 2.0 client identifier.
    clientSecretSecretRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateOidcClientSecretSecretRef, default is Undefined, required
        client secret secret ref
    issuer : str, default is Undefined, optional
        The OIDC issuer identifier of the IdP.
    onUnauthenticatedRequest : str, default is Undefined, optional
        The behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        The set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        The name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        The maximum duration of the authentication session, in seconds.
    tokenEndpoint : str, default is Undefined, optional
        The token endpoint of the IdP.
    userInfoEndpoint : str, default is Undefined, optional
        The user info endpoint of the IdP.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    clientSecretSecretRef: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateOidcClientSecretSecretRef

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0AuthenticateOidcClientSecretSecretRef:
    r"""
    The OAuth 2.0 client secret.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0FixedResponse:
    r"""
    Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.
    messageBody : str, default is Undefined, optional
        The message body.
    statusCode : str, default is Undefined, optional
        The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0Forward:
    r"""
    Configuration block for creating an action that distributes requests among one or more target groups.
    Specify only if type is forward.
    Cannot be specified with target_group_arn.

    Attributes
    ----------
    stickiness : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardStickiness, default is Undefined, optional
        stickiness
    targetGroup : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0], default is Undefined, optional
        One or more target group blocks.
    """


    stickiness?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardStickiness

    targetGroup?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardStickiness:
    r"""
    The target group stickiness for the rule.

    Attributes
    ----------
    duration : float, default is Undefined, optional
        The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
    enabled : bool, default is Undefined, optional
        Indicates whether target group stickiness is enabled.
    """


    duration?: float

    enabled?: bool


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec init provider action items0 forward target group items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target group.
    arnRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnSelector, default is Undefined, optional
        arn selector
    weight : float, default is Undefined, optional
        The weight. The range is 0 to 999.
    """


    arn?: str

    arnRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnRef

    arnSelector?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnSelector

    weight?: float


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0ForwardTargetGroupItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0Redirect:
    r"""
    Information for creating a redirect action. Required if type is redirect.

    Attributes
    ----------
    host : str, default is Undefined, optional
        The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.
    path : str, default is Undefined, optional
        The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.
    port : str, default is Undefined, optional
        The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.
    $protocol : str, default is Undefined, optional
        The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.
    query : str, default is Undefined, optional
        The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.
    statusCode : str, default is Undefined, optional
        The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnRef:
    r"""
    Reference to a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnSelector:
    r"""
    Selector for a LBTargetGroup in elbv2 to populate targetGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderActionItems0TargetGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec init provider condition items0

    Attributes
    ----------
    hostHeader : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HostHeader, default is Undefined, optional
        host header
    httpHeader : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HTTPHeader, default is Undefined, optional
        http header
    httpRequestMethod : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HTTPRequestMethod, default is Undefined, optional
        http request method
    pathPattern : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0PathPattern, default is Undefined, optional
        path pattern
    queryString : [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0QueryStringItems0], default is Undefined, optional
        Query strings to match. Query String block fields documented below.
    sourceIp : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0SourceIP, default is Undefined, optional
        source Ip
    """


    hostHeader?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HostHeader

    httpHeader?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HTTPHeader

    httpRequestMethod?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HTTPRequestMethod

    pathPattern?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0PathPattern

    queryString?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0QueryStringItems0]

    sourceIp?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0SourceIP


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HTTPHeader:
    r"""
    HTTP headers to match. HTTP Header block fields documented below.

    Attributes
    ----------
    httpHeaderName : str, default is Undefined, optional
        Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.
    values : [str], default is Undefined, optional
        List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
    """


    httpHeaderName?: str

    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HTTPRequestMethod:
    r"""
    Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0HostHeader:
    r"""
    Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0PathPattern:
    r"""
    Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0QueryStringItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule spec init provider condition items0 query string items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Query string key pattern to match.
    value : str, default is Undefined, optional
        Query string value pattern to match.
    """


    key?: str

    value?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderConditionItems0SourceIP:
    r"""
    Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnRef:
    r"""
    Reference to a LBListener in elbv2 to populate listenerArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnSelector:
    r"""
    Selector for a LBListener in elbv2 to populate listenerArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnSelectorPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecInitProviderListenerArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecProviderConfigRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatus:
    r"""
    LBListenerRuleStatus defines the observed state of LBListenerRule.

    Attributes
    ----------
    atProvider : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProvider

    conditions?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusConditionsItems0]

    observedGeneration?: int


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProvider:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule status at provider

    Attributes
    ----------
    action : [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0], default is Undefined, optional
        An Action block. Action blocks are documented below.
    arn : str, default is Undefined, optional
        The ARN of the rule (matches id)
    condition : [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0], default is Undefined, optional
        A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.
    id : str, default is Undefined, optional
        The ARN of the rule (matches arn)
    listenerArn : str, default is Undefined, optional
        The ARN of the listener to which to attach the rule.
    priority : float, default is Undefined, optional
        The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    action?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0]

    arn?: str

    condition?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0]

    id?: str

    listenerArn?: str

    priority?: float

    tags?: {str:str}

    tagsAll?: {str:str}


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule status at provider action items0

    Attributes
    ----------
    authenticateCognito : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0AuthenticateCognito, default is Undefined, optional
        authenticate cognito
    authenticateOidc : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0AuthenticateOidc, default is Undefined, optional
        authenticate oidc
    fixedResponse : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0FixedResponse, default is Undefined, optional
        fixed response
    forward : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0Forward, default is Undefined, optional
        forward
    order : float, default is Undefined, optional
        Order for the action.
        The action with the lowest value for order is performed first.
        Valid values are between 1 and 50000.
        Defaults to the position in the list of actions.
    redirect : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0Redirect, default is Undefined, optional
        redirect
    targetGroupArn : str, default is Undefined, optional
        ARN of the Target Group to which to route traffic.
        Specify only if type is forward and you want to route to a single target group.
        To route to one or more target groups, use a forward block instead.
        Cannot be specified with forward.
    $type : str, default is Undefined, optional
        The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.
    """


    authenticateCognito?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0AuthenticateCognito

    authenticateOidc?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0AuthenticateOidc

    fixedResponse?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0FixedResponse

    forward?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0Forward

    order?: float

    redirect?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0Redirect

    targetGroupArn?: str

    $type?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0AuthenticateCognito:
    r"""
    Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    onUnauthenticatedRequest : str, default is Undefined, optional
        The behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        The set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        The name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        The maximum duration of the authentication session, in seconds.
    userPoolArn : str, default is Undefined, optional
        The ARN of the Cognito user pool.
    userPoolClientId : str, default is Undefined, optional
        The ID of the Cognito user pool client.
    userPoolDomain : str, default is Undefined, optional
        The domain prefix or fully-qualified domain name of the Cognito user pool.
    """


    authenticationRequestExtraParams?: {str:str}

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    userPoolArn?: str

    userPoolClientId?: str

    userPoolDomain?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0AuthenticateOidc:
    r"""
    Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.

    Attributes
    ----------
    authenticationRequestExtraParams : {str:str}, default is Undefined, optional
        The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
    authorizationEndpoint : str, default is Undefined, optional
        The authorization endpoint of the IdP.
    clientId : str, default is Undefined, optional
        The OAuth 2.0 client identifier.
    issuer : str, default is Undefined, optional
        The OIDC issuer identifier of the IdP.
    onUnauthenticatedRequest : str, default is Undefined, optional
        The behavior if the user is not authenticated. Valid values: deny, allow and authenticate
    scope : str, default is Undefined, optional
        The set of user claims to be requested from the IdP.
    sessionCookieName : str, default is Undefined, optional
        The name of the cookie used to maintain session information.
    sessionTimeout : float, default is Undefined, optional
        The maximum duration of the authentication session, in seconds.
    tokenEndpoint : str, default is Undefined, optional
        The token endpoint of the IdP.
    userInfoEndpoint : str, default is Undefined, optional
        The user info endpoint of the IdP.
    """


    authenticationRequestExtraParams?: {str:str}

    authorizationEndpoint?: str

    clientId?: str

    issuer?: str

    onUnauthenticatedRequest?: str

    scope?: str

    sessionCookieName?: str

    sessionTimeout?: float

    tokenEndpoint?: str

    userInfoEndpoint?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0FixedResponse:
    r"""
    Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.
    messageBody : str, default is Undefined, optional
        The message body.
    statusCode : str, default is Undefined, optional
        The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    contentType?: str

    messageBody?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0Forward:
    r"""
    Configuration block for creating an action that distributes requests among one or more target groups.
    Specify only if type is forward.
    Cannot be specified with target_group_arn.

    Attributes
    ----------
    stickiness : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0ForwardStickiness, default is Undefined, optional
        stickiness
    targetGroup : [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0ForwardTargetGroupItems0], default is Undefined, optional
        One or more target group blocks.
    """


    stickiness?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0ForwardStickiness

    targetGroup?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0ForwardTargetGroupItems0]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0ForwardStickiness:
    r"""
    The target group stickiness for the rule.

    Attributes
    ----------
    duration : float, default is Undefined, optional
        The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).
    enabled : bool, default is Undefined, optional
        Indicates whether target group stickiness is enabled.
    """


    duration?: float

    enabled?: bool


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0ForwardTargetGroupItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule status at provider action items0 forward target group items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the target group.
    weight : float, default is Undefined, optional
        The weight. The range is 0 to 999.
    """


    arn?: str

    weight?: float


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderActionItems0Redirect:
    r"""
    Information for creating a redirect action. Required if type is redirect.

    Attributes
    ----------
    host : str, default is Undefined, optional
        The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.
    path : str, default is Undefined, optional
        The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.
    port : str, default is Undefined, optional
        The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.
    $protocol : str, default is Undefined, optional
        The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.
    query : str, default is Undefined, optional
        The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to #{query}.
    statusCode : str, default is Undefined, optional
        The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).
    """


    host?: str

    path?: str

    port?: str

    $protocol?: str

    query?: str

    statusCode?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule status at provider condition items0

    Attributes
    ----------
    hostHeader : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HostHeader, default is Undefined, optional
        host header
    httpHeader : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HTTPHeader, default is Undefined, optional
        http header
    httpRequestMethod : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HTTPRequestMethod, default is Undefined, optional
        http request method
    pathPattern : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0PathPattern, default is Undefined, optional
        path pattern
    queryString : [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0QueryStringItems0], default is Undefined, optional
        Query strings to match. Query String block fields documented below.
    sourceIp : Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0SourceIP, default is Undefined, optional
        source Ip
    """


    hostHeader?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HostHeader

    httpHeader?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HTTPHeader

    httpRequestMethod?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HTTPRequestMethod

    pathPattern?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0PathPattern

    queryString?: [Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0QueryStringItems0]

    sourceIp?: Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0SourceIP


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HTTPHeader:
    r"""
    HTTP headers to match. HTTP Header block fields documented below.

    Attributes
    ----------
    httpHeaderName : str, default is Undefined, optional
        Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.
    values : [str], default is Undefined, optional
        List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
    """


    httpHeaderName?: str

    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HTTPRequestMethod:
    r"""
    Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0HostHeader:
    r"""
    Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0PathPattern:
    r"""
    Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0QueryStringItems0:
    r"""
    elbv2 aws upbound io v1beta2 l b listener rule status at provider condition items0 query string items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Query string key pattern to match.
    value : str, default is Undefined, optional
        Query string value pattern to match.
    """


    key?: str

    value?: str


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusAtProviderConditionItems0SourceIP:
    r"""
    Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.

    Attributes
    ----------
    values : [str], default is Undefined, optional
        Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\). Only one pair needs to match for the condition to be satisfied.
    """


    values?: [str]


schema Elbv2AwsUpboundIoV1beta2LBListenerRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


