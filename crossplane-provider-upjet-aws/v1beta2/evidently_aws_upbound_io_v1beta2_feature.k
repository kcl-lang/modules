"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Feature:
    r"""
    Feature is the Schema for the Features API. Provides a CloudWatch Evidently Feature resource.

    Attributes
    ----------
    apiVersion : str, default is "evidently.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Feature", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EvidentlyAwsUpboundIoV1beta2FeatureSpec, default is Undefined, required
        spec
    status : EvidentlyAwsUpboundIoV1beta2FeatureStatus, default is Undefined, optional
        status
    """


    apiVersion: "evidently.aws.upbound.io/v1beta2" = "evidently.aws.upbound.io/v1beta2"

    kind: "Feature" = "Feature"

    metadata?: v1.ObjectMeta

    spec: EvidentlyAwsUpboundIoV1beta2FeatureSpec

    status?: EvidentlyAwsUpboundIoV1beta2FeatureStatus


schema EvidentlyAwsUpboundIoV1beta2FeatureSpec:
    r"""
    FeatureSpec defines the desired state of Feature

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EvidentlyAwsUpboundIoV1beta2FeatureSpecForProvider, default is Undefined, required
        for provider
    initProvider : EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EvidentlyAwsUpboundIoV1beta2FeatureSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EvidentlyAwsUpboundIoV1beta2FeatureSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EvidentlyAwsUpboundIoV1beta2FeatureSpecForProvider

    initProvider?: EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EvidentlyAwsUpboundIoV1beta2FeatureSpecProviderConfigRef

    publishConnectionDetailsTo?: EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EvidentlyAwsUpboundIoV1beta2FeatureSpecWriteConnectionSecretToRef


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProvider:
    r"""
    evidently aws upbound io v1beta2 feature spec for provider

    Attributes
    ----------
    defaultVariation : str, default is Undefined, optional
        The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature. This variation must also be listed in the variations structure. If you omit default_variation, the first variation listed in the variations structure is used as the default variation.
    description : str, default is Undefined, optional
        Specifies the description of the feature.
    entityOverrides : {str:str}, default is Undefined, optional
        Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.
    evaluationStrategy : str, default is Undefined, optional
        Specify ALL_RULES to activate the traffic allocation specified by any ongoing launches or experiments. Specify DEFAULT_VARIATION to serve the default variation to all users instead.
    project : str, default is Undefined, optional
        The name or ARN of the project that is to contain the new feature.
    projectRef : EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectRef, default is Undefined, optional
        project ref
    projectSelector : EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectSelector, default is Undefined, optional
        project selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    variations : [EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderVariationsItems0], default is Undefined, optional
        One or more blocks that contain the configuration of the feature's different variations. Detailed below
    """


    defaultVariation?: str

    description?: str

    entityOverrides?: {str:str}

    evaluationStrategy?: str

    project?: str

    projectRef?: EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectRef

    projectSelector?: EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectSelector

    region: str

    tags?: {str:str}

    variations?: [EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderVariationsItems0]


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectRef:
    r"""
    Reference to a Project in evidently to populate project.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectRefPolicy


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectSelector:
    r"""
    Selector for a Project in evidently to populate project.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectSelectorPolicy


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderProjectSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderVariationsItems0:
    r"""
    evidently aws upbound io v1beta2 feature spec for provider variations items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the variation. Minimum length of 1. Maximum length of 127.
    value : EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderVariationsItems0Value, default is Undefined, optional
        value
    """


    name?: str

    value?: EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderVariationsItems0Value


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecForProviderVariationsItems0Value:
    r"""
    A block that specifies the value assigned to this variation. Detailed below

    Attributes
    ----------
    boolValue : str, default is Undefined, optional
        If this feature uses the Boolean variation type, this field contains the Boolean value of this variation.
    doubleValue : str, default is Undefined, optional
        If this feature uses the double integer variation type, this field contains the double integer value of this variation.
    longValue : str, default is Undefined, optional
        If this feature uses the long variation type, this field contains the long value of this variation. Minimum value of -9007199254740991. Maximum value of 9007199254740991.
    stringValue : str, default is Undefined, optional
        If this feature uses the string variation type, this field contains the string value of this variation. Minimum length of 0. Maximum length of 512.
    """


    boolValue?: str

    doubleValue?: str

    longValue?: str

    stringValue?: str


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultVariation : str, default is Undefined, optional
        The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature. This variation must also be listed in the variations structure. If you omit default_variation, the first variation listed in the variations structure is used as the default variation.
    description : str, default is Undefined, optional
        Specifies the description of the feature.
    entityOverrides : {str:str}, default is Undefined, optional
        Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.
    evaluationStrategy : str, default is Undefined, optional
        Specify ALL_RULES to activate the traffic allocation specified by any ongoing launches or experiments. Specify DEFAULT_VARIATION to serve the default variation to all users instead.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    variations : [EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProviderVariationsItems0], default is Undefined, optional
        One or more blocks that contain the configuration of the feature's different variations. Detailed below
    """


    defaultVariation?: str

    description?: str

    entityOverrides?: {str:str}

    evaluationStrategy?: str

    tags?: {str:str}

    variations?: [EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProviderVariationsItems0]


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProviderVariationsItems0:
    r"""
    evidently aws upbound io v1beta2 feature spec init provider variations items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the variation. Minimum length of 1. Maximum length of 127.
    value : EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProviderVariationsItems0Value, default is Undefined, optional
        value
    """


    name?: str

    value?: EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProviderVariationsItems0Value


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecInitProviderVariationsItems0Value:
    r"""
    A block that specifies the value assigned to this variation. Detailed below

    Attributes
    ----------
    boolValue : str, default is Undefined, optional
        If this feature uses the Boolean variation type, this field contains the Boolean value of this variation.
    doubleValue : str, default is Undefined, optional
        If this feature uses the double integer variation type, this field contains the double integer value of this variation.
    longValue : str, default is Undefined, optional
        If this feature uses the long variation type, this field contains the long value of this variation. Minimum value of -9007199254740991. Maximum value of 9007199254740991.
    stringValue : str, default is Undefined, optional
        If this feature uses the string variation type, this field contains the string value of this variation. Minimum length of 0. Maximum length of 512.
    """


    boolValue?: str

    doubleValue?: str

    longValue?: str

    stringValue?: str


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EvidentlyAwsUpboundIoV1beta2FeatureSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EvidentlyAwsUpboundIoV1beta2FeatureSpecProviderConfigRefPolicy


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToConfigRef

    metadata?: EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToMetadata

    name: str


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToConfigRefPolicy


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EvidentlyAwsUpboundIoV1beta2FeatureSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EvidentlyAwsUpboundIoV1beta2FeatureStatus:
    r"""
    FeatureStatus defines the observed state of Feature.

    Attributes
    ----------
    atProvider : EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EvidentlyAwsUpboundIoV1beta2FeatureStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProvider

    conditions?: [EvidentlyAwsUpboundIoV1beta2FeatureStatusConditionsItems0]

    observedGeneration?: int


schema EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProvider:
    r"""
    evidently aws upbound io v1beta2 feature status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the feature.
    createdTime : str, default is Undefined, optional
        The date and time that the feature is created.
    defaultVariation : str, default is Undefined, optional
        The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature. This variation must also be listed in the variations structure. If you omit default_variation, the first variation listed in the variations structure is used as the default variation.
    description : str, default is Undefined, optional
        Specifies the description of the feature.
    entityOverrides : {str:str}, default is Undefined, optional
        Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.
    evaluationRules : [EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderEvaluationRulesItems0], default is Undefined, optional
        One or more blocks that define the evaluation rules for the feature. Detailed below
    evaluationStrategy : str, default is Undefined, optional
        Specify ALL_RULES to activate the traffic allocation specified by any ongoing launches or experiments. Specify DEFAULT_VARIATION to serve the default variation to all users instead.
    id : str, default is Undefined, optional
        The feature name and the project name or arn separated by a colon (:).
    lastUpdatedTime : str, default is Undefined, optional
        The date and time that the feature was most recently updated.
    project : str, default is Undefined, optional
        The name or ARN of the project that is to contain the new feature.
    status : str, default is Undefined, optional
        The current state of the feature. Valid values are AVAILABLE and UPDATING.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    valueType : str, default is Undefined, optional
        Defines the type of value used to define the different feature variations. Valid Values: STRING, LONG, DOUBLE, BOOLEAN.
    variations : [EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderVariationsItems0], default is Undefined, optional
        One or more blocks that contain the configuration of the feature's different variations. Detailed below
    """


    arn?: str

    createdTime?: str

    defaultVariation?: str

    description?: str

    entityOverrides?: {str:str}

    evaluationRules?: [EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderEvaluationRulesItems0]

    evaluationStrategy?: str

    id?: str

    lastUpdatedTime?: str

    project?: str

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    valueType?: str

    variations?: [EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderVariationsItems0]


schema EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderEvaluationRulesItems0:
    r"""
    evidently aws upbound io v1beta2 feature status at provider evaluation rules items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the experiment or launch.
    $type : str, default is Undefined, optional
        This value is aws.evidently.splits if this is an evaluation rule for a launch, and it is aws.evidently.onlineab if this is an evaluation rule for an experiment.
    """


    name?: str

    $type?: str


schema EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderVariationsItems0:
    r"""
    evidently aws upbound io v1beta2 feature status at provider variations items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the variation. Minimum length of 1. Maximum length of 127.
    value : EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderVariationsItems0Value, default is Undefined, optional
        value
    """


    name?: str

    value?: EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderVariationsItems0Value


schema EvidentlyAwsUpboundIoV1beta2FeatureStatusAtProviderVariationsItems0Value:
    r"""
    A block that specifies the value assigned to this variation. Detailed below

    Attributes
    ----------
    boolValue : str, default is Undefined, optional
        If this feature uses the Boolean variation type, this field contains the Boolean value of this variation.
    doubleValue : str, default is Undefined, optional
        If this feature uses the double integer variation type, this field contains the double integer value of this variation.
    longValue : str, default is Undefined, optional
        If this feature uses the long variation type, this field contains the long value of this variation. Minimum value of -9007199254740991. Maximum value of 9007199254740991.
    stringValue : str, default is Undefined, optional
        If this feature uses the string variation type, this field contains the string value of this variation. Minimum length of 0. Maximum length of 512.
    """


    boolValue?: str

    doubleValue?: str

    longValue?: str

    stringValue?: str


schema EvidentlyAwsUpboundIoV1beta2FeatureStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


