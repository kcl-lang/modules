"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RuleGroup:
    r"""
    RuleGroup is the Schema for the RuleGroups API. Provides an AWS Network Firewall Rule Group resource.

    Attributes
    ----------
    apiVersion : str, default is "networkfirewall.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RuleGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpec, default is Undefined, required
        spec
    status : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkfirewall.aws.upbound.io/v1beta2" = "networkfirewall.aws.upbound.io/v1beta2"

    kind: "RuleGroup" = "RuleGroup"

    metadata?: v1.ObjectMeta

    spec: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpec

    status?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatus


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpec:
    r"""
    RuleGroupSpec defines the desired state of RuleGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProvider

    initProvider?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecWriteConnectionSecretToRef


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProvider:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider

    Attributes
    ----------
    capacity : float, default is Undefined, optional
        The maximum number of operating resources that this rule group can use. For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules. For a stateful rule group, the minimum capacity required is the number of individual rules.
    description : str, default is Undefined, optional
        A friendly description of the rule group.
    encryptionConfiguration : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    name : str, default is Undefined, optional
        A friendly name of the rule group.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    ruleGroup : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroup, default is Undefined, optional
        rule group
    rules : str, default is Undefined, optional
        The stateful rule group rules specifications in Suricata file format, with one rule per line. Use this to import your existing Suricata compatible rule groups. Required unless rule_group is specified.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Whether the rule group is stateless (containing stateless rules) or stateful (containing stateful rules). Valid values include: STATEFUL or STATELESS.
    """


    capacity?: float

    description?: str

    encryptionConfiguration?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderEncryptionConfiguration

    name?: str

    region: str

    ruleGroup?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroup

    rules?: str

    tags?: {str:str}

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderEncryptionConfiguration:
    r"""
    KMS encryption configuration settings. See Encryption Configuration below for details.

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroup:
    r"""
    A configuration block that defines the rule group rules. Required unless rules is specified. See Rule Group below for details.

    Attributes
    ----------
    referenceSets : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSets, default is Undefined, optional
        reference sets
    ruleVariables : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariables, default is Undefined, optional
        rule variables
    rulesSource : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSource, default is Undefined, optional
        rules source
    statefulRuleOptions : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupStatefulRuleOptions, default is Undefined, optional
        stateful rule options
    """


    referenceSets?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSets

    ruleVariables?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariables

    rulesSource?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSource

    statefulRuleOptions?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupStatefulRuleOptions


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSets:
    r"""
    A configuration block that defines the IP Set References for the rule group. See Reference Sets below for details. Please notes that there can only be a maximum of 5 reference_sets in a rule_group. See the AWS documentation for details.

    Attributes
    ----------
    ipSetReferences : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0], default is Undefined, optional
        ip set references
    """


    ipSetReferences?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group reference sets IP set references items0

    Attributes
    ----------
    ipSetReference : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0], default is Undefined, optional
        Set of configuration blocks that define the IP Reference information. See IP Set Reference below for details.
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    """


    ipSetReference?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0]

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group reference sets IP set references items0 IP set reference items0

    Attributes
    ----------
    referenceArn : str, default is Undefined, optional
        Set of Managed Prefix IP ARN(s)
    referenceArnRef : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRef, default is Undefined, optional
        reference arn ref
    referenceArnSelector : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelector, default is Undefined, optional
        reference arn selector
    """


    referenceArn?: str

    referenceArnRef?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRef

    referenceArnSelector?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelector


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRef:
    r"""
    Reference to a ManagedPrefixList in ec2 to populate referenceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelector:
    r"""
    Selector for a ManagedPrefixList in ec2 to populate referenceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariables:
    r"""
    A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for stateful rule groups. See Rule Variables below for details.

    Attributes
    ----------
    ipSets : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesIPSetsItems0], default is Undefined, optional
        Set of configuration blocks that define IP address information. See IP Sets below for details.
    portSets : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesPortSetsItems0], default is Undefined, optional
        Set of configuration blocks that define port range information. See Port Sets below for details.
    """


    ipSets?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesIPSetsItems0]

    portSets?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesPortSetsItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesIPSetsItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rule variables IP sets items0

    Attributes
    ----------
    ipSet : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesIPSetsItems0IPSet, default is Undefined, optional
        ip set
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    """


    ipSet?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesIPSetsItems0IPSet

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesIPSetsItems0IPSet:
    r"""
    A configuration block that defines a set of IP addresses. See IP Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of port ranges.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesPortSetsItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rule variables port sets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    portSet : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesPortSetsItems0PortSet, default is Undefined, optional
        port set
    """


    key?: str

    portSet?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesPortSetsItems0PortSet


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRuleVariablesPortSetsItems0PortSet:
    r"""
    A configuration block that defines a set of port ranges. See Port Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of port ranges.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSource:
    r"""
    A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.

    Attributes
    ----------
    rulesSourceList : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceRulesSourceList, default is Undefined, optional
        rules source list
    rulesString : str, default is Undefined, optional
        The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain stateful inspection criteria and the action to take for traffic that matches the criteria.
    statefulRule : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0], default is Undefined, optional
        Set of configuration blocks containing stateful inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.
    statelessRulesAndCustomActions : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActions, default is Undefined, optional
        stateless rules and custom actions
    """


    rulesSourceList?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceRulesSourceList

    rulesString?: str

    statefulRule?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0]

    statelessRulesAndCustomActions?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActions


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceRulesSourceList:
    r"""
    A configuration block containing stateful inspection criteria for a domain list rule group. See Rules Source List below for details.

    Attributes
    ----------
    generatedRulesType : str, default is Undefined, optional
        String value to specify whether domains in the target list are allowed or denied access. Valid values: ALLOWLIST, DENYLIST.
    targetTypes : [str], default is Undefined, optional
        Set of types of domain specifications that are provided in the targets argument. Valid values: HTTP_HOST, TLS_SNI.
    targets : [str], default is Undefined, optional
        Set of domains that you want to inspect for in your traffic flows.
    """


    generatedRulesType?: str

    targetTypes?: [str]

    targets?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateful rule items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: ALERT, DROP, PASS, or REJECT.
    header : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0Header, default is Undefined, optional
        header
    ruleOption : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0], default is Undefined, optional
        Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
    """


    action?: str

    header?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0Header

    ruleOption?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0Header:
    r"""
    A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
    destinationPort : str, default is Undefined, optional
        Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
    direction : str, default is Undefined, optional
        The direction of traffic flow to inspect. Valid values: ANY or FORWARD.
    $protocol : str, default is Undefined, optional
        The protocol to inspect. Valid values: IP, TCP, UDP, ICMP, HTTP, FTP, TLS, SMB, DNS, DCERPC, SSH, SMTP, IMAP, MSN, KRB5, IKEV2, TFTP, NTP, DHCP.
    source : str, default is Undefined, optional
        Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
    sourcePort : str, default is Undefined, optional
        Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
    """


    destination?: str

    destinationPort?: str

    direction?: str

    $protocol?: str

    source?: str

    sourcePort?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateful rule items0 rule option items0

    Attributes
    ----------
    keyword : str, default is Undefined, optional
        Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
        See Snort General Rule Options or Suricata Rule Options for more details.
    settings : [str], default is Undefined, optional
        Set of strings for additional settings to use in stateful rule inspection.
    """


    keyword?: str

    settings?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActions:
    r"""
    A configuration block containing stateless inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.

    Attributes
    ----------
    customAction : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0], default is Undefined, optional
        Set of configuration blocks containing custom action definitions that are available for use by the set of stateless rule. See Custom Action below for details.
    statelessRule : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0], default is Undefined, optional
        Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.
    """


    customAction?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0]

    statelessRule?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions custom action items0

    Attributes
    ----------
    actionDefinition : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition, default is Undefined, optional
        action definition
    actionName : str, default is Undefined, optional
        A friendly name of the custom action.
    """


    actionDefinition?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition

    actionName?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition:
    r"""
    A configuration block describing the custom action associated with the action_name. See Action Definition below for details.

    Attributes
    ----------
    publishMetricAction : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction, default is Undefined, optional
        publish metric action
    """


    publishMetricAction?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction:
    r"""
    A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.

    Attributes
    ----------
    dimension : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0], default is Undefined, optional
        Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.
    """


    dimension?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions custom action items0 action definition publish metric action dimension items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The value to use in the custom metric dimension.
    """


    value?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions stateless rule items0

    Attributes
    ----------
    priority : float, default is Undefined, optional
        A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.
    ruleDefinition : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition, default is Undefined, optional
        rule definition
    """


    priority?: float

    ruleDefinition?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition:
    r"""
    A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        Set of actions to take on a packet that matches one of the stateless rule definition's match_attributes. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: aws:pass, aws:drop, aws:forward_to_sfe.
    matchAttributes : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes, default is Undefined, optional
        match attributes
    """


    actions?: [str]

    matchAttributes?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes:
    r"""
    A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.

    Attributes
    ----------
    destination : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0], default is Undefined, optional
        Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
    destinationPort : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0], default is Undefined, optional
        Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
    protocols : [float], default is Undefined, optional
        Set of protocols to inspect for, specified using the protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol.
    source : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0], default is Undefined, optional
        Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
    sourcePort : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0], default is Undefined, optional
        Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
    tcpFlag : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0], default is Undefined, optional
        Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.
    """


    destination?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0]

    destinationPort?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0]

    protocols?: [float]

    source?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0]

    sourcePort?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0]

    tcpFlag?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes destination items0

    Attributes
    ----------
    addressDefinition : str, default is Undefined, optional
        An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
    """


    addressDefinition?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes destination port items0

    Attributes
    ----------
    fromPort : float, default is Undefined, optional
        The lower limit of the port range. This must be less than or equal to the to_port.
    toPort : float, default is Undefined, optional
        The upper limit of the port range. This must be greater than or equal to the from_port.
    """


    fromPort?: float

    toPort?: float


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes source items0

    Attributes
    ----------
    addressDefinition : str, default is Undefined, optional
        An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
    """


    addressDefinition?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes source port items0

    Attributes
    ----------
    fromPort : float, default is Undefined, optional
        The lower limit of the port range. This must be less than or equal to the to_port.
    toPort : float, default is Undefined, optional
        The upper limit of the port range. This must be greater than or equal to the from_port.
    """


    fromPort?: float

    toPort?: float


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec for provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes TCP flag items0

    Attributes
    ----------
    flags : [str], default is Undefined, optional
        Set of flags to look for in a packet. This setting can only specify values that are also specified in masks.
        Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
    masks : [str], default is Undefined, optional
        Set of flags to consider in the inspection. To inspect all flags, leave this empty.
        Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
    """


    flags?: [str]

    masks?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecForProviderRuleGroupStatefulRuleOptions:
    r"""
    A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.

    Attributes
    ----------
    ruleOrder : str, default is Undefined, optional
        Indicates how to manage the order of the rule evaluation for the rule group. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
    """


    ruleOrder?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    capacity : float, default is Undefined, optional
        The maximum number of operating resources that this rule group can use. For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules. For a stateful rule group, the minimum capacity required is the number of individual rules.
    description : str, default is Undefined, optional
        A friendly description of the rule group.
    encryptionConfiguration : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    name : str, default is Undefined, optional
        A friendly name of the rule group.
    ruleGroup : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroup, default is Undefined, optional
        rule group
    rules : str, default is Undefined, optional
        The stateful rule group rules specifications in Suricata file format, with one rule per line. Use this to import your existing Suricata compatible rule groups. Required unless rule_group is specified.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Whether the rule group is stateless (containing stateless rules) or stateful (containing stateful rules). Valid values include: STATEFUL or STATELESS.
    """


    capacity?: float

    description?: str

    encryptionConfiguration?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderEncryptionConfiguration

    name?: str

    ruleGroup?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroup

    rules?: str

    tags?: {str:str}

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderEncryptionConfiguration:
    r"""
    KMS encryption configuration settings. See Encryption Configuration below for details.

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroup:
    r"""
    A configuration block that defines the rule group rules. Required unless rules is specified. See Rule Group below for details.

    Attributes
    ----------
    referenceSets : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSets, default is Undefined, optional
        reference sets
    ruleVariables : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariables, default is Undefined, optional
        rule variables
    rulesSource : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSource, default is Undefined, optional
        rules source
    statefulRuleOptions : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupStatefulRuleOptions, default is Undefined, optional
        stateful rule options
    """


    referenceSets?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSets

    ruleVariables?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariables

    rulesSource?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSource

    statefulRuleOptions?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupStatefulRuleOptions


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSets:
    r"""
    A configuration block that defines the IP Set References for the rule group. See Reference Sets below for details. Please notes that there can only be a maximum of 5 reference_sets in a rule_group. See the AWS documentation for details.

    Attributes
    ----------
    ipSetReferences : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0], default is Undefined, optional
        ip set references
    """


    ipSetReferences?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group reference sets IP set references items0

    Attributes
    ----------
    ipSetReference : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0], default is Undefined, optional
        Set of configuration blocks that define the IP Reference information. See IP Set Reference below for details.
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    """


    ipSetReference?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0]

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group reference sets IP set references items0 IP set reference items0

    Attributes
    ----------
    referenceArn : str, default is Undefined, optional
        Set of Managed Prefix IP ARN(s)
    referenceArnRef : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRef, default is Undefined, optional
        reference arn ref
    referenceArnSelector : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelector, default is Undefined, optional
        reference arn selector
    """


    referenceArn?: str

    referenceArnRef?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRef

    referenceArnSelector?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelector


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRef:
    r"""
    Reference to a ManagedPrefixList in ec2 to populate referenceArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelector:
    r"""
    Selector for a ManagedPrefixList in ec2 to populate referenceArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0ReferenceArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariables:
    r"""
    A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for stateful rule groups. See Rule Variables below for details.

    Attributes
    ----------
    ipSets : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesIPSetsItems0], default is Undefined, optional
        Set of configuration blocks that define IP address information. See IP Sets below for details.
    portSets : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesPortSetsItems0], default is Undefined, optional
        Set of configuration blocks that define port range information. See Port Sets below for details.
    """


    ipSets?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesIPSetsItems0]

    portSets?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesPortSetsItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesIPSetsItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rule variables IP sets items0

    Attributes
    ----------
    ipSet : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesIPSetsItems0IPSet, default is Undefined, optional
        ip set
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    """


    ipSet?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesIPSetsItems0IPSet

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesIPSetsItems0IPSet:
    r"""
    A configuration block that defines a set of IP addresses. See IP Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of port ranges.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesPortSetsItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rule variables port sets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    portSet : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesPortSetsItems0PortSet, default is Undefined, optional
        port set
    """


    key?: str

    portSet?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesPortSetsItems0PortSet


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRuleVariablesPortSetsItems0PortSet:
    r"""
    A configuration block that defines a set of port ranges. See Port Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of port ranges.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSource:
    r"""
    A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.

    Attributes
    ----------
    rulesSourceList : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceRulesSourceList, default is Undefined, optional
        rules source list
    rulesString : str, default is Undefined, optional
        The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain stateful inspection criteria and the action to take for traffic that matches the criteria.
    statefulRule : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0], default is Undefined, optional
        Set of configuration blocks containing stateful inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.
    statelessRulesAndCustomActions : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActions, default is Undefined, optional
        stateless rules and custom actions
    """


    rulesSourceList?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceRulesSourceList

    rulesString?: str

    statefulRule?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0]

    statelessRulesAndCustomActions?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActions


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceRulesSourceList:
    r"""
    A configuration block containing stateful inspection criteria for a domain list rule group. See Rules Source List below for details.

    Attributes
    ----------
    generatedRulesType : str, default is Undefined, optional
        String value to specify whether domains in the target list are allowed or denied access. Valid values: ALLOWLIST, DENYLIST.
    targetTypes : [str], default is Undefined, optional
        Set of types of domain specifications that are provided in the targets argument. Valid values: HTTP_HOST, TLS_SNI.
    targets : [str], default is Undefined, optional
        Set of domains that you want to inspect for in your traffic flows.
    """


    generatedRulesType?: str

    targetTypes?: [str]

    targets?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateful rule items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: ALERT, DROP, PASS, or REJECT.
    header : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0Header, default is Undefined, optional
        header
    ruleOption : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0], default is Undefined, optional
        Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
    """


    action?: str

    header?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0Header

    ruleOption?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0Header:
    r"""
    A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
    destinationPort : str, default is Undefined, optional
        Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
    direction : str, default is Undefined, optional
        The direction of traffic flow to inspect. Valid values: ANY or FORWARD.
    $protocol : str, default is Undefined, optional
        The protocol to inspect. Valid values: IP, TCP, UDP, ICMP, HTTP, FTP, TLS, SMB, DNS, DCERPC, SSH, SMTP, IMAP, MSN, KRB5, IKEV2, TFTP, NTP, DHCP.
    source : str, default is Undefined, optional
        Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
    sourcePort : str, default is Undefined, optional
        Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
    """


    destination?: str

    destinationPort?: str

    direction?: str

    $protocol?: str

    source?: str

    sourcePort?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateful rule items0 rule option items0

    Attributes
    ----------
    keyword : str, default is Undefined, optional
        Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
        See Snort General Rule Options or Suricata Rule Options for more details.
    settings : [str], default is Undefined, optional
        Set of strings for additional settings to use in stateful rule inspection.
    """


    keyword?: str

    settings?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActions:
    r"""
    A configuration block containing stateless inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.

    Attributes
    ----------
    customAction : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0], default is Undefined, optional
        Set of configuration blocks containing custom action definitions that are available for use by the set of stateless rule. See Custom Action below for details.
    statelessRule : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0], default is Undefined, optional
        Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.
    """


    customAction?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0]

    statelessRule?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions custom action items0

    Attributes
    ----------
    actionDefinition : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition, default is Undefined, optional
        action definition
    actionName : str, default is Undefined, optional
        A friendly name of the custom action.
    """


    actionDefinition?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition

    actionName?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition:
    r"""
    A configuration block describing the custom action associated with the action_name. See Action Definition below for details.

    Attributes
    ----------
    publishMetricAction : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction, default is Undefined, optional
        publish metric action
    """


    publishMetricAction?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction:
    r"""
    A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.

    Attributes
    ----------
    dimension : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0], default is Undefined, optional
        Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.
    """


    dimension?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions custom action items0 action definition publish metric action dimension items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The value to use in the custom metric dimension.
    """


    value?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions stateless rule items0

    Attributes
    ----------
    priority : float, default is Undefined, optional
        A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.
    ruleDefinition : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition, default is Undefined, optional
        rule definition
    """


    priority?: float

    ruleDefinition?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition:
    r"""
    A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        Set of actions to take on a packet that matches one of the stateless rule definition's match_attributes. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: aws:pass, aws:drop, aws:forward_to_sfe.
    matchAttributes : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes, default is Undefined, optional
        match attributes
    """


    actions?: [str]

    matchAttributes?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes:
    r"""
    A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.

    Attributes
    ----------
    destination : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0], default is Undefined, optional
        Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
    destinationPort : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0], default is Undefined, optional
        Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
    protocols : [float], default is Undefined, optional
        Set of protocols to inspect for, specified using the protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol.
    source : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0], default is Undefined, optional
        Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
    sourcePort : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0], default is Undefined, optional
        Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
    tcpFlag : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0], default is Undefined, optional
        Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.
    """


    destination?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0]

    destinationPort?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0]

    protocols?: [float]

    source?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0]

    sourcePort?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0]

    tcpFlag?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes destination items0

    Attributes
    ----------
    addressDefinition : str, default is Undefined, optional
        An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
    """


    addressDefinition?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes destination port items0

    Attributes
    ----------
    fromPort : float, default is Undefined, optional
        The lower limit of the port range. This must be less than or equal to the to_port.
    toPort : float, default is Undefined, optional
        The upper limit of the port range. This must be greater than or equal to the from_port.
    """


    fromPort?: float

    toPort?: float


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes source items0

    Attributes
    ----------
    addressDefinition : str, default is Undefined, optional
        An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
    """


    addressDefinition?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes source port items0

    Attributes
    ----------
    fromPort : float, default is Undefined, optional
        The lower limit of the port range. This must be less than or equal to the to_port.
    toPort : float, default is Undefined, optional
        The upper limit of the port range. This must be greater than or equal to the from_port.
    """


    fromPort?: float

    toPort?: float


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group spec init provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes TCP flag items0

    Attributes
    ----------
    flags : [str], default is Undefined, optional
        Set of flags to look for in a packet. This setting can only specify values that are also specified in masks.
        Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
    masks : [str], default is Undefined, optional
        Set of flags to consider in the inspection. To inspect all flags, leave this empty.
        Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
    """


    flags?: [str]

    masks?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecInitProviderRuleGroupStatefulRuleOptions:
    r"""
    A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.

    Attributes
    ----------
    ruleOrder : str, default is Undefined, optional
        Indicates how to manage the order of the rule evaluation for the rule group. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
    """


    ruleOrder?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecProviderConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatus:
    r"""
    RuleGroupStatus defines the observed state of RuleGroup.

    Attributes
    ----------
    atProvider : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProvider

    conditions?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusConditionsItems0]

    observedGeneration?: int


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProvider:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the rule group.
    capacity : float, default is Undefined, optional
        The maximum number of operating resources that this rule group can use. For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules. For a stateful rule group, the minimum capacity required is the number of individual rules.
    description : str, default is Undefined, optional
        A friendly description of the rule group.
    encryptionConfiguration : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    id : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the rule group.
    name : str, default is Undefined, optional
        A friendly name of the rule group.
    ruleGroup : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroup, default is Undefined, optional
        rule group
    rules : str, default is Undefined, optional
        The stateful rule group rules specifications in Suricata file format, with one rule per line. Use this to import your existing Suricata compatible rule groups. Required unless rule_group is specified.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        Whether the rule group is stateless (containing stateless rules) or stateful (containing stateful rules). Valid values include: STATEFUL or STATELESS.
    updateToken : str, default is Undefined, optional
        A string token used when updating the rule group.
    """


    arn?: str

    capacity?: float

    description?: str

    encryptionConfiguration?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderEncryptionConfiguration

    id?: str

    name?: str

    ruleGroup?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroup

    rules?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    updateToken?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderEncryptionConfiguration:
    r"""
    KMS encryption configuration settings. See Encryption Configuration below for details.

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroup:
    r"""
    A configuration block that defines the rule group rules. Required unless rules is specified. See Rule Group below for details.

    Attributes
    ----------
    referenceSets : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSets, default is Undefined, optional
        reference sets
    ruleVariables : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariables, default is Undefined, optional
        rule variables
    rulesSource : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSource, default is Undefined, optional
        rules source
    statefulRuleOptions : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupStatefulRuleOptions, default is Undefined, optional
        stateful rule options
    """


    referenceSets?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSets

    ruleVariables?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariables

    rulesSource?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSource

    statefulRuleOptions?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupStatefulRuleOptions


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSets:
    r"""
    A configuration block that defines the IP Set References for the rule group. See Reference Sets below for details. Please notes that there can only be a maximum of 5 reference_sets in a rule_group. See the AWS documentation for details.

    Attributes
    ----------
    ipSetReferences : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSetsIPSetReferencesItems0], default is Undefined, optional
        ip set references
    """


    ipSetReferences?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSetsIPSetReferencesItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSetsIPSetReferencesItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group reference sets IP set references items0

    Attributes
    ----------
    ipSetReference : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0], default is Undefined, optional
        Set of configuration blocks that define the IP Reference information. See IP Set Reference below for details.
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    """


    ipSetReference?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0]

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupReferenceSetsIPSetReferencesItems0IPSetReferenceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group reference sets IP set references items0 IP set reference items0

    Attributes
    ----------
    referenceArn : str, default is Undefined, optional
        Set of Managed Prefix IP ARN(s)
    """


    referenceArn?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariables:
    r"""
    A configuration block that defines additional settings available to use in the rules defined in the rule group. Can only be specified for stateful rule groups. See Rule Variables below for details.

    Attributes
    ----------
    ipSets : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesIPSetsItems0], default is Undefined, optional
        Set of configuration blocks that define IP address information. See IP Sets below for details.
    portSets : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesPortSetsItems0], default is Undefined, optional
        Set of configuration blocks that define port range information. See Port Sets below for details.
    """


    ipSets?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesIPSetsItems0]

    portSets?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesPortSetsItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesIPSetsItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rule variables IP sets items0

    Attributes
    ----------
    ipSet : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesIPSetsItems0IPSet, default is Undefined, optional
        ip set
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    """


    ipSet?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesIPSetsItems0IPSet

    key?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesIPSetsItems0IPSet:
    r"""
    A configuration block that defines a set of IP addresses. See IP Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of port ranges.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesPortSetsItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rule variables port sets items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        An unique alphanumeric string to identify the port_set.
    portSet : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesPortSetsItems0PortSet, default is Undefined, optional
        port set
    """


    key?: str

    portSet?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesPortSetsItems0PortSet


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRuleVariablesPortSetsItems0PortSet:
    r"""
    A configuration block that defines a set of port ranges. See Port Set below for details.

    Attributes
    ----------
    definition : [str], default is Undefined, optional
        Set of port ranges.
    """


    definition?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSource:
    r"""
    A configuration block that defines the stateful or stateless rules for the rule group. See Rules Source below for details.

    Attributes
    ----------
    rulesSourceList : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceRulesSourceList, default is Undefined, optional
        rules source list
    rulesString : str, default is Undefined, optional
        The fully qualified name of a file in an S3 bucket that contains Suricata compatible intrusion preventions system (IPS) rules or the Suricata rules as a string. These rules contain stateful inspection criteria and the action to take for traffic that matches the criteria.
    statefulRule : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0], default is Undefined, optional
        Set of configuration blocks containing stateful inspection criteria for 5-tuple rules to be used together in a rule group. See Stateful Rule below for details.
    statelessRulesAndCustomActions : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActions, default is Undefined, optional
        stateless rules and custom actions
    """


    rulesSourceList?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceRulesSourceList

    rulesString?: str

    statefulRule?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0]

    statelessRulesAndCustomActions?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActions


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceRulesSourceList:
    r"""
    A configuration block containing stateful inspection criteria for a domain list rule group. See Rules Source List below for details.

    Attributes
    ----------
    generatedRulesType : str, default is Undefined, optional
        String value to specify whether domains in the target list are allowed or denied access. Valid values: ALLOWLIST, DENYLIST.
    targetTypes : [str], default is Undefined, optional
        Set of types of domain specifications that are provided in the targets argument. Valid values: HTTP_HOST, TLS_SNI.
    targets : [str], default is Undefined, optional
        Set of domains that you want to inspect for in your traffic flows.
    """


    generatedRulesType?: str

    targetTypes?: [str]

    targets?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateful rule items0

    Attributes
    ----------
    action : str, default is Undefined, optional
        Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: ALERT, DROP, PASS, or REJECT.
    header : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0Header, default is Undefined, optional
        header
    ruleOption : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0], default is Undefined, optional
        Set of configuration blocks containing additional settings for a stateful rule. See Rule Option below for details.
    """


    action?: str

    header?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0Header

    ruleOption?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0Header:
    r"""
    A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See Header below for details.

    Attributes
    ----------
    destination : str, default is Undefined, optional
        Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
    destinationPort : str, default is Undefined, optional
        Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
    direction : str, default is Undefined, optional
        The direction of traffic flow to inspect. Valid values: ANY or FORWARD.
    $protocol : str, default is Undefined, optional
        The protocol to inspect. Valid values: IP, TCP, UDP, ICMP, HTTP, FTP, TLS, SMB, DNS, DCERPC, SSH, SMTP, IMAP, MSN, KRB5, IKEV2, TFTP, NTP, DHCP.
    source : str, default is Undefined, optional
        Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
    sourcePort : str, default is Undefined, optional
        Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
    """


    destination?: str

    destinationPort?: str

    direction?: str

    $protocol?: str

    source?: str

    sourcePort?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatefulRuleItems0RuleOptionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateful rule items0 rule option items0

    Attributes
    ----------
    keyword : str, default is Undefined, optional
        Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.
        See Snort General Rule Options or Suricata Rule Options for more details.
    settings : [str], default is Undefined, optional
        Set of strings for additional settings to use in stateful rule inspection.
    """


    keyword?: str

    settings?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActions:
    r"""
    A configuration block containing stateless inspection criteria for a stateless rule group. See Stateless Rules and Custom Actions below for details.

    Attributes
    ----------
    customAction : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0], default is Undefined, optional
        Set of configuration blocks containing custom action definitions that are available for use by the set of stateless rule. See Custom Action below for details.
    statelessRule : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0], default is Undefined, optional
        Set of configuration blocks containing the stateless rules for use in the stateless rule group. See Stateless Rule below for details.
    """


    customAction?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0]

    statelessRule?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions custom action items0

    Attributes
    ----------
    actionDefinition : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition, default is Undefined, optional
        action definition
    actionName : str, default is Undefined, optional
        A friendly name of the custom action.
    """


    actionDefinition?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition

    actionName?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinition:
    r"""
    A configuration block describing the custom action associated with the action_name. See Action Definition below for details.

    Attributes
    ----------
    publishMetricAction : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction, default is Undefined, optional
        publish metric action
    """


    publishMetricAction?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricAction:
    r"""
    A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.

    Attributes
    ----------
    dimension : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0], default is Undefined, optional
        Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for details.
    """


    dimension?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsCustomActionItems0ActionDefinitionPublishMetricActionDimensionItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions custom action items0 action definition publish metric action dimension items0

    Attributes
    ----------
    value : str, default is Undefined, optional
        The value to use in the custom metric dimension.
    """


    value?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions stateless rule items0

    Attributes
    ----------
    priority : float, default is Undefined, optional
        A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.
    ruleDefinition : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition, default is Undefined, optional
        rule definition
    """


    priority?: float

    ruleDefinition?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinition:
    r"""
    A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See Rule Definition below for details.

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        Set of actions to take on a packet that matches one of the stateless rule definition's match_attributes. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: aws:pass, aws:drop, aws:forward_to_sfe.
    matchAttributes : NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes, default is Undefined, optional
        match attributes
    """


    actions?: [str]

    matchAttributes?: NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributes:
    r"""
    A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See Match Attributes below for details.

    Attributes
    ----------
    destination : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0], default is Undefined, optional
        Set of configuration blocks describing the destination IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any destination address. See Destination below for details.
    destinationPort : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0], default is Undefined, optional
        Set of configuration blocks describing the destination ports to inspect for. If not specified, this matches with any destination port. See Destination Port below for details.
    protocols : [float], default is Undefined, optional
        Set of protocols to inspect for, specified using the protocol's assigned internet protocol number (IANA). If not specified, this matches with any protocol.
    source : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0], default is Undefined, optional
        Set of configuration blocks describing the source IP address and address ranges to inspect for, in CIDR notation. If not specified, this matches with any source address. See Source below for details.
    sourcePort : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0], default is Undefined, optional
        Set of configuration blocks describing the source ports to inspect for. If not specified, this matches with any source port. See Source Port below for details.
    tcpFlag : [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0], default is Undefined, optional
        Set of configuration blocks containing the TCP flags and masks to inspect for. If not specified, this matches with any settings.
    """


    destination?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0]

    destinationPort?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0]

    protocols?: [float]

    source?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0]

    sourcePort?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0]

    tcpFlag?: [NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes destination items0

    Attributes
    ----------
    addressDefinition : str, default is Undefined, optional
        An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
    """


    addressDefinition?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesDestinationPortItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes destination port items0

    Attributes
    ----------
    fromPort : float, default is Undefined, optional
        The lower limit of the port range. This must be less than or equal to the to_port.
    toPort : float, default is Undefined, optional
        The upper limit of the port range. This must be greater than or equal to the from_port.
    """


    fromPort?: float

    toPort?: float


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourceItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes source items0

    Attributes
    ----------
    addressDefinition : str, default is Undefined, optional
        An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.
    """


    addressDefinition?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesSourcePortItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes source port items0

    Attributes
    ----------
    fromPort : float, default is Undefined, optional
        The lower limit of the port range. This must be less than or equal to the to_port.
    toPort : float, default is Undefined, optional
        The upper limit of the port range. This must be greater than or equal to the from_port.
    """


    fromPort?: float

    toPort?: float


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupRulesSourceStatelessRulesAndCustomActionsStatelessRuleItems0RuleDefinitionMatchAttributesTCPFlagItems0:
    r"""
    networkfirewall aws upbound io v1beta2 rule group status at provider rule group rules source stateless rules and custom actions stateless rule items0 rule definition match attributes TCP flag items0

    Attributes
    ----------
    flags : [str], default is Undefined, optional
        Set of flags to look for in a packet. This setting can only specify values that are also specified in masks.
        Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
    masks : [str], default is Undefined, optional
        Set of flags to consider in the inspection. To inspect all flags, leave this empty.
        Valid values: FIN, SYN, RST, PSH, ACK, URG, ECE, CWR.
    """


    flags?: [str]

    masks?: [str]


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusAtProviderRuleGroupStatefulRuleOptions:
    r"""
    A configuration block that defines stateful rule options for the rule group. See Stateful Rule Options below for details.

    Attributes
    ----------
    ruleOrder : str, default is Undefined, optional
        Indicates how to manage the order of the rule evaluation for the rule group. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.
    """


    ruleOrder?: str


schema NetworkfirewallAwsUpboundIoV1beta2RuleGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


