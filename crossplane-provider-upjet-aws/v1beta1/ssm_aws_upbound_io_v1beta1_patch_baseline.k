"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PatchBaseline:
    r"""
    PatchBaseline is the Schema for the PatchBaselines API. Provides an SSM Patch Baseline resource

    Attributes
    ----------
    apiVersion : str, default is "ssm.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PatchBaseline", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SsmAwsUpboundIoV1beta1PatchBaselineSpec, default is Undefined, required
        spec
    status : SsmAwsUpboundIoV1beta1PatchBaselineStatus, default is Undefined, optional
        status
    """


    apiVersion: "ssm.aws.upbound.io/v1beta1" = "ssm.aws.upbound.io/v1beta1"

    kind: "PatchBaseline" = "PatchBaseline"

    metadata?: v1.ObjectMeta

    spec: SsmAwsUpboundIoV1beta1PatchBaselineSpec

    status?: SsmAwsUpboundIoV1beta1PatchBaselineStatus


schema SsmAwsUpboundIoV1beta1PatchBaselineSpec:
    r"""
    PatchBaselineSpec defines the desired state of PatchBaseline

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SsmAwsUpboundIoV1beta1PatchBaselineSpecForProvider, default is Undefined, required
        for provider
    initProvider : SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SsmAwsUpboundIoV1beta1PatchBaselineSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SsmAwsUpboundIoV1beta1PatchBaselineSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SsmAwsUpboundIoV1beta1PatchBaselineSpecForProvider

    initProvider?: SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SsmAwsUpboundIoV1beta1PatchBaselineSpecProviderConfigRef

    publishConnectionDetailsTo?: SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SsmAwsUpboundIoV1beta1PatchBaselineSpecWriteConnectionSecretToRef


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecForProvider:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec for provider

    Attributes
    ----------
    approvalRule : [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderApprovalRuleItems0], default is Undefined, optional
        Set of rules used to include patches in the baseline. Up to 10 approval rules can be specified. See approval_rule below.
    approvedPatches : [str], default is Undefined, optional
        List of explicitly approved patches for the baseline. Cannot be specified with approval_rule.
    approvedPatchesComplianceLevel : str, default is Undefined, optional
        Compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid values are CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, UNSPECIFIED. The default value is UNSPECIFIED.
    approvedPatchesEnableNonSecurity : bool, default is Undefined, optional
        Whether the list of approved patches includes non-security updates that should be applied to the instances. Applies to Linux instances only.
    description : str, default is Undefined, optional
        Description of the patch baseline.
    globalFilter : [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderGlobalFilterItems0], default is Undefined, optional
        Set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are PRODUCT, CLASSIFICATION, MSRC_SEVERITY, and PATCH_ID.
    name : str, default is Undefined, optional
        Name of the patch baseline.
    operatingSystem : str, default is Undefined, optional
        Operating system the patch baseline applies to. Valid values are ALMA_LINUX, AMAZON_LINUX, AMAZON_LINUX_2, AMAZON_LINUX_2022, AMAZON_LINUX_2023, CENTOS, DEBIAN, MACOS, ORACLE_LINUX, RASPBIAN, REDHAT_ENTERPRISE_LINUX, ROCKY_LINUX, SUSE, UBUNTU, and WINDOWS. The default value is WINDOWS.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rejectedPatches : [str], default is Undefined, optional
        List of rejected patches.
    rejectedPatchesAction : str, default is Undefined, optional
        Action for Patch Manager to take on patches included in the rejected_patches list. Valid values are ALLOW_AS_DEPENDENCY and BLOCK.
    source : [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderSourceItems0], default is Undefined, optional
        Configuration block with alternate sources for patches. Applies to Linux instances only. See source below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    approvalRule?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderApprovalRuleItems0]

    approvedPatches?: [str]

    approvedPatchesComplianceLevel?: str

    approvedPatchesEnableNonSecurity?: bool

    description?: str

    globalFilter?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderGlobalFilterItems0]

    name?: str

    operatingSystem?: str

    region: str

    rejectedPatches?: [str]

    rejectedPatchesAction?: str

    source?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderSourceItems0]

    tags?: {str:str}


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderApprovalRuleItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec for provider approval rule items0

    Attributes
    ----------
    approveAfterDays : float, default is Undefined, optional
        Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 360. Conflicts with approve_until_date.
    approveUntilDate : str, default is Undefined, optional
        Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as YYYY-MM-DD. Conflicts with approve_after_days
    complianceLevel : str, default is Undefined, optional
        Compliance level for patches approved by this rule. Valid values are CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, and UNSPECIFIED. The default value is UNSPECIFIED.
    enableNonSecurity : bool, default is Undefined, optional
        Boolean enabling the application of non-security updates. The default value is false. Valid for Linux instances only.
    patchFilter : [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderApprovalRuleItems0PatchFilterItems0], default is Undefined, optional
        Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the operating_system value can be found in the SSM DescribePatchProperties API Reference. Valid Values are exact values for the patch property given as the key, or a wildcard *, which matches all values. PATCH_SET defaults to OS if unspecified
    """


    approveAfterDays?: float

    approveUntilDate?: str

    complianceLevel?: str

    enableNonSecurity?: bool

    patchFilter?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderApprovalRuleItems0PatchFilterItems0]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderApprovalRuleItems0PatchFilterItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec for provider approval rule items0 patch filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderGlobalFilterItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec for provider global filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecForProviderSourceItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec for provider source items0

    Attributes
    ----------
    configuration : str, default is Undefined, optional
        Value of the yum repo configuration. For information about other options available for your yum repository configuration, see the dnf.conf documentation
    name : str, default is Undefined, optional
        Name specified to identify the patch source.
    products : [str], default is Undefined, optional
        Specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "AmazonLinux2016.09", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see PatchFilter.
    """


    configuration?: str

    name?: str

    products?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    approvalRule : [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderApprovalRuleItems0], default is Undefined, optional
        Set of rules used to include patches in the baseline. Up to 10 approval rules can be specified. See approval_rule below.
    approvedPatches : [str], default is Undefined, optional
        List of explicitly approved patches for the baseline. Cannot be specified with approval_rule.
    approvedPatchesComplianceLevel : str, default is Undefined, optional
        Compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid values are CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, UNSPECIFIED. The default value is UNSPECIFIED.
    approvedPatchesEnableNonSecurity : bool, default is Undefined, optional
        Whether the list of approved patches includes non-security updates that should be applied to the instances. Applies to Linux instances only.
    description : str, default is Undefined, optional
        Description of the patch baseline.
    globalFilter : [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderGlobalFilterItems0], default is Undefined, optional
        Set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are PRODUCT, CLASSIFICATION, MSRC_SEVERITY, and PATCH_ID.
    name : str, default is Undefined, optional
        Name of the patch baseline.
    operatingSystem : str, default is Undefined, optional
        Operating system the patch baseline applies to. Valid values are ALMA_LINUX, AMAZON_LINUX, AMAZON_LINUX_2, AMAZON_LINUX_2022, AMAZON_LINUX_2023, CENTOS, DEBIAN, MACOS, ORACLE_LINUX, RASPBIAN, REDHAT_ENTERPRISE_LINUX, ROCKY_LINUX, SUSE, UBUNTU, and WINDOWS. The default value is WINDOWS.
    rejectedPatches : [str], default is Undefined, optional
        List of rejected patches.
    rejectedPatchesAction : str, default is Undefined, optional
        Action for Patch Manager to take on patches included in the rejected_patches list. Valid values are ALLOW_AS_DEPENDENCY and BLOCK.
    source : [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderSourceItems0], default is Undefined, optional
        Configuration block with alternate sources for patches. Applies to Linux instances only. See source below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    approvalRule?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderApprovalRuleItems0]

    approvedPatches?: [str]

    approvedPatchesComplianceLevel?: str

    approvedPatchesEnableNonSecurity?: bool

    description?: str

    globalFilter?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderGlobalFilterItems0]

    name?: str

    operatingSystem?: str

    rejectedPatches?: [str]

    rejectedPatchesAction?: str

    source?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderSourceItems0]

    tags?: {str:str}


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderApprovalRuleItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec init provider approval rule items0

    Attributes
    ----------
    approveAfterDays : float, default is Undefined, optional
        Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 360. Conflicts with approve_until_date.
    approveUntilDate : str, default is Undefined, optional
        Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as YYYY-MM-DD. Conflicts with approve_after_days
    complianceLevel : str, default is Undefined, optional
        Compliance level for patches approved by this rule. Valid values are CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, and UNSPECIFIED. The default value is UNSPECIFIED.
    enableNonSecurity : bool, default is Undefined, optional
        Boolean enabling the application of non-security updates. The default value is false. Valid for Linux instances only.
    patchFilter : [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderApprovalRuleItems0PatchFilterItems0], default is Undefined, optional
        Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the operating_system value can be found in the SSM DescribePatchProperties API Reference. Valid Values are exact values for the patch property given as the key, or a wildcard *, which matches all values. PATCH_SET defaults to OS if unspecified
    """


    approveAfterDays?: float

    approveUntilDate?: str

    complianceLevel?: str

    enableNonSecurity?: bool

    patchFilter?: [SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderApprovalRuleItems0PatchFilterItems0]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderApprovalRuleItems0PatchFilterItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec init provider approval rule items0 patch filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderGlobalFilterItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec init provider global filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecInitProviderSourceItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline spec init provider source items0

    Attributes
    ----------
    configuration : str, default is Undefined, optional
        Value of the yum repo configuration. For information about other options available for your yum repository configuration, see the dnf.conf documentation
    name : str, default is Undefined, optional
        Name specified to identify the patch source.
    products : [str], default is Undefined, optional
        Specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "AmazonLinux2016.09", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see PatchFilter.
    """


    configuration?: str

    name?: str

    products?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1PatchBaselineSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1PatchBaselineSpecProviderConfigRefPolicy


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToConfigRef

    metadata?: SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToMetadata

    name: str


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToConfigRefPolicy


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SsmAwsUpboundIoV1beta1PatchBaselineSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SsmAwsUpboundIoV1beta1PatchBaselineStatus:
    r"""
    PatchBaselineStatus defines the observed state of PatchBaseline.

    Attributes
    ----------
    atProvider : SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SsmAwsUpboundIoV1beta1PatchBaselineStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProvider

    conditions?: [SsmAwsUpboundIoV1beta1PatchBaselineStatusConditionsItems0]

    observedGeneration?: int


schema SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProvider:
    r"""
    ssm aws upbound io v1beta1 patch baseline status at provider

    Attributes
    ----------
    approvalRule : [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderApprovalRuleItems0], default is Undefined, optional
        Set of rules used to include patches in the baseline. Up to 10 approval rules can be specified. See approval_rule below.
    approvedPatches : [str], default is Undefined, optional
        List of explicitly approved patches for the baseline. Cannot be specified with approval_rule.
    approvedPatchesComplianceLevel : str, default is Undefined, optional
        Compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. Valid values are CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, UNSPECIFIED. The default value is UNSPECIFIED.
    approvedPatchesEnableNonSecurity : bool, default is Undefined, optional
        Whether the list of approved patches includes non-security updates that should be applied to the instances. Applies to Linux instances only.
    arn : str, default is Undefined, optional
        ARN of the baseline.
    description : str, default is Undefined, optional
        Description of the patch baseline.
    globalFilter : [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderGlobalFilterItems0], default is Undefined, optional
        Set of global filters used to exclude patches from the baseline. Up to 4 global filters can be specified using Key/Value pairs. Valid Keys are PRODUCT, CLASSIFICATION, MSRC_SEVERITY, and PATCH_ID.
    id : str, default is Undefined, optional
        ID of the baseline.
    json : str, default is Undefined, optional
        JSON definition of the baseline.
    name : str, default is Undefined, optional
        Name of the patch baseline.
    operatingSystem : str, default is Undefined, optional
        Operating system the patch baseline applies to. Valid values are ALMA_LINUX, AMAZON_LINUX, AMAZON_LINUX_2, AMAZON_LINUX_2022, AMAZON_LINUX_2023, CENTOS, DEBIAN, MACOS, ORACLE_LINUX, RASPBIAN, REDHAT_ENTERPRISE_LINUX, ROCKY_LINUX, SUSE, UBUNTU, and WINDOWS. The default value is WINDOWS.
    rejectedPatches : [str], default is Undefined, optional
        List of rejected patches.
    rejectedPatchesAction : str, default is Undefined, optional
        Action for Patch Manager to take on patches included in the rejected_patches list. Valid values are ALLOW_AS_DEPENDENCY and BLOCK.
    source : [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderSourceItems0], default is Undefined, optional
        Configuration block with alternate sources for patches. Applies to Linux instances only. See source below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    approvalRule?: [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderApprovalRuleItems0]

    approvedPatches?: [str]

    approvedPatchesComplianceLevel?: str

    approvedPatchesEnableNonSecurity?: bool

    arn?: str

    description?: str

    globalFilter?: [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderGlobalFilterItems0]

    id?: str

    json?: str

    name?: str

    operatingSystem?: str

    rejectedPatches?: [str]

    rejectedPatchesAction?: str

    source?: [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderSourceItems0]

    tags?: {str:str}

    tagsAll?: {str:str}


schema SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderApprovalRuleItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline status at provider approval rule items0

    Attributes
    ----------
    approveAfterDays : float, default is Undefined, optional
        Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 360. Conflicts with approve_until_date.
    approveUntilDate : str, default is Undefined, optional
        Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as YYYY-MM-DD. Conflicts with approve_after_days
    complianceLevel : str, default is Undefined, optional
        Compliance level for patches approved by this rule. Valid values are CRITICAL, HIGH, MEDIUM, LOW, INFORMATIONAL, and UNSPECIFIED. The default value is UNSPECIFIED.
    enableNonSecurity : bool, default is Undefined, optional
        Boolean enabling the application of non-security updates. The default value is false. Valid for Linux instances only.
    patchFilter : [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderApprovalRuleItems0PatchFilterItems0], default is Undefined, optional
        Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the operating_system value can be found in the SSM DescribePatchProperties API Reference. Valid Values are exact values for the patch property given as the key, or a wildcard *, which matches all values. PATCH_SET defaults to OS if unspecified
    """


    approveAfterDays?: float

    approveUntilDate?: str

    complianceLevel?: str

    enableNonSecurity?: bool

    patchFilter?: [SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderApprovalRuleItems0PatchFilterItems0]


schema SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderApprovalRuleItems0PatchFilterItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline status at provider approval rule items0 patch filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderGlobalFilterItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline status at provider global filter items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        key
    values : [str], default is Undefined, optional
        values
    """


    key?: str

    values?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineStatusAtProviderSourceItems0:
    r"""
    ssm aws upbound io v1beta1 patch baseline status at provider source items0

    Attributes
    ----------
    configuration : str, default is Undefined, optional
        Value of the yum repo configuration. For information about other options available for your yum repository configuration, see the dnf.conf documentation
    name : str, default is Undefined, optional
        Name specified to identify the patch source.
    products : [str], default is Undefined, optional
        Specific operating system versions a patch repository applies to, such as "Ubuntu16.04", "AmazonLinux2016.09", "RedhatEnterpriseLinux7.2" or "Suse12.7". For lists of supported product values, see PatchFilter.
    """


    configuration?: str

    name?: str

    products?: [str]


schema SsmAwsUpboundIoV1beta1PatchBaselineStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


