"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GroupMembershipProtocolMapper:
    r"""
    GroupMembershipProtocolMapper is the Schema for the GroupMembershipProtocolMappers API.

    Attributes
    ----------
    apiVersion : str, default is "openidgroup.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GroupMembershipProtocolMapper", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpec, default is Undefined, required
        spec
    status : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatus, default is Undefined, optional
        status
    """


    apiVersion: "openidgroup.keycloak.m.crossplane.io/v1alpha1" = "openidgroup.keycloak.m.crossplane.io/v1alpha1"

    kind: "GroupMembershipProtocolMapper" = "GroupMembershipProtocolMapper"

    metadata?: v1.ObjectMeta

    spec: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpec

    status?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatus


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpec:
    r"""
    GroupMembershipProtocolMapperSpec defines the desired state of GroupMembershipProtocolMapper

    Attributes
    ----------
    forProvider : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProvider

    initProvider?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecProviderConfigRef

    writeConnectionSecretToRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecWriteConnectionSecretToRef


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProvider:
    r"""
    openidgroup keycloakm crossplane io v1alpha1 group membership protocol mapper spec for provider

    Attributes
    ----------
    addToAccessToken : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the access token. Defaults to true.
    addToIdToken : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the id token. Defaults to true.
    addToUserinfo : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the UserInfo response body. Defaults to true.
    claimName : str, default is Undefined, optional
        The name of the claim to insert into a token.
    clientId : str, default is Undefined, optional
        The client this protocol mapper should be attached to. Conflicts with client_scope_id. One of client_id or client_scope_id must be specified.
        The mapper's associated client. Cannot be used at the same time as client_scope_id.
    clientIdRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDSelector, default is Undefined, optional
        client Id selector
    clientScopeId : str, default is Undefined, optional
        The client scope this protocol mapper should be attached to. Conflicts with client_id. One of client_id or client_scope_id must be specified.
        The mapper's associated client scope. Cannot be used at the same time as client_id.
    clientScopeIdRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDRef, default is Undefined, optional
        client scope Id ref
    clientScopeIdSelector : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDSelector, default is Undefined, optional
        client scope Id selector
    fullPath : bool, default is Undefined, optional
        Indicates whether the full path of the group including its parents will be used. Defaults to true.
    name : str, default is Undefined, optional
        The display name of this protocol mapper in the GUI.
        A human-friendly name that will appear in the Keycloak console.
    realmId : str, default is Undefined, optional
        The realm this protocol mapper exists within.
        The realm id where the associated client or client scope exists.
    realmIdRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    addToAccessToken?: bool

    addToIdToken?: bool

    addToUserinfo?: bool

    claimName?: str

    clientId?: str

    clientIdRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDRef

    clientIdSelector?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDSelector

    clientScopeId?: str

    clientScopeIdRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDRef

    clientScopeIdSelector?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDSelector

    fullPath?: bool

    name?: str

    realmId?: str

    realmIdRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDRef

    realmIdSelector?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDSelector


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDRef:
    r"""
    Reference to a Client in openidclient to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDRefPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDSelector:
    r"""
    Selector for a Client in openidclient to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDSelectorPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDRef:
    r"""
    Reference to a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDRefPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDSelector:
    r"""
    Selector for a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDSelectorPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderClientScopeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDRefPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDSelectorPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    addToAccessToken : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the access token. Defaults to true.
    addToIdToken : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the id token. Defaults to true.
    addToUserinfo : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the UserInfo response body. Defaults to true.
    claimName : str, default is Undefined, optional
        The name of the claim to insert into a token.
    clientId : str, default is Undefined, optional
        The client this protocol mapper should be attached to. Conflicts with client_scope_id. One of client_id or client_scope_id must be specified.
        The mapper's associated client. Cannot be used at the same time as client_scope_id.
    clientIdRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDSelector, default is Undefined, optional
        client Id selector
    clientScopeId : str, default is Undefined, optional
        The client scope this protocol mapper should be attached to. Conflicts with client_id. One of client_id or client_scope_id must be specified.
        The mapper's associated client scope. Cannot be used at the same time as client_id.
    clientScopeIdRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDRef, default is Undefined, optional
        client scope Id ref
    clientScopeIdSelector : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDSelector, default is Undefined, optional
        client scope Id selector
    fullPath : bool, default is Undefined, optional
        Indicates whether the full path of the group including its parents will be used. Defaults to true.
    name : str, default is Undefined, optional
        The display name of this protocol mapper in the GUI.
        A human-friendly name that will appear in the Keycloak console.
    realmId : str, default is Undefined, optional
        The realm this protocol mapper exists within.
        The realm id where the associated client or client scope exists.
    realmIdRef : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    """


    addToAccessToken?: bool

    addToIdToken?: bool

    addToUserinfo?: bool

    claimName?: str

    clientId?: str

    clientIdRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDRef

    clientIdSelector?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDSelector

    clientScopeId?: str

    clientScopeIdRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDRef

    clientScopeIdSelector?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDSelector

    fullPath?: bool

    name?: str

    realmId?: str

    realmIdRef?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDRef

    realmIdSelector?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDSelector


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDRef:
    r"""
    Reference to a Client in openidclient to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDRefPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDSelector:
    r"""
    Selector for a Client in openidclient to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDSelectorPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDRef:
    r"""
    Reference to a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDRefPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDSelector:
    r"""
    Selector for a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDSelectorPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderClientScopeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDRefPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDSelectorPolicy


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatus:
    r"""
    GroupMembershipProtocolMapperStatus defines the observed state of GroupMembershipProtocolMapper.

    Attributes
    ----------
    atProvider : OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatusAtProvider

    conditions?: [OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatusConditionsItems0]

    observedGeneration?: int


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatusAtProvider:
    r"""
    openidgroup keycloakm crossplane io v1alpha1 group membership protocol mapper status at provider

    Attributes
    ----------
    addToAccessToken : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the access token. Defaults to true.
    addToIdToken : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the id token. Defaults to true.
    addToUserinfo : bool, default is Undefined, optional
        Indicates if the property should be added as a claim to the UserInfo response body. Defaults to true.
    claimName : str, default is Undefined, optional
        The name of the claim to insert into a token.
    clientId : str, default is Undefined, optional
        The client this protocol mapper should be attached to. Conflicts with client_scope_id. One of client_id or client_scope_id must be specified.
        The mapper's associated client. Cannot be used at the same time as client_scope_id.
    clientScopeId : str, default is Undefined, optional
        The client scope this protocol mapper should be attached to. Conflicts with client_id. One of client_id or client_scope_id must be specified.
        The mapper's associated client scope. Cannot be used at the same time as client_id.
    fullPath : bool, default is Undefined, optional
        Indicates whether the full path of the group including its parents will be used. Defaults to true.
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        The display name of this protocol mapper in the GUI.
        A human-friendly name that will appear in the Keycloak console.
    realmId : str, default is Undefined, optional
        The realm this protocol mapper exists within.
        The realm id where the associated client or client scope exists.
    """


    addToAccessToken?: bool

    addToIdToken?: bool

    addToUserinfo?: bool

    claimName?: str

    clientId?: str

    clientScopeId?: str

    fullPath?: bool

    id?: str

    name?: str

    realmId?: str


schema OpenidgroupKeycloakmCrossplaneIoV1alpha1GroupMembershipProtocolMapperStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


