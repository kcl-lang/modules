"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stage:
    r"""
    Stage is the Schema for the Stages API. Manages an Amazon API Gateway Version 2 stage.

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stage", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsUpboundIoV1beta2StageSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsUpboundIoV1beta2StageStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.upbound.io/v1beta2" = "apigatewayv2.aws.upbound.io/v1beta2"

    kind: "Stage" = "Stage"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsUpboundIoV1beta2StageSpec

    status?: Apigatewayv2AwsUpboundIoV1beta2StageStatus


schema Apigatewayv2AwsUpboundIoV1beta2StageSpec:
    r"""
    StageSpec defines the desired state of Stage

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProvider, default is Undefined, required
        for provider
    initProvider : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProvider

    initProvider?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecProviderConfigRef

    publishConnectionDetailsTo?: Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProvider:
    r"""
    apigatewayv2 aws upbound io v1beta2 stage spec for provider

    Attributes
    ----------
    accessLogSettings : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAccessLogSettings, default is Undefined, optional
        access log settings
    apiId : str, default is Undefined, optional
        API identifier.
    apiIdRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    autoDeploy : bool, default is Undefined, optional
        Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.
    clientCertificateId : str, default is Undefined, optional
        Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.
        Supported only for WebSocket APIs.
    defaultRouteSettings : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDefaultRouteSettings, default is Undefined, optional
        default route settings
    deploymentId : str, default is Undefined, optional
        Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.
    deploymentIdRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRef, default is Undefined, optional
        deployment Id ref
    deploymentIdSelector : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelector, default is Undefined, optional
        deployment Id selector
    description : str, default is Undefined, optional
        Description for the stage. Must be less than or equal to 1024 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    routeSettings : [Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderRouteSettingsItems0], default is Undefined, optional
        Route settings for the stage.
    stageVariables : {str:str}, default is Undefined, optional
        Map that defines the stage variables for the stage.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    accessLogSettings?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAccessLogSettings

    apiId?: str

    apiIdRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDSelector

    autoDeploy?: bool

    clientCertificateId?: str

    defaultRouteSettings?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDefaultRouteSettings

    deploymentId?: str

    deploymentIdRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRef

    deploymentIdSelector?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelector

    description?: str

    region: str

    routeSettings?: [Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderRouteSettingsItems0]

    stageVariables?: {str:str}

    tags?: {str:str}


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDRef:
    r"""
    Reference to a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDSelector:
    r"""
    Selector for a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderAccessLogSettings:
    r"""
    Settings for logging access in this stage.
    Use the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.

    Attributes
    ----------
    destinationArn : str, default is Undefined, optional
        ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.
    format : str, default is Undefined, optional
        Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.
    """


    destinationArn?: str

    format?: str


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDefaultRouteSettings:
    r"""
    Default route settings for the stage.

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to false. Supported only for WebSocket APIs.
    detailedMetricsEnabled : bool, default is Undefined, optional
        Whether detailed metrics are enabled for the default route. Defaults to false.
    loggingLevel : str, default is Undefined, optional
        Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit for the default route.
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit for the default route.
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    throttlingBurstLimit?: float

    throttlingRateLimit?: float


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRef:
    r"""
    Reference to a Deployment in apigatewayv2 to populate deploymentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelector:
    r"""
    Selector for a Deployment in apigatewayv2 to populate deploymentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecForProviderRouteSettingsItems0:
    r"""
    apigatewayv2 aws upbound io v1beta2 stage spec for provider route settings items0

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to false. Supported only for WebSocket APIs.
    detailedMetricsEnabled : bool, default is Undefined, optional
        Whether detailed metrics are enabled for the route. Defaults to false.
    loggingLevel : str, default is Undefined, optional
        Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
    routeKey : str, default is Undefined, optional
        Route key.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit for the route.
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit for the route.
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    routeKey?: str

    throttlingBurstLimit?: float

    throttlingRateLimit?: float


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessLogSettings : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAccessLogSettings, default is Undefined, optional
        access log settings
    apiId : str, default is Undefined, optional
        API identifier.
    apiIdRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    autoDeploy : bool, default is Undefined, optional
        Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.
    clientCertificateId : str, default is Undefined, optional
        Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.
        Supported only for WebSocket APIs.
    defaultRouteSettings : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDefaultRouteSettings, default is Undefined, optional
        default route settings
    deploymentId : str, default is Undefined, optional
        Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.
    deploymentIdRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRef, default is Undefined, optional
        deployment Id ref
    deploymentIdSelector : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelector, default is Undefined, optional
        deployment Id selector
    description : str, default is Undefined, optional
        Description for the stage. Must be less than or equal to 1024 characters in length.
    routeSettings : [Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderRouteSettingsItems0], default is Undefined, optional
        Route settings for the stage.
    stageVariables : {str:str}, default is Undefined, optional
        Map that defines the stage variables for the stage.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    accessLogSettings?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAccessLogSettings

    apiId?: str

    apiIdRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDRef

    apiIdSelector?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDSelector

    autoDeploy?: bool

    clientCertificateId?: str

    defaultRouteSettings?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDefaultRouteSettings

    deploymentId?: str

    deploymentIdRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRef

    deploymentIdSelector?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelector

    description?: str

    routeSettings?: [Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderRouteSettingsItems0]

    stageVariables?: {str:str}

    tags?: {str:str}


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDRef:
    r"""
    Reference to a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDSelector:
    r"""
    Selector for a API in apigatewayv2 to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderAccessLogSettings:
    r"""
    Settings for logging access in this stage.
    Use the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.

    Attributes
    ----------
    destinationArn : str, default is Undefined, optional
        ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.
    format : str, default is Undefined, optional
        Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.
    """


    destinationArn?: str

    format?: str


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDefaultRouteSettings:
    r"""
    Default route settings for the stage.

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to false. Supported only for WebSocket APIs.
    detailedMetricsEnabled : bool, default is Undefined, optional
        Whether detailed metrics are enabled for the default route. Defaults to false.
    loggingLevel : str, default is Undefined, optional
        Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit for the default route.
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit for the default route.
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    throttlingBurstLimit?: float

    throttlingRateLimit?: float


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRef:
    r"""
    Reference to a Deployment in apigatewayv2 to populate deploymentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelector:
    r"""
    Selector for a Deployment in apigatewayv2 to populate deploymentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecInitProviderRouteSettingsItems0:
    r"""
    apigatewayv2 aws upbound io v1beta2 stage spec init provider route settings items0

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to false. Supported only for WebSocket APIs.
    detailedMetricsEnabled : bool, default is Undefined, optional
        Whether detailed metrics are enabled for the route. Defaults to false.
    loggingLevel : str, default is Undefined, optional
        Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
    routeKey : str, default is Undefined, optional
        Route key.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit for the route.
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit for the route.
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    routeKey?: str

    throttlingBurstLimit?: float

    throttlingRateLimit?: float


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecProviderConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsUpboundIoV1beta2StageSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsUpboundIoV1beta2StageStatus:
    r"""
    StageStatus defines the observed state of Stage.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsUpboundIoV1beta2StageStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProvider

    conditions?: [Apigatewayv2AwsUpboundIoV1beta2StageStatusConditionsItems0]

    observedGeneration?: int


schema Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProvider:
    r"""
    apigatewayv2 aws upbound io v1beta2 stage status at provider

    Attributes
    ----------
    accessLogSettings : Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderAccessLogSettings, default is Undefined, optional
        access log settings
    apiId : str, default is Undefined, optional
        API identifier.
    arn : str, default is Undefined, optional
        ARN of the stage.
    autoDeploy : bool, default is Undefined, optional
        Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.
    clientCertificateId : str, default is Undefined, optional
        Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.
        Supported only for WebSocket APIs.
    defaultRouteSettings : Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderDefaultRouteSettings, default is Undefined, optional
        default route settings
    deploymentId : str, default is Undefined, optional
        Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.
    description : str, default is Undefined, optional
        Description for the stage. Must be less than or equal to 1024 characters in length.
    executionArn : str, default is Undefined, optional
        ARN prefix to be used in an aws_lambda_permission's source_arn attribute.
        For WebSocket APIs this attribute can additionally be used in an aws_iam_policy to authorize access to the @connections API.
        See the Amazon API Gateway Developer Guide for details.
    id : str, default is Undefined, optional
        Stage identifier.
    invokeUrl : str, default is Undefined, optional
        URL to invoke the API pointing to the stage,
        e.g., wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage, or https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/
    routeSettings : [Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderRouteSettingsItems0], default is Undefined, optional
        Route settings for the stage.
    stageVariables : {str:str}, default is Undefined, optional
        Map that defines the stage variables for the stage.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    accessLogSettings?: Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderAccessLogSettings

    apiId?: str

    arn?: str

    autoDeploy?: bool

    clientCertificateId?: str

    defaultRouteSettings?: Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderDefaultRouteSettings

    deploymentId?: str

    description?: str

    executionArn?: str

    id?: str

    invokeUrl?: str

    routeSettings?: [Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderRouteSettingsItems0]

    stageVariables?: {str:str}

    tags?: {str:str}

    tagsAll?: {str:str}


schema Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderAccessLogSettings:
    r"""
    Settings for logging access in this stage.
    Use the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.

    Attributes
    ----------
    destinationArn : str, default is Undefined, optional
        ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.
    format : str, default is Undefined, optional
        Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.
    """


    destinationArn?: str

    format?: str


schema Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderDefaultRouteSettings:
    r"""
    Default route settings for the stage.

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to false. Supported only for WebSocket APIs.
    detailedMetricsEnabled : bool, default is Undefined, optional
        Whether detailed metrics are enabled for the default route. Defaults to false.
    loggingLevel : str, default is Undefined, optional
        Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit for the default route.
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit for the default route.
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    throttlingBurstLimit?: float

    throttlingRateLimit?: float


schema Apigatewayv2AwsUpboundIoV1beta2StageStatusAtProviderRouteSettingsItems0:
    r"""
    apigatewayv2 aws upbound io v1beta2 stage status at provider route settings items0

    Attributes
    ----------
    dataTraceEnabled : bool, default is Undefined, optional
        Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Defaults to false. Supported only for WebSocket APIs.
    detailedMetricsEnabled : bool, default is Undefined, optional
        Whether detailed metrics are enabled for the route. Defaults to false.
    loggingLevel : str, default is Undefined, optional
        Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
        Valid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.
    routeKey : str, default is Undefined, optional
        Route key.
    throttlingBurstLimit : float, default is Undefined, optional
        Throttling burst limit for the route.
    throttlingRateLimit : float, default is Undefined, optional
        Throttling rate limit for the route.
    """


    dataTraceEnabled?: bool

    detailedMetricsEnabled?: bool

    loggingLevel?: str

    routeKey?: str

    throttlingBurstLimit?: float

    throttlingRateLimit?: float


schema Apigatewayv2AwsUpboundIoV1beta2StageStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


