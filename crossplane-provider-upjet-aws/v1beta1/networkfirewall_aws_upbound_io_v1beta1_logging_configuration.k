"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LoggingConfiguration:
    r"""
    LoggingConfiguration is the Schema for the LoggingConfigurations API. Provides an AWS Network Firewall Logging Configuration resource.

    Attributes
    ----------
    apiVersion : str, default is "networkfirewall.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LoggingConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpec, default is Undefined, required
        spec
    status : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkfirewall.aws.upbound.io/v1beta1" = "networkfirewall.aws.upbound.io/v1beta1"

    kind: "LoggingConfiguration" = "LoggingConfiguration"

    metadata?: v1.ObjectMeta

    spec: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpec

    status?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatus


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpec:
    r"""
    LoggingConfigurationSpec defines the desired state of LoggingConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProvider

    initProvider?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecWriteConnectionSecretToRef


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProvider:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration spec for provider

    Attributes
    ----------
    firewallArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Network Firewall firewall.
    firewallArnRef : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnRef, default is Undefined, optional
        firewall arn ref
    firewallArnSelector : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnSelector, default is Undefined, optional
        firewall arn selector
    loggingConfiguration : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderLoggingConfigurationItems0], default is Undefined, optional
        A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    firewallArn?: str

    firewallArnRef?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnRef

    firewallArnSelector?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnSelector

    loggingConfiguration?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderLoggingConfigurationItems0]

    region: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnRef:
    r"""
    Reference to a Firewall in networkfirewall to populate firewallArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnSelector:
    r"""
    Selector for a Firewall in networkfirewall to populate firewallArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderFirewallArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderLoggingConfigurationItems0:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration spec for provider logging configuration items0

    Attributes
    ----------
    logDestinationConfig : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderLoggingConfigurationItems0LogDestinationConfigItems0], default is Undefined, optional
        Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for FLOW logs and one for ALERT logs.
    """


    logDestinationConfig?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderLoggingConfigurationItems0LogDestinationConfigItems0]


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecForProviderLoggingConfigurationItems0LogDestinationConfigItems0:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration spec for provider logging configuration items0 log destination config items0

    Attributes
    ----------
    logDestination : {str:str}, default is Undefined, optional
        A map describing the logging destination for the chosen log_destination_type.
    logDestinationType : str, default is Undefined, optional
        The location to send logs to. Valid values: S3, CloudWatchLogs, KinesisDataFirehose.
    logType : str, default is Undefined, optional
        The type of log to send. Valid values: ALERT or FLOW. Alert logs report traffic that matches a StatefulRule with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
    """


    logDestination?: {str:str}

    logDestinationType?: str

    logType?: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    firewallArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Network Firewall firewall.
    firewallArnRef : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnRef, default is Undefined, optional
        firewall arn ref
    firewallArnSelector : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnSelector, default is Undefined, optional
        firewall arn selector
    loggingConfiguration : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderLoggingConfigurationItems0], default is Undefined, optional
        A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
    """


    firewallArn?: str

    firewallArnRef?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnRef

    firewallArnSelector?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnSelector

    loggingConfiguration?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderLoggingConfigurationItems0]


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnRef:
    r"""
    Reference to a Firewall in networkfirewall to populate firewallArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnSelector:
    r"""
    Selector for a Firewall in networkfirewall to populate firewallArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderFirewallArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderLoggingConfigurationItems0:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration spec init provider logging configuration items0

    Attributes
    ----------
    logDestinationConfig : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderLoggingConfigurationItems0LogDestinationConfigItems0], default is Undefined, optional
        Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for FLOW logs and one for ALERT logs.
    """


    logDestinationConfig?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderLoggingConfigurationItems0LogDestinationConfigItems0]


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecInitProviderLoggingConfigurationItems0LogDestinationConfigItems0:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration spec init provider logging configuration items0 log destination config items0

    Attributes
    ----------
    logDestination : {str:str}, default is Undefined, optional
        A map describing the logging destination for the chosen log_destination_type.
    logDestinationType : str, default is Undefined, optional
        The location to send logs to. Valid values: S3, CloudWatchLogs, KinesisDataFirehose.
    logType : str, default is Undefined, optional
        The type of log to send. Valid values: ALERT or FLOW. Alert logs report traffic that matches a StatefulRule with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
    """


    logDestination?: {str:str}

    logDestinationType?: str

    logType?: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecProviderConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatus:
    r"""
    LoggingConfigurationStatus defines the observed state of LoggingConfiguration.

    Attributes
    ----------
    atProvider : NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProvider

    conditions?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProvider:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration status at provider

    Attributes
    ----------
    firewallArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Network Firewall firewall.
    id : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the associated firewall.
    loggingConfiguration : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProviderLoggingConfigurationItems0], default is Undefined, optional
        A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
    """


    firewallArn?: str

    id?: str

    loggingConfiguration?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProviderLoggingConfigurationItems0]


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProviderLoggingConfigurationItems0:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration status at provider logging configuration items0

    Attributes
    ----------
    logDestinationConfig : [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProviderLoggingConfigurationItems0LogDestinationConfigItems0], default is Undefined, optional
        Set of configuration blocks describing the logging details for a firewall. See Log Destination Config below for details. At most, only two blocks can be specified; one for FLOW logs and one for ALERT logs.
    """


    logDestinationConfig?: [NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProviderLoggingConfigurationItems0LogDestinationConfigItems0]


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusAtProviderLoggingConfigurationItems0LogDestinationConfigItems0:
    r"""
    networkfirewall aws upbound io v1beta1 logging configuration status at provider logging configuration items0 log destination config items0

    Attributes
    ----------
    logDestination : {str:str}, default is Undefined, optional
        A map describing the logging destination for the chosen log_destination_type.
    logDestinationType : str, default is Undefined, optional
        The location to send logs to. Valid values: S3, CloudWatchLogs, KinesisDataFirehose.
    logType : str, default is Undefined, optional
        The type of log to send. Valid values: ALERT or FLOW. Alert logs report traffic that matches a StatefulRule with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
    """


    logDestination?: {str:str}

    logDestinationType?: str

    logType?: str


schema NetworkfirewallAwsUpboundIoV1beta1LoggingConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


