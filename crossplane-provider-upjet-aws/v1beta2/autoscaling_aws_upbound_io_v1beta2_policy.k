"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Policy:
    r"""
    Policy is the Schema for the Policys API. Provides an AutoScaling Scaling Group resource.

    Attributes
    ----------
    apiVersion : str, default is "autoscaling.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Policy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AutoscalingAwsUpboundIoV1beta2PolicySpec, default is Undefined, required
        spec
    status : AutoscalingAwsUpboundIoV1beta2PolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "autoscaling.aws.upbound.io/v1beta2" = "autoscaling.aws.upbound.io/v1beta2"

    kind: "Policy" = "Policy"

    metadata?: v1.ObjectMeta

    spec: AutoscalingAwsUpboundIoV1beta2PolicySpec

    status?: AutoscalingAwsUpboundIoV1beta2PolicyStatus


schema AutoscalingAwsUpboundIoV1beta2PolicySpec:
    r"""
    PolicySpec defines the desired state of Policy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AutoscalingAwsUpboundIoV1beta2PolicySpecForProvider, default is Undefined, required
        for provider
    initProvider : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AutoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AutoscalingAwsUpboundIoV1beta2PolicySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AutoscalingAwsUpboundIoV1beta2PolicySpecForProvider

    initProvider?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AutoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRef

    publishConnectionDetailsTo?: AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AutoscalingAwsUpboundIoV1beta2PolicySpecWriteConnectionSecretToRef


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProvider:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider

    Attributes
    ----------
    adjustmentType : str, default is Undefined, optional
        Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
    autoscalingGroupName : str, default is Undefined, optional
        Name of the autoscaling group.
    autoscalingGroupNameRef : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameRef, default is Undefined, optional
        autoscaling group name ref
    autoscalingGroupNameSelector : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameSelector, default is Undefined, optional
        autoscaling group name selector
    cooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    enabled : bool, default is Undefined, optional
        Whether the scaling policy is enabled or disabled. Default: true.
    estimatedInstanceWarmup : float, default is Undefined, optional
        Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.
    metricAggregationType : str, default is Undefined, optional
        Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    minAdjustmentMagnitude : float, default is Undefined, optional
        Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.
    policyType : str, default is Undefined, optional
        Policy type, either "SimpleScaling", "StepScaling", "TargetTrackingScaling", or "PredictiveScaling". If this value isn't provided, AWS will default to "SimpleScaling."
    predictiveScalingConfiguration : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfiguration, default is Undefined, optional
        predictive scaling configuration
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    scalingAdjustment : float, default is Undefined, optional
        Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.
    stepAdjustment : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepAdjustmentItems0], default is Undefined, optional
        Set of adjustments that manage
        group scaling. These have the following structure:
    targetTrackingConfiguration : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfiguration, default is Undefined, optional
        target tracking configuration
    """


    adjustmentType?: str

    autoscalingGroupName?: str

    autoscalingGroupNameRef?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameRef

    autoscalingGroupNameSelector?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameSelector

    cooldown?: float

    enabled?: bool

    estimatedInstanceWarmup?: float

    metricAggregationType?: str

    minAdjustmentMagnitude?: float

    policyType?: str

    predictiveScalingConfiguration?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfiguration

    region: str

    scalingAdjustment?: float

    stepAdjustment?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepAdjustmentItems0]

    targetTrackingConfiguration?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfiguration


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameRef:
    r"""
    Reference to a AutoscalingGroup in autoscaling to populate autoscalingGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameRefPolicy


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameSelector:
    r"""
    Selector for a AutoscalingGroup in autoscaling to populate autoscalingGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameSelectorPolicy


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderAutoscalingGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfiguration:
    r"""
    Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.

    Attributes
    ----------
    maxCapacityBreachBehavior : str, default is Undefined, optional
        Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.
    maxCapacityBuffer : str, default is Undefined, optional
        Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.
    metricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecification, default is Undefined, optional
        metric specification
    mode : str, default is Undefined, optional
        Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.
    schedulingBufferTime : str, default is Undefined, optional
        Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.
    """


    maxCapacityBreachBehavior?: str

    maxCapacityBuffer?: str

    metricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecification

    mode?: str

    schedulingBufferTime?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecification:
    r"""
    This structure includes the metrics and target utilization to use for predictive scaling.

    Attributes
    ----------
    customizedCapacityMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification, default is Undefined, optional
        customized capacity metric specification
    customizedLoadMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification, default is Undefined, optional
        customized load metric specification
    customizedScalingMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification, default is Undefined, optional
        customized scaling metric specification
    predefinedLoadMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification, default is Undefined, optional
        predefined load metric specification
    predefinedMetricPairSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification, default is Undefined, optional
        predefined metric pair specification
    predefinedScalingMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification, default is Undefined, optional
        predefined scaling metric specification
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedCapacityMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification

    customizedLoadMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification

    customizedScalingMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification

    predefinedLoadMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification

    predefinedMetricPairSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification

    predefinedScalingMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification

    targetValue?: float


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification:
    r"""
    Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider predictive scaling configuration metric specification customized capacity metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider predictive scaling configuration metric specification customized capacity metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification:
    r"""
    Customized load metric specification.

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider predictive scaling configuration metric specification customized load metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider predictive scaling configuration metric specification customized load metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification:
    r"""
    Customized scaling metric specification.

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider predictive scaling configuration metric specification customized scaling metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider predictive scaling configuration metric specification customized scaling metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification:
    r"""
    Predefined load metric specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification:
    r"""
    Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification:
    r"""
    Predefined scaling metric specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderStepAdjustmentItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider step adjustment items0

    Attributes
    ----------
    metricIntervalLowerBound : str, default is Undefined, optional
        Lower bound for the
        difference between the alarm threshold and the CloudWatch metric.
        Without a value, AWS will treat this bound as negative infinity.
    metricIntervalUpperBound : str, default is Undefined, optional
        Upper bound for the
        difference between the alarm threshold and the CloudWatch metric.
        Without a value, AWS will treat this bound as positive infinity. The upper bound
        must be greater than the lower bound.
    scalingAdjustment : float, default is Undefined, optional
        Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.
    """


    metricIntervalLowerBound?: str

    metricIntervalUpperBound?: str

    scalingAdjustment?: float


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfiguration:
    r"""
    Target tracking policy. These have the following structure:

    Attributes
    ----------
    customizedMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecification, default is Undefined, optional
        customized metric specification
    disableScaleIn : bool, default is Undefined, optional
        Whether scale in by the target tracking policy is disabled.
    predefinedMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationPredefinedMetricSpecification, default is Undefined, optional
        predefined metric specification
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecification

    disableScaleIn?: bool

    predefinedMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationPredefinedMetricSpecification

    targetValue?: float


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecification:
    r"""
    Customized metric. Conflicts with predefined_metric_specification.

    Attributes
    ----------
    metricDimension : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    metrics : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0], default is Undefined, optional
        Metrics to include, as a metric data query.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metricDimension?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0]

    metricName?: str

    metrics?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0]

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider target tracking configuration customized metric specification metric dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider target tracking configuration customized metric specification metrics items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec for provider target tracking configuration customized metric specification metrics items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecForProviderTargetTrackingConfigurationPredefinedMetricSpecification:
    r"""
    Predefined metric. Conflicts with customized_metric_specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    adjustmentType : str, default is Undefined, optional
        Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
    cooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    enabled : bool, default is Undefined, optional
        Whether the scaling policy is enabled or disabled. Default: true.
    estimatedInstanceWarmup : float, default is Undefined, optional
        Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.
    metricAggregationType : str, default is Undefined, optional
        Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    minAdjustmentMagnitude : float, default is Undefined, optional
        Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.
    policyType : str, default is Undefined, optional
        Policy type, either "SimpleScaling", "StepScaling", "TargetTrackingScaling", or "PredictiveScaling". If this value isn't provided, AWS will default to "SimpleScaling."
    predictiveScalingConfiguration : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfiguration, default is Undefined, optional
        predictive scaling configuration
    scalingAdjustment : float, default is Undefined, optional
        Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.
    stepAdjustment : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepAdjustmentItems0], default is Undefined, optional
        Set of adjustments that manage
        group scaling. These have the following structure:
    targetTrackingConfiguration : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfiguration, default is Undefined, optional
        target tracking configuration
    """


    adjustmentType?: str

    cooldown?: float

    enabled?: bool

    estimatedInstanceWarmup?: float

    metricAggregationType?: str

    minAdjustmentMagnitude?: float

    policyType?: str

    predictiveScalingConfiguration?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfiguration

    scalingAdjustment?: float

    stepAdjustment?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepAdjustmentItems0]

    targetTrackingConfiguration?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfiguration


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfiguration:
    r"""
    Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.

    Attributes
    ----------
    maxCapacityBreachBehavior : str, default is Undefined, optional
        Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.
    maxCapacityBuffer : str, default is Undefined, optional
        Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.
    metricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecification, default is Undefined, optional
        metric specification
    mode : str, default is Undefined, optional
        Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.
    schedulingBufferTime : str, default is Undefined, optional
        Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.
    """


    maxCapacityBreachBehavior?: str

    maxCapacityBuffer?: str

    metricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecification

    mode?: str

    schedulingBufferTime?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecification:
    r"""
    This structure includes the metrics and target utilization to use for predictive scaling.

    Attributes
    ----------
    customizedCapacityMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification, default is Undefined, optional
        customized capacity metric specification
    customizedLoadMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification, default is Undefined, optional
        customized load metric specification
    customizedScalingMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification, default is Undefined, optional
        customized scaling metric specification
    predefinedLoadMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification, default is Undefined, optional
        predefined load metric specification
    predefinedMetricPairSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification, default is Undefined, optional
        predefined metric pair specification
    predefinedScalingMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification, default is Undefined, optional
        predefined scaling metric specification
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedCapacityMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification

    customizedLoadMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification

    customizedScalingMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification

    predefinedLoadMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification

    predefinedMetricPairSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification

    predefinedScalingMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification

    targetValue?: float


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification:
    r"""
    Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider predictive scaling configuration metric specification customized capacity metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider predictive scaling configuration metric specification customized capacity metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification:
    r"""
    Customized load metric specification.

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider predictive scaling configuration metric specification customized load metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider predictive scaling configuration metric specification customized load metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification:
    r"""
    Customized scaling metric specification.

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider predictive scaling configuration metric specification customized scaling metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider predictive scaling configuration metric specification customized scaling metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification:
    r"""
    Predefined load metric specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification:
    r"""
    Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification:
    r"""
    Predefined scaling metric specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderStepAdjustmentItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider step adjustment items0

    Attributes
    ----------
    metricIntervalLowerBound : str, default is Undefined, optional
        Lower bound for the
        difference between the alarm threshold and the CloudWatch metric.
        Without a value, AWS will treat this bound as negative infinity.
    metricIntervalUpperBound : str, default is Undefined, optional
        Upper bound for the
        difference between the alarm threshold and the CloudWatch metric.
        Without a value, AWS will treat this bound as positive infinity. The upper bound
        must be greater than the lower bound.
    scalingAdjustment : float, default is Undefined, optional
        Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.
    """


    metricIntervalLowerBound?: str

    metricIntervalUpperBound?: str

    scalingAdjustment?: float


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfiguration:
    r"""
    Target tracking policy. These have the following structure:

    Attributes
    ----------
    customizedMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecification, default is Undefined, optional
        customized metric specification
    disableScaleIn : bool, default is Undefined, optional
        Whether scale in by the target tracking policy is disabled.
    predefinedMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationPredefinedMetricSpecification, default is Undefined, optional
        predefined metric specification
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecification

    disableScaleIn?: bool

    predefinedMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationPredefinedMetricSpecification

    targetValue?: float


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecification:
    r"""
    Customized metric. Conflicts with predefined_metric_specification.

    Attributes
    ----------
    metricDimension : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    metrics : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0], default is Undefined, optional
        Metrics to include, as a metric data query.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metricDimension?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0]

    metricName?: str

    metrics?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0]

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider target tracking configuration customized metric specification metric dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider target tracking configuration customized metric specification metrics items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy spec init provider target tracking configuration customized metric specification metrics items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecInitProviderTargetTrackingConfigurationPredefinedMetricSpecification:
    r"""
    Predefined metric. Conflicts with customized_metric_specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta2PolicySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRef

    metadata?: AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToMetadata

    name: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRefPolicy


schema AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AutoscalingAwsUpboundIoV1beta2PolicySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AutoscalingAwsUpboundIoV1beta2PolicySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatus:
    r"""
    PolicyStatus defines the observed state of Policy.

    Attributes
    ----------
    atProvider : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AutoscalingAwsUpboundIoV1beta2PolicyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProvider

    conditions?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusConditionsItems0]

    observedGeneration?: int


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProvider:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider

    Attributes
    ----------
    adjustmentType : str, default is Undefined, optional
        Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
    arn : str, default is Undefined, optional
        ARN assigned by AWS to the scaling policy.
    autoscalingGroupName : str, default is Undefined, optional
        Name of the autoscaling group.
    cooldown : float, default is Undefined, optional
        Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
    enabled : bool, default is Undefined, optional
        Whether the scaling policy is enabled or disabled. Default: true.
    estimatedInstanceWarmup : float, default is Undefined, optional
        Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    metricAggregationType : str, default is Undefined, optional
        Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
    minAdjustmentMagnitude : float, default is Undefined, optional
        Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.
    policyType : str, default is Undefined, optional
        Policy type, either "SimpleScaling", "StepScaling", "TargetTrackingScaling", or "PredictiveScaling". If this value isn't provided, AWS will default to "SimpleScaling."
    predictiveScalingConfiguration : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfiguration, default is Undefined, optional
        predictive scaling configuration
    scalingAdjustment : float, default is Undefined, optional
        Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.
    stepAdjustment : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepAdjustmentItems0], default is Undefined, optional
        Set of adjustments that manage
        group scaling. These have the following structure:
    targetTrackingConfiguration : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfiguration, default is Undefined, optional
        target tracking configuration
    """


    adjustmentType?: str

    arn?: str

    autoscalingGroupName?: str

    cooldown?: float

    enabled?: bool

    estimatedInstanceWarmup?: float

    id?: str

    metricAggregationType?: str

    minAdjustmentMagnitude?: float

    policyType?: str

    predictiveScalingConfiguration?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfiguration

    scalingAdjustment?: float

    stepAdjustment?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepAdjustmentItems0]

    targetTrackingConfiguration?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfiguration


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfiguration:
    r"""
    Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.

    Attributes
    ----------
    maxCapacityBreachBehavior : str, default is Undefined, optional
        Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.
    maxCapacityBuffer : str, default is Undefined, optional
        Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.
    metricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecification, default is Undefined, optional
        metric specification
    mode : str, default is Undefined, optional
        Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.
    schedulingBufferTime : str, default is Undefined, optional
        Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.
    """


    maxCapacityBreachBehavior?: str

    maxCapacityBuffer?: str

    metricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecification

    mode?: str

    schedulingBufferTime?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecification:
    r"""
    This structure includes the metrics and target utilization to use for predictive scaling.

    Attributes
    ----------
    customizedCapacityMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification, default is Undefined, optional
        customized capacity metric specification
    customizedLoadMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification, default is Undefined, optional
        customized load metric specification
    customizedScalingMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification, default is Undefined, optional
        customized scaling metric specification
    predefinedLoadMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification, default is Undefined, optional
        predefined load metric specification
    predefinedMetricPairSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification, default is Undefined, optional
        predefined metric pair specification
    predefinedScalingMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification, default is Undefined, optional
        predefined scaling metric specification
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedCapacityMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification

    customizedLoadMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification

    customizedScalingMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification

    predefinedLoadMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification

    predefinedMetricPairSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification

    predefinedScalingMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification

    targetValue?: float


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecification:
    r"""
    Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider predictive scaling configuration metric specification customized capacity metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedCapacityMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider predictive scaling configuration metric specification customized capacity metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecification:
    r"""
    Customized load metric specification.

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider predictive scaling configuration metric specification customized load metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedLoadMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider predictive scaling configuration metric specification customized load metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecification:
    r"""
    Customized scaling metric specification.

    Attributes
    ----------
    metricDataQueries : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0], default is Undefined, optional
        List of up to 10 structures that defines custom scaling metric in predictive scaling policy
    """


    metricDataQueries?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0]


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider predictive scaling configuration metric specification customized scaling metric specification metric data queries items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationCustomizedScalingMetricSpecificationMetricDataQueriesItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider predictive scaling configuration metric specification customized scaling metric specification metric data queries items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedLoadMetricSpecification:
    r"""
    Predefined load metric specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedMetricPairSpecification:
    r"""
    Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderPredictiveScalingConfigurationMetricSpecificationPredefinedScalingMetricSpecification:
    r"""
    Predefined scaling metric specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderStepAdjustmentItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider step adjustment items0

    Attributes
    ----------
    metricIntervalLowerBound : str, default is Undefined, optional
        Lower bound for the
        difference between the alarm threshold and the CloudWatch metric.
        Without a value, AWS will treat this bound as negative infinity.
    metricIntervalUpperBound : str, default is Undefined, optional
        Upper bound for the
        difference between the alarm threshold and the CloudWatch metric.
        Without a value, AWS will treat this bound as positive infinity. The upper bound
        must be greater than the lower bound.
    scalingAdjustment : float, default is Undefined, optional
        Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.
    """


    metricIntervalLowerBound?: str

    metricIntervalUpperBound?: str

    scalingAdjustment?: float


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfiguration:
    r"""
    Target tracking policy. These have the following structure:

    Attributes
    ----------
    customizedMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecification, default is Undefined, optional
        customized metric specification
    disableScaleIn : bool, default is Undefined, optional
        Whether scale in by the target tracking policy is disabled.
    predefinedMetricSpecification : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationPredefinedMetricSpecification, default is Undefined, optional
        predefined metric specification
    targetValue : float, default is Undefined, optional
        Target value for the metric.
    """


    customizedMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecification

    disableScaleIn?: bool

    predefinedMetricSpecification?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationPredefinedMetricSpecification

    targetValue?: float


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecification:
    r"""
    Customized metric. Conflicts with predefined_metric_specification.

    Attributes
    ----------
    metricDimension : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    metrics : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0], default is Undefined, optional
        Metrics to include, as a metric data query.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    statistic : str, default is Undefined, optional
        Statistic of the metric.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metricDimension?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0]

    metricName?: str

    metrics?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0]

    namespace?: str

    statistic?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider target tracking configuration customized metric specification metric dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider target tracking configuration customized metric specification metrics items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.
    id : str, default is Undefined, optional
        Short name for the metric used in target tracking scaling policy.
    label : str, default is Undefined, optional
        Human-readable label for this metric or expression.
    metricStat : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat, default is Undefined, optional
        metric stat
    returnData : bool, default is Undefined, optional
        Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true
    """


    expression?: str

    id?: str

    label?: str

    metricStat?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat

    returnData?: bool


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStat:
    r"""
    Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.

    Attributes
    ----------
    metric : AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric, default is Undefined, optional
        metric
    stat : str, default is Undefined, optional
        Statistic of the metrics to return.
    unit : str, default is Undefined, optional
        Unit of the metric.
    """


    metric?: AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric

    stat?: str

    unit?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetric:
    r"""
    Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.

    Attributes
    ----------
    dimensions : [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0], default is Undefined, optional
        Dimensions of the metric.
    metricName : str, default is Undefined, optional
        Name of the metric.
    namespace : str, default is Undefined, optional
        Namespace of the metric.
    """


    dimensions?: [AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0]

    metricName?: str

    namespace?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationCustomizedMetricSpecificationMetricsItems0MetricStatMetricDimensionsItems0:
    r"""
    autoscaling aws upbound io v1beta2 policy status at provider target tracking configuration customized metric specification metrics items0 metric stat metric dimensions items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the policy.
    value : str, default is Undefined, optional
        Value of the dimension.
    """


    name?: str

    value?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusAtProviderTargetTrackingConfigurationPredefinedMetricSpecification:
    r"""
    Predefined metric. Conflicts with customized_metric_specification.

    Attributes
    ----------
    predefinedMetricType : str, default is Undefined, optional
        Metric type.
    resourceLabel : str, default is Undefined, optional
        Identifies the resource associated with the metric type.
    """


    predefinedMetricType?: str

    resourceLabel?: str


schema AutoscalingAwsUpboundIoV1beta2PolicyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


