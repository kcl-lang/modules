"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Connector:
    r"""
    Connector is the Schema for the Connectors API. Provides an Amazon MSK Connect Connector resource. Changes to any parameter besides "scaling" will be rejected. Instead you must create a new resource.

    Attributes
    ----------
    apiVersion : str, default is "kafkaconnect.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Connector", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaconnectAwsUpboundIoV1beta1ConnectorSpec, default is Undefined, required
        spec
    status : KafkaconnectAwsUpboundIoV1beta1ConnectorStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafkaconnect.aws.upbound.io/v1beta1" = "kafkaconnect.aws.upbound.io/v1beta1"

    kind: "Connector" = "Connector"

    metadata?: v1.ObjectMeta

    spec: KafkaconnectAwsUpboundIoV1beta1ConnectorSpec

    status?: KafkaconnectAwsUpboundIoV1beta1ConnectorStatus


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpec:
    r"""
    ConnectorSpec defines the desired state of Connector

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProvider, default is Undefined, required
        for provider
    initProvider : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProvider

    initProvider?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecProviderConfigRef

    publishConnectionDetailsTo?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecWriteConnectionSecretToRef


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProvider:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider

    Attributes
    ----------
    capacity : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0], default is Undefined, optional
        Information about the capacity allocated to the connector. See below.
    connectorConfiguration : {str:str}, default is Undefined, optional
        A map of keys to values that represent the configuration for the connector.
    description : str, default is Undefined, optional
        A summary description of the connector.
    kafkaCluster : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0], default is Undefined, optional
        Specifies which Apache Kafka cluster to connect to. See below.
    kafkaClusterClientAuthentication : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterClientAuthenticationItems0], default is Undefined, optional
        Details of the client authentication used by the Apache Kafka cluster. See below.
    kafkaClusterEncryptionInTransit : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterEncryptionInTransitItems0], default is Undefined, optional
        Details of encryption in transit to the Apache Kafka cluster. See below.
    kafkaconnectVersion : str, default is Undefined, optional
        The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
    logDelivery : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0], default is Undefined, optional
        Details about log delivery. See below.
    name : str, default is Undefined, required
        The name of the connector.
    plugin : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0], default is Undefined, optional
        Specifies which plugins to use for the connector. See below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serviceExecutionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
    serviceExecutionRoleArnRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnRef, default is Undefined, optional
        service execution role arn ref
    serviceExecutionRoleArnSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnSelector, default is Undefined, optional
        service execution role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workerConfiguration : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0], default is Undefined, optional
        Specifies which worker configuration to use with the connector. See below.
    """


    capacity?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0]

    connectorConfiguration?: {str:str}

    description?: str

    kafkaCluster?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0]

    kafkaClusterClientAuthentication?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterClientAuthenticationItems0]

    kafkaClusterEncryptionInTransit?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterEncryptionInTransitItems0]

    kafkaconnectVersion?: str

    logDelivery?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0]

    name: str

    plugin?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0]

    region: str

    serviceExecutionRoleArn?: str

    serviceExecutionRoleArnRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnRef

    serviceExecutionRoleArnSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnSelector

    tags?: {str:str}

    workerConfiguration?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider capacity items0

    Attributes
    ----------
    autoscaling : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0], default is Undefined, optional
        Information about the auto scaling parameters for the connector. See below.
    provisionedCapacity : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0ProvisionedCapacityItems0], default is Undefined, optional
        Details about a fixed capacity allocated to a connector. See below.
    """


    autoscaling?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0]

    provisionedCapacity?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0ProvisionedCapacityItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider capacity items0 autoscaling items0

    Attributes
    ----------
    maxWorkerCount : float, default is Undefined, optional
        The maximum number of workers allocated to the connector.
    mcuCount : float, default is Undefined, optional
        The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
    minWorkerCount : float, default is Undefined, optional
        The minimum number of workers allocated to the connector.
    scaleInPolicy : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0], default is Undefined, optional
        The scale-in policy for the connector. See below.
    scaleOutPolicy : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0], default is Undefined, optional
        The scale-out policy for the connector. See below.
    """


    maxWorkerCount?: float

    mcuCount?: float

    minWorkerCount?: float

    scaleInPolicy?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0]

    scaleOutPolicy?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider capacity items0 autoscaling items0 scale in policy items0

    Attributes
    ----------
    cpuUtilizationPercentage : float, default is Undefined, optional
        The CPU utilization percentage threshold at which you want connector scale out to be triggered.
    """


    cpuUtilizationPercentage?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider capacity items0 autoscaling items0 scale out policy items0

    Attributes
    ----------
    cpuUtilizationPercentage : float, default is Undefined, optional
        The CPU utilization percentage threshold at which you want connector scale out to be triggered.
    """


    cpuUtilizationPercentage?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderCapacityItems0ProvisionedCapacityItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider capacity items0 provisioned capacity items0

    Attributes
    ----------
    mcuCount : float, default is Undefined, optional
        The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
    workerCount : float, default is Undefined, optional
        The number of workers that are allocated to the connector.
    """


    mcuCount?: float

    workerCount?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterClientAuthenticationItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider kafka cluster client authentication items0

    Attributes
    ----------
    authenticationType : str, default is Undefined, optional
        The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.
    """


    authenticationType?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterEncryptionInTransitItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider kafka cluster encryption in transit items0

    Attributes
    ----------
    encryptionType : str, default is Undefined, optional
        The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.
    """


    encryptionType?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider kafka cluster items0

    Attributes
    ----------
    apacheKafkaCluster : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0], default is Undefined, optional
        The Apache Kafka cluster to which the connector is connected.
    """


    apacheKafkaCluster?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider kafka cluster items0 apache kafka cluster items0

    Attributes
    ----------
    bootstrapServers : str, default is Undefined, optional
        The bootstrap servers of the cluster.
    vpc : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0], default is Undefined, optional
        Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
    """


    bootstrapServers?: str

    vpc?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider kafka cluster items0 apache kafka cluster items0 vpc items0

    Attributes
    ----------
    securityGroupRefs : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        The security groups for the connector.
    subnetRefs : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnets.
    subnetSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        The subnets for the connector.
    """


    securityGroupRefs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0]

    securityGroupSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelector

    securityGroups?: [str]

    subnetRefs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0]

    subnetSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelector

    subnets?: [str]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0Policy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0Policy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider log delivery items0

    Attributes
    ----------
    workerLogDelivery : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0], default is Undefined, optional
        The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
    """


    workerLogDelivery?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider log delivery items0 worker log delivery items0

    Attributes
    ----------
    cloudwatchLogs : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0], default is Undefined, optional
        Details about delivering logs to Amazon CloudWatch Logs. See below.
    firehose : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0], default is Undefined, optional
        Details about delivering logs to Amazon Kinesis Data Firehose. See below.
    s3 : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0], default is Undefined, optional
        Details about delivering logs to Amazon S3. See below.
    """


    cloudwatchLogs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0]

    firehose?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0]

    s3?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider log delivery items0 worker log delivery items0 cloudwatch logs items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    logGroup : str, default is Undefined, optional
        The name of the CloudWatch log group that is the destination for log delivery.
    logGroupRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRef, default is Undefined, optional
        log group ref
    logGroupSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelector, default is Undefined, optional
        log group selector
    """


    enabled?: bool

    logGroup?: str

    logGroupRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRef

    logGroupSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelector


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider log delivery items0 worker log delivery items0 firehose items0

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
    deliveryStreamRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRef, default is Undefined, optional
        delivery stream ref
    deliveryStreamSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelector, default is Undefined, optional
        delivery stream selector
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    """


    deliveryStream?: str

    deliveryStreamRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRef

    deliveryStreamSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelector

    enabled?: bool


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRef:
    r"""
    Reference to a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider log delivery items0 worker log delivery items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the S3 bucket that is the destination for log delivery.
    bucketRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelector, default is Undefined, optional
        bucket selector
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    prefix : str, default is Undefined, optional
        The S3 prefix that is the destination for log delivery.
    """


    bucket?: str

    bucketRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRef

    bucketSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelector

    enabled?: bool

    prefix?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider plugin items0

    Attributes
    ----------
    customPlugin : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0], default is Undefined, optional
        Details about a custom plugin. See below.
    """


    customPlugin?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider plugin items0 custom plugin items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the worker configuration.
    arnRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        The revision of the worker configuration.
    """


    arn?: str

    arnRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnRef

    arnSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnSelector

    revision?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnRef:
    r"""
    Reference to a CustomPlugin in kafkaconnect to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnSelector:
    r"""
    Selector for a CustomPlugin in kafkaconnect to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderPluginItems0CustomPluginItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderServiceExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec for provider worker configuration items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the worker configuration.
    arnRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        The revision of the worker configuration.
    """


    arn?: str

    arnRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnRef

    arnSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnSelector

    revision?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnRef:
    r"""
    Reference to a WorkerConfiguration in kafkaconnect to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnSelector:
    r"""
    Selector for a WorkerConfiguration in kafkaconnect to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecForProviderWorkerConfigurationItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    capacity : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0], default is Undefined, optional
        Information about the capacity allocated to the connector. See below.
    connectorConfiguration : {str:str}, default is Undefined, optional
        A map of keys to values that represent the configuration for the connector.
    description : str, default is Undefined, optional
        A summary description of the connector.
    kafkaCluster : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0], default is Undefined, optional
        Specifies which Apache Kafka cluster to connect to. See below.
    kafkaClusterClientAuthentication : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterClientAuthenticationItems0], default is Undefined, optional
        Details of the client authentication used by the Apache Kafka cluster. See below.
    kafkaClusterEncryptionInTransit : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterEncryptionInTransitItems0], default is Undefined, optional
        Details of encryption in transit to the Apache Kafka cluster. See below.
    kafkaconnectVersion : str, default is Undefined, optional
        The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
    logDelivery : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0], default is Undefined, optional
        Details about log delivery. See below.
    plugin : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0], default is Undefined, optional
        Specifies which plugins to use for the connector. See below.
    serviceExecutionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
    serviceExecutionRoleArnRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnRef, default is Undefined, optional
        service execution role arn ref
    serviceExecutionRoleArnSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnSelector, default is Undefined, optional
        service execution role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    workerConfiguration : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0], default is Undefined, optional
        Specifies which worker configuration to use with the connector. See below.
    """


    capacity?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0]

    connectorConfiguration?: {str:str}

    description?: str

    kafkaCluster?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0]

    kafkaClusterClientAuthentication?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterClientAuthenticationItems0]

    kafkaClusterEncryptionInTransit?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterEncryptionInTransitItems0]

    kafkaconnectVersion?: str

    logDelivery?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0]

    plugin?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0]

    serviceExecutionRoleArn?: str

    serviceExecutionRoleArnRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnRef

    serviceExecutionRoleArnSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnSelector

    tags?: {str:str}

    workerConfiguration?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider capacity items0

    Attributes
    ----------
    autoscaling : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0], default is Undefined, optional
        Information about the auto scaling parameters for the connector. See below.
    provisionedCapacity : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0ProvisionedCapacityItems0], default is Undefined, optional
        Details about a fixed capacity allocated to a connector. See below.
    """


    autoscaling?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0]

    provisionedCapacity?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0ProvisionedCapacityItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider capacity items0 autoscaling items0

    Attributes
    ----------
    maxWorkerCount : float, default is Undefined, optional
        The maximum number of workers allocated to the connector.
    mcuCount : float, default is Undefined, optional
        The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
    minWorkerCount : float, default is Undefined, optional
        The minimum number of workers allocated to the connector.
    scaleInPolicy : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0], default is Undefined, optional
        The scale-in policy for the connector. See below.
    scaleOutPolicy : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0], default is Undefined, optional
        The scale-out policy for the connector. See below.
    """


    maxWorkerCount?: float

    mcuCount?: float

    minWorkerCount?: float

    scaleInPolicy?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0]

    scaleOutPolicy?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider capacity items0 autoscaling items0 scale in policy items0

    Attributes
    ----------
    cpuUtilizationPercentage : float, default is Undefined, optional
        The CPU utilization percentage threshold at which you want connector scale out to be triggered.
    """


    cpuUtilizationPercentage?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider capacity items0 autoscaling items0 scale out policy items0

    Attributes
    ----------
    cpuUtilizationPercentage : float, default is Undefined, optional
        The CPU utilization percentage threshold at which you want connector scale out to be triggered.
    """


    cpuUtilizationPercentage?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderCapacityItems0ProvisionedCapacityItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider capacity items0 provisioned capacity items0

    Attributes
    ----------
    mcuCount : float, default is Undefined, optional
        The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
    workerCount : float, default is Undefined, optional
        The number of workers that are allocated to the connector.
    """


    mcuCount?: float

    workerCount?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterClientAuthenticationItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider kafka cluster client authentication items0

    Attributes
    ----------
    authenticationType : str, default is Undefined, optional
        The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.
    """


    authenticationType?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterEncryptionInTransitItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider kafka cluster encryption in transit items0

    Attributes
    ----------
    encryptionType : str, default is Undefined, optional
        The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.
    """


    encryptionType?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider kafka cluster items0

    Attributes
    ----------
    apacheKafkaCluster : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0], default is Undefined, optional
        The Apache Kafka cluster to which the connector is connected.
    """


    apacheKafkaCluster?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider kafka cluster items0 apache kafka cluster items0

    Attributes
    ----------
    bootstrapServers : str, default is Undefined, optional
        The bootstrap servers of the cluster.
    vpc : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0], default is Undefined, optional
        Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
    """


    bootstrapServers?: str

    vpc?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider kafka cluster items0 apache kafka cluster items0 vpc items0

    Attributes
    ----------
    securityGroupRefs : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        The security groups for the connector.
    subnetRefs : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnets.
    subnetSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelector, default is Undefined, optional
        subnet selector
    subnets : [str], default is Undefined, optional
        The subnets for the connector.
    """


    securityGroupRefs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0]

    securityGroupSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelector

    securityGroups?: [str]

    subnetRefs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0]

    subnetSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelector

    subnets?: [str]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0Policy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SecurityGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0Policy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0SubnetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider log delivery items0

    Attributes
    ----------
    workerLogDelivery : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0], default is Undefined, optional
        The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
    """


    workerLogDelivery?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider log delivery items0 worker log delivery items0

    Attributes
    ----------
    cloudwatchLogs : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0], default is Undefined, optional
        Details about delivering logs to Amazon CloudWatch Logs. See below.
    firehose : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0], default is Undefined, optional
        Details about delivering logs to Amazon Kinesis Data Firehose. See below.
    s3 : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0], default is Undefined, optional
        Details about delivering logs to Amazon S3. See below.
    """


    cloudwatchLogs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0]

    firehose?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0]

    s3?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider log delivery items0 worker log delivery items0 cloudwatch logs items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    logGroup : str, default is Undefined, optional
        The name of the CloudWatch log group that is the destination for log delivery.
    logGroupRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRef, default is Undefined, optional
        log group ref
    logGroupSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelector, default is Undefined, optional
        log group selector
    """


    enabled?: bool

    logGroup?: str

    logGroupRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRef

    logGroupSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelector


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0LogGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider log delivery items0 worker log delivery items0 firehose items0

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
    deliveryStreamRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRef, default is Undefined, optional
        delivery stream ref
    deliveryStreamSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelector, default is Undefined, optional
        delivery stream selector
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    """


    deliveryStream?: str

    deliveryStreamRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRef

    deliveryStreamSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelector

    enabled?: bool


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRef:
    r"""
    Reference to a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0DeliveryStreamSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider log delivery items0 worker log delivery items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the S3 bucket that is the destination for log delivery.
    bucketRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelector, default is Undefined, optional
        bucket selector
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    prefix : str, default is Undefined, optional
        The S3 prefix that is the destination for log delivery.
    """


    bucket?: str

    bucketRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRef

    bucketSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelector

    enabled?: bool

    prefix?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider plugin items0

    Attributes
    ----------
    customPlugin : [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0], default is Undefined, optional
        Details about a custom plugin. See below.
    """


    customPlugin?: [KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider plugin items0 custom plugin items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the worker configuration.
    arnRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        The revision of the worker configuration.
    """


    arn?: str

    arnRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnRef

    arnSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnSelector

    revision?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnRef:
    r"""
    Reference to a CustomPlugin in kafkaconnect to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnSelector:
    r"""
    Selector for a CustomPlugin in kafkaconnect to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderPluginItems0CustomPluginItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate serviceExecutionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderServiceExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector spec init provider worker configuration items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the worker configuration.
    arnRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        The revision of the worker configuration.
    """


    arn?: str

    arnRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnRef

    arnSelector?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnSelector

    revision?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnRef:
    r"""
    Reference to a WorkerConfiguration in kafkaconnect to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnSelector:
    r"""
    Selector for a WorkerConfiguration in kafkaconnect to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnSelectorPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecInitProviderWorkerConfigurationItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecProviderConfigRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRef

    metadata?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToMetadata

    name: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRefPolicy


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatus:
    r"""
    ConnectorStatus defines the observed state of Connector.

    Attributes
    ----------
    atProvider : KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProvider

    conditions?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusConditionsItems0]

    observedGeneration?: int


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProvider:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the custom plugin.
    capacity : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0], default is Undefined, optional
        Information about the capacity allocated to the connector. See below.
    connectorConfiguration : {str:str}, default is Undefined, optional
        A map of keys to values that represent the configuration for the connector.
    description : str, default is Undefined, optional
        A summary description of the connector.
    id : str, default is Undefined, optional
        id
    kafkaCluster : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0], default is Undefined, optional
        Specifies which Apache Kafka cluster to connect to. See below.
    kafkaClusterClientAuthentication : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterClientAuthenticationItems0], default is Undefined, optional
        Details of the client authentication used by the Apache Kafka cluster. See below.
    kafkaClusterEncryptionInTransit : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterEncryptionInTransitItems0], default is Undefined, optional
        Details of encryption in transit to the Apache Kafka cluster. See below.
    kafkaconnectVersion : str, default is Undefined, optional
        The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
    logDelivery : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0], default is Undefined, optional
        Details about log delivery. See below.
    name : str, default is Undefined, optional
        The name of the connector.
    plugin : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderPluginItems0], default is Undefined, optional
        Specifies which plugins to use for the connector. See below.
    serviceExecutionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    version : str, default is Undefined, optional
        The current version of the connector.
    workerConfiguration : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderWorkerConfigurationItems0], default is Undefined, optional
        Specifies which worker configuration to use with the connector. See below.
    """


    arn?: str

    capacity?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0]

    connectorConfiguration?: {str:str}

    description?: str

    id?: str

    kafkaCluster?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0]

    kafkaClusterClientAuthentication?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterClientAuthenticationItems0]

    kafkaClusterEncryptionInTransit?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterEncryptionInTransitItems0]

    kafkaconnectVersion?: str

    logDelivery?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0]

    name?: str

    plugin?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderPluginItems0]

    serviceExecutionRoleArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: str

    workerConfiguration?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderWorkerConfigurationItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider capacity items0

    Attributes
    ----------
    autoscaling : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0], default is Undefined, optional
        Information about the auto scaling parameters for the connector. See below.
    provisionedCapacity : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0ProvisionedCapacityItems0], default is Undefined, optional
        Details about a fixed capacity allocated to a connector. See below.
    """


    autoscaling?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0]

    provisionedCapacity?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0ProvisionedCapacityItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider capacity items0 autoscaling items0

    Attributes
    ----------
    maxWorkerCount : float, default is Undefined, optional
        The maximum number of workers allocated to the connector.
    mcuCount : float, default is Undefined, optional
        The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
    minWorkerCount : float, default is Undefined, optional
        The minimum number of workers allocated to the connector.
    scaleInPolicy : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0], default is Undefined, optional
        The scale-in policy for the connector. See below.
    scaleOutPolicy : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0], default is Undefined, optional
        The scale-out policy for the connector. See below.
    """


    maxWorkerCount?: float

    mcuCount?: float

    minWorkerCount?: float

    scaleInPolicy?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0]

    scaleOutPolicy?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0ScaleInPolicyItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider capacity items0 autoscaling items0 scale in policy items0

    Attributes
    ----------
    cpuUtilizationPercentage : float, default is Undefined, optional
        The CPU utilization percentage threshold at which you want connector scale out to be triggered.
    """


    cpuUtilizationPercentage?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0AutoscalingItems0ScaleOutPolicyItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider capacity items0 autoscaling items0 scale out policy items0

    Attributes
    ----------
    cpuUtilizationPercentage : float, default is Undefined, optional
        The CPU utilization percentage threshold at which you want connector scale out to be triggered.
    """


    cpuUtilizationPercentage?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderCapacityItems0ProvisionedCapacityItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider capacity items0 provisioned capacity items0

    Attributes
    ----------
    mcuCount : float, default is Undefined, optional
        The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: 1, 2, 4, 8. The default value is 1.
    workerCount : float, default is Undefined, optional
        The number of workers that are allocated to the connector.
    """


    mcuCount?: float

    workerCount?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterClientAuthenticationItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider kafka cluster client authentication items0

    Attributes
    ----------
    authenticationType : str, default is Undefined, optional
        The type of client authentication used to connect to the Apache Kafka cluster. Valid values: IAM, NONE. A value of NONE means that no client authentication is used. The default value is NONE.
    """


    authenticationType?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterEncryptionInTransitItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider kafka cluster encryption in transit items0

    Attributes
    ----------
    encryptionType : str, default is Undefined, optional
        The type of encryption in transit to the Apache Kafka cluster. Valid values: PLAINTEXT, TLS. The default values is PLAINTEXT.
    """


    encryptionType?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider kafka cluster items0

    Attributes
    ----------
    apacheKafkaCluster : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0ApacheKafkaClusterItems0], default is Undefined, optional
        The Apache Kafka cluster to which the connector is connected.
    """


    apacheKafkaCluster?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0ApacheKafkaClusterItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0ApacheKafkaClusterItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider kafka cluster items0 apache kafka cluster items0

    Attributes
    ----------
    bootstrapServers : str, default is Undefined, optional
        The bootstrap servers of the cluster.
    vpc : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0], default is Undefined, optional
        Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
    """


    bootstrapServers?: str

    vpc?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderKafkaClusterItems0ApacheKafkaClusterItems0VpcItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider kafka cluster items0 apache kafka cluster items0 vpc items0

    Attributes
    ----------
    securityGroups : [str], default is Undefined, optional
        The security groups for the connector.
    subnets : [str], default is Undefined, optional
        The subnets for the connector.
    """


    securityGroups?: [str]

    subnets?: [str]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider log delivery items0

    Attributes
    ----------
    workerLogDelivery : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0], default is Undefined, optional
        The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.
    """


    workerLogDelivery?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider log delivery items0 worker log delivery items0

    Attributes
    ----------
    cloudwatchLogs : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0], default is Undefined, optional
        Details about delivering logs to Amazon CloudWatch Logs. See below.
    firehose : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0], default is Undefined, optional
        Details about delivering logs to Amazon Kinesis Data Firehose. See below.
    s3 : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0], default is Undefined, optional
        Details about delivering logs to Amazon S3. See below.
    """


    cloudwatchLogs?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0]

    firehose?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0]

    s3?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0CloudwatchLogsItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider log delivery items0 worker log delivery items0 cloudwatch logs items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    logGroup : str, default is Undefined, optional
        The name of the CloudWatch log group that is the destination for log delivery.
    """


    enabled?: bool

    logGroup?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0FirehoseItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider log delivery items0 worker log delivery items0 firehose items0

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        The name of the Kinesis Data Firehose delivery stream that is the destination for log delivery.
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    """


    deliveryStream?: str

    enabled?: bool


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderLogDeliveryItems0WorkerLogDeliveryItems0S3Items0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider log delivery items0 worker log delivery items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the S3 bucket that is the destination for log delivery.
    enabled : bool, default is Undefined, optional
        Specifies whether connector logs get sent to the specified Amazon S3 destination.
    prefix : str, default is Undefined, optional
        The S3 prefix that is the destination for log delivery.
    """


    bucket?: str

    enabled?: bool

    prefix?: str


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderPluginItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider plugin items0

    Attributes
    ----------
    customPlugin : [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderPluginItems0CustomPluginItems0], default is Undefined, optional
        Details about a custom plugin. See below.
    """


    customPlugin?: [KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderPluginItems0CustomPluginItems0]


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderPluginItems0CustomPluginItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider plugin items0 custom plugin items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the worker configuration.
    revision : float, default is Undefined, optional
        The revision of the worker configuration.
    """


    arn?: str

    revision?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusAtProviderWorkerConfigurationItems0:
    r"""
    kafkaconnect aws upbound io v1beta1 connector status at provider worker configuration items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the worker configuration.
    revision : float, default is Undefined, optional
        The revision of the worker configuration.
    """


    arn?: str

    revision?: float


schema KafkaconnectAwsUpboundIoV1beta1ConnectorStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


