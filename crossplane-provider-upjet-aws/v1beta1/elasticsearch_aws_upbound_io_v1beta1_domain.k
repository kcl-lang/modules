"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Domain:
    r"""
    Domain is the Schema for the Domains API.

    Attributes
    ----------
    apiVersion : str, default is "elasticsearch.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Domain", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticsearchAwsUpboundIoV1beta1DomainSpec, default is Undefined, required
        spec
    status : ElasticsearchAwsUpboundIoV1beta1DomainStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticsearch.aws.upbound.io/v1beta1" = "elasticsearch.aws.upbound.io/v1beta1"

    kind: "Domain" = "Domain"

    metadata?: v1.ObjectMeta

    spec: ElasticsearchAwsUpboundIoV1beta1DomainSpec

    status?: ElasticsearchAwsUpboundIoV1beta1DomainStatus


schema ElasticsearchAwsUpboundIoV1beta1DomainSpec:
    r"""
    DomainSpec defines the desired state of Domain

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProvider, default is Undefined, required
        for provider
    initProvider : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProvider

    initProvider?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecProviderConfigRef

    publishConnectionDetailsTo?: ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecWriteConnectionSecretToRef


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProvider:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider

    Attributes
    ----------
    accessPolicies : str, default is Undefined, optional
        IAM policy document specifying the access policies for the domain.
    advancedOptions : {str:str}, default is Undefined, optional
        Key-value string pairs to specify advanced configuration options.
    advancedSecurityOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0], default is Undefined, optional
        Configuration block for fine-grained access control. Detailed below.
    autoTuneOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0], default is Undefined, optional
        Configuration block for the Auto-Tune options of the domain. Detailed below.
    clusterConfig : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0], default is Undefined, optional
        Configuration block for the cluster of the domain. Detailed below.
    cognitoOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderCognitoOptionsItems0], default is Undefined, optional
        Configuration block for authenticating Kibana with Cognito. Detailed below.
    domainEndpointOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderDomainEndpointOptionsItems0], default is Undefined, optional
        Configuration block for domain endpoint HTTP(S) related options. Detailed below.
    ebsOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderEbsOptionsItems0], default is Undefined, optional
        Configuration block for EBS related options, may be required based on chosen instance size. Detailed below.
    elasticsearchVersion : str, default is Undefined, optional
        Version of Elasticsearch to deploy. Defaults to 1.5.
    encryptAtRest : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderEncryptAtRestItems0], default is Undefined, optional
        Configuration block for encrypt at rest options. Only available for certain instance types. Detailed below.
    logPublishingOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0], default is Undefined, optional
        Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
    nodeToNodeEncryption : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderNodeToNodeEncryptionItems0], default is Undefined, optional
        Configuration block for node-to-node encryption options. Detailed below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    snapshotOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderSnapshotOptionsItems0], default is Undefined, optional
        Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running Elasticsearch 5.3 and later, Amazon ES takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions of Elasticsearch, Amazon ES takes daily automated snapshots.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0], default is Undefined, optional
        Configuration block for VPC related options. Adding or removing this configuration forces a new resource (documentation). Detailed below.
    """


    accessPolicies?: str

    advancedOptions?: {str:str}

    advancedSecurityOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0]

    autoTuneOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0]

    clusterConfig?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0]

    cognitoOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderCognitoOptionsItems0]

    domainEndpointOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderDomainEndpointOptionsItems0]

    ebsOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderEbsOptionsItems0]

    elasticsearchVersion?: str

    encryptAtRest?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderEncryptAtRestItems0]

    logPublishingOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0]

    nodeToNodeEncryption?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderNodeToNodeEncryptionItems0]

    region: str

    snapshotOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderSnapshotOptionsItems0]

    tags?: {str:str}

    vpcOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0]


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider advanced security options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether advanced security is enabled.
    internalUserDatabaseEnabled : bool, default is Undefined, optional
        Whether the internal user database is enabled. If not set, defaults to false by the AWS API.
    masterUserOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0], default is Undefined, optional
        Configuration block for the main user. Detailed below.
    """


    enabled?: bool

    internalUserDatabaseEnabled?: bool

    masterUserOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0]


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider advanced security options items0 master user options items0

    Attributes
    ----------
    masterUserArn : str, default is Undefined, optional
        ARN for the main user. Only specify if internal_user_database_enabled is not set or set to false.
    masterUserName : str, default is Undefined, optional
        Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.
    masterUserPasswordSecretRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0MasterUserPasswordSecretRef, default is Undefined, optional
        master user password secret ref
    """


    masterUserArn?: str

    masterUserName?: str

    masterUserPasswordSecretRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0MasterUserPasswordSecretRef


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0MasterUserPasswordSecretRef:
    r"""
    Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider auto tune options items0

    Attributes
    ----------
    desiredState : str, default is Undefined, optional
        The Auto-Tune desired state for the domain. Valid values: ENABLED or DISABLED.
    maintenanceSchedule : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0MaintenanceScheduleItems0], default is Undefined, optional
        Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
    rollbackOnDisable : str, default is Undefined, optional
        Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: DEFAULT_ROLLBACK or NO_ROLLBACK.
    """


    desiredState?: str

    maintenanceSchedule?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0MaintenanceScheduleItems0]

    rollbackOnDisable?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0MaintenanceScheduleItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider auto tune options items0 maintenance schedule items0

    Attributes
    ----------
    cronExpressionForRecurrence : str, default is Undefined, optional
        A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
    duration : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0], default is Undefined, optional
        Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.
    startAt : str, default is Undefined, optional
        Date and time at which to start the Auto-Tune maintenance schedule in RFC3339 format.
    """


    cronExpressionForRecurrence?: str

    duration?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0]

    startAt?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider auto tune options items0 maintenance schedule items0 duration items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: HOURS.
    value : float, default is Undefined, optional
        An integer specifying the value of the duration of an Auto-Tune maintenance window.
    """


    unit?: str

    value?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider cluster config items0

    Attributes
    ----------
    coldStorageOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0ColdStorageOptionsItems0], default is Undefined, optional
        Configuration block containing cold storage configuration. Detailed below.
    dedicatedMasterCount : float, default is Undefined, optional
        Number of dedicated main nodes in the cluster.
    dedicatedMasterEnabled : bool, default is Undefined, optional
        Whether dedicated main nodes are enabled for the cluster.
    dedicatedMasterType : str, default is Undefined, optional
        Instance type of the dedicated main nodes in the cluster.
    instanceCount : float, default is Undefined, optional
        Number of instances in the cluster.
    instanceType : str, default is Undefined, optional
        Instance type of data nodes in the cluster.
    warmCount : float, default is Undefined, optional
        Number of warm nodes in the cluster. Valid values are between 2 and 150. warm_count can be only and must be set when warm_enabled is set to true.
    warmEnabled : bool, default is Undefined, optional
        Whether to enable warm storage.
    warmType : str, default is Undefined, optional
        Instance type for the Elasticsearch cluster's warm nodes. Valid values are ultrawarm1.medium.elasticsearch, ultrawarm1.large.elasticsearch and ultrawarm1.xlarge.elasticsearch. warm_type can be only and must be set when warm_enabled is set to true.
    zoneAwarenessConfig : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0ZoneAwarenessConfigItems0], default is Undefined, optional
        Configuration block containing zone awareness settings. Detailed below.
    zoneAwarenessEnabled : bool, default is Undefined, optional
        Whether zone awareness is enabled, set to true for multi-az deployment. To enable awareness with three Availability Zones, the availability_zone_count within the zone_awareness_config must be set to 3.
    """


    coldStorageOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0ColdStorageOptionsItems0]

    dedicatedMasterCount?: float

    dedicatedMasterEnabled?: bool

    dedicatedMasterType?: str

    instanceCount?: float

    instanceType?: str

    warmCount?: float

    warmEnabled?: bool

    warmType?: str

    zoneAwarenessConfig?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0ZoneAwarenessConfigItems0]

    zoneAwarenessEnabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0ColdStorageOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider cluster config items0 cold storage options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Boolean to enable cold storage for an Elasticsearch domain. Defaults to false. Master and ultrawarm nodes must be enabled for cold storage.
    """


    enabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderClusterConfigItems0ZoneAwarenessConfigItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider cluster config items0 zone awareness config items0

    Attributes
    ----------
    availabilityZoneCount : float, default is Undefined, optional
        Number of Availability Zones for the domain to use with zone_awareness_enabled. Defaults to 2. Valid values: 2 or 3.
    """


    availabilityZoneCount?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderCognitoOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider cognito options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether Amazon Cognito authentication with Kibana is enabled or not.
    identityPoolId : str, default is Undefined, optional
        ID of the Cognito Identity Pool to use.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
    userPoolId : str, default is Undefined, optional
        ID of the Cognito User Pool to use.
    """


    enabled?: bool

    identityPoolId?: str

    roleArn?: str

    userPoolId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderDomainEndpointOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider domain endpoint options items0

    Attributes
    ----------
    customEndpoint : str, default is Undefined, optional
        Fully qualified domain for your custom endpoint.
    customEndpointCertificateArn : str, default is Undefined, optional
        ACM certificate ARN for your custom endpoint.
    customEndpointEnabled : bool, default is Undefined, optional
        Whether to enable custom endpoint for the Elasticsearch domain.
    enforceHttps : bool, default is Undefined, optional
        Whether or not to require HTTPS. Defaults to true.
    tlsSecurityPolicy : str, default is Undefined, optional
        Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  Policy-Min-TLS-1-0-2019-07 and Policy-Min-TLS-1-2-2019-07.
    """


    customEndpoint?: str

    customEndpointCertificateArn?: str

    customEndpointEnabled?: bool

    enforceHttps?: bool

    tlsSecurityPolicy?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderEbsOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider ebs options items0

    Attributes
    ----------
    ebsEnabled : bool, default is Undefined, optional
        Whether EBS volumes are attached to data nodes in the domain.
    iops : float, default is Undefined, optional
        Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
    throughput : float, default is Undefined, optional
        Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
    volumeSize : float, default is Undefined, optional
        Size of EBS volumes attached to data nodes (in GiB).
    volumeType : str, default is Undefined, optional
        Type of EBS volumes attached to data nodes.
    """


    ebsEnabled?: bool

    iops?: float

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderEncryptAtRestItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider encrypt at rest items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. If the encrypt_at_rest block is not provided then this defaults to false. Enabling encryption on new domains requires elasticsearch_version 5.1 or greater.
    kmsKeyId : str, default is Undefined, optional
        KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the aws/es service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN.
    """


    enabled?: bool

    kmsKeyId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider log publishing options items0

    Attributes
    ----------
    cloudwatchLogGroupArn : str, default is Undefined, optional
        ARN of the Cloudwatch log group to which log needs to be published.
    cloudwatchLogGroupArnRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRef, default is Undefined, optional
        cloudwatch log group arn ref
    cloudwatchLogGroupArnSelector : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelector, default is Undefined, optional
        cloudwatch log group arn selector
    enabled : bool, default is Undefined, optional
        Whether given log publishing option is enabled or not.
    logType : str, default is Undefined, optional
        Type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS, AUDIT_LOGS.
    """


    cloudwatchLogGroupArn?: str

    cloudwatchLogGroupArnRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRef

    cloudwatchLogGroupArnSelector?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelector

    enabled?: bool

    logType?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate cloudwatchLogGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRefPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate cloudwatchLogGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelectorPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderNodeToNodeEncryptionItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider node to node encryption items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable node-to-node encryption. If the node_to_node_encryption block is not provided then this defaults to false. Enabling node-to-node encryption of a new domain requires an elasticsearch_version of 6.0 or greater.
    """


    enabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderSnapshotOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider snapshot options items0

    Attributes
    ----------
    automatedSnapshotStartHour : float, default is Undefined, optional
        Hour during which the service takes an automated daily snapshot of the indices in the domain.
    """


    automatedSnapshotStartHour?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec for provider vpc options items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
    securityGroupIdsRefs : [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsSelector

    subnetIds?: [str]


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsRefsItems0Policy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsSelectorPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecForProviderVpcOptionsItems0SecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessPolicies : str, default is Undefined, optional
        IAM policy document specifying the access policies for the domain.
    advancedOptions : {str:str}, default is Undefined, optional
        Key-value string pairs to specify advanced configuration options.
    advancedSecurityOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0], default is Undefined, optional
        Configuration block for fine-grained access control. Detailed below.
    autoTuneOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0], default is Undefined, optional
        Configuration block for the Auto-Tune options of the domain. Detailed below.
    clusterConfig : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0], default is Undefined, optional
        Configuration block for the cluster of the domain. Detailed below.
    cognitoOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderCognitoOptionsItems0], default is Undefined, optional
        Configuration block for authenticating Kibana with Cognito. Detailed below.
    domainEndpointOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderDomainEndpointOptionsItems0], default is Undefined, optional
        Configuration block for domain endpoint HTTP(S) related options. Detailed below.
    ebsOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderEbsOptionsItems0], default is Undefined, optional
        Configuration block for EBS related options, may be required based on chosen instance size. Detailed below.
    elasticsearchVersion : str, default is Undefined, optional
        Version of Elasticsearch to deploy. Defaults to 1.5.
    encryptAtRest : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderEncryptAtRestItems0], default is Undefined, optional
        Configuration block for encrypt at rest options. Only available for certain instance types. Detailed below.
    logPublishingOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0], default is Undefined, optional
        Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
    nodeToNodeEncryption : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderNodeToNodeEncryptionItems0], default is Undefined, optional
        Configuration block for node-to-node encryption options. Detailed below.
    snapshotOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderSnapshotOptionsItems0], default is Undefined, optional
        Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running Elasticsearch 5.3 and later, Amazon ES takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions of Elasticsearch, Amazon ES takes daily automated snapshots.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0], default is Undefined, optional
        Configuration block for VPC related options. Adding or removing this configuration forces a new resource (documentation). Detailed below.
    """


    accessPolicies?: str

    advancedOptions?: {str:str}

    advancedSecurityOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0]

    autoTuneOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0]

    clusterConfig?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0]

    cognitoOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderCognitoOptionsItems0]

    domainEndpointOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderDomainEndpointOptionsItems0]

    ebsOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderEbsOptionsItems0]

    elasticsearchVersion?: str

    encryptAtRest?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderEncryptAtRestItems0]

    logPublishingOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0]

    nodeToNodeEncryption?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderNodeToNodeEncryptionItems0]

    snapshotOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderSnapshotOptionsItems0]

    tags?: {str:str}

    vpcOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0]


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider advanced security options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether advanced security is enabled.
    internalUserDatabaseEnabled : bool, default is Undefined, optional
        Whether the internal user database is enabled. If not set, defaults to false by the AWS API.
    masterUserOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0], default is Undefined, optional
        Configuration block for the main user. Detailed below.
    """


    enabled?: bool

    internalUserDatabaseEnabled?: bool

    masterUserOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0]


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider advanced security options items0 master user options items0

    Attributes
    ----------
    masterUserArn : str, default is Undefined, optional
        ARN for the main user. Only specify if internal_user_database_enabled is not set or set to false.
    masterUserName : str, default is Undefined, optional
        Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.
    masterUserPasswordSecretRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0MasterUserPasswordSecretRef, default is Undefined, optional
        master user password secret ref
    """


    masterUserArn?: str

    masterUserName?: str

    masterUserPasswordSecretRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0MasterUserPasswordSecretRef


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0MasterUserPasswordSecretRef:
    r"""
    Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider auto tune options items0

    Attributes
    ----------
    desiredState : str, default is Undefined, optional
        The Auto-Tune desired state for the domain. Valid values: ENABLED or DISABLED.
    maintenanceSchedule : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0MaintenanceScheduleItems0], default is Undefined, optional
        Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
    rollbackOnDisable : str, default is Undefined, optional
        Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: DEFAULT_ROLLBACK or NO_ROLLBACK.
    """


    desiredState?: str

    maintenanceSchedule?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0MaintenanceScheduleItems0]

    rollbackOnDisable?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0MaintenanceScheduleItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider auto tune options items0 maintenance schedule items0

    Attributes
    ----------
    cronExpressionForRecurrence : str, default is Undefined, optional
        A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
    duration : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0], default is Undefined, optional
        Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.
    startAt : str, default is Undefined, optional
        Date and time at which to start the Auto-Tune maintenance schedule in RFC3339 format.
    """


    cronExpressionForRecurrence?: str

    duration?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0]

    startAt?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider auto tune options items0 maintenance schedule items0 duration items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: HOURS.
    value : float, default is Undefined, optional
        An integer specifying the value of the duration of an Auto-Tune maintenance window.
    """


    unit?: str

    value?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider cluster config items0

    Attributes
    ----------
    coldStorageOptions : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0ColdStorageOptionsItems0], default is Undefined, optional
        Configuration block containing cold storage configuration. Detailed below.
    dedicatedMasterCount : float, default is Undefined, optional
        Number of dedicated main nodes in the cluster.
    dedicatedMasterEnabled : bool, default is Undefined, optional
        Whether dedicated main nodes are enabled for the cluster.
    dedicatedMasterType : str, default is Undefined, optional
        Instance type of the dedicated main nodes in the cluster.
    instanceCount : float, default is Undefined, optional
        Number of instances in the cluster.
    instanceType : str, default is Undefined, optional
        Instance type of data nodes in the cluster.
    warmCount : float, default is Undefined, optional
        Number of warm nodes in the cluster. Valid values are between 2 and 150. warm_count can be only and must be set when warm_enabled is set to true.
    warmEnabled : bool, default is Undefined, optional
        Whether to enable warm storage.
    warmType : str, default is Undefined, optional
        Instance type for the Elasticsearch cluster's warm nodes. Valid values are ultrawarm1.medium.elasticsearch, ultrawarm1.large.elasticsearch and ultrawarm1.xlarge.elasticsearch. warm_type can be only and must be set when warm_enabled is set to true.
    zoneAwarenessConfig : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0ZoneAwarenessConfigItems0], default is Undefined, optional
        Configuration block containing zone awareness settings. Detailed below.
    zoneAwarenessEnabled : bool, default is Undefined, optional
        Whether zone awareness is enabled, set to true for multi-az deployment. To enable awareness with three Availability Zones, the availability_zone_count within the zone_awareness_config must be set to 3.
    """


    coldStorageOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0ColdStorageOptionsItems0]

    dedicatedMasterCount?: float

    dedicatedMasterEnabled?: bool

    dedicatedMasterType?: str

    instanceCount?: float

    instanceType?: str

    warmCount?: float

    warmEnabled?: bool

    warmType?: str

    zoneAwarenessConfig?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0ZoneAwarenessConfigItems0]

    zoneAwarenessEnabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0ColdStorageOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider cluster config items0 cold storage options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Boolean to enable cold storage for an Elasticsearch domain. Defaults to false. Master and ultrawarm nodes must be enabled for cold storage.
    """


    enabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderClusterConfigItems0ZoneAwarenessConfigItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider cluster config items0 zone awareness config items0

    Attributes
    ----------
    availabilityZoneCount : float, default is Undefined, optional
        Number of Availability Zones for the domain to use with zone_awareness_enabled. Defaults to 2. Valid values: 2 or 3.
    """


    availabilityZoneCount?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderCognitoOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider cognito options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether Amazon Cognito authentication with Kibana is enabled or not.
    identityPoolId : str, default is Undefined, optional
        ID of the Cognito Identity Pool to use.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
    userPoolId : str, default is Undefined, optional
        ID of the Cognito User Pool to use.
    """


    enabled?: bool

    identityPoolId?: str

    roleArn?: str

    userPoolId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderDomainEndpointOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider domain endpoint options items0

    Attributes
    ----------
    customEndpoint : str, default is Undefined, optional
        Fully qualified domain for your custom endpoint.
    customEndpointCertificateArn : str, default is Undefined, optional
        ACM certificate ARN for your custom endpoint.
    customEndpointEnabled : bool, default is Undefined, optional
        Whether to enable custom endpoint for the Elasticsearch domain.
    enforceHttps : bool, default is Undefined, optional
        Whether or not to require HTTPS. Defaults to true.
    tlsSecurityPolicy : str, default is Undefined, optional
        Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  Policy-Min-TLS-1-0-2019-07 and Policy-Min-TLS-1-2-2019-07.
    """


    customEndpoint?: str

    customEndpointCertificateArn?: str

    customEndpointEnabled?: bool

    enforceHttps?: bool

    tlsSecurityPolicy?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderEbsOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider ebs options items0

    Attributes
    ----------
    ebsEnabled : bool, default is Undefined, optional
        Whether EBS volumes are attached to data nodes in the domain.
    iops : float, default is Undefined, optional
        Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
    throughput : float, default is Undefined, optional
        Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
    volumeSize : float, default is Undefined, optional
        Size of EBS volumes attached to data nodes (in GiB).
    volumeType : str, default is Undefined, optional
        Type of EBS volumes attached to data nodes.
    """


    ebsEnabled?: bool

    iops?: float

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderEncryptAtRestItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider encrypt at rest items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. If the encrypt_at_rest block is not provided then this defaults to false. Enabling encryption on new domains requires elasticsearch_version 5.1 or greater.
    kmsKeyId : str, default is Undefined, optional
        KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the aws/es service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN.
    """


    enabled?: bool

    kmsKeyId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider log publishing options items0

    Attributes
    ----------
    cloudwatchLogGroupArn : str, default is Undefined, optional
        ARN of the Cloudwatch log group to which log needs to be published.
    cloudwatchLogGroupArnRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRef, default is Undefined, optional
        cloudwatch log group arn ref
    cloudwatchLogGroupArnSelector : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelector, default is Undefined, optional
        cloudwatch log group arn selector
    enabled : bool, default is Undefined, optional
        Whether given log publishing option is enabled or not.
    logType : str, default is Undefined, optional
        Type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS, AUDIT_LOGS.
    """


    cloudwatchLogGroupArn?: str

    cloudwatchLogGroupArnRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRef

    cloudwatchLogGroupArnSelector?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelector

    enabled?: bool

    logType?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate cloudwatchLogGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRefPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate cloudwatchLogGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelectorPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderLogPublishingOptionsItems0CloudwatchLogGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderNodeToNodeEncryptionItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider node to node encryption items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable node-to-node encryption. If the node_to_node_encryption block is not provided then this defaults to false. Enabling node-to-node encryption of a new domain requires an elasticsearch_version of 6.0 or greater.
    """


    enabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderSnapshotOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider snapshot options items0

    Attributes
    ----------
    automatedSnapshotStartHour : float, default is Undefined, optional
        Hour during which the service takes an automated daily snapshot of the indices in the domain.
    """


    automatedSnapshotStartHour?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain spec init provider vpc options items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
    securityGroupIdsRefs : [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdsSelector : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsSelector, default is Undefined, optional
        security group ids selector
    subnetIds : [str], default is Undefined, optional
        List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
    """


    securityGroupIds?: [str]

    securityGroupIdsRefs?: [ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsRefsItems0]

    securityGroupIdsSelector?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsSelector

    subnetIds?: [str]


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsRefsItems0Policy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsSelectorPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecInitProviderVpcOptionsItems0SecurityGroupIdsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecProviderConfigRefPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToConfigRef

    metadata?: ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToMetadata

    name: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToConfigRefPolicy


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatus:
    r"""
    DomainStatus defines the observed state of Domain.

    Attributes
    ----------
    atProvider : ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProvider

    conditions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusConditionsItems0]

    observedGeneration?: int


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProvider:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider

    Attributes
    ----------
    accessPolicies : str, default is Undefined, optional
        IAM policy document specifying the access policies for the domain.
    advancedOptions : {str:str}, default is Undefined, optional
        Key-value string pairs to specify advanced configuration options.
    advancedSecurityOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAdvancedSecurityOptionsItems0], default is Undefined, optional
        Configuration block for fine-grained access control. Detailed below.
    arn : str, default is Undefined, optional
        ARN of the domain.
    autoTuneOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0], default is Undefined, optional
        Configuration block for the Auto-Tune options of the domain. Detailed below.
    clusterConfig : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0], default is Undefined, optional
        Configuration block for the cluster of the domain. Detailed below.
    cognitoOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderCognitoOptionsItems0], default is Undefined, optional
        Configuration block for authenticating Kibana with Cognito. Detailed below.
    domainEndpointOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderDomainEndpointOptionsItems0], default is Undefined, optional
        Configuration block for domain endpoint HTTP(S) related options. Detailed below.
    domainId : str, default is Undefined, optional
        Unique identifier for the domain.
    ebsOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderEbsOptionsItems0], default is Undefined, optional
        Configuration block for EBS related options, may be required based on chosen instance size. Detailed below.
    elasticsearchVersion : str, default is Undefined, optional
        Version of Elasticsearch to deploy. Defaults to 1.5.
    encryptAtRest : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderEncryptAtRestItems0], default is Undefined, optional
        Configuration block for encrypt at rest options. Only available for certain instance types. Detailed below.
    endpoint : str, default is Undefined, optional
        Domain-specific endpoint used to submit index, search, and data upload requests.
    id : str, default is Undefined, optional
        id
    kibanaEndpoint : str, default is Undefined, optional
        Domain-specific endpoint for kibana without https scheme.
    logPublishingOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderLogPublishingOptionsItems0], default is Undefined, optional
        Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
    nodeToNodeEncryption : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderNodeToNodeEncryptionItems0], default is Undefined, optional
        Configuration block for node-to-node encryption options. Detailed below.
    snapshotOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderSnapshotOptionsItems0], default is Undefined, optional
        Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running Elasticsearch 5.3 and later, Amazon ES takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions of Elasticsearch, Amazon ES takes daily automated snapshots.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderVpcOptionsItems0], default is Undefined, optional
        Configuration block for VPC related options. Adding or removing this configuration forces a new resource (documentation). Detailed below.
    """


    accessPolicies?: str

    advancedOptions?: {str:str}

    advancedSecurityOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAdvancedSecurityOptionsItems0]

    arn?: str

    autoTuneOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0]

    clusterConfig?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0]

    cognitoOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderCognitoOptionsItems0]

    domainEndpointOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderDomainEndpointOptionsItems0]

    domainId?: str

    ebsOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderEbsOptionsItems0]

    elasticsearchVersion?: str

    encryptAtRest?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderEncryptAtRestItems0]

    endpoint?: str

    id?: str

    kibanaEndpoint?: str

    logPublishingOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderLogPublishingOptionsItems0]

    nodeToNodeEncryption?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderNodeToNodeEncryptionItems0]

    snapshotOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderSnapshotOptionsItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderVpcOptionsItems0]


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAdvancedSecurityOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider advanced security options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether advanced security is enabled.
    internalUserDatabaseEnabled : bool, default is Undefined, optional
        Whether the internal user database is enabled. If not set, defaults to false by the AWS API.
    masterUserOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0], default is Undefined, optional
        Configuration block for the main user. Detailed below.
    """


    enabled?: bool

    internalUserDatabaseEnabled?: bool

    masterUserOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0]


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAdvancedSecurityOptionsItems0MasterUserOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider advanced security options items0 master user options items0

    Attributes
    ----------
    masterUserArn : str, default is Undefined, optional
        ARN for the main user. Only specify if internal_user_database_enabled is not set or set to false.
    masterUserName : str, default is Undefined, optional
        Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if internal_user_database_enabled is set to true.
    """


    masterUserArn?: str

    masterUserName?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider auto tune options items0

    Attributes
    ----------
    desiredState : str, default is Undefined, optional
        The Auto-Tune desired state for the domain. Valid values: ENABLED or DISABLED.
    maintenanceSchedule : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0MaintenanceScheduleItems0], default is Undefined, optional
        Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
    rollbackOnDisable : str, default is Undefined, optional
        Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: DEFAULT_ROLLBACK or NO_ROLLBACK.
    """


    desiredState?: str

    maintenanceSchedule?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0MaintenanceScheduleItems0]

    rollbackOnDisable?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0MaintenanceScheduleItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider auto tune options items0 maintenance schedule items0

    Attributes
    ----------
    cronExpressionForRecurrence : str, default is Undefined, optional
        A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
    duration : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0], default is Undefined, optional
        Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.
    startAt : str, default is Undefined, optional
        Date and time at which to start the Auto-Tune maintenance schedule in RFC3339 format.
    """


    cronExpressionForRecurrence?: str

    duration?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0]

    startAt?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderAutoTuneOptionsItems0MaintenanceScheduleItems0DurationItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider auto tune options items0 maintenance schedule items0 duration items0

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: HOURS.
    value : float, default is Undefined, optional
        An integer specifying the value of the duration of an Auto-Tune maintenance window.
    """


    unit?: str

    value?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider cluster config items0

    Attributes
    ----------
    coldStorageOptions : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0ColdStorageOptionsItems0], default is Undefined, optional
        Configuration block containing cold storage configuration. Detailed below.
    dedicatedMasterCount : float, default is Undefined, optional
        Number of dedicated main nodes in the cluster.
    dedicatedMasterEnabled : bool, default is Undefined, optional
        Whether dedicated main nodes are enabled for the cluster.
    dedicatedMasterType : str, default is Undefined, optional
        Instance type of the dedicated main nodes in the cluster.
    instanceCount : float, default is Undefined, optional
        Number of instances in the cluster.
    instanceType : str, default is Undefined, optional
        Instance type of data nodes in the cluster.
    warmCount : float, default is Undefined, optional
        Number of warm nodes in the cluster. Valid values are between 2 and 150. warm_count can be only and must be set when warm_enabled is set to true.
    warmEnabled : bool, default is Undefined, optional
        Whether to enable warm storage.
    warmType : str, default is Undefined, optional
        Instance type for the Elasticsearch cluster's warm nodes. Valid values are ultrawarm1.medium.elasticsearch, ultrawarm1.large.elasticsearch and ultrawarm1.xlarge.elasticsearch. warm_type can be only and must be set when warm_enabled is set to true.
    zoneAwarenessConfig : [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0ZoneAwarenessConfigItems0], default is Undefined, optional
        Configuration block containing zone awareness settings. Detailed below.
    zoneAwarenessEnabled : bool, default is Undefined, optional
        Whether zone awareness is enabled, set to true for multi-az deployment. To enable awareness with three Availability Zones, the availability_zone_count within the zone_awareness_config must be set to 3.
    """


    coldStorageOptions?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0ColdStorageOptionsItems0]

    dedicatedMasterCount?: float

    dedicatedMasterEnabled?: bool

    dedicatedMasterType?: str

    instanceCount?: float

    instanceType?: str

    warmCount?: float

    warmEnabled?: bool

    warmType?: str

    zoneAwarenessConfig?: [ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0ZoneAwarenessConfigItems0]

    zoneAwarenessEnabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0ColdStorageOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider cluster config items0 cold storage options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Boolean to enable cold storage for an Elasticsearch domain. Defaults to false. Master and ultrawarm nodes must be enabled for cold storage.
    """


    enabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderClusterConfigItems0ZoneAwarenessConfigItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider cluster config items0 zone awareness config items0

    Attributes
    ----------
    availabilityZoneCount : float, default is Undefined, optional
        Number of Availability Zones for the domain to use with zone_awareness_enabled. Defaults to 2. Valid values: 2 or 3.
    """


    availabilityZoneCount?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderCognitoOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider cognito options items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether Amazon Cognito authentication with Kibana is enabled or not.
    identityPoolId : str, default is Undefined, optional
        ID of the Cognito Identity Pool to use.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
    userPoolId : str, default is Undefined, optional
        ID of the Cognito User Pool to use.
    """


    enabled?: bool

    identityPoolId?: str

    roleArn?: str

    userPoolId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderDomainEndpointOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider domain endpoint options items0

    Attributes
    ----------
    customEndpoint : str, default is Undefined, optional
        Fully qualified domain for your custom endpoint.
    customEndpointCertificateArn : str, default is Undefined, optional
        ACM certificate ARN for your custom endpoint.
    customEndpointEnabled : bool, default is Undefined, optional
        Whether to enable custom endpoint for the Elasticsearch domain.
    enforceHttps : bool, default is Undefined, optional
        Whether or not to require HTTPS. Defaults to true.
    tlsSecurityPolicy : str, default is Undefined, optional
        Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  Policy-Min-TLS-1-0-2019-07 and Policy-Min-TLS-1-2-2019-07.
    """


    customEndpoint?: str

    customEndpointCertificateArn?: str

    customEndpointEnabled?: bool

    enforceHttps?: bool

    tlsSecurityPolicy?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderEbsOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider ebs options items0

    Attributes
    ----------
    ebsEnabled : bool, default is Undefined, optional
        Whether EBS volumes are attached to data nodes in the domain.
    iops : float, default is Undefined, optional
        Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
    throughput : float, default is Undefined, optional
        Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
    volumeSize : float, default is Undefined, optional
        Size of EBS volumes attached to data nodes (in GiB).
    volumeType : str, default is Undefined, optional
        Type of EBS volumes attached to data nodes.
    """


    ebsEnabled?: bool

    iops?: float

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderEncryptAtRestItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider encrypt at rest items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable encryption at rest. If the encrypt_at_rest block is not provided then this defaults to false. Enabling encryption on new domains requires elasticsearch_version 5.1 or greater.
    kmsKeyId : str, default is Undefined, optional
        KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the aws/es service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN.
    """


    enabled?: bool

    kmsKeyId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderLogPublishingOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider log publishing options items0

    Attributes
    ----------
    cloudwatchLogGroupArn : str, default is Undefined, optional
        ARN of the Cloudwatch log group to which log needs to be published.
    enabled : bool, default is Undefined, optional
        Whether given log publishing option is enabled or not.
    logType : str, default is Undefined, optional
        Type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS, AUDIT_LOGS.
    """


    cloudwatchLogGroupArn?: str

    enabled?: bool

    logType?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderNodeToNodeEncryptionItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider node to node encryption items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable node-to-node encryption. If the node_to_node_encryption block is not provided then this defaults to false. Enabling node-to-node encryption of a new domain requires an elasticsearch_version of 6.0 or greater.
    """


    enabled?: bool


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderSnapshotOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider snapshot options items0

    Attributes
    ----------
    automatedSnapshotStartHour : float, default is Undefined, optional
        Hour during which the service takes an automated daily snapshot of the indices in the domain.
    """


    automatedSnapshotStartHour?: float


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusAtProviderVpcOptionsItems0:
    r"""
    elasticsearch aws upbound io v1beta1 domain status at provider vpc options items0

    Attributes
    ----------
    availabilityZones : [str], default is Undefined, optional
        If the domain was created inside a VPC, the names of the availability zones the configured subnet_ids were created inside.
    securityGroupIds : [str], default is Undefined, optional
        List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
    subnetIds : [str], default is Undefined, optional
        List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
    vpcId : str, default is Undefined, optional
        If the domain was created inside a VPC, the ID of the VPC.
    """


    availabilityZones?: [str]

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcId?: str


schema ElasticsearchAwsUpboundIoV1beta1DomainStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


