"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TransitGateway:
    r"""
    TransitGateway is the Schema for the TransitGateways API. Manages an EC2 Transit Gateway

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TransitGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1TransitGatewaySpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1TransitGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"

    kind: "TransitGateway" = "TransitGateway"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta1TransitGatewaySpec

    status?: Ec2AwsUpboundIoV1beta1TransitGatewayStatus


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpec:
    r"""
    TransitGatewaySpec defines the desired state of TransitGateway

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1TransitGatewaySpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1TransitGatewaySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1TransitGatewaySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1TransitGatewaySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta1TransitGatewaySpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecForProvider:
    r"""
    ec2 aws upbound io v1beta1 transit gateway spec for provider

    Attributes
    ----------
    amazonSideAsn : float, default is Undefined, optional
        Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.
    autoAcceptSharedAttachments : str, default is Undefined, optional
        Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.
    defaultRouteTableAssociation : str, default is Undefined, optional
        Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.
    defaultRouteTablePropagation : str, default is Undefined, optional
        Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.
    description : str, default is Undefined, optional
        Description of the EC2 Transit Gateway.
    dnsSupport : str, default is Undefined, optional
        Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
    multicastSupport : str, default is Undefined, optional
        Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupReferencingSupport : str, default is Undefined, optional
        Whether Security Group Referencing Support is enabled. Valid values: disable, enable. Default value: disable.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitGatewayCidrBlocks : [str], default is Undefined, optional
        One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
    vpnEcmpSupport : str, default is Undefined, optional
        Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.
    """


    amazonSideAsn?: float

    autoAcceptSharedAttachments?: str

    defaultRouteTableAssociation?: str

    defaultRouteTablePropagation?: str

    description?: str

    dnsSupport?: str

    multicastSupport?: str

    region: str

    securityGroupReferencingSupport?: str

    tags?: {str:str}

    transitGatewayCidrBlocks?: [str]

    vpnEcmpSupport?: str


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    amazonSideAsn : float, default is Undefined, optional
        Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.
    autoAcceptSharedAttachments : str, default is Undefined, optional
        Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.
    defaultRouteTableAssociation : str, default is Undefined, optional
        Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.
    defaultRouteTablePropagation : str, default is Undefined, optional
        Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.
    description : str, default is Undefined, optional
        Description of the EC2 Transit Gateway.
    dnsSupport : str, default is Undefined, optional
        Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
    multicastSupport : str, default is Undefined, optional
        Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.
    securityGroupReferencingSupport : str, default is Undefined, optional
        Whether Security Group Referencing Support is enabled. Valid values: disable, enable. Default value: disable.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    transitGatewayCidrBlocks : [str], default is Undefined, optional
        One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
    vpnEcmpSupport : str, default is Undefined, optional
        Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.
    """


    amazonSideAsn?: float

    autoAcceptSharedAttachments?: str

    defaultRouteTableAssociation?: str

    defaultRouteTablePropagation?: str

    description?: str

    dnsSupport?: str

    multicastSupport?: str

    securityGroupReferencingSupport?: str

    tags?: {str:str}

    transitGatewayCidrBlocks?: [str]

    vpnEcmpSupport?: str


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewaySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta1TransitGatewaySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta1TransitGatewayStatus:
    r"""
    TransitGatewayStatus defines the observed state of TransitGateway.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1TransitGatewayStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1TransitGatewayStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta1TransitGatewayStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta1TransitGatewayStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta1TransitGatewayStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta1 transit gateway status at provider

    Attributes
    ----------
    amazonSideAsn : float, default is Undefined, optional
        Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. Default value: 64512.
    arn : str, default is Undefined, optional
        EC2 Transit Gateway Amazon Resource Name (ARN)
    associationDefaultRouteTableId : str, default is Undefined, optional
        Identifier of the default association route table
    autoAcceptSharedAttachments : str, default is Undefined, optional
        Whether resource attachment requests are automatically accepted. Valid values: disable, enable. Default value: disable.
    defaultRouteTableAssociation : str, default is Undefined, optional
        Whether resource attachments are automatically associated with the default association route table. Valid values: disable, enable. Default value: enable.
    defaultRouteTablePropagation : str, default is Undefined, optional
        Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: disable, enable. Default value: enable.
    description : str, default is Undefined, optional
        Description of the EC2 Transit Gateway.
    dnsSupport : str, default is Undefined, optional
        Whether DNS support is enabled. Valid values: disable, enable. Default value: enable.
    id : str, default is Undefined, optional
        EC2 Transit Gateway identifier
    multicastSupport : str, default is Undefined, optional
        Whether Multicast support is enabled. Required to use ec2_transit_gateway_multicast_domain. Valid values: disable, enable. Default value: disable.
    ownerId : str, default is Undefined, optional
        Identifier of the AWS account that owns the EC2 Transit Gateway
    propagationDefaultRouteTableId : str, default is Undefined, optional
        Identifier of the default propagation route table
    securityGroupReferencingSupport : str, default is Undefined, optional
        Whether Security Group Referencing Support is enabled. Valid values: disable, enable. Default value: disable.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    transitGatewayCidrBlocks : [str], default is Undefined, optional
        One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
    vpnEcmpSupport : str, default is Undefined, optional
        Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: disable, enable. Default value: enable.
    """


    amazonSideAsn?: float

    arn?: str

    associationDefaultRouteTableId?: str

    autoAcceptSharedAttachments?: str

    defaultRouteTableAssociation?: str

    defaultRouteTablePropagation?: str

    description?: str

    dnsSupport?: str

    id?: str

    multicastSupport?: str

    ownerId?: str

    propagationDefaultRouteTableId?: str

    securityGroupReferencingSupport?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    transitGatewayCidrBlocks?: [str]

    vpnEcmpSupport?: str


schema Ec2AwsUpboundIoV1beta1TransitGatewayStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


