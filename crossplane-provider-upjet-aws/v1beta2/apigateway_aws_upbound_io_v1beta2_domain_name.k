"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DomainName:
    r"""
    DomainName is the Schema for the DomainNames API. Registers a custom domain name for use with AWS API Gateway.

    Attributes
    ----------
    apiVersion : str, default is "apigateway.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DomainName", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApigatewayAwsUpboundIoV1beta2DomainNameSpec, default is Undefined, required
        spec
    status : ApigatewayAwsUpboundIoV1beta2DomainNameStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigateway.aws.upbound.io/v1beta2" = "apigateway.aws.upbound.io/v1beta2"

    kind: "DomainName" = "DomainName"

    metadata?: v1.ObjectMeta

    spec: ApigatewayAwsUpboundIoV1beta2DomainNameSpec

    status?: ApigatewayAwsUpboundIoV1beta2DomainNameStatus


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpec:
    r"""
    DomainNameSpec defines the desired state of DomainName

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProvider

    initProvider?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecProviderConfigRef

    publishConnectionDetailsTo?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecWriteConnectionSecretToRef


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProvider:
    r"""
    apigateway aws upbound io v1beta2 domain name spec for provider

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when an edge-optimized domain name is desired. Conflicts with certificate_name, certificate_body, certificate_chain, certificate_private_key, regional_certificate_arn, and regional_certificate_name.
    certificateArnRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnRef, default is Undefined, optional
        certificate arn ref
    certificateArnSelector : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnSelector, default is Undefined, optional
        certificate arn selector
    certificateBody : str, default is Undefined, optional
        Certificate issued for the domain name being registered, in PEM format. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.
    certificateChain : str, default is Undefined, optional
        Certificate for the CA that issued the certificate, along with any intermediate CA certificates required to create an unbroken chain to a certificate trusted by the intended API clients. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.
    certificateName : str, default is Undefined, optional
        Unique name to use when registering this certificate as an IAM server certificate. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name. Required if certificate_arn is not set.
    certificatePrivateKeySecretRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificatePrivateKeySecretRef, default is Undefined, optional
        certificate private key secret ref
    domainName : str, default is Undefined, optional
        Fully-qualified domain name to register.
    endpointConfiguration : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderEndpointConfiguration, default is Undefined, optional
        endpoint configuration
    mutualTlsAuthentication : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderMutualTLSAuthentication, default is Undefined, optional
        mutual Tls authentication
    ownershipVerificationCertificateArn : str, default is Undefined, optional
        ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)
    policy : str, default is Undefined, optional
        A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    regionalCertificateArn : str, default is Undefined, optional
        ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when a regional domain name is desired. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.
    regionalCertificateArnRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnRef, default is Undefined, optional
        regional certificate arn ref
    regionalCertificateArnSelector : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnSelector, default is Undefined, optional
        regional certificate arn selector
    regionalCertificateName : str, default is Undefined, optional
        User-friendly name of the certificate that will be used by regional endpoint for this domain name. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.
    securityPolicy : str, default is Undefined, optional
        Transport Layer Security (TLS) version + cipher suite for this DomainName. Valid values are TLS_1_0 and TLS_1_2. Must be configured to perform drift detection.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    certificateArn?: str

    certificateArnRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnRef

    certificateArnSelector?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnSelector

    certificateBody?: str

    certificateChain?: str

    certificateName?: str

    certificatePrivateKeySecretRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificatePrivateKeySecretRef

    domainName?: str

    endpointConfiguration?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderEndpointConfiguration

    mutualTlsAuthentication?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderMutualTLSAuthentication

    ownershipVerificationCertificateArn?: str

    policy?: str

    region: str

    regionalCertificateArn?: str

    regionalCertificateArnRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnRef

    regionalCertificateArnSelector?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnSelector

    regionalCertificateName?: str

    securityPolicy?: str

    tags?: {str:str}


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnRef:
    r"""
    Reference to a CertificateValidation in acm to populate certificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnRefPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnSelector:
    r"""
    Selector for a CertificateValidation in acm to populate certificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderCertificatePrivateKeySecretRef:
    r"""
    Private key associated with the domain certificate given in certificate_body. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderEndpointConfiguration:
    r"""
    Configuration block defining API endpoint information including type. See below.

    Attributes
    ----------
    types : [str], default is Undefined, optional
        A list of endpoint types of an API or its custom domain name. For an edge-optimized API and its custom domain name, the endpoint type is EDGE. For a regional API and its custom domain name, the endpoint type is REGIONAL. For a private API, the endpoint type is PRIVATE.
    """


    types?: [str]


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderMutualTLSAuthentication:
    r"""
    Mutual TLS authentication configuration for the domain name. See below.

    Attributes
    ----------
    truststoreUri : str, default is Undefined, optional
        Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
    truststoreVersion : str, default is Undefined, optional
        Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
    """


    truststoreUri?: str

    truststoreVersion?: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnRef:
    r"""
    Reference to a CertificateValidation in acm to populate regionalCertificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnRefPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnSelector:
    r"""
    Selector for a CertificateValidation in acm to populate regionalCertificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecForProviderRegionalCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when an edge-optimized domain name is desired. Conflicts with certificate_name, certificate_body, certificate_chain, certificate_private_key, regional_certificate_arn, and regional_certificate_name.
    certificateArnRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnRef, default is Undefined, optional
        certificate arn ref
    certificateArnSelector : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnSelector, default is Undefined, optional
        certificate arn selector
    certificateBody : str, default is Undefined, optional
        Certificate issued for the domain name being registered, in PEM format. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.
    certificateChain : str, default is Undefined, optional
        Certificate for the CA that issued the certificate, along with any intermediate CA certificates required to create an unbroken chain to a certificate trusted by the intended API clients. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.
    certificateName : str, default is Undefined, optional
        Unique name to use when registering this certificate as an IAM server certificate. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name. Required if certificate_arn is not set.
    certificatePrivateKeySecretRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificatePrivateKeySecretRef, default is Undefined, optional
        certificate private key secret ref
    domainName : str, default is Undefined, optional
        Fully-qualified domain name to register.
    endpointConfiguration : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderEndpointConfiguration, default is Undefined, optional
        endpoint configuration
    mutualTlsAuthentication : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderMutualTLSAuthentication, default is Undefined, optional
        mutual Tls authentication
    ownershipVerificationCertificateArn : str, default is Undefined, optional
        ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)
    policy : str, default is Undefined, optional
        A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.
    regionalCertificateArn : str, default is Undefined, optional
        ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when a regional domain name is desired. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.
    regionalCertificateArnRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnRef, default is Undefined, optional
        regional certificate arn ref
    regionalCertificateArnSelector : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnSelector, default is Undefined, optional
        regional certificate arn selector
    regionalCertificateName : str, default is Undefined, optional
        User-friendly name of the certificate that will be used by regional endpoint for this domain name. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.
    securityPolicy : str, default is Undefined, optional
        Transport Layer Security (TLS) version + cipher suite for this DomainName. Valid values are TLS_1_0 and TLS_1_2. Must be configured to perform drift detection.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    certificateArn?: str

    certificateArnRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnRef

    certificateArnSelector?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnSelector

    certificateBody?: str

    certificateChain?: str

    certificateName?: str

    certificatePrivateKeySecretRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificatePrivateKeySecretRef

    domainName?: str

    endpointConfiguration?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderEndpointConfiguration

    mutualTlsAuthentication?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderMutualTLSAuthentication

    ownershipVerificationCertificateArn?: str

    policy?: str

    regionalCertificateArn?: str

    regionalCertificateArnRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnRef

    regionalCertificateArnSelector?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnSelector

    regionalCertificateName?: str

    securityPolicy?: str

    tags?: {str:str}


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnRef:
    r"""
    Reference to a CertificateValidation in acm to populate certificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnRefPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnSelector:
    r"""
    Selector for a CertificateValidation in acm to populate certificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderCertificatePrivateKeySecretRef:
    r"""
    Private key associated with the domain certificate given in certificate_body. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderEndpointConfiguration:
    r"""
    Configuration block defining API endpoint information including type. See below.

    Attributes
    ----------
    types : [str], default is Undefined, optional
        A list of endpoint types of an API or its custom domain name. For an edge-optimized API and its custom domain name, the endpoint type is EDGE. For a regional API and its custom domain name, the endpoint type is REGIONAL. For a private API, the endpoint type is PRIVATE.
    """


    types?: [str]


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderMutualTLSAuthentication:
    r"""
    Mutual TLS authentication configuration for the domain name. See below.

    Attributes
    ----------
    truststoreUri : str, default is Undefined, optional
        Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
    truststoreVersion : str, default is Undefined, optional
        Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
    """


    truststoreUri?: str

    truststoreVersion?: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnRef:
    r"""
    Reference to a CertificateValidation in acm to populate regionalCertificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnRefPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnSelector:
    r"""
    Selector for a CertificateValidation in acm to populate regionalCertificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecInitProviderRegionalCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecProviderConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRef

    metadata?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToMetadata

    name: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameStatus:
    r"""
    DomainNameStatus defines the observed state of DomainName.

    Attributes
    ----------
    atProvider : ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApigatewayAwsUpboundIoV1beta2DomainNameStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProvider

    conditions?: [ApigatewayAwsUpboundIoV1beta2DomainNameStatusConditionsItems0]

    observedGeneration?: int


schema ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProvider:
    r"""
    apigateway aws upbound io v1beta2 domain name status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of domain name.
    certificateArn : str, default is Undefined, optional
        ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when an edge-optimized domain name is desired. Conflicts with certificate_name, certificate_body, certificate_chain, certificate_private_key, regional_certificate_arn, and regional_certificate_name.
    certificateBody : str, default is Undefined, optional
        Certificate issued for the domain name being registered, in PEM format. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.
    certificateChain : str, default is Undefined, optional
        Certificate for the CA that issued the certificate, along with any intermediate CA certificates required to create an unbroken chain to a certificate trusted by the intended API clients. Only valid for EDGE endpoint configuration type. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name.
    certificateName : str, default is Undefined, optional
        Unique name to use when registering this certificate as an IAM server certificate. Conflicts with certificate_arn, regional_certificate_arn, and regional_certificate_name. Required if certificate_arn is not set.
    certificateUploadDate : str, default is Undefined, optional
        Upload date associated with the domain certificate.
    cloudfrontDomainName : str, default is Undefined, optional
        Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.
    cloudfrontZoneId : str, default is Undefined, optional
        For convenience, the hosted zone ID (Z2FDTNDATAQYW2) that can be used to create a Route53 alias record for the distribution.
    domainName : str, default is Undefined, optional
        Fully-qualified domain name to register.
    domainNameId : str, default is Undefined, optional
        The identifier for the domain name resource. Supported only for private custom domain names.
    endpointConfiguration : ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProviderEndpointConfiguration, default is Undefined, optional
        endpoint configuration
    id : str, default is Undefined, optional
        Internal identifier assigned to this domain name by API Gateway.
    mutualTlsAuthentication : ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProviderMutualTLSAuthentication, default is Undefined, optional
        mutual Tls authentication
    ownershipVerificationCertificateArn : str, default is Undefined, optional
        ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)
    policy : str, default is Undefined, optional
        A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.
    regionalCertificateArn : str, default is Undefined, optional
        ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when a regional domain name is desired. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.
    regionalCertificateName : str, default is Undefined, optional
        User-friendly name of the certificate that will be used by regional endpoint for this domain name. Conflicts with certificate_arn, certificate_name, certificate_body, certificate_chain, and certificate_private_key.
    regionalDomainName : str, default is Undefined, optional
        Hostname for the custom domain's regional endpoint.
    regionalZoneId : str, default is Undefined, optional
        Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.
    securityPolicy : str, default is Undefined, optional
        Transport Layer Security (TLS) version + cipher suite for this DomainName. Valid values are TLS_1_0 and TLS_1_2. Must be configured to perform drift detection.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    certificateArn?: str

    certificateBody?: str

    certificateChain?: str

    certificateName?: str

    certificateUploadDate?: str

    cloudfrontDomainName?: str

    cloudfrontZoneId?: str

    domainName?: str

    domainNameId?: str

    endpointConfiguration?: ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProviderEndpointConfiguration

    id?: str

    mutualTlsAuthentication?: ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProviderMutualTLSAuthentication

    ownershipVerificationCertificateArn?: str

    policy?: str

    regionalCertificateArn?: str

    regionalCertificateName?: str

    regionalDomainName?: str

    regionalZoneId?: str

    securityPolicy?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProviderEndpointConfiguration:
    r"""
    Configuration block defining API endpoint information including type. See below.

    Attributes
    ----------
    types : [str], default is Undefined, optional
        A list of endpoint types of an API or its custom domain name. For an edge-optimized API and its custom domain name, the endpoint type is EDGE. For a regional API and its custom domain name, the endpoint type is REGIONAL. For a private API, the endpoint type is PRIVATE.
    """


    types?: [str]


schema ApigatewayAwsUpboundIoV1beta2DomainNameStatusAtProviderMutualTLSAuthentication:
    r"""
    Mutual TLS authentication configuration for the domain name. See below.

    Attributes
    ----------
    truststoreUri : str, default is Undefined, optional
        Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
    truststoreVersion : str, default is Undefined, optional
        Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
    """


    truststoreUri?: str

    truststoreVersion?: str


schema ApigatewayAwsUpboundIoV1beta2DomainNameStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


