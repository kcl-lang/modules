"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Zone:
    r"""
    Zone is the Schema for the Zones API. Manages a Route53 Hosted Zone

    Attributes
    ----------
    apiVersion : str, default is "route53.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Zone", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53AwsUpboundIoV1beta1ZoneSpec, default is Undefined, required
        spec
    status : Route53AwsUpboundIoV1beta1ZoneStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53.aws.upbound.io/v1beta1" = "route53.aws.upbound.io/v1beta1"

    kind: "Zone" = "Zone"

    metadata?: v1.ObjectMeta

    spec: Route53AwsUpboundIoV1beta1ZoneSpec

    status?: Route53AwsUpboundIoV1beta1ZoneStatus


schema Route53AwsUpboundIoV1beta1ZoneSpec:
    r"""
    ZoneSpec defines the desired state of Zone

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Route53AwsUpboundIoV1beta1ZoneSpecForProvider, default is Undefined, required
        for provider
    initProvider : Route53AwsUpboundIoV1beta1ZoneSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Route53AwsUpboundIoV1beta1ZoneSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53AwsUpboundIoV1beta1ZoneSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53AwsUpboundIoV1beta1ZoneSpecForProvider

    initProvider?: Route53AwsUpboundIoV1beta1ZoneSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Route53AwsUpboundIoV1beta1ZoneSpecProviderConfigRef

    publishConnectionDetailsTo?: Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53AwsUpboundIoV1beta1ZoneSpecWriteConnectionSecretToRef


schema Route53AwsUpboundIoV1beta1ZoneSpecForProvider:
    r"""
    route53 aws upbound io v1beta1 zone spec for provider

    Attributes
    ----------
    comment : str, default is Undefined, optional
        A comment for the hosted zone.
    delegationSetId : str, default is Undefined, optional
        The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with vpc as delegation sets can only be used for public zones.
    delegationSetIdRef : Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDRef, default is Undefined, optional
        delegation set Id ref
    delegationSetIdSelector : Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDSelector, default is Undefined, optional
        delegation set Id selector
    forceDestroy : bool, default is Undefined, optional
        force destroy
    name : str, default is Undefined, optional
        This is the name of the hosted zone.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpc : [Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0], default is Undefined, optional
        Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the delegation_set_id argument in this resource and any aws_route53_zone_association resource specifying the same zone ID. Detailed below.
    """


    comment?: str

    delegationSetId?: str

    delegationSetIdRef?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDRef

    delegationSetIdSelector?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDSelector

    forceDestroy?: bool

    name?: str

    region: str

    tags?: {str:str}

    vpc?: [Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0]


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDRef:
    r"""
    Reference to a DelegationSet in route53 to populate delegationSetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDRefPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDSelector:
    r"""
    Selector for a DelegationSet in route53 to populate delegationSetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderDelegationSetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0:
    r"""
    route53 aws upbound io v1beta1 zone spec for provider vpc items0

    Attributes
    ----------
    vpcId : str, default is Undefined, optional
        ID of the VPC to associate.
    vpcIdRef : Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    vpcRegion : str, default is Undefined, optional
        Region of the VPC to associate. Defaults to AWS provider region.
    """


    vpcId?: str

    vpcIdRef?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDRef

    vpcIdSelector?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDSelector

    vpcRegion?: str


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDRefPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecForProviderVpcItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    comment : str, default is Undefined, optional
        A comment for the hosted zone.
    delegationSetId : str, default is Undefined, optional
        The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with vpc as delegation sets can only be used for public zones.
    delegationSetIdRef : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDRef, default is Undefined, optional
        delegation set Id ref
    delegationSetIdSelector : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDSelector, default is Undefined, optional
        delegation set Id selector
    forceDestroy : bool, default is Undefined, optional
        force destroy
    name : str, default is Undefined, optional
        This is the name of the hosted zone.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpc : [Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0], default is Undefined, optional
        Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the delegation_set_id argument in this resource and any aws_route53_zone_association resource specifying the same zone ID. Detailed below.
    """


    comment?: str

    delegationSetId?: str

    delegationSetIdRef?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDRef

    delegationSetIdSelector?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDSelector

    forceDestroy?: bool

    name?: str

    tags?: {str:str}

    vpc?: [Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0]


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDRef:
    r"""
    Reference to a DelegationSet in route53 to populate delegationSetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDRefPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDSelector:
    r"""
    Selector for a DelegationSet in route53 to populate delegationSetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderDelegationSetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0:
    r"""
    route53 aws upbound io v1beta1 zone spec init provider vpc items0

    Attributes
    ----------
    vpcId : str, default is Undefined, optional
        ID of the VPC to associate.
    vpcIdRef : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDSelector, default is Undefined, optional
        vpc Id selector
    vpcRegion : str, default is Undefined, optional
        Region of the VPC to associate. Defaults to AWS provider region.
    """


    vpcId?: str

    vpcIdRef?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDRef

    vpcIdSelector?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDSelector

    vpcRegion?: str


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDRefPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDSelectorPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecInitProviderVpcItems0VpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecProviderConfigRefPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta1ZoneSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta1ZoneSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53AwsUpboundIoV1beta1ZoneStatus:
    r"""
    ZoneStatus defines the observed state of Zone.

    Attributes
    ----------
    atProvider : Route53AwsUpboundIoV1beta1ZoneStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53AwsUpboundIoV1beta1ZoneStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Route53AwsUpboundIoV1beta1ZoneStatusAtProvider

    conditions?: [Route53AwsUpboundIoV1beta1ZoneStatusConditionsItems0]

    observedGeneration?: int


schema Route53AwsUpboundIoV1beta1ZoneStatusAtProvider:
    r"""
    route53 aws upbound io v1beta1 zone status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Hosted Zone.
    comment : str, default is Undefined, optional
        A comment for the hosted zone.
    delegationSetId : str, default is Undefined, optional
        The ID of the reusable delegation set whose NS records you want to assign to the hosted zone. Conflicts with vpc as delegation sets can only be used for public zones.
    forceDestroy : bool, default is Undefined, optional
        force destroy
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        This is the name of the hosted zone.
    nameServers : [str], default is Undefined, optional
        A list of name servers in associated (or default) delegation set.
        Find more about delegation sets in AWS docs.
    primaryNameServer : str, default is Undefined, optional
        The Route 53 name server that created the SOA record.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpc : [Route53AwsUpboundIoV1beta1ZoneStatusAtProviderVpcItems0], default is Undefined, optional
        Configuration block(s) specifying VPC(s) to associate with a private hosted zone. Conflicts with the delegation_set_id argument in this resource and any aws_route53_zone_association resource specifying the same zone ID. Detailed below.
    zoneId : str, default is Undefined, optional
        The Hosted Zone ID. This can be referenced by zone records.
    """


    arn?: str

    comment?: str

    delegationSetId?: str

    forceDestroy?: bool

    id?: str

    name?: str

    nameServers?: [str]

    primaryNameServer?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpc?: [Route53AwsUpboundIoV1beta1ZoneStatusAtProviderVpcItems0]

    zoneId?: str


schema Route53AwsUpboundIoV1beta1ZoneStatusAtProviderVpcItems0:
    r"""
    route53 aws upbound io v1beta1 zone status at provider vpc items0

    Attributes
    ----------
    vpcId : str, default is Undefined, optional
        ID of the VPC to associate.
    vpcRegion : str, default is Undefined, optional
        Region of the VPC to associate. Defaults to AWS provider region.
    """


    vpcId?: str

    vpcRegion?: str


schema Route53AwsUpboundIoV1beta1ZoneStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


