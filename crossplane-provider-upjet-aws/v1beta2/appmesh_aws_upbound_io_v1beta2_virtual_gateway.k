"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualGateway:
    r"""
    VirtualGateway is the Schema for the VirtualGateways API. Provides an AWS App Mesh virtual gateway resource.

    Attributes
    ----------
    apiVersion : str, default is "appmesh.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualGateway", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpec, default is Undefined, required
        spec
    status : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatus, default is Undefined, optional
        status
    """


    apiVersion: "appmesh.aws.upbound.io/v1beta2" = "appmesh.aws.upbound.io/v1beta2"

    kind: "VirtualGateway" = "VirtualGateway"

    metadata?: v1.ObjectMeta

    spec: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpec

    status?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatus


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpec:
    r"""
    VirtualGatewaySpec defines the desired state of VirtualGateway

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProvider, default is Undefined, required
        for provider
    initProvider : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProvider

    initProvider?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecProviderConfigRef

    publishConnectionDetailsTo?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecWriteConnectionSecretToRef


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProvider:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway spec for provider

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual gateway. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual gateway. Must be between 1 and 255 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    spec : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    meshName?: str

    meshOwner?: str

    name?: str

    region: str

    spec?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpec

    tags?: {str:str}


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpec:
    r"""
    Virtual gateway specification to apply.

    Attributes
    ----------
    backendDefaults : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaults, default is Undefined, optional
        backend defaults
    listener : [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0], default is Undefined, optional
        Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
    logging : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLogging, default is Undefined, optional
        logging
    """


    backendDefaults?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaults

    listener?: [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0]

    logging?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLogging


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaults:
    r"""
    Defaults for backends.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicy, default is Undefined, optional
        client policy
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicy:
    r"""
    Default client policy for virtual gateway backends.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificate:
    r"""
    Virtual gateway's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway spec for provider spec listener items0

    Attributes
    ----------
    connectionPool : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPool, default is Undefined, optional
        connection pool
    healthCheck : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0HealthCheck, default is Undefined, optional
        health check
    portMapping : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0PortMapping, default is Undefined, optional
        port mapping
    tls : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLS, default is Undefined, optional
        tls
    """


    connectionPool?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPool

    healthCheck?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0HealthCheck

    portMapping?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0PortMapping

    tls?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLS


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPool:
    r"""
    Connection pool information for the listener.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolGrpc, default is Undefined, optional
        grpc
    http : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolHTTP, default is Undefined, optional
        http
    http2 : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolHttp2, default is Undefined, optional
        http2
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolGrpc

    http?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolHTTP

    http2?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolHttp2


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolHTTP:
    r"""
    Connection pool information for HTTP listeners.

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0ConnectionPoolHttp2:
    r"""
    Connection pool information for HTTP2 listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0HealthCheck:
    r"""
    Health check information for the listener.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0PortMapping:
    r"""
    Port mapping information for the listener.

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificate, default is Undefined, optional
        certificate
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificate

    mode?: str

    validation?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificate:
    r"""
    Virtual gateway's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    certificateArnRef : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnRef, default is Undefined, optional
        certificate arn ref
    certificateArnSelector : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelector, default is Undefined, optional
        certificate arn selector
    """


    certificateArn?: str

    certificateArnRef?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnRef

    certificateArnSelector?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelector


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnRef:
    r"""
    Reference to a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelector:
    r"""
    Selector for a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNames:
    r"""
    SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrustSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecListenerItems0TLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLogging:
    r"""
    Inbound and outbound access logging information for the virtual gateway.

    Attributes
    ----------
    accessLog : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLog, default is Undefined, optional
        access log
    """


    accessLog?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLog


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLog:
    r"""
    Access log configuration for a virtual gateway.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFile, default is Undefined, optional
        file
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFile


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    format : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFileFormat, default is Undefined, optional
        format
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFileFormat

    path?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFileFormat:
    r"""
    The specified format for the logs.

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFileFormatJSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFileFormatJSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecForProviderSpecLoggingAccessLogFileFormatJSONItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway spec for provider spec logging access log file format JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual gateway. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual gateway. Must be between 1 and 255 characters in length.
    spec : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    meshName?: str

    meshOwner?: str

    name?: str

    spec?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpec

    tags?: {str:str}


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpec:
    r"""
    Virtual gateway specification to apply.

    Attributes
    ----------
    backendDefaults : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaults, default is Undefined, optional
        backend defaults
    listener : [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0], default is Undefined, optional
        Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
    logging : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLogging, default is Undefined, optional
        logging
    """


    backendDefaults?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaults

    listener?: [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0]

    logging?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLogging


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaults:
    r"""
    Defaults for backends.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicy, default is Undefined, optional
        client policy
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicy:
    r"""
    Default client policy for virtual gateway backends.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificate:
    r"""
    Virtual gateway's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway spec init provider spec listener items0

    Attributes
    ----------
    connectionPool : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPool, default is Undefined, optional
        connection pool
    healthCheck : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0HealthCheck, default is Undefined, optional
        health check
    portMapping : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0PortMapping, default is Undefined, optional
        port mapping
    tls : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLS, default is Undefined, optional
        tls
    """


    connectionPool?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPool

    healthCheck?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0HealthCheck

    portMapping?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0PortMapping

    tls?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLS


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPool:
    r"""
    Connection pool information for the listener.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolGrpc, default is Undefined, optional
        grpc
    http : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolHTTP, default is Undefined, optional
        http
    http2 : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolHttp2, default is Undefined, optional
        http2
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolGrpc

    http?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolHTTP

    http2?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolHttp2


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolHTTP:
    r"""
    Connection pool information for HTTP listeners.

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0ConnectionPoolHttp2:
    r"""
    Connection pool information for HTTP2 listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0HealthCheck:
    r"""
    Health check information for the listener.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0PortMapping:
    r"""
    Port mapping information for the listener.

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificate, default is Undefined, optional
        certificate
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificate

    mode?: str

    validation?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificate:
    r"""
    Virtual gateway's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    certificateArnRef : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnRef, default is Undefined, optional
        certificate arn ref
    certificateArnSelector : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelector, default is Undefined, optional
        certificate arn selector
    """


    certificateArn?: str

    certificateArnRef?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnRef

    certificateArnSelector?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelector


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnRef:
    r"""
    Reference to a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelector:
    r"""
    Selector for a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateAcmCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNames:
    r"""
    SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrustSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecListenerItems0TLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLogging:
    r"""
    Inbound and outbound access logging information for the virtual gateway.

    Attributes
    ----------
    accessLog : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLog, default is Undefined, optional
        access log
    """


    accessLog?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLog


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLog:
    r"""
    Access log configuration for a virtual gateway.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFile, default is Undefined, optional
        file
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFile


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    format : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFileFormat, default is Undefined, optional
        format
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFileFormat

    path?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFileFormat:
    r"""
    The specified format for the logs.

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFileFormatJSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFileFormatJSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecInitProviderSpecLoggingAccessLogFileFormatJSONItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway spec init provider spec logging access log file format JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecProviderConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToConfigRef

    metadata?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToMetadata

    name: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewaySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatus:
    r"""
    VirtualGatewayStatus defines the observed state of VirtualGateway.

    Attributes
    ----------
    atProvider : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProvider

    conditions?: [AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusConditionsItems0]

    observedGeneration?: int


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProvider:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the virtual gateway.
    createdDate : str, default is Undefined, optional
        Creation date of the virtual gateway.
    id : str, default is Undefined, optional
        ID of the virtual gateway.
    lastUpdatedDate : str, default is Undefined, optional
        Last update date of the virtual gateway.
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual gateway. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual gateway. Must be between 1 and 255 characters in length.
    resourceOwner : str, default is Undefined, optional
        Resource owner's AWS account ID.
    spec : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    createdDate?: str

    id?: str

    lastUpdatedDate?: str

    meshName?: str

    meshOwner?: str

    name?: str

    resourceOwner?: str

    spec?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpec

    tags?: {str:str}

    tagsAll?: {str:str}


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpec:
    r"""
    Virtual gateway specification to apply.

    Attributes
    ----------
    backendDefaults : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaults, default is Undefined, optional
        backend defaults
    listener : [AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0], default is Undefined, optional
        Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.
    logging : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLogging, default is Undefined, optional
        logging
    """


    backendDefaults?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaults

    listener?: [AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0]

    logging?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLogging


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaults:
    r"""
    Defaults for backends.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicy, default is Undefined, optional
        client policy
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicy:
    r"""
    Default client policy for virtual gateway backends.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificate:
    r"""
    Virtual gateway's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway status at provider spec listener items0

    Attributes
    ----------
    connectionPool : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPool, default is Undefined, optional
        connection pool
    healthCheck : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0HealthCheck, default is Undefined, optional
        health check
    portMapping : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0PortMapping, default is Undefined, optional
        port mapping
    tls : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLS, default is Undefined, optional
        tls
    """


    connectionPool?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPool

    healthCheck?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0HealthCheck

    portMapping?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0PortMapping

    tls?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLS


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPool:
    r"""
    Connection pool information for the listener.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolGrpc, default is Undefined, optional
        grpc
    http : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolHTTP, default is Undefined, optional
        http
    http2 : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolHttp2, default is Undefined, optional
        http2
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolGrpc

    http?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolHTTP

    http2?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolHttp2


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolHTTP:
    r"""
    Connection pool information for HTTP listeners.

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0ConnectionPoolHttp2:
    r"""
    Connection pool information for HTTP2 listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0HealthCheck:
    r"""
    Health check information for the listener.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0PortMapping:
    r"""
    Port mapping information for the listener.

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificate, default is Undefined, optional
        certificate
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificate

    mode?: str

    validation?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificate:
    r"""
    Virtual gateway's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNames:
    r"""
    SANs for a virtual gateway's listener's Transport Layer Security (TLS) validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrustSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecListenerItems0TLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLogging:
    r"""
    Inbound and outbound access logging information for the virtual gateway.

    Attributes
    ----------
    accessLog : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLog, default is Undefined, optional
        access log
    """


    accessLog?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLog


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLog:
    r"""
    Access log configuration for a virtual gateway.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFile, default is Undefined, optional
        file
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFile


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    format : AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFileFormat, default is Undefined, optional
        format
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFileFormat

    path?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFileFormat:
    r"""
    The specified format for the logs.

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFileFormatJSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFileFormatJSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusAtProviderSpecLoggingAccessLogFileFormatJSONItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual gateway status at provider spec logging access log file format JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta2VirtualGatewayStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


