"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ContainerRecipe:
    r"""
    ContainerRecipe is the Schema for the ContainerRecipes API. Manage an Image Builder Container Recipe

    Attributes
    ----------
    apiVersion : str, default is "imagebuilder.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ContainerRecipe", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpec, default is Undefined, required
        spec
    status : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatus, default is Undefined, optional
        status
    """


    apiVersion: "imagebuilder.aws.upbound.io/v1beta1" = "imagebuilder.aws.upbound.io/v1beta1"

    kind: "ContainerRecipe" = "ContainerRecipe"

    metadata?: v1.ObjectMeta

    spec: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpec

    status?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatus


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpec:
    r"""
    ContainerRecipeSpec defines the desired state of ContainerRecipe

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProvider, default is Undefined, required
        for provider
    initProvider : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProvider

    initProvider?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecProviderConfigRef

    publishConnectionDetailsTo?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecWriteConnectionSecretToRef


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProvider:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider

    Attributes
    ----------
    component : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0], default is Undefined, optional
        Ordered configuration block(s) with components for the container recipe. Detailed below.
    containerType : str, default is Undefined, optional
        The type of the container to create. Valid values: DOCKER.
    description : str, default is Undefined, optional
        The description of the container recipe.
    dockerfileTemplateData : str, default is Undefined, optional
        The Dockerfile template used to build the image as an inline data blob.
    dockerfileTemplateUri : str, default is Undefined, optional
        The Amazon S3 URI for the Dockerfile that will be used to build the container image.
    instanceConfiguration : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0], default is Undefined, optional
        Configuration block used to configure an instance for building and testing container images. Detailed below.
    kmsKeyId : str, default is Undefined, optional
        The KMS key used to encrypt the container image.
    kmsKeyIdRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    name : str, default is Undefined, optional
        The name of the container recipe.
    parentImage : str, default is Undefined, optional
        The base image for the container recipe.
    platformOverride : str, default is Undefined, optional
        Specifies the operating system platform when you use a custom base image.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targetRepository : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0], default is Undefined, optional
        The destination repository for the container image. Detailed below.
    version : str, default is Undefined, optional
        Version of the container recipe.
    workingDirectory : str, default is Undefined, optional
        The working directory to be used during build and test workflows.
    """


    component?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0]

    containerType?: str

    description?: str

    dockerfileTemplateData?: str

    dockerfileTemplateUri?: str

    instanceConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0]

    kmsKeyId?: str

    kmsKeyIdRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDSelector

    name?: str

    parentImage?: str

    platformOverride?: str

    region: str

    tags?: {str:str}

    targetRepository?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0]

    version?: str

    workingDirectory?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider component items0

    Attributes
    ----------
    componentArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Component to associate.
    componentArnRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnRef, default is Undefined, optional
        component arn ref
    componentArnSelector : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnSelector, default is Undefined, optional
        component arn selector
    parameter : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ParameterItems0], default is Undefined, optional
        Configuration block(s) for parameters to configure the component. Detailed below.
    """


    componentArn?: str

    componentArnRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnRef

    componentArnSelector?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnSelector

    parameter?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ParameterItems0]


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnRef:
    r"""
    Reference to a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnSelector:
    r"""
    Selector for a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ComponentArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderComponentItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider component items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the component parameter.
    value : str, default is Undefined, optional
        The value for the named component parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider instance configuration items0

    Attributes
    ----------
    blockDeviceMapping : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0BlockDeviceMappingItems0], default is Undefined, optional
        Configuration block(s) with block device mappings for the container recipe. Detailed below.
    image : str, default is Undefined, optional
        The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
    """


    blockDeviceMapping?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0BlockDeviceMappingItems0]

    image?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0BlockDeviceMappingItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider instance configuration items0 block device mapping items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the device. For example, /dev/sda or /dev/xvdb.
    ebs : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0], default is Undefined, optional
        Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
    noDevice : bool, default is Undefined, optional
        Set to true to remove a mapping from the parent image.
    virtualName : str, default is Undefined, optional
        Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
    """


    deviceName?: str

    ebs?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0]

    noDevice?: bool

    virtualName?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider instance configuration items0 block device mapping items0 ebs items0

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
    encrypted : str, default is Undefined, optional
        Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
    iops : float, default is Undefined, optional
        Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
    snapshotId : str, default is Undefined, optional
        Identifier of the EC2 Volume Snapshot.
    throughput : float, default is Undefined, optional
        For GP3 volumes only. The throughput in MiB/s that the volume supports.
    volumeSize : float, default is Undefined, optional
        Size of the volume, in GiB.
    volumeType : str, default is Undefined, optional
        Type of the volume. For example, gp2 or io2.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec for provider target repository items0

    Attributes
    ----------
    repositoryName : str, default is Undefined, optional
        The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
    repositoryNameRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameRef, default is Undefined, optional
        repository name ref
    repositoryNameSelector : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameSelector, default is Undefined, optional
        repository name selector
    service : str, default is Undefined, optional
        The service in which this image is registered. Valid values: ECR.
    """


    repositoryName?: str

    repositoryNameRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameRef

    repositoryNameSelector?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameSelector

    service?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameRef:
    r"""
    Reference to a Repository in ecr to populate repositoryName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameSelector:
    r"""
    Selector for a Repository in ecr to populate repositoryName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecForProviderTargetRepositoryItems0RepositoryNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    component : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0], default is Undefined, optional
        Ordered configuration block(s) with components for the container recipe. Detailed below.
    containerType : str, default is Undefined, optional
        The type of the container to create. Valid values: DOCKER.
    description : str, default is Undefined, optional
        The description of the container recipe.
    dockerfileTemplateData : str, default is Undefined, optional
        The Dockerfile template used to build the image as an inline data blob.
    dockerfileTemplateUri : str, default is Undefined, optional
        The Amazon S3 URI for the Dockerfile that will be used to build the container image.
    instanceConfiguration : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0], default is Undefined, optional
        Configuration block used to configure an instance for building and testing container images. Detailed below.
    kmsKeyId : str, default is Undefined, optional
        The KMS key used to encrypt the container image.
    kmsKeyIdRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    name : str, default is Undefined, optional
        The name of the container recipe.
    parentImage : str, default is Undefined, optional
        The base image for the container recipe.
    platformOverride : str, default is Undefined, optional
        Specifies the operating system platform when you use a custom base image.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targetRepository : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0], default is Undefined, optional
        The destination repository for the container image. Detailed below.
    version : str, default is Undefined, optional
        Version of the container recipe.
    workingDirectory : str, default is Undefined, optional
        The working directory to be used during build and test workflows.
    """


    component?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0]

    containerType?: str

    description?: str

    dockerfileTemplateData?: str

    dockerfileTemplateUri?: str

    instanceConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0]

    kmsKeyId?: str

    kmsKeyIdRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDSelector

    name?: str

    parentImage?: str

    platformOverride?: str

    tags?: {str:str}

    targetRepository?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0]

    version?: str

    workingDirectory?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec init provider component items0

    Attributes
    ----------
    componentArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Component to associate.
    componentArnRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnRef, default is Undefined, optional
        component arn ref
    componentArnSelector : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnSelector, default is Undefined, optional
        component arn selector
    parameter : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ParameterItems0], default is Undefined, optional
        Configuration block(s) for parameters to configure the component. Detailed below.
    """


    componentArn?: str

    componentArnRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnRef

    componentArnSelector?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnSelector

    parameter?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ParameterItems0]


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnRef:
    r"""
    Reference to a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnSelector:
    r"""
    Selector for a Component in imagebuilder to populate componentArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ComponentArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderComponentItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec init provider component items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the component parameter.
    value : str, default is Undefined, optional
        The value for the named component parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec init provider instance configuration items0

    Attributes
    ----------
    blockDeviceMapping : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0BlockDeviceMappingItems0], default is Undefined, optional
        Configuration block(s) with block device mappings for the container recipe. Detailed below.
    image : str, default is Undefined, optional
        The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
    """


    blockDeviceMapping?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0BlockDeviceMappingItems0]

    image?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0BlockDeviceMappingItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec init provider instance configuration items0 block device mapping items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the device. For example, /dev/sda or /dev/xvdb.
    ebs : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0], default is Undefined, optional
        Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
    noDevice : bool, default is Undefined, optional
        Set to true to remove a mapping from the parent image.
    virtualName : str, default is Undefined, optional
        Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
    """


    deviceName?: str

    ebs?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0]

    noDevice?: bool

    virtualName?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec init provider instance configuration items0 block device mapping items0 ebs items0

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
    encrypted : str, default is Undefined, optional
        Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
    iops : float, default is Undefined, optional
        Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
    snapshotId : str, default is Undefined, optional
        Identifier of the EC2 Volume Snapshot.
    throughput : float, default is Undefined, optional
        For GP3 volumes only. The throughput in MiB/s that the volume supports.
    volumeSize : float, default is Undefined, optional
        Size of the volume, in GiB.
    volumeType : str, default is Undefined, optional
        Type of the volume. For example, gp2 or io2.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe spec init provider target repository items0

    Attributes
    ----------
    repositoryName : str, default is Undefined, optional
        The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
    repositoryNameRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameRef, default is Undefined, optional
        repository name ref
    repositoryNameSelector : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameSelector, default is Undefined, optional
        repository name selector
    service : str, default is Undefined, optional
        The service in which this image is registered. Valid values: ECR.
    """


    repositoryName?: str

    repositoryNameRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameRef

    repositoryNameSelector?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameSelector

    service?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameRef:
    r"""
    Reference to a Repository in ecr to populate repositoryName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameSelector:
    r"""
    Selector for a Repository in ecr to populate repositoryName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecInitProviderTargetRepositoryItems0RepositoryNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecProviderConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToConfigRef

    metadata?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToMetadata

    name: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatus:
    r"""
    ContainerRecipeStatus defines the observed state of ContainerRecipe.

    Attributes
    ----------
    atProvider : ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProvider

    conditions?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusConditionsItems0]

    observedGeneration?: int


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProvider:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the container recipe.
    component : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderComponentItems0], default is Undefined, optional
        Ordered configuration block(s) with components for the container recipe. Detailed below.
    containerType : str, default is Undefined, optional
        The type of the container to create. Valid values: DOCKER.
    dateCreated : str, default is Undefined, optional
        Date the container recipe was created.
    description : str, default is Undefined, optional
        The description of the container recipe.
    dockerfileTemplateData : str, default is Undefined, optional
        The Dockerfile template used to build the image as an inline data blob.
    dockerfileTemplateUri : str, default is Undefined, optional
        The Amazon S3 URI for the Dockerfile that will be used to build the container image.
    encrypted : bool, default is Undefined, optional
        A flag that indicates if the target container is encrypted.
    id : str, default is Undefined, optional
        id
    instanceConfiguration : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0], default is Undefined, optional
        Configuration block used to configure an instance for building and testing container images. Detailed below.
    kmsKeyId : str, default is Undefined, optional
        The KMS key used to encrypt the container image.
    name : str, default is Undefined, optional
        The name of the container recipe.
    owner : str, default is Undefined, optional
        Owner of the container recipe.
    parentImage : str, default is Undefined, optional
        The base image for the container recipe.
    platform : str, default is Undefined, optional
        Platform of the container recipe.
    platformOverride : str, default is Undefined, optional
        Specifies the operating system platform when you use a custom base image.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    targetRepository : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderTargetRepositoryItems0], default is Undefined, optional
        The destination repository for the container image. Detailed below.
    version : str, default is Undefined, optional
        Version of the container recipe.
    workingDirectory : str, default is Undefined, optional
        The working directory to be used during build and test workflows.
    """


    arn?: str

    component?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderComponentItems0]

    containerType?: str

    dateCreated?: str

    description?: str

    dockerfileTemplateData?: str

    dockerfileTemplateUri?: str

    encrypted?: bool

    id?: str

    instanceConfiguration?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0]

    kmsKeyId?: str

    name?: str

    owner?: str

    parentImage?: str

    platform?: str

    platformOverride?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    targetRepository?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderTargetRepositoryItems0]

    version?: str

    workingDirectory?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderComponentItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider component items0

    Attributes
    ----------
    componentArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Image Builder Component to associate.
    parameter : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderComponentItems0ParameterItems0], default is Undefined, optional
        Configuration block(s) for parameters to configure the component. Detailed below.
    """


    componentArn?: str

    parameter?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderComponentItems0ParameterItems0]


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderComponentItems0ParameterItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider component items0 parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the component parameter.
    value : str, default is Undefined, optional
        The value for the named component parameter.
    """


    name?: str

    value?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider instance configuration items0

    Attributes
    ----------
    blockDeviceMapping : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0BlockDeviceMappingItems0], default is Undefined, optional
        Configuration block(s) with block device mappings for the container recipe. Detailed below.
    image : str, default is Undefined, optional
        The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.
    """


    blockDeviceMapping?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0BlockDeviceMappingItems0]

    image?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0BlockDeviceMappingItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider instance configuration items0 block device mapping items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Name of the device. For example, /dev/sda or /dev/xvdb.
    ebs : [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0], default is Undefined, optional
        Configuration block with Elastic Block Storage (EBS) block device mapping settings. Detailed below.
    noDevice : bool, default is Undefined, optional
        Set to true to remove a mapping from the parent image.
    virtualName : str, default is Undefined, optional
        Virtual device name. For example, ephemeral0. Instance store volumes are numbered starting from 0.
    """


    deviceName?: str

    ebs?: [ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0]

    noDevice?: bool

    virtualName?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderInstanceConfigurationItems0BlockDeviceMappingItems0EbsItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider instance configuration items0 block device mapping items0 ebs items0

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
    encrypted : str, default is Undefined, optional
        Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
    iops : float, default is Undefined, optional
        Number of Input/Output (I/O) operations per second to provision for an io1 or io2 volume.
    kmsKeyId : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
    snapshotId : str, default is Undefined, optional
        Identifier of the EC2 Volume Snapshot.
    throughput : float, default is Undefined, optional
        For GP3 volumes only. The throughput in MiB/s that the volume supports.
    volumeSize : float, default is Undefined, optional
        Size of the volume, in GiB.
    volumeType : str, default is Undefined, optional
        Type of the volume. For example, gp2 or io2.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusAtProviderTargetRepositoryItems0:
    r"""
    imagebuilder aws upbound io v1beta1 container recipe status at provider target repository items0

    Attributes
    ----------
    repositoryName : str, default is Undefined, optional
        The name of the container repository where the output container image is stored. This name is prefixed by the repository location.
    service : str, default is Undefined, optional
        The service in which this image is registered. Valid values: ECR.
    """


    repositoryName?: str

    service?: str


schema ImagebuilderAwsUpboundIoV1beta1ContainerRecipeStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


