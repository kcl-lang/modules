"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RoutingProfile:
    r"""
    RoutingProfile is the Schema for the RoutingProfiles API. Provides details about a specific Amazon Connect Routing Profile.

    Attributes
    ----------
    apiVersion : str, default is "connect.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RoutingProfile", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ConnectAwsUpboundIoV1beta2RoutingProfileSpec, default is Undefined, required
        spec
    status : ConnectAwsUpboundIoV1beta2RoutingProfileStatus, default is Undefined, optional
        status
    """


    apiVersion: "connect.aws.upbound.io/v1beta2" = "connect.aws.upbound.io/v1beta2"

    kind: "RoutingProfile" = "RoutingProfile"

    metadata?: v1.ObjectMeta

    spec: ConnectAwsUpboundIoV1beta2RoutingProfileSpec

    status?: ConnectAwsUpboundIoV1beta2RoutingProfileStatus


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpec:
    r"""
    RoutingProfileSpec defines the desired state of RoutingProfile

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProvider, default is Undefined, required
        for provider
    initProvider : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProvider

    initProvider?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecProviderConfigRef

    publishConnectionDetailsTo?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecWriteConnectionSecretToRef


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProvider:
    r"""
    connect aws upbound io v1beta2 routing profile spec for provider

    Attributes
    ----------
    defaultOutboundQueueId : str, default is Undefined, optional
        Specifies the default outbound queue for the Routing Profile.
    defaultOutboundQueueIdRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDRef, default is Undefined, optional
        default outbound queue Id ref
    defaultOutboundQueueIdSelector : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDSelector, default is Undefined, optional
        default outbound queue Id selector
    description : str, default is Undefined, optional
        Specifies the description of the Routing Profile.
    instanceId : str, default is Undefined, optional
        Specifies the identifier of the hosting Amazon Connect Instance.
    instanceIdRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    mediaConcurrencies : [ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderMediaConcurrenciesItems0], default is Undefined, optional
        One or more media_concurrencies blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The media_concurrencies block is documented below.
    name : str, default is Undefined, optional
        Specifies the name of the Routing Profile.
    queueConfigs : [ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderQueueConfigsItems0], default is Undefined, optional
        One or more queue_configs blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The queue_configs block is documented below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    defaultOutboundQueueId?: str

    defaultOutboundQueueIdRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDRef

    defaultOutboundQueueIdSelector?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDSelector

    description?: str

    instanceId?: str

    instanceIdRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDRef

    instanceIdSelector?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDSelector

    mediaConcurrencies?: [ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderMediaConcurrenciesItems0]

    name?: str

    queueConfigs?: [ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderQueueConfigsItems0]

    region: str

    tags?: {str:str}


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDRef:
    r"""
    Reference to a Queue in connect to populate defaultOutboundQueueId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDRefPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDSelector:
    r"""
    Selector for a Queue in connect to populate defaultOutboundQueueId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderDefaultOutboundQueueIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDRef:
    r"""
    Reference to a Instance in connect to populate instanceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDRefPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDSelector:
    r"""
    Selector for a Instance in connect to populate instanceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderInstanceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderMediaConcurrenciesItems0:
    r"""
    connect aws upbound io v1beta2 routing profile spec for provider media concurrencies items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are VOICE, CHAT, TASK.
    concurrency : float, default is Undefined, optional
        Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for VOICE: Minimum value of 1. Maximum value of 1. Valid Range for CHAT: Minimum value of 1. Maximum value of 10. Valid Range for TASK: Minimum value of 1. Maximum value of 10.
    """


    channel?: str

    concurrency?: float


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecForProviderQueueConfigsItems0:
    r"""
    connect aws upbound io v1beta2 routing profile spec for provider queue configs items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are VOICE, CHAT, TASK.
    delay : float, default is Undefined, optional
        Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
    priority : float, default is Undefined, optional
        Specifies the order in which contacts are to be handled for the queue.
    queueId : str, default is Undefined, optional
        Specifies the identifier for the queue.
    """


    channel?: str

    delay?: float

    priority?: float

    queueId?: str


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    defaultOutboundQueueId : str, default is Undefined, optional
        Specifies the default outbound queue for the Routing Profile.
    defaultOutboundQueueIdRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDRef, default is Undefined, optional
        default outbound queue Id ref
    defaultOutboundQueueIdSelector : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDSelector, default is Undefined, optional
        default outbound queue Id selector
    description : str, default is Undefined, optional
        Specifies the description of the Routing Profile.
    instanceId : str, default is Undefined, optional
        Specifies the identifier of the hosting Amazon Connect Instance.
    instanceIdRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDRef, default is Undefined, optional
        instance Id ref
    instanceIdSelector : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDSelector, default is Undefined, optional
        instance Id selector
    mediaConcurrencies : [ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderMediaConcurrenciesItems0], default is Undefined, optional
        One or more media_concurrencies blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The media_concurrencies block is documented below.
    name : str, default is Undefined, optional
        Specifies the name of the Routing Profile.
    queueConfigs : [ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderQueueConfigsItems0], default is Undefined, optional
        One or more queue_configs blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The queue_configs block is documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    defaultOutboundQueueId?: str

    defaultOutboundQueueIdRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDRef

    defaultOutboundQueueIdSelector?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDSelector

    description?: str

    instanceId?: str

    instanceIdRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDRef

    instanceIdSelector?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDSelector

    mediaConcurrencies?: [ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderMediaConcurrenciesItems0]

    name?: str

    queueConfigs?: [ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderQueueConfigsItems0]

    tags?: {str:str}


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDRef:
    r"""
    Reference to a Queue in connect to populate defaultOutboundQueueId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDRefPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDSelector:
    r"""
    Selector for a Queue in connect to populate defaultOutboundQueueId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderDefaultOutboundQueueIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDRef:
    r"""
    Reference to a Instance in connect to populate instanceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDRefPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDSelector:
    r"""
    Selector for a Instance in connect to populate instanceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDSelectorPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderInstanceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderMediaConcurrenciesItems0:
    r"""
    connect aws upbound io v1beta2 routing profile spec init provider media concurrencies items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are VOICE, CHAT, TASK.
    concurrency : float, default is Undefined, optional
        Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for VOICE: Minimum value of 1. Maximum value of 1. Valid Range for CHAT: Minimum value of 1. Maximum value of 10. Valid Range for TASK: Minimum value of 1. Maximum value of 10.
    """


    channel?: str

    concurrency?: float


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecInitProviderQueueConfigsItems0:
    r"""
    connect aws upbound io v1beta2 routing profile spec init provider queue configs items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are VOICE, CHAT, TASK.
    delay : float, default is Undefined, optional
        Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
    priority : float, default is Undefined, optional
        Specifies the order in which contacts are to be handled for the queue.
    queueId : str, default is Undefined, optional
        Specifies the identifier for the queue.
    """


    channel?: str

    delay?: float

    priority?: float

    queueId?: str


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecProviderConfigRefPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToConfigRef

    metadata?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToMetadata

    name: str


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToConfigRefPolicy


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ConnectAwsUpboundIoV1beta2RoutingProfileSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ConnectAwsUpboundIoV1beta2RoutingProfileStatus:
    r"""
    RoutingProfileStatus defines the observed state of RoutingProfile.

    Attributes
    ----------
    atProvider : ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ConnectAwsUpboundIoV1beta2RoutingProfileStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProvider

    conditions?: [ConnectAwsUpboundIoV1beta2RoutingProfileStatusConditionsItems0]

    observedGeneration?: int


schema ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProvider:
    r"""
    connect aws upbound io v1beta2 routing profile status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Routing Profile.
    defaultOutboundQueueId : str, default is Undefined, optional
        Specifies the default outbound queue for the Routing Profile.
    description : str, default is Undefined, optional
        Specifies the description of the Routing Profile.
    id : str, default is Undefined, optional
        The identifier of the hosting Amazon Connect Instance and identifier of the Routing Profile separated by a colon (:).
    instanceId : str, default is Undefined, optional
        Specifies the identifier of the hosting Amazon Connect Instance.
    mediaConcurrencies : [ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProviderMediaConcurrenciesItems0], default is Undefined, optional
        One or more media_concurrencies blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The media_concurrencies block is documented below.
    name : str, default is Undefined, optional
        Specifies the name of the Routing Profile.
    queueConfigs : [ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProviderQueueConfigsItems0], default is Undefined, optional
        One or more queue_configs blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The queue_configs block is documented below.
    routingProfileId : str, default is Undefined, optional
        The identifier for the Routing Profile.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    defaultOutboundQueueId?: str

    description?: str

    id?: str

    instanceId?: str

    mediaConcurrencies?: [ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProviderMediaConcurrenciesItems0]

    name?: str

    queueConfigs?: [ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProviderQueueConfigsItems0]

    routingProfileId?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProviderMediaConcurrenciesItems0:
    r"""
    connect aws upbound io v1beta2 routing profile status at provider media concurrencies items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        Specifies the channels that agents can handle in the Contact Control Panel (CCP). Valid values are VOICE, CHAT, TASK.
    concurrency : float, default is Undefined, optional
        Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for VOICE: Minimum value of 1. Maximum value of 1. Valid Range for CHAT: Minimum value of 1. Maximum value of 10. Valid Range for TASK: Minimum value of 1. Maximum value of 10.
    """


    channel?: str

    concurrency?: float


schema ConnectAwsUpboundIoV1beta2RoutingProfileStatusAtProviderQueueConfigsItems0:
    r"""
    connect aws upbound io v1beta2 routing profile status at provider queue configs items0

    Attributes
    ----------
    channel : str, default is Undefined, optional
        Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are VOICE, CHAT, TASK.
    delay : float, default is Undefined, optional
        Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent
    priority : float, default is Undefined, optional
        Specifies the order in which contacts are to be handled for the queue.
    queueArn : str, default is Undefined, optional
        ARN for the queue.
    queueId : str, default is Undefined, optional
        Specifies the identifier for the queue.
    queueName : str, default is Undefined, optional
        Name for the queue.
    """


    channel?: str

    delay?: float

    priority?: float

    queueArn?: str

    queueId?: str

    queueName?: str


schema ConnectAwsUpboundIoV1beta2RoutingProfileStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


