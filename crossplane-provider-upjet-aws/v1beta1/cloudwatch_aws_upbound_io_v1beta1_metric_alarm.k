"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MetricAlarm:
    r"""
    MetricAlarm is the Schema for the MetricAlarms API. Provides a CloudWatch Metric Alarm resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatch.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MetricAlarm", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpec, default is Undefined, required
        spec
    status : CloudwatchAwsUpboundIoV1beta1MetricAlarmStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatch.aws.upbound.io/v1beta1" = "cloudwatch.aws.upbound.io/v1beta1"

    kind: "MetricAlarm" = "MetricAlarm"

    metadata?: v1.ObjectMeta

    spec: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpec

    status?: CloudwatchAwsUpboundIoV1beta1MetricAlarmStatus


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpec:
    r"""
    MetricAlarmSpec defines the desired state of MetricAlarm

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProvider

    initProvider?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecWriteConnectionSecretToRef


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProvider:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm spec for provider

    Attributes
    ----------
    actionsEnabled : bool, default is Undefined, optional
        Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to true.
    alarmActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    alarmActionsRefs : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsRefsItems0], default is Undefined, optional
        References to Policy in autoscaling to populate alarmActions.
    alarmActionsSelector : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsSelector, default is Undefined, optional
        alarm actions selector
    alarmDescription : str, default is Undefined, optional
        The description for the alarm.
    comparisonOperator : str, default is Undefined, optional
        The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.
    datapointsToAlarm : float, default is Undefined, optional
        The number of datapoints that must be breaching to trigger the alarm.
    dimensions : {str:str}, default is Undefined, optional
        The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation here.
    evaluateLowSampleCountPercentiles : str, default is Undefined, optional
        Used only for alarms based on percentiles.
        If you specify ignore, the alarm state will not change during periods with too few data points to be statistically significant.
        If you specify evaluate or omit this parameter, the alarm will always be evaluated and possibly change state no matter how many data points are available.
        The following values are supported: ignore, and evaluate.
    evaluationPeriods : float, default is Undefined, optional
        The number of periods over which data is compared to the specified threshold.
    extendedStatistic : str, default is Undefined, optional
        The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
    insufficientDataActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    metricName : str, default is Undefined, optional
        The name for the alarm's associated metric.
        See docs for supported metrics.
    metricQuery : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderMetricQueryItems0], default is Undefined, optional
        Enables you to create an alarm based on a metric math expression. You may specify at most 20.
    namespace : str, default is Undefined, optional
        The namespace for the alarm's associated metric. See docs for the list of namespaces.
        See docs for supported metrics.
    okActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    okActionsRefs : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsRefsItems0], default is Undefined, optional
        References to Topic in sns to populate okActions.
    okActionsSelector : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsSelector, default is Undefined, optional
        ok actions selector
    period : float, default is Undefined, optional
        The period in seconds over which the specified statistic is applied.
        Valid values are 10, 30, or any multiple of 60.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    statistic : str, default is Undefined, optional
        The statistic to apply to the alarm's associated metric.
        Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    threshold : float, default is Undefined, optional
        The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
    thresholdMetricId : str, default is Undefined, optional
        If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.
    treatMissingData : str, default is Undefined, optional
        Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.
    unit : str, default is Undefined, optional
        The unit for the alarm's associated metric.
    """


    actionsEnabled?: bool

    alarmActions?: [str]

    alarmActionsRefs?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsRefsItems0]

    alarmActionsSelector?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsSelector

    alarmDescription?: str

    comparisonOperator?: str

    datapointsToAlarm?: float

    dimensions?: {str:str}

    evaluateLowSampleCountPercentiles?: str

    evaluationPeriods?: float

    extendedStatistic?: str

    insufficientDataActions?: [str]

    metricName?: str

    metricQuery?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderMetricQueryItems0]

    namespace?: str

    okActions?: [str]

    okActionsRefs?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsRefsItems0]

    okActionsSelector?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsSelector

    period?: float

    region: str

    statistic?: str

    tags?: {str:str}

    threshold?: float

    thresholdMetricId?: str

    treatMissingData?: str

    unit?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsSelector:
    r"""
    Selector for a list of Policy in autoscaling to populate alarmActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderAlarmActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderMetricQueryItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm spec for provider metric query items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the account where the metrics are located, if this is a cross-account alarm.
    expression : str, default is Undefined, optional
        The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the Amazon CloudWatch User Guide.
    id : str, default is Undefined, optional
        A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
    label : str, default is Undefined, optional
        A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
    metric : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderMetricQueryItems0MetricItems0], default is Undefined, optional
        The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
    period : float, default is Undefined, optional
        Granularity in seconds of returned data points.
        For metrics with regular resolution, valid values are any multiple of 60.
        For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.
    returnData : bool, default is Undefined, optional
        Specify exactly one metric_query to be true to use that metric_query result as the alarm.
    """


    accountId?: str

    expression?: str

    id?: str

    label?: str

    metric?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderMetricQueryItems0MetricItems0]

    period?: float

    returnData?: bool


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderMetricQueryItems0MetricItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm spec for provider metric query items0 metric items0

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        The dimensions for this metric.  For the list of available dimensions see the AWS documentation here.
    metricName : str, default is Undefined, optional
        The name for this metric.
        See docs for supported metrics.
    namespace : str, default is Undefined, optional
        The namespace for this metric. See docs for the list of namespaces.
        See docs for supported metrics.
    period : float, default is Undefined, optional
        Granularity in seconds of returned data points.
        For metrics with regular resolution, valid values are any multiple of 60.
        For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.
    stat : str, default is Undefined, optional
        The statistic to apply to this metric.
        See docs for supported statistics.
    unit : str, default is Undefined, optional
        The unit for this metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    period?: float

    stat?: str

    unit?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsSelector:
    r"""
    Selector for a list of Topic in sns to populate okActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecForProviderOkActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    actionsEnabled : bool, default is Undefined, optional
        Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to true.
    alarmActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    alarmActionsRefs : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsRefsItems0], default is Undefined, optional
        References to Policy in autoscaling to populate alarmActions.
    alarmActionsSelector : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsSelector, default is Undefined, optional
        alarm actions selector
    alarmDescription : str, default is Undefined, optional
        The description for the alarm.
    comparisonOperator : str, default is Undefined, optional
        The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.
    datapointsToAlarm : float, default is Undefined, optional
        The number of datapoints that must be breaching to trigger the alarm.
    dimensions : {str:str}, default is Undefined, optional
        The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation here.
    evaluateLowSampleCountPercentiles : str, default is Undefined, optional
        Used only for alarms based on percentiles.
        If you specify ignore, the alarm state will not change during periods with too few data points to be statistically significant.
        If you specify evaluate or omit this parameter, the alarm will always be evaluated and possibly change state no matter how many data points are available.
        The following values are supported: ignore, and evaluate.
    evaluationPeriods : float, default is Undefined, optional
        The number of periods over which data is compared to the specified threshold.
    extendedStatistic : str, default is Undefined, optional
        The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
    insufficientDataActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    metricName : str, default is Undefined, optional
        The name for the alarm's associated metric.
        See docs for supported metrics.
    metricQuery : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderMetricQueryItems0], default is Undefined, optional
        Enables you to create an alarm based on a metric math expression. You may specify at most 20.
    namespace : str, default is Undefined, optional
        The namespace for the alarm's associated metric. See docs for the list of namespaces.
        See docs for supported metrics.
    okActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    okActionsRefs : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsRefsItems0], default is Undefined, optional
        References to Topic in sns to populate okActions.
    okActionsSelector : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsSelector, default is Undefined, optional
        ok actions selector
    period : float, default is Undefined, optional
        The period in seconds over which the specified statistic is applied.
        Valid values are 10, 30, or any multiple of 60.
    statistic : str, default is Undefined, optional
        The statistic to apply to the alarm's associated metric.
        Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    threshold : float, default is Undefined, optional
        The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
    thresholdMetricId : str, default is Undefined, optional
        If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.
    treatMissingData : str, default is Undefined, optional
        Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.
    unit : str, default is Undefined, optional
        The unit for the alarm's associated metric.
    """


    actionsEnabled?: bool

    alarmActions?: [str]

    alarmActionsRefs?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsRefsItems0]

    alarmActionsSelector?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsSelector

    alarmDescription?: str

    comparisonOperator?: str

    datapointsToAlarm?: float

    dimensions?: {str:str}

    evaluateLowSampleCountPercentiles?: str

    evaluationPeriods?: float

    extendedStatistic?: str

    insufficientDataActions?: [str]

    metricName?: str

    metricQuery?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderMetricQueryItems0]

    namespace?: str

    okActions?: [str]

    okActionsRefs?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsRefsItems0]

    okActionsSelector?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsSelector

    period?: float

    statistic?: str

    tags?: {str:str}

    threshold?: float

    thresholdMetricId?: str

    treatMissingData?: str

    unit?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsSelector:
    r"""
    Selector for a list of Policy in autoscaling to populate alarmActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderAlarmActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderMetricQueryItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm spec init provider metric query items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the account where the metrics are located, if this is a cross-account alarm.
    expression : str, default is Undefined, optional
        The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the Amazon CloudWatch User Guide.
    id : str, default is Undefined, optional
        A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
    label : str, default is Undefined, optional
        A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
    metric : [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderMetricQueryItems0MetricItems0], default is Undefined, optional
        The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
    period : float, default is Undefined, optional
        Granularity in seconds of returned data points.
        For metrics with regular resolution, valid values are any multiple of 60.
        For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.
    returnData : bool, default is Undefined, optional
        Specify exactly one metric_query to be true to use that metric_query result as the alarm.
    """


    accountId?: str

    expression?: str

    id?: str

    label?: str

    metric?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderMetricQueryItems0MetricItems0]

    period?: float

    returnData?: bool


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderMetricQueryItems0MetricItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm spec init provider metric query items0 metric items0

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        The dimensions for this metric.  For the list of available dimensions see the AWS documentation here.
    metricName : str, default is Undefined, optional
        The name for this metric.
        See docs for supported metrics.
    namespace : str, default is Undefined, optional
        The namespace for this metric. See docs for the list of namespaces.
        See docs for supported metrics.
    period : float, default is Undefined, optional
        Granularity in seconds of returned data points.
        For metrics with regular resolution, valid values are any multiple of 60.
        For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.
    stat : str, default is Undefined, optional
        The statistic to apply to this metric.
        See docs for supported statistics.
    unit : str, default is Undefined, optional
        The unit for this metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    period?: float

    stat?: str

    unit?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsRefsItems0Policy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsSelector:
    r"""
    Selector for a list of Topic in sns to populate okActions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecInitProviderOkActionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecProviderConfigRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmStatus:
    r"""
    MetricAlarmStatus defines the observed state of MetricAlarm.

    Attributes
    ----------
    atProvider : CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProvider

    conditions?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProvider:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm status at provider

    Attributes
    ----------
    actionsEnabled : bool, default is Undefined, optional
        Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to true.
    alarmActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    alarmDescription : str, default is Undefined, optional
        The description for the alarm.
    arn : str, default is Undefined, optional
        The ARN of the CloudWatch Metric Alarm.
    comparisonOperator : str, default is Undefined, optional
        The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.
    datapointsToAlarm : float, default is Undefined, optional
        The number of datapoints that must be breaching to trigger the alarm.
    dimensions : {str:str}, default is Undefined, optional
        The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation here.
    evaluateLowSampleCountPercentiles : str, default is Undefined, optional
        Used only for alarms based on percentiles.
        If you specify ignore, the alarm state will not change during periods with too few data points to be statistically significant.
        If you specify evaluate or omit this parameter, the alarm will always be evaluated and possibly change state no matter how many data points are available.
        The following values are supported: ignore, and evaluate.
    evaluationPeriods : float, default is Undefined, optional
        The number of periods over which data is compared to the specified threshold.
    extendedStatistic : str, default is Undefined, optional
        The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
    id : str, default is Undefined, optional
        The ID of the health check.
    insufficientDataActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    metricName : str, default is Undefined, optional
        The name for the alarm's associated metric.
        See docs for supported metrics.
    metricQuery : [CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProviderMetricQueryItems0], default is Undefined, optional
        Enables you to create an alarm based on a metric math expression. You may specify at most 20.
    namespace : str, default is Undefined, optional
        The namespace for the alarm's associated metric. See docs for the list of namespaces.
        See docs for supported metrics.
    okActions : [str], default is Undefined, optional
        The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).
    period : float, default is Undefined, optional
        The period in seconds over which the specified statistic is applied.
        Valid values are 10, 30, or any multiple of 60.
    statistic : str, default is Undefined, optional
        The statistic to apply to the alarm's associated metric.
        Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    threshold : float, default is Undefined, optional
        The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.
    thresholdMetricId : str, default is Undefined, optional
        If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.
    treatMissingData : str, default is Undefined, optional
        Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.
    unit : str, default is Undefined, optional
        The unit for the alarm's associated metric.
    """


    actionsEnabled?: bool

    alarmActions?: [str]

    alarmDescription?: str

    arn?: str

    comparisonOperator?: str

    datapointsToAlarm?: float

    dimensions?: {str:str}

    evaluateLowSampleCountPercentiles?: str

    evaluationPeriods?: float

    extendedStatistic?: str

    id?: str

    insufficientDataActions?: [str]

    metricName?: str

    metricQuery?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProviderMetricQueryItems0]

    namespace?: str

    okActions?: [str]

    period?: float

    statistic?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    threshold?: float

    thresholdMetricId?: str

    treatMissingData?: str

    unit?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProviderMetricQueryItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm status at provider metric query items0

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the account where the metrics are located, if this is a cross-account alarm.
    expression : str, default is Undefined, optional
        The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the Amazon CloudWatch User Guide.
    id : str, default is Undefined, optional
        A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
    label : str, default is Undefined, optional
        A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
    metric : [CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProviderMetricQueryItems0MetricItems0], default is Undefined, optional
        The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
    period : float, default is Undefined, optional
        Granularity in seconds of returned data points.
        For metrics with regular resolution, valid values are any multiple of 60.
        For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.
    returnData : bool, default is Undefined, optional
        Specify exactly one metric_query to be true to use that metric_query result as the alarm.
    """


    accountId?: str

    expression?: str

    id?: str

    label?: str

    metric?: [CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProviderMetricQueryItems0MetricItems0]

    period?: float

    returnData?: bool


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusAtProviderMetricQueryItems0MetricItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric alarm status at provider metric query items0 metric items0

    Attributes
    ----------
    dimensions : {str:str}, default is Undefined, optional
        The dimensions for this metric.  For the list of available dimensions see the AWS documentation here.
    metricName : str, default is Undefined, optional
        The name for this metric.
        See docs for supported metrics.
    namespace : str, default is Undefined, optional
        The namespace for this metric. See docs for the list of namespaces.
        See docs for supported metrics.
    period : float, default is Undefined, optional
        Granularity in seconds of returned data points.
        For metrics with regular resolution, valid values are any multiple of 60.
        For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.
    stat : str, default is Undefined, optional
        The statistic to apply to this metric.
        See docs for supported statistics.
    unit : str, default is Undefined, optional
        The unit for this metric.
    """


    dimensions?: {str:str}

    metricName?: str

    namespace?: str

    period?: float

    stat?: str

    unit?: str


schema CloudwatchAwsUpboundIoV1beta1MetricAlarmStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


