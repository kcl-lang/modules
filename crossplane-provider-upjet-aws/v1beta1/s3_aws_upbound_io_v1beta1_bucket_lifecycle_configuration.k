"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BucketLifecycleConfiguration:
    r"""
    BucketLifecycleConfiguration is the Schema for the BucketLifecycleConfigurations API. Provides a S3 bucket lifecycle configuration resource.

    Attributes
    ----------
    apiVersion : str, default is "s3.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BucketLifecycleConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpec, default is Undefined, required
        spec
    status : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3.aws.upbound.io/v1beta1" = "s3.aws.upbound.io/v1beta1"

    kind: "BucketLifecycleConfiguration" = "BucketLifecycleConfiguration"

    metadata?: v1.ObjectMeta

    spec: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpec

    status?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatus


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpec:
    r"""
    BucketLifecycleConfigurationSpec defines the desired state of BucketLifecycleConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProvider

    initProvider?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecWriteConnectionSecretToRef


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProvider:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the source S3 bucket you want Amazon S3 to monitor.
    bucketRef : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    $rule : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0], default is Undefined, optional
        List of configuration blocks describing the rules managing the replication. See below.
    transitionDefaultMinimumObjectSize : str, default is Undefined, optional
        The default minimum object size behavior applied to the lifecycle configuration. Valid values: all_storage_classes_128K (default), varies_by_storage_class. To customize the minimum object size for any transition you can add a filter that specifies a custom object_size_greater_than or object_size_less_than value. Custom filters always take precedence over the default transition behavior.
    """


    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketSelector

    expectedBucketOwner?: str

    region: str

    $rule?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0]

    transitionDefaultMinimumObjectSize?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0

    Attributes
    ----------
    abortIncompleteMultipartUpload : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0AbortIncompleteMultipartUploadItems0], default is Undefined, optional
        Configuration block that specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. See below.
    expiration : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0ExpirationItems0], default is Undefined, optional
        Configuration block that specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker. See below.
    $filter : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0], default is Undefined, optional
        Configuration block used to identify objects that a Lifecycle Rule applies to. See below. If not specified, the rule will default to using prefix.
    id : str, default is Undefined, optional
        Unique identifier for the rule. The value cannot be longer than 255 characters.
    noncurrentVersionExpiration : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0NoncurrentVersionExpirationItems0], default is Undefined, optional
        Configuration block that specifies when noncurrent object versions expire. See below.
    noncurrentVersionTransition : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0NoncurrentVersionTransitionItems0], default is Undefined, optional
        Set of configuration blocks that specify the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. See below.
    prefix : str, default is Undefined, optional
        DEPRECATED Use filter instead. This has been deprecated by Amazon S3. Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if filter is not specified.
    status : str, default is Undefined, optional
        Whether the rule is currently being applied. Valid values: Enabled or Disabled.
    transition : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0TransitionItems0], default is Undefined, optional
        Set of configuration blocks that specify when an Amazon S3 object transitions to a specified storage class. See below.
    """


    abortIncompleteMultipartUpload?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0AbortIncompleteMultipartUploadItems0]

    expiration?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0ExpirationItems0]

    $filter?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0]

    id?: str

    noncurrentVersionExpiration?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0NoncurrentVersionExpirationItems0]

    noncurrentVersionTransition?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0NoncurrentVersionTransitionItems0]

    prefix?: str

    status?: str

    transition?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0TransitionItems0]


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0AbortIncompleteMultipartUploadItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 abort incomplete multipart upload items0

    Attributes
    ----------
    daysAfterInitiation : float, default is Undefined, optional
        Number of days after which Amazon S3 aborts an incomplete multipart upload.
    """


    daysAfterInitiation?: float


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0ExpirationItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 expiration items0

    Attributes
    ----------
    date : str, default is Undefined, optional
        Date objects are transitioned to the specified storage class. The date value must be in RFC3339 full-date format e.g. 2023-08-22.
    days : float, default is Undefined, optional
        Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.
    expiredObjectDeleteMarker : bool, default is Undefined, optional
        Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action.
    """


    date?: str

    days?: float

    expiredObjectDeleteMarker?: bool


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 filter items0

    Attributes
    ----------
    $and : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0AndItems0], default is Undefined, optional
        Configuration block used to apply a logical AND to two or more predicates. See below. The Lifecycle Rule will apply to any object matching all the predicates configured inside the and block.
    objectSizeGreaterThan : str, default is Undefined, optional
        Minimum object size (in bytes) to which the rule applies.
    objectSizeLessThan : str, default is Undefined, optional
        Maximum object size (in bytes) to which the rule applies.
    prefix : str, default is Undefined, optional
        Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if not specified.
    tag : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0TagItems0], default is Undefined, optional
        Configuration block for specifying a tag key and value. See below.
    """


    $and?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0AndItems0]

    objectSizeGreaterThan?: str

    objectSizeLessThan?: str

    prefix?: str

    tag?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0TagItems0]


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0AndItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 filter items0 and items0

    Attributes
    ----------
    objectSizeGreaterThan : float, default is Undefined, optional
        Minimum object size (in bytes) to which the rule applies.
    objectSizeLessThan : float, default is Undefined, optional
        Maximum object size (in bytes) to which the rule applies.
    prefix : str, default is Undefined, optional
        Prefix identifying one or more objects to which the rule applies.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags. All of these tags must exist in the object's tag set in order for the rule to apply.
    """


    objectSizeGreaterThan?: float

    objectSizeLessThan?: float

    prefix?: str

    tags?: {str:str}


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0FilterItems0TagItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 filter items0 tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Name of the object key.
    value : str, default is Undefined, optional
        Value of the tag.
    """


    key?: str

    value?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0NoncurrentVersionExpirationItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 noncurrent version expiration items0

    Attributes
    ----------
    newerNoncurrentVersions : str, default is Undefined, optional
        Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
    noncurrentDays : float, default is Undefined, optional
        Number of days an object is noncurrent before Amazon S3 can perform the associated action.
    """


    newerNoncurrentVersions?: str

    noncurrentDays?: float


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0NoncurrentVersionTransitionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 noncurrent version transition items0

    Attributes
    ----------
    newerNoncurrentVersions : str, default is Undefined, optional
        Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
    noncurrentDays : float, default is Undefined, optional
        Number of days an object is noncurrent before Amazon S3 can perform the associated action.
    storageClass : str, default is Undefined, optional
        Class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.
    """


    newerNoncurrentVersions?: str

    noncurrentDays?: float

    storageClass?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecForProviderRuleItems0TransitionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec for provider rule items0 transition items0

    Attributes
    ----------
    date : str, default is Undefined, optional
        Date objects are transitioned to the specified storage class. The date value must be in RFC3339 full-date format e.g. 2023-08-22.
    days : float, default is Undefined, optional
        Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.
    storageClass : str, default is Undefined, optional
        Class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.
    """


    date?: str

    days?: float

    storageClass?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the source S3 bucket you want Amazon S3 to monitor.
    bucketRef : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    $rule : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0], default is Undefined, optional
        List of configuration blocks describing the rules managing the replication. See below.
    transitionDefaultMinimumObjectSize : str, default is Undefined, optional
        The default minimum object size behavior applied to the lifecycle configuration. Valid values: all_storage_classes_128K (default), varies_by_storage_class. To customize the minimum object size for any transition you can add a filter that specifies a custom object_size_greater_than or object_size_less_than value. Custom filters always take precedence over the default transition behavior.
    """


    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketSelector

    expectedBucketOwner?: str

    $rule?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0]

    transitionDefaultMinimumObjectSize?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0

    Attributes
    ----------
    abortIncompleteMultipartUpload : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0AbortIncompleteMultipartUploadItems0], default is Undefined, optional
        Configuration block that specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. See below.
    expiration : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0ExpirationItems0], default is Undefined, optional
        Configuration block that specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker. See below.
    $filter : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0], default is Undefined, optional
        Configuration block used to identify objects that a Lifecycle Rule applies to. See below. If not specified, the rule will default to using prefix.
    id : str, default is Undefined, optional
        Unique identifier for the rule. The value cannot be longer than 255 characters.
    noncurrentVersionExpiration : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0NoncurrentVersionExpirationItems0], default is Undefined, optional
        Configuration block that specifies when noncurrent object versions expire. See below.
    noncurrentVersionTransition : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0NoncurrentVersionTransitionItems0], default is Undefined, optional
        Set of configuration blocks that specify the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. See below.
    prefix : str, default is Undefined, optional
        DEPRECATED Use filter instead. This has been deprecated by Amazon S3. Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if filter is not specified.
    status : str, default is Undefined, optional
        Whether the rule is currently being applied. Valid values: Enabled or Disabled.
    transition : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0TransitionItems0], default is Undefined, optional
        Set of configuration blocks that specify when an Amazon S3 object transitions to a specified storage class. See below.
    """


    abortIncompleteMultipartUpload?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0AbortIncompleteMultipartUploadItems0]

    expiration?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0ExpirationItems0]

    $filter?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0]

    id?: str

    noncurrentVersionExpiration?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0NoncurrentVersionExpirationItems0]

    noncurrentVersionTransition?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0NoncurrentVersionTransitionItems0]

    prefix?: str

    status?: str

    transition?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0TransitionItems0]


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0AbortIncompleteMultipartUploadItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 abort incomplete multipart upload items0

    Attributes
    ----------
    daysAfterInitiation : float, default is Undefined, optional
        Number of days after which Amazon S3 aborts an incomplete multipart upload.
    """


    daysAfterInitiation?: float


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0ExpirationItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 expiration items0

    Attributes
    ----------
    date : str, default is Undefined, optional
        Date objects are transitioned to the specified storage class. The date value must be in RFC3339 full-date format e.g. 2023-08-22.
    days : float, default is Undefined, optional
        Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.
    expiredObjectDeleteMarker : bool, default is Undefined, optional
        Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action.
    """


    date?: str

    days?: float

    expiredObjectDeleteMarker?: bool


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 filter items0

    Attributes
    ----------
    $and : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0AndItems0], default is Undefined, optional
        Configuration block used to apply a logical AND to two or more predicates. See below. The Lifecycle Rule will apply to any object matching all the predicates configured inside the and block.
    objectSizeGreaterThan : str, default is Undefined, optional
        Minimum object size (in bytes) to which the rule applies.
    objectSizeLessThan : str, default is Undefined, optional
        Maximum object size (in bytes) to which the rule applies.
    prefix : str, default is Undefined, optional
        Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if not specified.
    tag : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0TagItems0], default is Undefined, optional
        Configuration block for specifying a tag key and value. See below.
    """


    $and?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0AndItems0]

    objectSizeGreaterThan?: str

    objectSizeLessThan?: str

    prefix?: str

    tag?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0TagItems0]


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0AndItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 filter items0 and items0

    Attributes
    ----------
    objectSizeGreaterThan : float, default is Undefined, optional
        Minimum object size (in bytes) to which the rule applies.
    objectSizeLessThan : float, default is Undefined, optional
        Maximum object size (in bytes) to which the rule applies.
    prefix : str, default is Undefined, optional
        Prefix identifying one or more objects to which the rule applies.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags. All of these tags must exist in the object's tag set in order for the rule to apply.
    """


    objectSizeGreaterThan?: float

    objectSizeLessThan?: float

    prefix?: str

    tags?: {str:str}


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0FilterItems0TagItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 filter items0 tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Name of the object key.
    value : str, default is Undefined, optional
        Value of the tag.
    """


    key?: str

    value?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0NoncurrentVersionExpirationItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 noncurrent version expiration items0

    Attributes
    ----------
    newerNoncurrentVersions : str, default is Undefined, optional
        Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
    noncurrentDays : float, default is Undefined, optional
        Number of days an object is noncurrent before Amazon S3 can perform the associated action.
    """


    newerNoncurrentVersions?: str

    noncurrentDays?: float


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0NoncurrentVersionTransitionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 noncurrent version transition items0

    Attributes
    ----------
    newerNoncurrentVersions : str, default is Undefined, optional
        Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
    noncurrentDays : float, default is Undefined, optional
        Number of days an object is noncurrent before Amazon S3 can perform the associated action.
    storageClass : str, default is Undefined, optional
        Class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.
    """


    newerNoncurrentVersions?: str

    noncurrentDays?: float

    storageClass?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecInitProviderRuleItems0TransitionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration spec init provider rule items0 transition items0

    Attributes
    ----------
    date : str, default is Undefined, optional
        Date objects are transitioned to the specified storage class. The date value must be in RFC3339 full-date format e.g. 2023-08-22.
    days : float, default is Undefined, optional
        Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.
    storageClass : str, default is Undefined, optional
        Class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.
    """


    date?: str

    days?: float

    storageClass?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecProviderConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatus:
    r"""
    BucketLifecycleConfigurationStatus defines the observed state of BucketLifecycleConfiguration.

    Attributes
    ----------
    atProvider : S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProvider

    conditions?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProvider:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the source S3 bucket you want Amazon S3 to monitor.
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    id : str, default is Undefined, optional
        and status)
    $rule : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0], default is Undefined, optional
        List of configuration blocks describing the rules managing the replication. See below.
    transitionDefaultMinimumObjectSize : str, default is Undefined, optional
        The default minimum object size behavior applied to the lifecycle configuration. Valid values: all_storage_classes_128K (default), varies_by_storage_class. To customize the minimum object size for any transition you can add a filter that specifies a custom object_size_greater_than or object_size_less_than value. Custom filters always take precedence over the default transition behavior.
    """


    bucket?: str

    expectedBucketOwner?: str

    id?: str

    $rule?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0]

    transitionDefaultMinimumObjectSize?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0

    Attributes
    ----------
    abortIncompleteMultipartUpload : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0AbortIncompleteMultipartUploadItems0], default is Undefined, optional
        Configuration block that specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. See below.
    expiration : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0ExpirationItems0], default is Undefined, optional
        Configuration block that specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker. See below.
    $filter : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0], default is Undefined, optional
        Configuration block used to identify objects that a Lifecycle Rule applies to. See below. If not specified, the rule will default to using prefix.
    id : str, default is Undefined, optional
        Unique identifier for the rule. The value cannot be longer than 255 characters.
    noncurrentVersionExpiration : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0NoncurrentVersionExpirationItems0], default is Undefined, optional
        Configuration block that specifies when noncurrent object versions expire. See below.
    noncurrentVersionTransition : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0NoncurrentVersionTransitionItems0], default is Undefined, optional
        Set of configuration blocks that specify the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. See below.
    prefix : str, default is Undefined, optional
        DEPRECATED Use filter instead. This has been deprecated by Amazon S3. Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if filter is not specified.
    status : str, default is Undefined, optional
        Whether the rule is currently being applied. Valid values: Enabled or Disabled.
    transition : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0TransitionItems0], default is Undefined, optional
        Set of configuration blocks that specify when an Amazon S3 object transitions to a specified storage class. See below.
    """


    abortIncompleteMultipartUpload?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0AbortIncompleteMultipartUploadItems0]

    expiration?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0ExpirationItems0]

    $filter?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0]

    id?: str

    noncurrentVersionExpiration?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0NoncurrentVersionExpirationItems0]

    noncurrentVersionTransition?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0NoncurrentVersionTransitionItems0]

    prefix?: str

    status?: str

    transition?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0TransitionItems0]


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0AbortIncompleteMultipartUploadItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 abort incomplete multipart upload items0

    Attributes
    ----------
    daysAfterInitiation : float, default is Undefined, optional
        Number of days after which Amazon S3 aborts an incomplete multipart upload.
    """


    daysAfterInitiation?: float


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0ExpirationItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 expiration items0

    Attributes
    ----------
    date : str, default is Undefined, optional
        Date objects are transitioned to the specified storage class. The date value must be in RFC3339 full-date format e.g. 2023-08-22.
    days : float, default is Undefined, optional
        Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.
    expiredObjectDeleteMarker : bool, default is Undefined, optional
        Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action.
    """


    date?: str

    days?: float

    expiredObjectDeleteMarker?: bool


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 filter items0

    Attributes
    ----------
    $and : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0AndItems0], default is Undefined, optional
        Configuration block used to apply a logical AND to two or more predicates. See below. The Lifecycle Rule will apply to any object matching all the predicates configured inside the and block.
    objectSizeGreaterThan : str, default is Undefined, optional
        Minimum object size (in bytes) to which the rule applies.
    objectSizeLessThan : str, default is Undefined, optional
        Maximum object size (in bytes) to which the rule applies.
    prefix : str, default is Undefined, optional
        Prefix identifying one or more objects to which the rule applies. Defaults to an empty string ("") if not specified.
    tag : [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0TagItems0], default is Undefined, optional
        Configuration block for specifying a tag key and value. See below.
    """


    $and?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0AndItems0]

    objectSizeGreaterThan?: str

    objectSizeLessThan?: str

    prefix?: str

    tag?: [S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0TagItems0]


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0AndItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 filter items0 and items0

    Attributes
    ----------
    objectSizeGreaterThan : float, default is Undefined, optional
        Minimum object size (in bytes) to which the rule applies.
    objectSizeLessThan : float, default is Undefined, optional
        Maximum object size (in bytes) to which the rule applies.
    prefix : str, default is Undefined, optional
        Prefix identifying one or more objects to which the rule applies.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags. All of these tags must exist in the object's tag set in order for the rule to apply.
    """


    objectSizeGreaterThan?: float

    objectSizeLessThan?: float

    prefix?: str

    tags?: {str:str}


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0FilterItems0TagItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 filter items0 tag items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Name of the object key.
    value : str, default is Undefined, optional
        Value of the tag.
    """


    key?: str

    value?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0NoncurrentVersionExpirationItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 noncurrent version expiration items0

    Attributes
    ----------
    newerNoncurrentVersions : str, default is Undefined, optional
        Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
    noncurrentDays : float, default is Undefined, optional
        Number of days an object is noncurrent before Amazon S3 can perform the associated action.
    """


    newerNoncurrentVersions?: str

    noncurrentDays?: float


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0NoncurrentVersionTransitionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 noncurrent version transition items0

    Attributes
    ----------
    newerNoncurrentVersions : str, default is Undefined, optional
        Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
    noncurrentDays : float, default is Undefined, optional
        Number of days an object is noncurrent before Amazon S3 can perform the associated action.
    storageClass : str, default is Undefined, optional
        Class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.
    """


    newerNoncurrentVersions?: str

    noncurrentDays?: float

    storageClass?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusAtProviderRuleItems0TransitionItems0:
    r"""
    s3 aws upbound io v1beta1 bucket lifecycle configuration status at provider rule items0 transition items0

    Attributes
    ----------
    date : str, default is Undefined, optional
        Date objects are transitioned to the specified storage class. The date value must be in RFC3339 full-date format e.g. 2023-08-22.
    days : float, default is Undefined, optional
        Number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer. If both days and date are not specified, defaults to 0. Valid values depend on storage_class, see Transition objects using Amazon S3 Lifecycle for more details.
    storageClass : str, default is Undefined, optional
        Class of storage used to store the object. Valid Values: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, GLACIER_IR.
    """


    date?: str

    days?: float

    storageClass?: str


schema S3AwsUpboundIoV1beta1BucketLifecycleConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


