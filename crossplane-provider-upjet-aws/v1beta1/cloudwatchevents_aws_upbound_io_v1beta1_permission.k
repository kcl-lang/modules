"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Permission:
    r"""
    Permission is the Schema for the Permissions API. Provides a resource to create an EventBridge permission to support cross-account events in the current account default event bus.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatchevents.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Permission", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpec, default is Undefined, required
        spec
    status : CloudwatcheventsAwsUpboundIoV1beta1PermissionStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatchevents.aws.upbound.io/v1beta1" = "cloudwatchevents.aws.upbound.io/v1beta1"

    kind: "Permission" = "Permission"

    metadata?: v1.ObjectMeta

    spec: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpec

    status?: CloudwatcheventsAwsUpboundIoV1beta1PermissionStatus


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpec:
    r"""
    PermissionSpec defines the desired state of Permission

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProvider

    initProvider?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecWriteConnectionSecretToRef


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProvider:
    r"""
    cloudwatchevents aws upbound io v1beta1 permission spec for provider

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action that you are enabling the other account to perform. Defaults to events:PutEvents.
    condition : [CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0], default is Undefined, optional
        Configuration block to limit the event bus permissions you are granting to only accounts that fulfill the condition. Specified below.
    eventBusName : str, default is Undefined, optional
        The name of the event bus to set the permissions on.
        If you omit this, the permissions are set on the default event bus.
    eventBusNameRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameRef, default is Undefined, optional
        event bus name ref
    eventBusNameSelector : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameSelector, default is Undefined, optional
        event bus name selector
    principal : str, default is Undefined, optional
        The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify * to permit any account to put events to your default event bus, optionally limited by condition.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    statementId : str, default is Undefined, optional
        An identifier string for the external account that you are granting permissions to.
    """


    action?: str

    condition?: [CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0]

    eventBusName?: str

    eventBusNameRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameRef

    eventBusNameSelector?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameSelector

    principal?: str

    region: str

    statementId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 permission spec for provider condition items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key for the condition. Valid values: aws:PrincipalOrgID.
    $type : str, default is Undefined, optional
        Type of condition. Value values: StringEquals.
    value : str, default is Undefined, optional
        Value for the key.
    valueRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueRef, default is Undefined, optional
        value ref
    valueSelector : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueSelector, default is Undefined, optional
        value selector
    """


    key?: str

    $type?: str

    value?: str

    valueRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueRef

    valueSelector?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueSelector


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueRef:
    r"""
    Reference to a Organization in organizations to populate value.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueSelector:
    r"""
    Selector for a Organization in organizations to populate value.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderConditionItems0ValueSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameRef:
    r"""
    Reference to a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameSelector:
    r"""
    Selector for a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecForProviderEventBusNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action that you are enabling the other account to perform. Defaults to events:PutEvents.
    condition : [CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0], default is Undefined, optional
        Configuration block to limit the event bus permissions you are granting to only accounts that fulfill the condition. Specified below.
    eventBusName : str, default is Undefined, optional
        The name of the event bus to set the permissions on.
        If you omit this, the permissions are set on the default event bus.
    eventBusNameRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameRef, default is Undefined, optional
        event bus name ref
    eventBusNameSelector : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameSelector, default is Undefined, optional
        event bus name selector
    principal : str, default is Undefined, optional
        The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify * to permit any account to put events to your default event bus, optionally limited by condition.
    statementId : str, default is Undefined, optional
        An identifier string for the external account that you are granting permissions to.
    """


    action?: str

    condition?: [CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0]

    eventBusName?: str

    eventBusNameRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameRef

    eventBusNameSelector?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameSelector

    principal?: str

    statementId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 permission spec init provider condition items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key for the condition. Valid values: aws:PrincipalOrgID.
    $type : str, default is Undefined, optional
        Type of condition. Value values: StringEquals.
    value : str, default is Undefined, optional
        Value for the key.
    valueRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueRef, default is Undefined, optional
        value ref
    valueSelector : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueSelector, default is Undefined, optional
        value selector
    """


    key?: str

    $type?: str

    value?: str

    valueRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueRef

    valueSelector?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueSelector


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueRef:
    r"""
    Reference to a Organization in organizations to populate value.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueSelector:
    r"""
    Selector for a Organization in organizations to populate value.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderConditionItems0ValueSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameRef:
    r"""
    Reference to a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameSelector:
    r"""
    Selector for a Bus in cloudwatchevents to populate eventBusName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameSelectorPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecInitProviderEventBusNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecProviderConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionStatus:
    r"""
    PermissionStatus defines the observed state of Permission.

    Attributes
    ----------
    atProvider : CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusAtProvider

    conditions?: [CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusAtProvider:
    r"""
    cloudwatchevents aws upbound io v1beta1 permission status at provider

    Attributes
    ----------
    action : str, default is Undefined, optional
        The action that you are enabling the other account to perform. Defaults to events:PutEvents.
    condition : [CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusAtProviderConditionItems0], default is Undefined, optional
        Configuration block to limit the event bus permissions you are granting to only accounts that fulfill the condition. Specified below.
    eventBusName : str, default is Undefined, optional
        The name of the event bus to set the permissions on.
        If you omit this, the permissions are set on the default event bus.
    id : str, default is Undefined, optional
        The statement ID of the EventBridge permission.
    principal : str, default is Undefined, optional
        The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify * to permit any account to put events to your default event bus, optionally limited by condition.
    statementId : str, default is Undefined, optional
        An identifier string for the external account that you are granting permissions to.
    """


    action?: str

    condition?: [CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusAtProviderConditionItems0]

    eventBusName?: str

    id?: str

    principal?: str

    statementId?: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusAtProviderConditionItems0:
    r"""
    cloudwatchevents aws upbound io v1beta1 permission status at provider condition items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Key for the condition. Valid values: aws:PrincipalOrgID.
    $type : str, default is Undefined, optional
        Type of condition. Value values: StringEquals.
    value : str, default is Undefined, optional
        Value for the key.
    """


    key?: str

    $type?: str

    value?: str


schema CloudwatcheventsAwsUpboundIoV1beta1PermissionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


