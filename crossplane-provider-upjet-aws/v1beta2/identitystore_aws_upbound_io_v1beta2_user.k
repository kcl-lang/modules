"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema User:
    r"""
    User is the Schema for the Users API.

    Attributes
    ----------
    apiVersion : str, default is "identitystore.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "User", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IdentitystoreAwsUpboundIoV1beta2UserSpec, default is Undefined, required
        spec
    status : IdentitystoreAwsUpboundIoV1beta2UserStatus, default is Undefined, optional
        status
    """


    apiVersion: "identitystore.aws.upbound.io/v1beta2" = "identitystore.aws.upbound.io/v1beta2"

    kind: "User" = "User"

    metadata?: v1.ObjectMeta

    spec: IdentitystoreAwsUpboundIoV1beta2UserSpec

    status?: IdentitystoreAwsUpboundIoV1beta2UserStatus


schema IdentitystoreAwsUpboundIoV1beta2UserSpec:
    r"""
    UserSpec defines the desired state of User

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : IdentitystoreAwsUpboundIoV1beta2UserSpecForProvider, default is Undefined, required
        for provider
    initProvider : IdentitystoreAwsUpboundIoV1beta2UserSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : IdentitystoreAwsUpboundIoV1beta2UserSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IdentitystoreAwsUpboundIoV1beta2UserSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IdentitystoreAwsUpboundIoV1beta2UserSpecForProvider

    initProvider?: IdentitystoreAwsUpboundIoV1beta2UserSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: IdentitystoreAwsUpboundIoV1beta2UserSpecProviderConfigRef

    publishConnectionDetailsTo?: IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IdentitystoreAwsUpboundIoV1beta2UserSpecWriteConnectionSecretToRef


schema IdentitystoreAwsUpboundIoV1beta2UserSpecForProvider:
    r"""
    identitystore aws upbound io v1beta2 user spec for provider

    Attributes
    ----------
    addresses : IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderAddresses, default is Undefined, optional
        addresses
    displayName : str, default is Undefined, optional
        The name that is typically displayed when the user is referenced.
    emails : IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderEmails, default is Undefined, optional
        emails
    identityStoreId : str, default is Undefined, required
        The globally unique identifier for the identity store that this user is in.
    locale : str, default is Undefined, optional
        The user's geographical region or location.
    name : IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderName, default is Undefined, optional
        name
    nickname : str, default is Undefined, optional
        An alternate name for the user.
    phoneNumbers : IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderPhoneNumbers, default is Undefined, optional
        phone numbers
    preferredLanguage : str, default is Undefined, optional
        The preferred language of the user.
    profileUrl : str, default is Undefined, optional
        An URL that may be associated with the user.
    region : str, default is Undefined, required
        The region of the address.
        Region is the region you'd like your resource to be created in.
    timezone : str, default is Undefined, optional
        The user's time zone.
    title : str, default is Undefined, optional
        The user's title.
    userName : str, default is Undefined, optional
        A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
    userType : str, default is Undefined, optional
        The user type.
    """


    addresses?: IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderAddresses

    displayName?: str

    emails?: IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderEmails

    identityStoreId: str

    locale?: str

    name?: IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderName

    nickname?: str

    phoneNumbers?: IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderPhoneNumbers

    preferredLanguage?: str

    profileUrl?: str

    region: str

    timezone?: str

    title?: str

    userName?: str

    userType?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderAddresses:
    r"""
    Details about the user's address. At most 1 address is allowed. Detailed below.

    Attributes
    ----------
    country : str, default is Undefined, optional
        The country that this address is in.
    formatted : str, default is Undefined, optional
        The name that is typically displayed when the address is shown for display.
    locality : str, default is Undefined, optional
        The address locality.
    postalCode : str, default is Undefined, optional
        The postal code of the address.
    primary : bool, default is Undefined, optional
        When true, this is the primary address associated with the user.
    region : str, default is Undefined, optional
        The region of the address.
    streetAddress : str, default is Undefined, optional
        The street of the address.
    $type : str, default is Undefined, optional
        The type of address.
    """


    country?: str

    formatted?: str

    locality?: str

    postalCode?: str

    primary?: bool

    region?: str

    streetAddress?: str

    $type?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderEmails:
    r"""
    Details about the user's email. At most 1 email is allowed. Detailed below.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        When true, this is the primary email associated with the user.
    $type : str, default is Undefined, optional
        The type of email.
    value : str, default is Undefined, optional
        The email address. This value must be unique across the identity store.
    """


    primary?: bool

    $type?: str

    value?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderName:
    r"""
    Details about the user's full name. Detailed below.

    Attributes
    ----------
    familyName : str, default is Undefined, optional
        The family name of the user.
    formatted : str, default is Undefined, optional
        The name that is typically displayed when the name is shown for display.
    givenName : str, default is Undefined, optional
        The given name of the user.
    honorificPrefix : str, default is Undefined, optional
        The honorific prefix of the user.
    honorificSuffix : str, default is Undefined, optional
        The honorific suffix of the user.
    middleName : str, default is Undefined, optional
        The middle name of the user.
    """


    familyName?: str

    formatted?: str

    givenName?: str

    honorificPrefix?: str

    honorificSuffix?: str

    middleName?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecForProviderPhoneNumbers:
    r"""
    Details about the user's phone number. At most 1 phone number is allowed. Detailed below.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        When true, this is the primary phone number associated with the user.
    $type : str, default is Undefined, optional
        The type of phone number.
    value : str, default is Undefined, optional
        The user's phone number.
    """


    primary?: bool

    $type?: str

    value?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    addresses : IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderAddresses, default is Undefined, optional
        addresses
    displayName : str, default is Undefined, optional
        The name that is typically displayed when the user is referenced.
    emails : IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderEmails, default is Undefined, optional
        emails
    locale : str, default is Undefined, optional
        The user's geographical region or location.
    name : IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderName, default is Undefined, optional
        name
    nickname : str, default is Undefined, optional
        An alternate name for the user.
    phoneNumbers : IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderPhoneNumbers, default is Undefined, optional
        phone numbers
    preferredLanguage : str, default is Undefined, optional
        The preferred language of the user.
    profileUrl : str, default is Undefined, optional
        An URL that may be associated with the user.
    timezone : str, default is Undefined, optional
        The user's time zone.
    title : str, default is Undefined, optional
        The user's title.
    userName : str, default is Undefined, optional
        A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
    userType : str, default is Undefined, optional
        The user type.
    """


    addresses?: IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderAddresses

    displayName?: str

    emails?: IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderEmails

    locale?: str

    name?: IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderName

    nickname?: str

    phoneNumbers?: IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderPhoneNumbers

    preferredLanguage?: str

    profileUrl?: str

    timezone?: str

    title?: str

    userName?: str

    userType?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderAddresses:
    r"""
    Details about the user's address. At most 1 address is allowed. Detailed below.

    Attributes
    ----------
    country : str, default is Undefined, optional
        The country that this address is in.
    formatted : str, default is Undefined, optional
        The name that is typically displayed when the address is shown for display.
    locality : str, default is Undefined, optional
        The address locality.
    postalCode : str, default is Undefined, optional
        The postal code of the address.
    primary : bool, default is Undefined, optional
        When true, this is the primary address associated with the user.
    streetAddress : str, default is Undefined, optional
        The street of the address.
    $type : str, default is Undefined, optional
        The type of address.
    """


    country?: str

    formatted?: str

    locality?: str

    postalCode?: str

    primary?: bool

    streetAddress?: str

    $type?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderEmails:
    r"""
    Details about the user's email. At most 1 email is allowed. Detailed below.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        When true, this is the primary email associated with the user.
    $type : str, default is Undefined, optional
        The type of email.
    value : str, default is Undefined, optional
        The email address. This value must be unique across the identity store.
    """


    primary?: bool

    $type?: str

    value?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderName:
    r"""
    Details about the user's full name. Detailed below.

    Attributes
    ----------
    familyName : str, default is Undefined, optional
        The family name of the user.
    formatted : str, default is Undefined, optional
        The name that is typically displayed when the name is shown for display.
    givenName : str, default is Undefined, optional
        The given name of the user.
    honorificPrefix : str, default is Undefined, optional
        The honorific prefix of the user.
    honorificSuffix : str, default is Undefined, optional
        The honorific suffix of the user.
    middleName : str, default is Undefined, optional
        The middle name of the user.
    """


    familyName?: str

    formatted?: str

    givenName?: str

    honorificPrefix?: str

    honorificSuffix?: str

    middleName?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecInitProviderPhoneNumbers:
    r"""
    Details about the user's phone number. At most 1 phone number is allowed. Detailed below.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        When true, this is the primary phone number associated with the user.
    $type : str, default is Undefined, optional
        The type of phone number.
    value : str, default is Undefined, optional
        The user's phone number.
    """


    primary?: bool

    $type?: str

    value?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentitystoreAwsUpboundIoV1beta2UserSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentitystoreAwsUpboundIoV1beta2UserSpecProviderConfigRefPolicy


schema IdentitystoreAwsUpboundIoV1beta2UserSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRef

    metadata?: IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToMetadata

    name: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRefPolicy


schema IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IdentitystoreAwsUpboundIoV1beta2UserSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IdentitystoreAwsUpboundIoV1beta2UserSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatus:
    r"""
    UserStatus defines the observed state of User.

    Attributes
    ----------
    atProvider : IdentitystoreAwsUpboundIoV1beta2UserStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IdentitystoreAwsUpboundIoV1beta2UserStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: IdentitystoreAwsUpboundIoV1beta2UserStatusAtProvider

    conditions?: [IdentitystoreAwsUpboundIoV1beta2UserStatusConditionsItems0]

    observedGeneration?: int


schema IdentitystoreAwsUpboundIoV1beta2UserStatusAtProvider:
    r"""
    identitystore aws upbound io v1beta2 user status at provider

    Attributes
    ----------
    addresses : IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderAddresses, default is Undefined, optional
        addresses
    displayName : str, default is Undefined, optional
        The name that is typically displayed when the user is referenced.
    emails : IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderEmails, default is Undefined, optional
        emails
    externalIds : [IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderExternalIdsItems0], default is Undefined, optional
        A list of identifiers issued to this resource by an external identity provider.
    id : str, default is Undefined, optional
        The identifier issued to this resource by an external identity provider.
    identityStoreId : str, default is Undefined, optional
        The globally unique identifier for the identity store that this user is in.
    locale : str, default is Undefined, optional
        The user's geographical region or location.
    name : IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderName, default is Undefined, optional
        name
    nickname : str, default is Undefined, optional
        An alternate name for the user.
    phoneNumbers : IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderPhoneNumbers, default is Undefined, optional
        phone numbers
    preferredLanguage : str, default is Undefined, optional
        The preferred language of the user.
    profileUrl : str, default is Undefined, optional
        An URL that may be associated with the user.
    timezone : str, default is Undefined, optional
        The user's time zone.
    title : str, default is Undefined, optional
        The user's title.
    userId : str, default is Undefined, optional
        The identifier for this user in the identity store.
    userName : str, default is Undefined, optional
        A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
    userType : str, default is Undefined, optional
        The user type.
    """


    addresses?: IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderAddresses

    displayName?: str

    emails?: IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderEmails

    externalIds?: [IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderExternalIdsItems0]

    id?: str

    identityStoreId?: str

    locale?: str

    name?: IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderName

    nickname?: str

    phoneNumbers?: IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderPhoneNumbers

    preferredLanguage?: str

    profileUrl?: str

    timezone?: str

    title?: str

    userId?: str

    userName?: str

    userType?: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderAddresses:
    r"""
    Details about the user's address. At most 1 address is allowed. Detailed below.

    Attributes
    ----------
    country : str, default is Undefined, optional
        The country that this address is in.
    formatted : str, default is Undefined, optional
        The name that is typically displayed when the address is shown for display.
    locality : str, default is Undefined, optional
        The address locality.
    postalCode : str, default is Undefined, optional
        The postal code of the address.
    primary : bool, default is Undefined, optional
        When true, this is the primary address associated with the user.
    region : str, default is Undefined, optional
        The region of the address.
    streetAddress : str, default is Undefined, optional
        The street of the address.
    $type : str, default is Undefined, optional
        The type of address.
    """


    country?: str

    formatted?: str

    locality?: str

    postalCode?: str

    primary?: bool

    region?: str

    streetAddress?: str

    $type?: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderEmails:
    r"""
    Details about the user's email. At most 1 email is allowed. Detailed below.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        When true, this is the primary email associated with the user.
    $type : str, default is Undefined, optional
        The type of email.
    value : str, default is Undefined, optional
        The email address. This value must be unique across the identity store.
    """


    primary?: bool

    $type?: str

    value?: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderExternalIdsItems0:
    r"""
    identitystore aws upbound io v1beta2 user status at provider external ids items0

    Attributes
    ----------
    id : str, default is Undefined, optional
        The identifier issued to this resource by an external identity provider.
    issuer : str, default is Undefined, optional
        The issuer for an external identifier.
    """


    id?: str

    issuer?: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderName:
    r"""
    Details about the user's full name. Detailed below.

    Attributes
    ----------
    familyName : str, default is Undefined, optional
        The family name of the user.
    formatted : str, default is Undefined, optional
        The name that is typically displayed when the name is shown for display.
    givenName : str, default is Undefined, optional
        The given name of the user.
    honorificPrefix : str, default is Undefined, optional
        The honorific prefix of the user.
    honorificSuffix : str, default is Undefined, optional
        The honorific suffix of the user.
    middleName : str, default is Undefined, optional
        The middle name of the user.
    """


    familyName?: str

    formatted?: str

    givenName?: str

    honorificPrefix?: str

    honorificSuffix?: str

    middleName?: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatusAtProviderPhoneNumbers:
    r"""
    Details about the user's phone number. At most 1 phone number is allowed. Detailed below.

    Attributes
    ----------
    primary : bool, default is Undefined, optional
        When true, this is the primary phone number associated with the user.
    $type : str, default is Undefined, optional
        The type of phone number.
    value : str, default is Undefined, optional
        The user's phone number.
    """


    primary?: bool

    $type?: str

    value?: str


schema IdentitystoreAwsUpboundIoV1beta2UserStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


