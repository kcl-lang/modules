"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Pipe:
    r"""
    Pipe is the Schema for the Pipes API.

    Attributes
    ----------
    apiVersion : str, default is "pipes.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Pipe", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : PipesAwsUpboundIoV1beta1PipeSpec, default is Undefined, required
        spec
    status : PipesAwsUpboundIoV1beta1PipeStatus, default is Undefined, optional
        status
    """


    apiVersion: "pipes.aws.upbound.io/v1beta1" = "pipes.aws.upbound.io/v1beta1"

    kind: "Pipe" = "Pipe"

    metadata?: v1.ObjectMeta

    spec: PipesAwsUpboundIoV1beta1PipeSpec

    status?: PipesAwsUpboundIoV1beta1PipeStatus


schema PipesAwsUpboundIoV1beta1PipeSpec:
    r"""
    PipeSpec defines the desired state of Pipe

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : PipesAwsUpboundIoV1beta1PipeSpecForProvider, default is Undefined, required
        for provider
    initProvider : PipesAwsUpboundIoV1beta1PipeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : PipesAwsUpboundIoV1beta1PipeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : PipesAwsUpboundIoV1beta1PipeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: PipesAwsUpboundIoV1beta1PipeSpecForProvider

    initProvider?: PipesAwsUpboundIoV1beta1PipeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: PipesAwsUpboundIoV1beta1PipeSpecProviderConfigRef

    publishConnectionDetailsTo?: PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: PipesAwsUpboundIoV1beta1PipeSpecWriteConnectionSecretToRef


schema PipesAwsUpboundIoV1beta1PipeSpecForProvider:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the pipe. At most 512 characters.
    desiredState : str, default is Undefined, optional
        The state the pipe should be in. One of: RUNNING, STOPPED.
    enrichment : str, default is Undefined, optional
        Enrichment resource of the pipe (typically an ARN). Read more about enrichment in the User Guide.
    enrichmentParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentParameters, default is Undefined, optional
        enrichment parameters
    enrichmentRef : PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentRef, default is Undefined, optional
        enrichment ref
    enrichmentSelector : PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentSelector, default is Undefined, optional
        enrichment selector
    logConfiguration : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfiguration, default is Undefined, optional
        log configuration
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        ARN of the role that allows the pipe to send data to the target.
    roleArnRef : PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    source : str, default is Undefined, optional
        Source resource of the pipe. This field typically requires an ARN (Amazon Resource Name). However, when using a self-managed Kafka cluster, you should use a different format. Instead of an ARN, use 'smk://' followed by the bootstrap server's address.
    sourceParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParameters, default is Undefined, optional
        source parameters
    sourceRef : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceRef, default is Undefined, optional
        source ref
    sourceSelector : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceSelector, default is Undefined, optional
        source selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    target : str, default is Undefined, optional
        Target resource of the pipe (typically an ARN).
    targetParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParameters, default is Undefined, optional
        target parameters
    targetRef : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetSelector, default is Undefined, optional
        target selector
    """


    description?: str

    desiredState?: str

    enrichment?: str

    enrichmentParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentParameters

    enrichmentRef?: PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentRef

    enrichmentSelector?: PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentSelector

    logConfiguration?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfiguration

    region: str

    roleArn?: str

    roleArnRef?: PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnRef

    roleArnSelector?: PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnSelector

    source?: str

    sourceParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParameters

    sourceRef?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceRef

    sourceSelector?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceSelector

    tags?: {str:str}

    target?: str

    targetParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParameters

    targetRef?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetRef

    targetSelector?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetSelector


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentParameters:
    r"""
    Parameters to configure enrichment for your pipe. Detailed below.

    Attributes
    ----------
    httpParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentParametersHTTPParameters, default is Undefined, optional
        http parameters
    inputTemplate : str, default is Undefined, optional
        Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
    """


    httpParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentParametersHTTPParameters

    inputTemplate?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentParametersHTTPParameters:
    r"""
    Contains the HTTP parameters to use when the target is a API Gateway REST endpoint or EventBridge ApiDestination. If you specify an API Gateway REST API or EventBridge ApiDestination as a target, you can use this parameter to specify headers, path parameters, and query string keys/values as part of your target invoking request. If you're using ApiDestinations, the corresponding Connection can also have these values configured. In case of any conflicting keys, values from the Connection take precedence. Detailed below.

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.
    pathParameterValues : [str], default is Undefined, optional
        The path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards ("*").
    queryStringParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the query strings that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentRef:
    r"""
    Reference to a APIDestination in cloudwatchevents to populate enrichment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentSelector:
    r"""
    Selector for a APIDestination in cloudwatchevents to populate enrichment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderEnrichmentSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfiguration:
    r"""
    Logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    cloudwatchLogsLogDestination : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestination, default is Undefined, optional
        cloudwatch logs log destination
    firehoseLogDestination : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationFirehoseLogDestination, default is Undefined, optional
        firehose log destination
    includeExecutionData : [str], default is Undefined, optional
        String list that specifies whether the execution data (specifically, the payload, awsRequest, and awsResponse fields) is included in the log messages for this pipe. This applies to all log destinations for the pipe. Valid values ALL.
    level : str, default is Undefined, optional
        The level of logging detail to include. Valid values OFF, ERROR, INFO and TRACE.
    s3LogDestination : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationS3LogDestination, default is Undefined, optional
        s3 log destination
    """


    cloudwatchLogsLogDestination?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestination

    firehoseLogDestination?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationFirehoseLogDestination

    includeExecutionData?: [str]

    level?: str

    s3LogDestination?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationS3LogDestination


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestination:
    r"""
    Amazon CloudWatch Logs logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    logGroupArn : str, default is Undefined, optional
        Amazon Web Services Resource Name (ARN) for the CloudWatch log group to which EventBridge sends the log records.
    logGroupArnRef : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRef, default is Undefined, optional
        log group arn ref
    logGroupArnSelector : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelector, default is Undefined, optional
        log group arn selector
    """


    logGroupArn?: str

    logGroupArnRef?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRef

    logGroupArnSelector?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelector


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationFirehoseLogDestination:
    r"""
    Amazon Kinesis Data Firehose logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    deliveryStreamArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Kinesis Data Firehose delivery stream to which EventBridge delivers the pipe log records.
    """


    deliveryStreamArn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderLogConfigurationS3LogDestination:
    r"""
    Amazon S3 logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
    bucketOwner : str, default is Undefined, optional
        Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
    outputFormat : str, default is Undefined, optional
        EventBridge format for the log records. Valid values json, plain and w3c.
    prefix : str, default is Undefined, optional
        Prefix text with which to begin Amazon S3 log object names.
    """


    bucketName?: str

    bucketOwner?: str

    outputFormat?: str

    prefix?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParameters:
    r"""
    Parameters to configure a source for the pipe. Detailed below.

    Attributes
    ----------
    activemqBrokerParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersActivemqBrokerParameters, default is Undefined, optional
        activemq broker parameters
    dynamodbStreamParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersDynamodbStreamParameters, default is Undefined, optional
        dynamodb stream parameters
    filterCriteria : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersFilterCriteria, default is Undefined, optional
        filter criteria
    kinesisStreamParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersKinesisStreamParameters, default is Undefined, optional
        kinesis stream parameters
    managedStreamingKafkaParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersManagedStreamingKafkaParameters, default is Undefined, optional
        managed streaming kafka parameters
    rabbitmqBrokerParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersRabbitmqBrokerParameters, default is Undefined, optional
        rabbitmq broker parameters
    selfManagedKafkaParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParameters, default is Undefined, optional
        self managed kafka parameters
    sqsQueueParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSqsQueueParameters, default is Undefined, optional
        sqs queue parameters
    """


    activemqBrokerParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersActivemqBrokerParameters

    dynamodbStreamParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersDynamodbStreamParameters

    filterCriteria?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersFilterCriteria

    kinesisStreamParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersKinesisStreamParameters

    managedStreamingKafkaParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersManagedStreamingKafkaParameters

    rabbitmqBrokerParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersRabbitmqBrokerParameters

    selfManagedKafkaParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParameters

    sqsQueueParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSqsQueueParameters


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersActivemqBrokerParameters:
    r"""
    The parameters for using an Active MQ broker as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersActivemqBrokerParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    queueName : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum length of 1000.
    """


    batchSize?: float

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersActivemqBrokerParametersCredentials

    maximumBatchingWindowInSeconds?: float

    queueName?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersActivemqBrokerParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the basic auth credentials.
    """


    basicAuth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersDynamodbStreamParameters:
    r"""
    The parameters for using a DynamoDB stream as a source.  Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    deadLetterConfig : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersDynamodbStreamParametersDeadLetterConfig, default is Undefined, optional
        dead letter config
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    maximumRecordAgeInSeconds : float, default is Undefined, optional
        Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, EventBridge never discards old records. Maximum value of 604,800.
    maximumRetryAttempts : float, default is Undefined, optional
        Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge retries failed records until the record expires in the event source. Maximum value of 10,000.
    onPartialBatchItemFailure : str, default is Undefined, optional
        Define how to handle item process failures. AUTOMATIC_BISECT halves each batch and retry each half until all the records are processed or there is one failed message left in the batch. Valid values: AUTOMATIC_BISECT.
    parallelizationFactor : float, default is Undefined, optional
        The number of batches to process concurrently from each shard. The default value is 1. Maximum value of 10.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    """


    batchSize?: float

    deadLetterConfig?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersDynamodbStreamParametersDeadLetterConfig

    maximumBatchingWindowInSeconds?: float

    maximumRecordAgeInSeconds?: float

    maximumRetryAttempts?: float

    onPartialBatchItemFailure?: str

    parallelizationFactor?: float

    startingPosition?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersDynamodbStreamParametersDeadLetterConfig:
    r"""
    Define the target queue to send dead-letter queue events to. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Amazon SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersFilterCriteria:
    r"""
    The collection of event patterns used to filter events. Detailed below.

    Attributes
    ----------
    $filter : [PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersFilterCriteriaFilterItems0], default is Undefined, optional
        An array of up to 5 event patterns. Detailed below.
    """


    $filter?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersFilterCriteriaFilterItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersFilterCriteriaFilterItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider source parameters filter criteria filter items0

    Attributes
    ----------
    pattern : str, default is Undefined, optional
        The event pattern. At most 4096 characters.
    """


    pattern?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersKinesisStreamParameters:
    r"""
    The parameters for using a Kinesis stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    deadLetterConfig : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersKinesisStreamParametersDeadLetterConfig, default is Undefined, optional
        dead letter config
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    maximumRecordAgeInSeconds : float, default is Undefined, optional
        Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, EventBridge never discards old records. Maximum value of 604,800.
    maximumRetryAttempts : float, default is Undefined, optional
        Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge retries failed records until the record expires in the event source. Maximum value of 10,000.
    onPartialBatchItemFailure : str, default is Undefined, optional
        Define how to handle item process failures. AUTOMATIC_BISECT halves each batch and retry each half until all the records are processed or there is one failed message left in the batch. Valid values: AUTOMATIC_BISECT.
    parallelizationFactor : float, default is Undefined, optional
        The number of batches to process concurrently from each shard. The default value is 1. Maximum value of 10.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST, AT_TIMESTAMP.
    startingPositionTimestamp : str, default is Undefined, optional
        With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.
    """


    batchSize?: float

    deadLetterConfig?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersKinesisStreamParametersDeadLetterConfig

    maximumBatchingWindowInSeconds?: float

    maximumRecordAgeInSeconds?: float

    maximumRetryAttempts?: float

    onPartialBatchItemFailure?: str

    parallelizationFactor?: float

    startingPosition?: str

    startingPositionTimestamp?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersKinesisStreamParametersDeadLetterConfig:
    r"""
    Define the target queue to send dead-letter queue events to. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Amazon SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersManagedStreamingKafkaParameters:
    r"""
    The parameters for using an MSK stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    consumerGroupId : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum value of 200.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersManagedStreamingKafkaParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    topicName : str, default is Undefined, optional
        The name of the topic that the pipe will read from. Maximum length of 249.
    """


    batchSize?: float

    consumerGroupId?: str

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersManagedStreamingKafkaParametersCredentials

    maximumBatchingWindowInSeconds?: float

    startingPosition?: str

    topicName?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersManagedStreamingKafkaParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    clientCertificateTlsAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram512Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    clientCertificateTlsAuth?: str

    saslScram512Auth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersRabbitmqBrokerParameters:
    r"""
    The parameters for using a Rabbit MQ broker as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersRabbitmqBrokerParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    queueName : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum length of 1000.
    virtualHost : str, default is Undefined, optional
        The name of the virtual host associated with the source broker. Maximum length of 200.
    """


    batchSize?: float

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersRabbitmqBrokerParametersCredentials

    maximumBatchingWindowInSeconds?: float

    queueName?: str

    virtualHost?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersRabbitmqBrokerParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    basicAuth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParameters:
    r"""
    The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.

    Attributes
    ----------
    additionalBootstrapServers : [str], default is Undefined, optional
        An array of server URLs. Maximum number of 2 items, each of maximum length 300.
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    consumerGroupId : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum value of 200.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    serverRootCaCertificate : str, default is Undefined, optional
        The ARN of the Secrets Manager secret used for certification.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    topicName : str, default is Undefined, optional
        The name of the topic that the pipe will read from. Maximum length of 249.
    vpc : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParametersVpc, default is Undefined, optional
        vpc
    """


    additionalBootstrapServers?: [str]

    batchSize?: float

    consumerGroupId?: str

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParametersCredentials

    maximumBatchingWindowInSeconds?: float

    serverRootCaCertificate?: str

    startingPosition?: str

    topicName?: str

    vpc?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParametersVpc


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    clientCertificateTlsAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram256Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram512Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    basicAuth?: str

    clientCertificateTlsAuth?: str

    saslScram256Auth?: str

    saslScram512Auth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSelfManagedKafkaParametersVpc:
    r"""
    This structure specifies the VPC subnets and security groups for the stream, and whether a public IP address is to be used. Detailed below.

    Attributes
    ----------
    securityGroups : [str], default is Undefined, optional
        List of security groups associated with the stream. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        List of the subnets associated with the stream. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
    """


    securityGroups?: [str]

    subnets?: [str]


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceParametersSqsQueueParameters:
    r"""
    The parameters for using a Amazon SQS stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    """


    batchSize?: float

    maximumBatchingWindowInSeconds?: float


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceRef:
    r"""
    Reference to a Queue in sqs to populate source.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceSelector:
    r"""
    Selector for a Queue in sqs to populate source.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderSourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParameters:
    r"""
    Parameters to configure a target for your pipe. Detailed below.

    Attributes
    ----------
    batchJobParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParameters, default is Undefined, optional
        batch job parameters
    cloudwatchLogsParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersCloudwatchLogsParameters, default is Undefined, optional
        cloudwatch logs parameters
    ecsTaskParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParameters, default is Undefined, optional
        ecs task parameters
    eventbridgeEventBusParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEventbridgeEventBusParameters, default is Undefined, optional
        eventbridge event bus parameters
    httpParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersHTTPParameters, default is Undefined, optional
        http parameters
    inputTemplate : str, default is Undefined, optional
        Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
    kinesisStreamParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersKinesisStreamParameters, default is Undefined, optional
        kinesis stream parameters
    lambdaFunctionParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersLambdaFunctionParameters, default is Undefined, optional
        lambda function parameters
    redshiftDataParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersRedshiftDataParameters, default is Undefined, optional
        redshift data parameters
    sagemakerPipelineParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSagemakerPipelineParameters, default is Undefined, optional
        sagemaker pipeline parameters
    sqsQueueParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSqsQueueParameters, default is Undefined, optional
        sqs queue parameters
    stepFunctionStateMachineParameters : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersStepFunctionStateMachineParameters, default is Undefined, optional
        step function state machine parameters
    """


    batchJobParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParameters

    cloudwatchLogsParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersCloudwatchLogsParameters

    ecsTaskParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParameters

    eventbridgeEventBusParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEventbridgeEventBusParameters

    httpParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersHTTPParameters

    inputTemplate?: str

    kinesisStreamParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersKinesisStreamParameters

    lambdaFunctionParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersLambdaFunctionParameters

    redshiftDataParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersRedshiftDataParameters

    sagemakerPipelineParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSagemakerPipelineParameters

    sqsQueueParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSqsQueueParameters

    stepFunctionStateMachineParameters?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersStepFunctionStateMachineParameters


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParameters:
    r"""
    The parameters for using an AWS Batch job as a target. Detailed below.

    Attributes
    ----------
    arrayProperties : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersArrayProperties, default is Undefined, optional
        array properties
    containerOverrides : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverrides, default is Undefined, optional
        container overrides
    dependsOn : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersDependsOnItems0], default is Undefined, optional
        A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a SEQUENTIAL type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an N_TO_N type dependency with a job ID for array jobs. In that case, each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin. Detailed below.
    jobDefinition : str, default is Undefined, optional
        The job definition used by this job. This value can be one of name, name:revision, or the Amazon Resource Name (ARN) for the job definition. If name is specified without a revision then the latest active revision is used.
    jobName : str, default is Undefined, optional
        The name of the job. It can be up to 128 letters long.
    parameters : {str:str}, default is Undefined, optional
        Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters included here override any corresponding parameter defaults from the job definition. Detailed below.
    retryStrategy : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersRetryStrategy, default is Undefined, optional
        retry strategy
    """


    arrayProperties?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersArrayProperties

    containerOverrides?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverrides

    dependsOn?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersDependsOnItems0]

    jobDefinition?: str

    jobName?: str

    parameters?: {str:str}

    retryStrategy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersRetryStrategy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersArrayProperties:
    r"""
    The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job. Detailed below.

    Attributes
    ----------
    size : float, default is Undefined, optional
        The size of the array, if this is an array batch job. Minimum value of 2. Maximum value of 10,000.
    """


    size?: float


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverrides:
    r"""
    The overrides that are sent to a container. Detailed below.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        List of commands to send to the container that overrides the default command from the Docker image or the task definition.
    environment : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. Environment variables cannot start with " AWS Batch ". This naming convention is reserved for variables that AWS Batch sets. Detailed below.
    instanceType : str, default is Undefined, optional
        The instance type to use for a multi-node parallel job. This parameter isn't applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn't be provided.
    resourceRequirement : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0], default is Undefined, optional
        The type and amount of resources to assign to a container. This overrides the settings in the job definition. The supported resources include GPU, MEMORY, and VCPU. Detailed below.
    """


    command?: [str]

    environment?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0]

    instanceType?: str

    resourceRequirement?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters batch job parameters container overrides environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters batch job parameters container overrides resource requirement items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU.
    value : str, default is Undefined, optional
        The quantity of the specified resource to reserve for the container. The values vary based on the type specified.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersDependsOnItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters batch job parameters depends on items0

    Attributes
    ----------
    jobId : str, default is Undefined, optional
        The job ID of the AWS Batch job that's associated with this dependency.
    $type : str, default is Undefined, optional
        The type of the job dependency. Valid Values: N_TO_N, SEQUENTIAL.
    """


    jobId?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersBatchJobParametersRetryStrategy:
    r"""
    The retry strategy to use for failed jobs. When a retry strategy is specified here, it overrides the retry strategy defined in the job definition. Detailed below.

    Attributes
    ----------
    attempts : float, default is Undefined, optional
        The number of times to move a job to the RUNNABLE status. If the value of attempts is greater than one, the job is retried on failure the same number of attempts as the value. Maximum value of 10.
    """


    attempts?: float


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersCloudwatchLogsParameters:
    r"""
    The parameters for using an CloudWatch Logs log stream as a target. Detailed below.

    Attributes
    ----------
    logStreamName : str, default is Undefined, optional
        The name of the log stream.
    timestamp : str, default is Undefined, optional
        The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. This is the JSON path to the field in the event e.g. $.detail.timestamp
    """


    logStreamName?: str

    timestamp?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParameters:
    r"""
    The parameters for using an Amazon ECS task as a target. Detailed below.

    Attributes
    ----------
    capacityProviderStrategy : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0], default is Undefined, optional
        List of capacity provider strategies to use for the task. If a capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified, the defaultCapacityProviderStrategy for the cluster is used. Detailed below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task. Valid values: true, false.
    enableExecuteCommand : bool, default is Undefined, optional
        Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task. Valid values: true, false.
    group : str, default is Undefined, optional
        Specifies an Amazon ECS task group for the task. The maximum length is 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. Valid Values: EC2, FARGATE, EXTERNAL
    networkConfiguration : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersNetworkConfiguration, default is Undefined, optional
        network configuration
    overrides : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverrides, default is Undefined, optional
        overrides
    placementConstraint : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersPlacementConstraintItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). Detailed below.
    placementStrategy : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersPlacementStrategyItems0], default is Undefined, optional
        The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task. Detailed below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This structure is used only if LaunchType is FARGATE.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action. Valid Values: TASK_DEFINITION
    referenceId : str, default is Undefined, optional
        The reference ID to use for the task. Maximum length of 1,024.
    tags : {str:str}, default is Undefined, optional
        Key-value map of tags that you apply to the task to help you categorize and organize them.
    taskCount : float, default is Undefined, optional
        The number of tasks to create based on TaskDefinition. The default is 1.
    taskDefinitionArn : str, default is Undefined, optional
        The ARN of the task definition to use if the event target is an Amazon ECS task.
    """


    capacityProviderStrategy?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersNetworkConfiguration

    overrides?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverrides

    placementConstraint?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersPlacementConstraintItems0]

    placementStrategy?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    referenceId?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. Maximum value of 100,000.
    capacityProvider : str, default is Undefined, optional
        The short name of the capacity provider. Maximum value of 255.
    weight : float, default is Undefined, optional
        The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Maximum value of 1,000.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersNetworkConfiguration:
    r"""
    Use this structure if the Amazon ECS task uses the awsvpc network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if LaunchType is FARGATE because the awsvpc mode is required for Fargate tasks. If you specify NetworkConfiguration when the target ECS task does not use the awsvpc network mode, the task fails. Detailed below.

    Attributes
    ----------
    awsVpcConfiguration : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration, default is Undefined, optional
        aws vpc configuration
    """


    awsVpcConfiguration?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration:
    r"""
    Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode. Detailed below.

    Attributes
    ----------
    assignPublicIp : str, default is Undefined, optional
        Specifies whether the task's elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE. Valid Values: ENABLED, DISABLED.
    securityGroups : [str], default is Undefined, optional
        Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
    """


    assignPublicIp?: str

    securityGroups?: [str]

    subnets?: [str]


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverrides:
    r"""
    The overrides that are associated with a task. Detailed below.

    Attributes
    ----------
    containerOverride : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0], default is Undefined, optional
        One or more container overrides that are sent to a task. Detailed below.
    cpu : str, default is Undefined, optional
        The cpu override for the task.
    ephemeralStorage : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage, default is Undefined, optional
        ephemeral storage
    executionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution IAM role override for the task.
    inferenceAcceleratorOverride : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0], default is Undefined, optional
        List of Elastic Inference accelerator overrides for the task. Detailed below.
    memory : str, default is Undefined, optional
        The memory override for the task.
    taskRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.
    """


    containerOverride?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0]

    cpu?: str

    ephemeralStorage?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage

    executionRoleArn?: str

    inferenceAcceleratorOverride?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0]

    memory?: str

    taskRoleArn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters overrides container override items0

    Attributes
    ----------
    command : [str], default is Undefined, optional
        List of commands to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name.
    cpu : float, default is Undefined, optional
        The number of cpu units reserved for the container, instead of the default value from the task definition. You must also specify a container name.
    environment : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name. Detailed below.
    environmentFile : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0], default is Undefined, optional
        A list of files containing the environment variables to pass to a container, instead of the value from the container definition. Detailed below.
    memory : float, default is Undefined, optional
        The hard limit (in MiB) of memory to present to the container, instead of the default value from the task definition. If your container attempts to exceed the memory specified here, the container is killed. You must also specify a container name.
    memoryReservation : float, default is Undefined, optional
        The soft limit (in MiB) of memory to reserve for the container, instead of the default value from the task definition. You must also specify a container name.
    name : str, default is Undefined, optional
        The name of the container that receives the override. This parameter is required if any override is specified.
    resourceRequirement : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0], default is Undefined, optional
        The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU. Detailed below.
    """


    command?: [str]

    cpu?: float

    environment?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0]

    environmentFile?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0]

    memory?: float

    memoryReservation?: float

    name?: str

    resourceRequirement?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters overrides container override items0 environment file items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The file type to use. The only supported value is s3.
    value : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters overrides container override items0 environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters overrides container override items0 resource requirement items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of resource to assign to a container. The supported values are GPU or InferenceAccelerator.
    value : str, default is Undefined, optional
        The value for the specified resource type. If the GPU type is used, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the InferenceAccelerator type is used, the value matches the deviceName for an InferenceAccelerator specified in a task definition.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage:
    r"""
    The ephemeral storage setting override for the task.  Detailed below.

    Attributes
    ----------
    sizeInGib : float, default is Undefined, optional
        The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.
    """


    sizeInGib?: float


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters overrides inference accelerator override items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The Elastic Inference accelerator device name to override for the task. This parameter must match a deviceName specified in the task definition.
    deviceType : str, default is Undefined, optional
        The Elastic Inference accelerator type to use.
    """


    deviceName?: str

    deviceType?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersPlacementConstraintItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters placement constraint items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. Maximum length of 2,000.
    $type : str, default is Undefined, optional
        The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates. Valid Values: distinctInstance, memberOf.
    """


    expression?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEcsTaskParametersPlacementStrategyItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters ecs task parameters placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. Maximum length of 255.
    $type : str, default is Undefined, optional
        The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task). Valid Values: random, spread, binpack.
    """


    field?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersEventbridgeEventBusParameters:
    r"""
    The parameters for using an EventBridge event bus as a target. Detailed below.

    Attributes
    ----------
    detailType : str, default is Undefined, optional
        A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.
    endpointId : str, default is Undefined, optional
        The URL subdomain of the endpoint. For example, if the URL for Endpoint is https://abcde.veo.endpoints.event.amazonaws.com, then the EndpointId is abcde.veo.
    resources : [str], default is Undefined, optional
        List of AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.
    source : str, default is Undefined, optional
        The source of the event. Maximum length of 256.
    time : str, default is Undefined, optional
        The time stamp of the event, per RFC3339. If no time stamp is provided, the time stamp of the PutEvents call is used. This is the JSON path to the field in the event e.g. $.detail.timestamp
    """


    detailType?: str

    endpointId?: str

    resources?: [str]

    source?: str

    time?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersHTTPParameters:
    r"""
    These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination. Detailed below.
    pathParameterValues : [str], default is Undefined, optional
        The path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards ("*").
    queryStringParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the query strings that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination. Detailed below.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersKinesisStreamParameters:
    r"""
    The parameters for using a Kinesis stream as a source. Detailed below.

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.
    """


    partitionKey?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersLambdaFunctionParameters:
    r"""
    The parameters for using a Lambda function as a target. Detailed below.

    Attributes
    ----------
    invocationType : str, default is Undefined, optional
        Specify whether to invoke the function synchronously or asynchronously. Valid Values: REQUEST_RESPONSE, FIRE_AND_FORGET.
    """


    invocationType?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersRedshiftDataParameters:
    r"""
    These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.

    Attributes
    ----------
    database : str, default is Undefined, optional
        The name of the database. Required when authenticating using temporary credentials.
    dbUser : str, default is Undefined, optional
        The database user name. Required when authenticating using temporary credentials.
    secretManagerArn : str, default is Undefined, optional
        The name or ARN of the secret that enables access to the database. Required when authenticating using Secrets Manager.
    sqls : [str], default is Undefined, optional
        List of SQL statements text to run, each of maximum length of 100,000.
    statementName : str, default is Undefined, optional
        The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
    withEvent : bool, default is Undefined, optional
        Indicates whether to send an event back to EventBridge after the SQL statement runs.
    """


    database?: str

    dbUser?: str

    secretManagerArn?: str

    sqls?: [str]

    statementName?: str

    withEvent?: bool


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSagemakerPipelineParameters:
    r"""
    The parameters for using a SageMaker pipeline as a target. Detailed below.

    Attributes
    ----------
    pipelineParameter : [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0], default is Undefined, optional
        List of Parameter names and values for SageMaker Model Building Pipeline execution. Detailed below.
    """


    pipelineParameter?: [PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec for provider target parameters sagemaker pipeline parameters pipeline parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the container that receives the override. This parameter is required if any override is specified.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline. Maximum length of 1024.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersSqsQueueParameters:
    r"""
    The parameters for using a Amazon SQS stream as a target. Detailed below.

    Attributes
    ----------
    messageDeduplicationId : str, default is Undefined, optional
        This parameter applies only to FIFO (first-in-first-out) queues. The token used for deduplication of sent messages.
    messageGroupId : str, default is Undefined, optional
        The FIFO message group ID to use as the target.
    """


    messageDeduplicationId?: str

    messageGroupId?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetParametersStepFunctionStateMachineParameters:
    r"""
    The parameters for using a Step Functions state machine as a target. Detailed below.

    Attributes
    ----------
    invocationType : str, default is Undefined, optional
        Specify whether to invoke the function synchronously or asynchronously. Valid Values: REQUEST_RESPONSE, FIRE_AND_FORGET.
    """


    invocationType?: str


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetRef:
    r"""
    Reference to a Queue in sqs to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetSelector:
    r"""
    Selector for a Queue in sqs to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecForProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        A description of the pipe. At most 512 characters.
    desiredState : str, default is Undefined, optional
        The state the pipe should be in. One of: RUNNING, STOPPED.
    enrichment : str, default is Undefined, optional
        Enrichment resource of the pipe (typically an ARN). Read more about enrichment in the User Guide.
    enrichmentParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentParameters, default is Undefined, optional
        enrichment parameters
    enrichmentRef : PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentRef, default is Undefined, optional
        enrichment ref
    enrichmentSelector : PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentSelector, default is Undefined, optional
        enrichment selector
    logConfiguration : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfiguration, default is Undefined, optional
        log configuration
    roleArn : str, default is Undefined, optional
        ARN of the role that allows the pipe to send data to the target.
    roleArnRef : PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    source : str, default is Undefined, optional
        Source resource of the pipe. This field typically requires an ARN (Amazon Resource Name). However, when using a self-managed Kafka cluster, you should use a different format. Instead of an ARN, use 'smk://' followed by the bootstrap server's address.
    sourceParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParameters, default is Undefined, optional
        source parameters
    sourceRef : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceRef, default is Undefined, optional
        source ref
    sourceSelector : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceSelector, default is Undefined, optional
        source selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    target : str, default is Undefined, optional
        Target resource of the pipe (typically an ARN).
    targetParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParameters, default is Undefined, optional
        target parameters
    targetRef : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetRef, default is Undefined, optional
        target ref
    targetSelector : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetSelector, default is Undefined, optional
        target selector
    """


    description?: str

    desiredState?: str

    enrichment?: str

    enrichmentParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentParameters

    enrichmentRef?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentRef

    enrichmentSelector?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentSelector

    logConfiguration?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfiguration

    roleArn?: str

    roleArnRef?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnRef

    roleArnSelector?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnSelector

    source?: str

    sourceParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParameters

    sourceRef?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceRef

    sourceSelector?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceSelector

    tags?: {str:str}

    target?: str

    targetParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParameters

    targetRef?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetRef

    targetSelector?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetSelector


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentParameters:
    r"""
    Parameters to configure enrichment for your pipe. Detailed below.

    Attributes
    ----------
    httpParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentParametersHTTPParameters, default is Undefined, optional
        http parameters
    inputTemplate : str, default is Undefined, optional
        Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
    """


    httpParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentParametersHTTPParameters

    inputTemplate?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentParametersHTTPParameters:
    r"""
    Contains the HTTP parameters to use when the target is a API Gateway REST endpoint or EventBridge ApiDestination. If you specify an API Gateway REST API or EventBridge ApiDestination as a target, you can use this parameter to specify headers, path parameters, and query string keys/values as part of your target invoking request. If you're using ApiDestinations, the corresponding Connection can also have these values configured. In case of any conflicting keys, values from the Connection take precedence. Detailed below.

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.
    pathParameterValues : [str], default is Undefined, optional
        The path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards ("*").
    queryStringParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the query strings that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentRef:
    r"""
    Reference to a APIDestination in cloudwatchevents to populate enrichment.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentSelector:
    r"""
    Selector for a APIDestination in cloudwatchevents to populate enrichment.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderEnrichmentSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfiguration:
    r"""
    Logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    cloudwatchLogsLogDestination : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestination, default is Undefined, optional
        cloudwatch logs log destination
    firehoseLogDestination : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationFirehoseLogDestination, default is Undefined, optional
        firehose log destination
    includeExecutionData : [str], default is Undefined, optional
        String list that specifies whether the execution data (specifically, the payload, awsRequest, and awsResponse fields) is included in the log messages for this pipe. This applies to all log destinations for the pipe. Valid values ALL.
    level : str, default is Undefined, optional
        The level of logging detail to include. Valid values OFF, ERROR, INFO and TRACE.
    s3LogDestination : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationS3LogDestination, default is Undefined, optional
        s3 log destination
    """


    cloudwatchLogsLogDestination?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestination

    firehoseLogDestination?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationFirehoseLogDestination

    includeExecutionData?: [str]

    level?: str

    s3LogDestination?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationS3LogDestination


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestination:
    r"""
    Amazon CloudWatch Logs logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    logGroupArn : str, default is Undefined, optional
        Amazon Web Services Resource Name (ARN) for the CloudWatch log group to which EventBridge sends the log records.
    logGroupArnRef : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRef, default is Undefined, optional
        log group arn ref
    logGroupArnSelector : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelector, default is Undefined, optional
        log group arn selector
    """


    logGroupArn?: str

    logGroupArnRef?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRef

    logGroupArnSelector?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelector


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroupArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroupArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationCloudwatchLogsLogDestinationLogGroupArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationFirehoseLogDestination:
    r"""
    Amazon Kinesis Data Firehose logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    deliveryStreamArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Kinesis Data Firehose delivery stream to which EventBridge delivers the pipe log records.
    """


    deliveryStreamArn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderLogConfigurationS3LogDestination:
    r"""
    Amazon S3 logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
    bucketOwner : str, default is Undefined, optional
        Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
    outputFormat : str, default is Undefined, optional
        EventBridge format for the log records. Valid values json, plain and w3c.
    prefix : str, default is Undefined, optional
        Prefix text with which to begin Amazon S3 log object names.
    """


    bucketName?: str

    bucketOwner?: str

    outputFormat?: str

    prefix?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParameters:
    r"""
    Parameters to configure a source for the pipe. Detailed below.

    Attributes
    ----------
    activemqBrokerParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersActivemqBrokerParameters, default is Undefined, optional
        activemq broker parameters
    dynamodbStreamParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersDynamodbStreamParameters, default is Undefined, optional
        dynamodb stream parameters
    filterCriteria : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersFilterCriteria, default is Undefined, optional
        filter criteria
    kinesisStreamParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersKinesisStreamParameters, default is Undefined, optional
        kinesis stream parameters
    managedStreamingKafkaParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersManagedStreamingKafkaParameters, default is Undefined, optional
        managed streaming kafka parameters
    rabbitmqBrokerParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersRabbitmqBrokerParameters, default is Undefined, optional
        rabbitmq broker parameters
    selfManagedKafkaParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParameters, default is Undefined, optional
        self managed kafka parameters
    sqsQueueParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSqsQueueParameters, default is Undefined, optional
        sqs queue parameters
    """


    activemqBrokerParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersActivemqBrokerParameters

    dynamodbStreamParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersDynamodbStreamParameters

    filterCriteria?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersFilterCriteria

    kinesisStreamParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersKinesisStreamParameters

    managedStreamingKafkaParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersManagedStreamingKafkaParameters

    rabbitmqBrokerParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersRabbitmqBrokerParameters

    selfManagedKafkaParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParameters

    sqsQueueParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSqsQueueParameters


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersActivemqBrokerParameters:
    r"""
    The parameters for using an Active MQ broker as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersActivemqBrokerParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    queueName : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum length of 1000.
    """


    batchSize?: float

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersActivemqBrokerParametersCredentials

    maximumBatchingWindowInSeconds?: float

    queueName?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersActivemqBrokerParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the basic auth credentials.
    """


    basicAuth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersDynamodbStreamParameters:
    r"""
    The parameters for using a DynamoDB stream as a source.  Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    deadLetterConfig : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersDynamodbStreamParametersDeadLetterConfig, default is Undefined, optional
        dead letter config
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    maximumRecordAgeInSeconds : float, default is Undefined, optional
        Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, EventBridge never discards old records. Maximum value of 604,800.
    maximumRetryAttempts : float, default is Undefined, optional
        Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge retries failed records until the record expires in the event source. Maximum value of 10,000.
    onPartialBatchItemFailure : str, default is Undefined, optional
        Define how to handle item process failures. AUTOMATIC_BISECT halves each batch and retry each half until all the records are processed or there is one failed message left in the batch. Valid values: AUTOMATIC_BISECT.
    parallelizationFactor : float, default is Undefined, optional
        The number of batches to process concurrently from each shard. The default value is 1. Maximum value of 10.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    """


    batchSize?: float

    deadLetterConfig?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersDynamodbStreamParametersDeadLetterConfig

    maximumBatchingWindowInSeconds?: float

    maximumRecordAgeInSeconds?: float

    maximumRetryAttempts?: float

    onPartialBatchItemFailure?: str

    parallelizationFactor?: float

    startingPosition?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersDynamodbStreamParametersDeadLetterConfig:
    r"""
    Define the target queue to send dead-letter queue events to. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Amazon SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersFilterCriteria:
    r"""
    The collection of event patterns used to filter events. Detailed below.

    Attributes
    ----------
    $filter : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersFilterCriteriaFilterItems0], default is Undefined, optional
        An array of up to 5 event patterns. Detailed below.
    """


    $filter?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersFilterCriteriaFilterItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersFilterCriteriaFilterItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider source parameters filter criteria filter items0

    Attributes
    ----------
    pattern : str, default is Undefined, optional
        The event pattern. At most 4096 characters.
    """


    pattern?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersKinesisStreamParameters:
    r"""
    The parameters for using a Kinesis stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    deadLetterConfig : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersKinesisStreamParametersDeadLetterConfig, default is Undefined, optional
        dead letter config
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    maximumRecordAgeInSeconds : float, default is Undefined, optional
        Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, EventBridge never discards old records. Maximum value of 604,800.
    maximumRetryAttempts : float, default is Undefined, optional
        Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge retries failed records until the record expires in the event source. Maximum value of 10,000.
    onPartialBatchItemFailure : str, default is Undefined, optional
        Define how to handle item process failures. AUTOMATIC_BISECT halves each batch and retry each half until all the records are processed or there is one failed message left in the batch. Valid values: AUTOMATIC_BISECT.
    parallelizationFactor : float, default is Undefined, optional
        The number of batches to process concurrently from each shard. The default value is 1. Maximum value of 10.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST, AT_TIMESTAMP.
    startingPositionTimestamp : str, default is Undefined, optional
        With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.
    """


    batchSize?: float

    deadLetterConfig?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersKinesisStreamParametersDeadLetterConfig

    maximumBatchingWindowInSeconds?: float

    maximumRecordAgeInSeconds?: float

    maximumRetryAttempts?: float

    onPartialBatchItemFailure?: str

    parallelizationFactor?: float

    startingPosition?: str

    startingPositionTimestamp?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersKinesisStreamParametersDeadLetterConfig:
    r"""
    Define the target queue to send dead-letter queue events to. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Amazon SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersManagedStreamingKafkaParameters:
    r"""
    The parameters for using an MSK stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    consumerGroupId : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum value of 200.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersManagedStreamingKafkaParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    topicName : str, default is Undefined, optional
        The name of the topic that the pipe will read from. Maximum length of 249.
    """


    batchSize?: float

    consumerGroupId?: str

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersManagedStreamingKafkaParametersCredentials

    maximumBatchingWindowInSeconds?: float

    startingPosition?: str

    topicName?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersManagedStreamingKafkaParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    clientCertificateTlsAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram512Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    clientCertificateTlsAuth?: str

    saslScram512Auth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersRabbitmqBrokerParameters:
    r"""
    The parameters for using a Rabbit MQ broker as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersRabbitmqBrokerParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    queueName : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum length of 1000.
    virtualHost : str, default is Undefined, optional
        The name of the virtual host associated with the source broker. Maximum length of 200.
    """


    batchSize?: float

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersRabbitmqBrokerParametersCredentials

    maximumBatchingWindowInSeconds?: float

    queueName?: str

    virtualHost?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersRabbitmqBrokerParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    basicAuth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParameters:
    r"""
    The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.

    Attributes
    ----------
    additionalBootstrapServers : [str], default is Undefined, optional
        An array of server URLs. Maximum number of 2 items, each of maximum length 300.
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    consumerGroupId : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum value of 200.
    credentials : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    serverRootCaCertificate : str, default is Undefined, optional
        The ARN of the Secrets Manager secret used for certification.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    topicName : str, default is Undefined, optional
        The name of the topic that the pipe will read from. Maximum length of 249.
    vpc : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParametersVpc, default is Undefined, optional
        vpc
    """


    additionalBootstrapServers?: [str]

    batchSize?: float

    consumerGroupId?: str

    credentials?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParametersCredentials

    maximumBatchingWindowInSeconds?: float

    serverRootCaCertificate?: str

    startingPosition?: str

    topicName?: str

    vpc?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParametersVpc


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    clientCertificateTlsAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram256Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram512Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    basicAuth?: str

    clientCertificateTlsAuth?: str

    saslScram256Auth?: str

    saslScram512Auth?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSelfManagedKafkaParametersVpc:
    r"""
    This structure specifies the VPC subnets and security groups for the stream, and whether a public IP address is to be used. Detailed below.

    Attributes
    ----------
    securityGroups : [str], default is Undefined, optional
        List of security groups associated with the stream. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        List of the subnets associated with the stream. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
    """


    securityGroups?: [str]

    subnets?: [str]


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceParametersSqsQueueParameters:
    r"""
    The parameters for using a Amazon SQS stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    """


    batchSize?: float

    maximumBatchingWindowInSeconds?: float


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceRef:
    r"""
    Reference to a Queue in sqs to populate source.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceSelector:
    r"""
    Selector for a Queue in sqs to populate source.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderSourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParameters:
    r"""
    Parameters to configure a target for your pipe. Detailed below.

    Attributes
    ----------
    batchJobParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParameters, default is Undefined, optional
        batch job parameters
    cloudwatchLogsParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersCloudwatchLogsParameters, default is Undefined, optional
        cloudwatch logs parameters
    ecsTaskParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParameters, default is Undefined, optional
        ecs task parameters
    eventbridgeEventBusParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEventbridgeEventBusParameters, default is Undefined, optional
        eventbridge event bus parameters
    httpParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersHTTPParameters, default is Undefined, optional
        http parameters
    inputTemplate : str, default is Undefined, optional
        Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
    kinesisStreamParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersKinesisStreamParameters, default is Undefined, optional
        kinesis stream parameters
    lambdaFunctionParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersLambdaFunctionParameters, default is Undefined, optional
        lambda function parameters
    redshiftDataParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersRedshiftDataParameters, default is Undefined, optional
        redshift data parameters
    sagemakerPipelineParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSagemakerPipelineParameters, default is Undefined, optional
        sagemaker pipeline parameters
    sqsQueueParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSqsQueueParameters, default is Undefined, optional
        sqs queue parameters
    stepFunctionStateMachineParameters : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersStepFunctionStateMachineParameters, default is Undefined, optional
        step function state machine parameters
    """


    batchJobParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParameters

    cloudwatchLogsParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersCloudwatchLogsParameters

    ecsTaskParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParameters

    eventbridgeEventBusParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEventbridgeEventBusParameters

    httpParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersHTTPParameters

    inputTemplate?: str

    kinesisStreamParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersKinesisStreamParameters

    lambdaFunctionParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersLambdaFunctionParameters

    redshiftDataParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersRedshiftDataParameters

    sagemakerPipelineParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSagemakerPipelineParameters

    sqsQueueParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSqsQueueParameters

    stepFunctionStateMachineParameters?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersStepFunctionStateMachineParameters


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParameters:
    r"""
    The parameters for using an AWS Batch job as a target. Detailed below.

    Attributes
    ----------
    arrayProperties : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersArrayProperties, default is Undefined, optional
        array properties
    containerOverrides : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverrides, default is Undefined, optional
        container overrides
    dependsOn : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersDependsOnItems0], default is Undefined, optional
        A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a SEQUENTIAL type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an N_TO_N type dependency with a job ID for array jobs. In that case, each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin. Detailed below.
    jobDefinition : str, default is Undefined, optional
        The job definition used by this job. This value can be one of name, name:revision, or the Amazon Resource Name (ARN) for the job definition. If name is specified without a revision then the latest active revision is used.
    jobName : str, default is Undefined, optional
        The name of the job. It can be up to 128 letters long.
    parameters : {str:str}, default is Undefined, optional
        Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters included here override any corresponding parameter defaults from the job definition. Detailed below.
    retryStrategy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersRetryStrategy, default is Undefined, optional
        retry strategy
    """


    arrayProperties?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersArrayProperties

    containerOverrides?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverrides

    dependsOn?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersDependsOnItems0]

    jobDefinition?: str

    jobName?: str

    parameters?: {str:str}

    retryStrategy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersRetryStrategy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersArrayProperties:
    r"""
    The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job. Detailed below.

    Attributes
    ----------
    size : float, default is Undefined, optional
        The size of the array, if this is an array batch job. Minimum value of 2. Maximum value of 10,000.
    """


    size?: float


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverrides:
    r"""
    The overrides that are sent to a container. Detailed below.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        List of commands to send to the container that overrides the default command from the Docker image or the task definition.
    environment : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. Environment variables cannot start with " AWS Batch ". This naming convention is reserved for variables that AWS Batch sets. Detailed below.
    instanceType : str, default is Undefined, optional
        The instance type to use for a multi-node parallel job. This parameter isn't applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn't be provided.
    resourceRequirement : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0], default is Undefined, optional
        The type and amount of resources to assign to a container. This overrides the settings in the job definition. The supported resources include GPU, MEMORY, and VCPU. Detailed below.
    """


    command?: [str]

    environment?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0]

    instanceType?: str

    resourceRequirement?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters batch job parameters container overrides environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters batch job parameters container overrides resource requirement items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU.
    value : str, default is Undefined, optional
        The quantity of the specified resource to reserve for the container. The values vary based on the type specified.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersDependsOnItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters batch job parameters depends on items0

    Attributes
    ----------
    jobId : str, default is Undefined, optional
        The job ID of the AWS Batch job that's associated with this dependency.
    $type : str, default is Undefined, optional
        The type of the job dependency. Valid Values: N_TO_N, SEQUENTIAL.
    """


    jobId?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersBatchJobParametersRetryStrategy:
    r"""
    The retry strategy to use for failed jobs. When a retry strategy is specified here, it overrides the retry strategy defined in the job definition. Detailed below.

    Attributes
    ----------
    attempts : float, default is Undefined, optional
        The number of times to move a job to the RUNNABLE status. If the value of attempts is greater than one, the job is retried on failure the same number of attempts as the value. Maximum value of 10.
    """


    attempts?: float


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersCloudwatchLogsParameters:
    r"""
    The parameters for using an CloudWatch Logs log stream as a target. Detailed below.

    Attributes
    ----------
    logStreamName : str, default is Undefined, optional
        The name of the log stream.
    timestamp : str, default is Undefined, optional
        The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. This is the JSON path to the field in the event e.g. $.detail.timestamp
    """


    logStreamName?: str

    timestamp?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParameters:
    r"""
    The parameters for using an Amazon ECS task as a target. Detailed below.

    Attributes
    ----------
    capacityProviderStrategy : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0], default is Undefined, optional
        List of capacity provider strategies to use for the task. If a capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified, the defaultCapacityProviderStrategy for the cluster is used. Detailed below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task. Valid values: true, false.
    enableExecuteCommand : bool, default is Undefined, optional
        Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task. Valid values: true, false.
    group : str, default is Undefined, optional
        Specifies an Amazon ECS task group for the task. The maximum length is 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. Valid Values: EC2, FARGATE, EXTERNAL
    networkConfiguration : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersNetworkConfiguration, default is Undefined, optional
        network configuration
    overrides : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverrides, default is Undefined, optional
        overrides
    placementConstraint : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersPlacementConstraintItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). Detailed below.
    placementStrategy : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersPlacementStrategyItems0], default is Undefined, optional
        The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task. Detailed below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This structure is used only if LaunchType is FARGATE.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action. Valid Values: TASK_DEFINITION
    referenceId : str, default is Undefined, optional
        The reference ID to use for the task. Maximum length of 1,024.
    tags : {str:str}, default is Undefined, optional
        Key-value map of tags that you apply to the task to help you categorize and organize them.
    taskCount : float, default is Undefined, optional
        The number of tasks to create based on TaskDefinition. The default is 1.
    taskDefinitionArn : str, default is Undefined, optional
        The ARN of the task definition to use if the event target is an Amazon ECS task.
    """


    capacityProviderStrategy?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersNetworkConfiguration

    overrides?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverrides

    placementConstraint?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersPlacementConstraintItems0]

    placementStrategy?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    referenceId?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. Maximum value of 100,000.
    capacityProvider : str, default is Undefined, optional
        The short name of the capacity provider. Maximum value of 255.
    weight : float, default is Undefined, optional
        The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Maximum value of 1,000.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersNetworkConfiguration:
    r"""
    Use this structure if the Amazon ECS task uses the awsvpc network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if LaunchType is FARGATE because the awsvpc mode is required for Fargate tasks. If you specify NetworkConfiguration when the target ECS task does not use the awsvpc network mode, the task fails. Detailed below.

    Attributes
    ----------
    awsVpcConfiguration : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration, default is Undefined, optional
        aws vpc configuration
    """


    awsVpcConfiguration?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration:
    r"""
    Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode. Detailed below.

    Attributes
    ----------
    assignPublicIp : str, default is Undefined, optional
        Specifies whether the task's elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE. Valid Values: ENABLED, DISABLED.
    securityGroups : [str], default is Undefined, optional
        Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
    """


    assignPublicIp?: str

    securityGroups?: [str]

    subnets?: [str]


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverrides:
    r"""
    The overrides that are associated with a task. Detailed below.

    Attributes
    ----------
    containerOverride : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0], default is Undefined, optional
        One or more container overrides that are sent to a task. Detailed below.
    cpu : str, default is Undefined, optional
        The cpu override for the task.
    ephemeralStorage : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage, default is Undefined, optional
        ephemeral storage
    executionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution IAM role override for the task.
    inferenceAcceleratorOverride : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0], default is Undefined, optional
        List of Elastic Inference accelerator overrides for the task. Detailed below.
    memory : str, default is Undefined, optional
        The memory override for the task.
    taskRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.
    """


    containerOverride?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0]

    cpu?: str

    ephemeralStorage?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage

    executionRoleArn?: str

    inferenceAcceleratorOverride?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0]

    memory?: str

    taskRoleArn?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters overrides container override items0

    Attributes
    ----------
    command : [str], default is Undefined, optional
        List of commands to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name.
    cpu : float, default is Undefined, optional
        The number of cpu units reserved for the container, instead of the default value from the task definition. You must also specify a container name.
    environment : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name. Detailed below.
    environmentFile : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0], default is Undefined, optional
        A list of files containing the environment variables to pass to a container, instead of the value from the container definition. Detailed below.
    memory : float, default is Undefined, optional
        The hard limit (in MiB) of memory to present to the container, instead of the default value from the task definition. If your container attempts to exceed the memory specified here, the container is killed. You must also specify a container name.
    memoryReservation : float, default is Undefined, optional
        The soft limit (in MiB) of memory to reserve for the container, instead of the default value from the task definition. You must also specify a container name.
    name : str, default is Undefined, optional
        The name of the container that receives the override. This parameter is required if any override is specified.
    resourceRequirement : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0], default is Undefined, optional
        The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU. Detailed below.
    """


    command?: [str]

    cpu?: float

    environment?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0]

    environmentFile?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0]

    memory?: float

    memoryReservation?: float

    name?: str

    resourceRequirement?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters overrides container override items0 environment file items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The file type to use. The only supported value is s3.
    value : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters overrides container override items0 environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters overrides container override items0 resource requirement items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of resource to assign to a container. The supported values are GPU or InferenceAccelerator.
    value : str, default is Undefined, optional
        The value for the specified resource type. If the GPU type is used, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the InferenceAccelerator type is used, the value matches the deviceName for an InferenceAccelerator specified in a task definition.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage:
    r"""
    The ephemeral storage setting override for the task.  Detailed below.

    Attributes
    ----------
    sizeInGib : float, default is Undefined, optional
        The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.
    """


    sizeInGib?: float


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters overrides inference accelerator override items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The Elastic Inference accelerator device name to override for the task. This parameter must match a deviceName specified in the task definition.
    deviceType : str, default is Undefined, optional
        The Elastic Inference accelerator type to use.
    """


    deviceName?: str

    deviceType?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersPlacementConstraintItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters placement constraint items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. Maximum length of 2,000.
    $type : str, default is Undefined, optional
        The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates. Valid Values: distinctInstance, memberOf.
    """


    expression?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEcsTaskParametersPlacementStrategyItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters ecs task parameters placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. Maximum length of 255.
    $type : str, default is Undefined, optional
        The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task). Valid Values: random, spread, binpack.
    """


    field?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersEventbridgeEventBusParameters:
    r"""
    The parameters for using an EventBridge event bus as a target. Detailed below.

    Attributes
    ----------
    detailType : str, default is Undefined, optional
        A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.
    endpointId : str, default is Undefined, optional
        The URL subdomain of the endpoint. For example, if the URL for Endpoint is https://abcde.veo.endpoints.event.amazonaws.com, then the EndpointId is abcde.veo.
    resources : [str], default is Undefined, optional
        List of AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.
    source : str, default is Undefined, optional
        The source of the event. Maximum length of 256.
    time : str, default is Undefined, optional
        The time stamp of the event, per RFC3339. If no time stamp is provided, the time stamp of the PutEvents call is used. This is the JSON path to the field in the event e.g. $.detail.timestamp
    """


    detailType?: str

    endpointId?: str

    resources?: [str]

    source?: str

    time?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersHTTPParameters:
    r"""
    These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination. Detailed below.
    pathParameterValues : [str], default is Undefined, optional
        The path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards ("*").
    queryStringParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the query strings that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination. Detailed below.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersKinesisStreamParameters:
    r"""
    The parameters for using a Kinesis stream as a source. Detailed below.

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.
    """


    partitionKey?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersLambdaFunctionParameters:
    r"""
    The parameters for using a Lambda function as a target. Detailed below.

    Attributes
    ----------
    invocationType : str, default is Undefined, optional
        Specify whether to invoke the function synchronously or asynchronously. Valid Values: REQUEST_RESPONSE, FIRE_AND_FORGET.
    """


    invocationType?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersRedshiftDataParameters:
    r"""
    These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.

    Attributes
    ----------
    database : str, default is Undefined, optional
        The name of the database. Required when authenticating using temporary credentials.
    dbUser : str, default is Undefined, optional
        The database user name. Required when authenticating using temporary credentials.
    secretManagerArn : str, default is Undefined, optional
        The name or ARN of the secret that enables access to the database. Required when authenticating using Secrets Manager.
    sqls : [str], default is Undefined, optional
        List of SQL statements text to run, each of maximum length of 100,000.
    statementName : str, default is Undefined, optional
        The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
    withEvent : bool, default is Undefined, optional
        Indicates whether to send an event back to EventBridge after the SQL statement runs.
    """


    database?: str

    dbUser?: str

    secretManagerArn?: str

    sqls?: [str]

    statementName?: str

    withEvent?: bool


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSagemakerPipelineParameters:
    r"""
    The parameters for using a SageMaker pipeline as a target. Detailed below.

    Attributes
    ----------
    pipelineParameter : [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0], default is Undefined, optional
        List of Parameter names and values for SageMaker Model Building Pipeline execution. Detailed below.
    """


    pipelineParameter?: [PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0]


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0:
    r"""
    pipes aws upbound io v1beta1 pipe spec init provider target parameters sagemaker pipeline parameters pipeline parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the container that receives the override. This parameter is required if any override is specified.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline. Maximum length of 1024.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersSqsQueueParameters:
    r"""
    The parameters for using a Amazon SQS stream as a target. Detailed below.

    Attributes
    ----------
    messageDeduplicationId : str, default is Undefined, optional
        This parameter applies only to FIFO (first-in-first-out) queues. The token used for deduplication of sent messages.
    messageGroupId : str, default is Undefined, optional
        The FIFO message group ID to use as the target.
    """


    messageDeduplicationId?: str

    messageGroupId?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetParametersStepFunctionStateMachineParameters:
    r"""
    The parameters for using a Step Functions state machine as a target. Detailed below.

    Attributes
    ----------
    invocationType : str, default is Undefined, optional
        Specify whether to invoke the function synchronously or asynchronously. Valid Values: REQUEST_RESPONSE, FIRE_AND_FORGET.
    """


    invocationType?: str


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetRef:
    r"""
    Reference to a Queue in sqs to populate target.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetSelector:
    r"""
    Selector for a Queue in sqs to populate target.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetSelectorPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecInitProviderTargetSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecProviderConfigRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToConfigRef

    metadata?: PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToMetadata

    name: str


schema PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToConfigRefPolicy


schema PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema PipesAwsUpboundIoV1beta1PipeSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema PipesAwsUpboundIoV1beta1PipeStatus:
    r"""
    PipeStatus defines the observed state of Pipe.

    Attributes
    ----------
    atProvider : PipesAwsUpboundIoV1beta1PipeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [PipesAwsUpboundIoV1beta1PipeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: PipesAwsUpboundIoV1beta1PipeStatusAtProvider

    conditions?: [PipesAwsUpboundIoV1beta1PipeStatusConditionsItems0]

    observedGeneration?: int


schema PipesAwsUpboundIoV1beta1PipeStatusAtProvider:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of this pipe.
    description : str, default is Undefined, optional
        A description of the pipe. At most 512 characters.
    desiredState : str, default is Undefined, optional
        The state the pipe should be in. One of: RUNNING, STOPPED.
    enrichment : str, default is Undefined, optional
        Enrichment resource of the pipe (typically an ARN). Read more about enrichment in the User Guide.
    enrichmentParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderEnrichmentParameters, default is Undefined, optional
        enrichment parameters
    id : str, default is Undefined, optional
        Same as name.
    logConfiguration : PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfiguration, default is Undefined, optional
        log configuration
    roleArn : str, default is Undefined, optional
        ARN of the role that allows the pipe to send data to the target.
    source : str, default is Undefined, optional
        Source resource of the pipe. This field typically requires an ARN (Amazon Resource Name). However, when using a self-managed Kafka cluster, you should use a different format. Instead of an ARN, use 'smk://' followed by the bootstrap server's address.
    sourceParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParameters, default is Undefined, optional
        source parameters
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    target : str, default is Undefined, optional
        Target resource of the pipe (typically an ARN).
    targetParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParameters, default is Undefined, optional
        target parameters
    """


    arn?: str

    description?: str

    desiredState?: str

    enrichment?: str

    enrichmentParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderEnrichmentParameters

    id?: str

    logConfiguration?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfiguration

    roleArn?: str

    source?: str

    sourceParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParameters

    tags?: {str:str}

    tagsAll?: {str:str}

    target?: str

    targetParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParameters


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderEnrichmentParameters:
    r"""
    Parameters to configure enrichment for your pipe. Detailed below.

    Attributes
    ----------
    httpParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderEnrichmentParametersHTTPParameters, default is Undefined, optional
        http parameters
    inputTemplate : str, default is Undefined, optional
        Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
    """


    httpParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderEnrichmentParametersHTTPParameters

    inputTemplate?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderEnrichmentParametersHTTPParameters:
    r"""
    Contains the HTTP parameters to use when the target is a API Gateway REST endpoint or EventBridge ApiDestination. If you specify an API Gateway REST API or EventBridge ApiDestination as a target, you can use this parameter to specify headers, path parameters, and query string keys/values as part of your target invoking request. If you're using ApiDestinations, the corresponding Connection can also have these values configured. In case of any conflicting keys, values from the Connection take precedence. Detailed below.

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.
    pathParameterValues : [str], default is Undefined, optional
        The path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards ("*").
    queryStringParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the query strings that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfiguration:
    r"""
    Logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    cloudwatchLogsLogDestination : PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationCloudwatchLogsLogDestination, default is Undefined, optional
        cloudwatch logs log destination
    firehoseLogDestination : PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationFirehoseLogDestination, default is Undefined, optional
        firehose log destination
    includeExecutionData : [str], default is Undefined, optional
        String list that specifies whether the execution data (specifically, the payload, awsRequest, and awsResponse fields) is included in the log messages for this pipe. This applies to all log destinations for the pipe. Valid values ALL.
    level : str, default is Undefined, optional
        The level of logging detail to include. Valid values OFF, ERROR, INFO and TRACE.
    s3LogDestination : PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationS3LogDestination, default is Undefined, optional
        s3 log destination
    """


    cloudwatchLogsLogDestination?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationCloudwatchLogsLogDestination

    firehoseLogDestination?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationFirehoseLogDestination

    includeExecutionData?: [str]

    level?: str

    s3LogDestination?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationS3LogDestination


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationCloudwatchLogsLogDestination:
    r"""
    Amazon CloudWatch Logs logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    logGroupArn : str, default is Undefined, optional
        Amazon Web Services Resource Name (ARN) for the CloudWatch log group to which EventBridge sends the log records.
    """


    logGroupArn?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationFirehoseLogDestination:
    r"""
    Amazon Kinesis Data Firehose logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    deliveryStreamArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Kinesis Data Firehose delivery stream to which EventBridge delivers the pipe log records.
    """


    deliveryStreamArn?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderLogConfigurationS3LogDestination:
    r"""
    Amazon S3 logging configuration settings for the pipe. Detailed below.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
    bucketOwner : str, default is Undefined, optional
        Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
    outputFormat : str, default is Undefined, optional
        EventBridge format for the log records. Valid values json, plain and w3c.
    prefix : str, default is Undefined, optional
        Prefix text with which to begin Amazon S3 log object names.
    """


    bucketName?: str

    bucketOwner?: str

    outputFormat?: str

    prefix?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParameters:
    r"""
    Parameters to configure a source for the pipe. Detailed below.

    Attributes
    ----------
    activemqBrokerParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersActivemqBrokerParameters, default is Undefined, optional
        activemq broker parameters
    dynamodbStreamParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersDynamodbStreamParameters, default is Undefined, optional
        dynamodb stream parameters
    filterCriteria : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersFilterCriteria, default is Undefined, optional
        filter criteria
    kinesisStreamParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersKinesisStreamParameters, default is Undefined, optional
        kinesis stream parameters
    managedStreamingKafkaParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersManagedStreamingKafkaParameters, default is Undefined, optional
        managed streaming kafka parameters
    rabbitmqBrokerParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersRabbitmqBrokerParameters, default is Undefined, optional
        rabbitmq broker parameters
    selfManagedKafkaParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParameters, default is Undefined, optional
        self managed kafka parameters
    sqsQueueParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSqsQueueParameters, default is Undefined, optional
        sqs queue parameters
    """


    activemqBrokerParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersActivemqBrokerParameters

    dynamodbStreamParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersDynamodbStreamParameters

    filterCriteria?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersFilterCriteria

    kinesisStreamParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersKinesisStreamParameters

    managedStreamingKafkaParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersManagedStreamingKafkaParameters

    rabbitmqBrokerParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersRabbitmqBrokerParameters

    selfManagedKafkaParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParameters

    sqsQueueParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSqsQueueParameters


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersActivemqBrokerParameters:
    r"""
    The parameters for using an Active MQ broker as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    credentials : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersActivemqBrokerParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    queueName : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum length of 1000.
    """


    batchSize?: float

    credentials?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersActivemqBrokerParametersCredentials

    maximumBatchingWindowInSeconds?: float

    queueName?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersActivemqBrokerParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the basic auth credentials.
    """


    basicAuth?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersDynamodbStreamParameters:
    r"""
    The parameters for using a DynamoDB stream as a source.  Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    deadLetterConfig : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersDynamodbStreamParametersDeadLetterConfig, default is Undefined, optional
        dead letter config
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    maximumRecordAgeInSeconds : float, default is Undefined, optional
        Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, EventBridge never discards old records. Maximum value of 604,800.
    maximumRetryAttempts : float, default is Undefined, optional
        Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge retries failed records until the record expires in the event source. Maximum value of 10,000.
    onPartialBatchItemFailure : str, default is Undefined, optional
        Define how to handle item process failures. AUTOMATIC_BISECT halves each batch and retry each half until all the records are processed or there is one failed message left in the batch. Valid values: AUTOMATIC_BISECT.
    parallelizationFactor : float, default is Undefined, optional
        The number of batches to process concurrently from each shard. The default value is 1. Maximum value of 10.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    """


    batchSize?: float

    deadLetterConfig?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersDynamodbStreamParametersDeadLetterConfig

    maximumBatchingWindowInSeconds?: float

    maximumRecordAgeInSeconds?: float

    maximumRetryAttempts?: float

    onPartialBatchItemFailure?: str

    parallelizationFactor?: float

    startingPosition?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersDynamodbStreamParametersDeadLetterConfig:
    r"""
    Define the target queue to send dead-letter queue events to. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Amazon SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersFilterCriteria:
    r"""
    The collection of event patterns used to filter events. Detailed below.

    Attributes
    ----------
    $filter : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersFilterCriteriaFilterItems0], default is Undefined, optional
        An array of up to 5 event patterns. Detailed below.
    """


    $filter?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersFilterCriteriaFilterItems0]


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersFilterCriteriaFilterItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider source parameters filter criteria filter items0

    Attributes
    ----------
    pattern : str, default is Undefined, optional
        The event pattern. At most 4096 characters.
    """


    pattern?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersKinesisStreamParameters:
    r"""
    The parameters for using a Kinesis stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    deadLetterConfig : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersKinesisStreamParametersDeadLetterConfig, default is Undefined, optional
        dead letter config
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    maximumRecordAgeInSeconds : float, default is Undefined, optional
        Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, EventBridge never discards old records. Maximum value of 604,800.
    maximumRetryAttempts : float, default is Undefined, optional
        Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, EventBridge retries failed records until the record expires in the event source. Maximum value of 10,000.
    onPartialBatchItemFailure : str, default is Undefined, optional
        Define how to handle item process failures. AUTOMATIC_BISECT halves each batch and retry each half until all the records are processed or there is one failed message left in the batch. Valid values: AUTOMATIC_BISECT.
    parallelizationFactor : float, default is Undefined, optional
        The number of batches to process concurrently from each shard. The default value is 1. Maximum value of 10.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST, AT_TIMESTAMP.
    startingPositionTimestamp : str, default is Undefined, optional
        With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.
    """


    batchSize?: float

    deadLetterConfig?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersKinesisStreamParametersDeadLetterConfig

    maximumBatchingWindowInSeconds?: float

    maximumRecordAgeInSeconds?: float

    maximumRetryAttempts?: float

    onPartialBatchItemFailure?: str

    parallelizationFactor?: float

    startingPosition?: str

    startingPositionTimestamp?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersKinesisStreamParametersDeadLetterConfig:
    r"""
    Define the target queue to send dead-letter queue events to. Detailed below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Amazon SQS queue specified as the target for the dead-letter queue.
    """


    arn?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersManagedStreamingKafkaParameters:
    r"""
    The parameters for using an MSK stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    consumerGroupId : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum value of 200.
    credentials : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersManagedStreamingKafkaParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    topicName : str, default is Undefined, optional
        The name of the topic that the pipe will read from. Maximum length of 249.
    """


    batchSize?: float

    consumerGroupId?: str

    credentials?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersManagedStreamingKafkaParametersCredentials

    maximumBatchingWindowInSeconds?: float

    startingPosition?: str

    topicName?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersManagedStreamingKafkaParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    clientCertificateTlsAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram512Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    clientCertificateTlsAuth?: str

    saslScram512Auth?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersRabbitmqBrokerParameters:
    r"""
    The parameters for using a Rabbit MQ broker as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    credentials : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersRabbitmqBrokerParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    queueName : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum length of 1000.
    virtualHost : str, default is Undefined, optional
        The name of the virtual host associated with the source broker. Maximum length of 200.
    """


    batchSize?: float

    credentials?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersRabbitmqBrokerParametersCredentials

    maximumBatchingWindowInSeconds?: float

    queueName?: str

    virtualHost?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersRabbitmqBrokerParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    basicAuth?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParameters:
    r"""
    The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.

    Attributes
    ----------
    additionalBootstrapServers : [str], default is Undefined, optional
        An array of server URLs. Maximum number of 2 items, each of maximum length 300.
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    consumerGroupId : str, default is Undefined, optional
        The name of the destination queue to consume. Maximum value of 200.
    credentials : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParametersCredentials, default is Undefined, optional
        credentials
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    serverRootCaCertificate : str, default is Undefined, optional
        The ARN of the Secrets Manager secret used for certification.
    startingPosition : str, default is Undefined, optional
        The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST.
    topicName : str, default is Undefined, optional
        The name of the topic that the pipe will read from. Maximum length of 249.
    vpc : PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParametersVpc, default is Undefined, optional
        vpc
    """


    additionalBootstrapServers?: [str]

    batchSize?: float

    consumerGroupId?: str

    credentials?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParametersCredentials

    maximumBatchingWindowInSeconds?: float

    serverRootCaCertificate?: str

    startingPosition?: str

    topicName?: str

    vpc?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParametersVpc


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParametersCredentials:
    r"""
    The credentials needed to access the resource. Detailed below.

    Attributes
    ----------
    basicAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    clientCertificateTlsAuth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram256Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    saslScram512Auth : str, default is Undefined, optional
        The ARN of the Secrets Manager secret containing the credentials.
    """


    basicAuth?: str

    clientCertificateTlsAuth?: str

    saslScram256Auth?: str

    saslScram512Auth?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSelfManagedKafkaParametersVpc:
    r"""
    This structure specifies the VPC subnets and security groups for the stream, and whether a public IP address is to be used. Detailed below.

    Attributes
    ----------
    securityGroups : [str], default is Undefined, optional
        List of security groups associated with the stream. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        List of the subnets associated with the stream. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
    """


    securityGroups?: [str]

    subnets?: [str]


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderSourceParametersSqsQueueParameters:
    r"""
    The parameters for using a Amazon SQS stream as a source. Detailed below.

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        The maximum number of records to include in each batch. Maximum value of 10000.
    maximumBatchingWindowInSeconds : float, default is Undefined, optional
        The maximum length of a time to wait for events. Maximum value of 300.
    """


    batchSize?: float

    maximumBatchingWindowInSeconds?: float


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParameters:
    r"""
    Parameters to configure a target for your pipe. Detailed below.

    Attributes
    ----------
    batchJobParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParameters, default is Undefined, optional
        batch job parameters
    cloudwatchLogsParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersCloudwatchLogsParameters, default is Undefined, optional
        cloudwatch logs parameters
    ecsTaskParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParameters, default is Undefined, optional
        ecs task parameters
    eventbridgeEventBusParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEventbridgeEventBusParameters, default is Undefined, optional
        eventbridge event bus parameters
    httpParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersHTTPParameters, default is Undefined, optional
        http parameters
    inputTemplate : str, default is Undefined, optional
        Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
    kinesisStreamParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersKinesisStreamParameters, default is Undefined, optional
        kinesis stream parameters
    lambdaFunctionParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersLambdaFunctionParameters, default is Undefined, optional
        lambda function parameters
    redshiftDataParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersRedshiftDataParameters, default is Undefined, optional
        redshift data parameters
    sagemakerPipelineParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSagemakerPipelineParameters, default is Undefined, optional
        sagemaker pipeline parameters
    sqsQueueParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSqsQueueParameters, default is Undefined, optional
        sqs queue parameters
    stepFunctionStateMachineParameters : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersStepFunctionStateMachineParameters, default is Undefined, optional
        step function state machine parameters
    """


    batchJobParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParameters

    cloudwatchLogsParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersCloudwatchLogsParameters

    ecsTaskParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParameters

    eventbridgeEventBusParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEventbridgeEventBusParameters

    httpParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersHTTPParameters

    inputTemplate?: str

    kinesisStreamParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersKinesisStreamParameters

    lambdaFunctionParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersLambdaFunctionParameters

    redshiftDataParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersRedshiftDataParameters

    sagemakerPipelineParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSagemakerPipelineParameters

    sqsQueueParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSqsQueueParameters

    stepFunctionStateMachineParameters?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersStepFunctionStateMachineParameters


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParameters:
    r"""
    The parameters for using an AWS Batch job as a target. Detailed below.

    Attributes
    ----------
    arrayProperties : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersArrayProperties, default is Undefined, optional
        array properties
    containerOverrides : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverrides, default is Undefined, optional
        container overrides
    dependsOn : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersDependsOnItems0], default is Undefined, optional
        A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a SEQUENTIAL type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an N_TO_N type dependency with a job ID for array jobs. In that case, each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin. Detailed below.
    jobDefinition : str, default is Undefined, optional
        The job definition used by this job. This value can be one of name, name:revision, or the Amazon Resource Name (ARN) for the job definition. If name is specified without a revision then the latest active revision is used.
    jobName : str, default is Undefined, optional
        The name of the job. It can be up to 128 letters long.
    parameters : {str:str}, default is Undefined, optional
        Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters included here override any corresponding parameter defaults from the job definition. Detailed below.
    retryStrategy : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersRetryStrategy, default is Undefined, optional
        retry strategy
    """


    arrayProperties?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersArrayProperties

    containerOverrides?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverrides

    dependsOn?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersDependsOnItems0]

    jobDefinition?: str

    jobName?: str

    parameters?: {str:str}

    retryStrategy?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersRetryStrategy


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersArrayProperties:
    r"""
    The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an AWS Batch job. Detailed below.

    Attributes
    ----------
    size : float, default is Undefined, optional
        The size of the array, if this is an array batch job. Minimum value of 2. Maximum value of 10,000.
    """


    size?: float


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverrides:
    r"""
    The overrides that are sent to a container. Detailed below.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        List of commands to send to the container that overrides the default command from the Docker image or the task definition.
    environment : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. Environment variables cannot start with " AWS Batch ". This naming convention is reserved for variables that AWS Batch sets. Detailed below.
    instanceType : str, default is Undefined, optional
        The instance type to use for a multi-node parallel job. This parameter isn't applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn't be provided.
    resourceRequirement : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0], default is Undefined, optional
        The type and amount of resources to assign to a container. This overrides the settings in the job definition. The supported resources include GPU, MEMORY, and VCPU. Detailed below.
    """


    command?: [str]

    environment?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0]

    instanceType?: str

    resourceRequirement?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0]


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverridesEnvironmentItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters batch job parameters container overrides environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersContainerOverridesResourceRequirementItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters batch job parameters container overrides resource requirement items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of resource to assign to a container. The supported resources include GPU, MEMORY, and VCPU.
    value : str, default is Undefined, optional
        The quantity of the specified resource to reserve for the container. The values vary based on the type specified.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersDependsOnItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters batch job parameters depends on items0

    Attributes
    ----------
    jobId : str, default is Undefined, optional
        The job ID of the AWS Batch job that's associated with this dependency.
    $type : str, default is Undefined, optional
        The type of the job dependency. Valid Values: N_TO_N, SEQUENTIAL.
    """


    jobId?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersBatchJobParametersRetryStrategy:
    r"""
    The retry strategy to use for failed jobs. When a retry strategy is specified here, it overrides the retry strategy defined in the job definition. Detailed below.

    Attributes
    ----------
    attempts : float, default is Undefined, optional
        The number of times to move a job to the RUNNABLE status. If the value of attempts is greater than one, the job is retried on failure the same number of attempts as the value. Maximum value of 10.
    """


    attempts?: float


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersCloudwatchLogsParameters:
    r"""
    The parameters for using an CloudWatch Logs log stream as a target. Detailed below.

    Attributes
    ----------
    logStreamName : str, default is Undefined, optional
        The name of the log stream.
    timestamp : str, default is Undefined, optional
        The time the event occurred, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC. This is the JSON path to the field in the event e.g. $.detail.timestamp
    """


    logStreamName?: str

    timestamp?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParameters:
    r"""
    The parameters for using an Amazon ECS task as a target. Detailed below.

    Attributes
    ----------
    capacityProviderStrategy : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0], default is Undefined, optional
        List of capacity provider strategies to use for the task. If a capacityProviderStrategy is specified, the launchType parameter must be omitted. If no capacityProviderStrategy or launchType is specified, the defaultCapacityProviderStrategy for the cluster is used. Detailed below.
    enableEcsManagedTags : bool, default is Undefined, optional
        Specifies whether to enable Amazon ECS managed tags for the task. Valid values: true, false.
    enableExecuteCommand : bool, default is Undefined, optional
        Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task. Valid values: true, false.
    group : str, default is Undefined, optional
        Specifies an Amazon ECS task group for the task. The maximum length is 255 characters.
    launchType : str, default is Undefined, optional
        Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The FARGATE value is supported only in the Regions where AWS Fargate with Amazon ECS is supported. Valid Values: EC2, FARGATE, EXTERNAL
    networkConfiguration : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersNetworkConfiguration, default is Undefined, optional
        network configuration
    overrides : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverrides, default is Undefined, optional
        overrides
    placementConstraint : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersPlacementConstraintItems0], default is Undefined, optional
        An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). Detailed below.
    placementStrategy : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersPlacementStrategyItems0], default is Undefined, optional
        The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task. Detailed below.
    platformVersion : str, default is Undefined, optional
        Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as 1.1.0. This structure is used only if LaunchType is FARGATE.
    propagateTags : str, default is Undefined, optional
        Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action. Valid Values: TASK_DEFINITION
    referenceId : str, default is Undefined, optional
        The reference ID to use for the task. Maximum length of 1,024.
    tags : {str:str}, default is Undefined, optional
        Key-value map of tags that you apply to the task to help you categorize and organize them.
    taskCount : float, default is Undefined, optional
        The number of tasks to create based on TaskDefinition. The default is 1.
    taskDefinitionArn : str, default is Undefined, optional
        The ARN of the task definition to use if the event target is an Amazon ECS task.
    """


    capacityProviderStrategy?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0]

    enableEcsManagedTags?: bool

    enableExecuteCommand?: bool

    group?: str

    launchType?: str

    networkConfiguration?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersNetworkConfiguration

    overrides?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverrides

    placementConstraint?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersPlacementConstraintItems0]

    placementStrategy?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersPlacementStrategyItems0]

    platformVersion?: str

    propagateTags?: str

    referenceId?: str

    tags?: {str:str}

    taskCount?: float

    taskDefinitionArn?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersCapacityProviderStrategyItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters capacity provider strategy items0

    Attributes
    ----------
    base : float, default is Undefined, optional
        The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. If no value is specified, the default value of 0 is used. Maximum value of 100,000.
    capacityProvider : str, default is Undefined, optional
        The short name of the capacity provider. Maximum value of 255.
    weight : float, default is Undefined, optional
        The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied. Maximum value of 1,000.
    """


    base?: float

    capacityProvider?: str

    weight?: float


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersNetworkConfiguration:
    r"""
    Use this structure if the Amazon ECS task uses the awsvpc network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if LaunchType is FARGATE because the awsvpc mode is required for Fargate tasks. If you specify NetworkConfiguration when the target ECS task does not use the awsvpc network mode, the task fails. Detailed below.

    Attributes
    ----------
    awsVpcConfiguration : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration, default is Undefined, optional
        aws vpc configuration
    """


    awsVpcConfiguration?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersNetworkConfigurationAwsVpcConfiguration:
    r"""
    Use this structure to specify the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the awsvpc network mode. Detailed below.

    Attributes
    ----------
    assignPublicIp : str, default is Undefined, optional
        Specifies whether the task's elastic network interface receives a public IP address. You can specify ENABLED only when LaunchType in EcsParameters is set to FARGATE. Valid Values: ENABLED, DISABLED.
    securityGroups : [str], default is Undefined, optional
        Specifies the security groups associated with the task. These security groups must all be in the same VPC. You can specify as many as five security groups. If you do not specify a security group, the default security group for the VPC is used.
    subnets : [str], default is Undefined, optional
        Specifies the subnets associated with the task. These subnets must all be in the same VPC. You can specify as many as 16 subnets.
    """


    assignPublicIp?: str

    securityGroups?: [str]

    subnets?: [str]


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverrides:
    r"""
    The overrides that are associated with a task. Detailed below.

    Attributes
    ----------
    containerOverride : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0], default is Undefined, optional
        One or more container overrides that are sent to a task. Detailed below.
    cpu : str, default is Undefined, optional
        The cpu override for the task.
    ephemeralStorage : PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage, default is Undefined, optional
        ephemeral storage
    executionRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the task execution IAM role override for the task.
    inferenceAcceleratorOverride : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0], default is Undefined, optional
        List of Elastic Inference accelerator overrides for the task. Detailed below.
    memory : str, default is Undefined, optional
        The memory override for the task.
    taskRoleArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the IAM role that containers in this task can assume. All containers in this task are granted the permissions that are specified in this role.
    """


    containerOverride?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0]

    cpu?: str

    ephemeralStorage?: PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage

    executionRoleArn?: str

    inferenceAcceleratorOverride?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0]

    memory?: str

    taskRoleArn?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters overrides container override items0

    Attributes
    ----------
    command : [str], default is Undefined, optional
        List of commands to send to the container that overrides the default command from the Docker image or the task definition. You must also specify a container name.
    cpu : float, default is Undefined, optional
        The number of cpu units reserved for the container, instead of the default value from the task definition. You must also specify a container name.
    environment : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0], default is Undefined, optional
        The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. You must also specify a container name. Detailed below.
    environmentFile : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0], default is Undefined, optional
        A list of files containing the environment variables to pass to a container, instead of the value from the container definition. Detailed below.
    memory : float, default is Undefined, optional
        The hard limit (in MiB) of memory to present to the container, instead of the default value from the task definition. If your container attempts to exceed the memory specified here, the container is killed. You must also specify a container name.
    memoryReservation : float, default is Undefined, optional
        The soft limit (in MiB) of memory to reserve for the container, instead of the default value from the task definition. You must also specify a container name.
    name : str, default is Undefined, optional
        The name of the container that receives the override. This parameter is required if any override is specified.
    resourceRequirement : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0], default is Undefined, optional
        The type and amount of a resource to assign to a container, instead of the default value from the task definition. The only supported resource is a GPU. Detailed below.
    """


    command?: [str]

    cpu?: float

    environment?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0]

    environmentFile?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0]

    memory?: float

    memoryReservation?: float

    name?: str

    resourceRequirement?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0]


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentFileItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters overrides container override items0 environment file items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The file type to use. The only supported value is s3.
    value : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0EnvironmentItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters overrides container override items0 environment items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the key-value pair. For environment variables, this is the name of the environment variable.
    value : str, default is Undefined, optional
        The value of the key-value pair. For environment variables, this is the value of the environment variable.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesContainerOverrideItems0ResourceRequirementItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters overrides container override items0 resource requirement items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The type of resource to assign to a container. The supported values are GPU or InferenceAccelerator.
    value : str, default is Undefined, optional
        The value for the specified resource type. If the GPU type is used, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container. The number of GPUs that's reserved for all containers in a task can't exceed the number of available GPUs on the container instance that the task is launched on. If the InferenceAccelerator type is used, the value matches the deviceName for an InferenceAccelerator specified in a task definition.
    """


    $type?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesEphemeralStorage:
    r"""
    The ephemeral storage setting override for the task.  Detailed below.

    Attributes
    ----------
    sizeInGib : float, default is Undefined, optional
        The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.
    """


    sizeInGib?: float


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersOverridesInferenceAcceleratorOverrideItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters overrides inference accelerator override items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The Elastic Inference accelerator device name to override for the task. This parameter must match a deviceName specified in the task definition.
    deviceType : str, default is Undefined, optional
        The Elastic Inference accelerator type to use.
    """


    deviceName?: str

    deviceType?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersPlacementConstraintItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters placement constraint items0

    Attributes
    ----------
    expression : str, default is Undefined, optional
        A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is distinctInstance. Maximum length of 2,000.
    $type : str, default is Undefined, optional
        The type of constraint. Use distinctInstance to ensure that each task in a particular group is running on a different container instance. Use memberOf to restrict the selection to a group of valid candidates. Valid Values: distinctInstance, memberOf.
    """


    expression?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEcsTaskParametersPlacementStrategyItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters ecs task parameters placement strategy items0

    Attributes
    ----------
    field : str, default is Undefined, optional
        The field to apply the placement strategy against. For the spread placement strategy, valid values are instanceId (or host, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as attribute:ecs.availability-zone. For the binpack placement strategy, valid values are cpu and memory. For the random placement strategy, this field is not used. Maximum length of 255.
    $type : str, default is Undefined, optional
        The type of placement strategy. The random placement strategy randomly places tasks on available candidates. The spread placement strategy spreads placement across available candidates evenly based on the field parameter. The binpack strategy places tasks on available candidates that have the least available amount of the resource that is specified with the field parameter. For example, if you binpack on memory, a task is placed on the instance with the least amount of remaining memory (but still enough to run the task). Valid Values: random, spread, binpack.
    """


    field?: str

    $type?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersEventbridgeEventBusParameters:
    r"""
    The parameters for using an EventBridge event bus as a target. Detailed below.

    Attributes
    ----------
    detailType : str, default is Undefined, optional
        A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.
    endpointId : str, default is Undefined, optional
        The URL subdomain of the endpoint. For example, if the URL for Endpoint is https://abcde.veo.endpoints.event.amazonaws.com, then the EndpointId is abcde.veo.
    resources : [str], default is Undefined, optional
        List of AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present.
    source : str, default is Undefined, optional
        The source of the event. Maximum length of 256.
    time : str, default is Undefined, optional
        The time stamp of the event, per RFC3339. If no time stamp is provided, the time stamp of the PutEvents call is used. This is the JSON path to the field in the event e.g. $.detail.timestamp
    """


    detailType?: str

    endpointId?: str

    resources?: [str]

    source?: str

    time?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersHTTPParameters:
    r"""
    These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.

    Attributes
    ----------
    headerParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the headers that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination. Detailed below.
    pathParameterValues : [str], default is Undefined, optional
        The path parameter values to be used to populate API Gateway REST API or EventBridge ApiDestination path wildcards ("*").
    queryStringParameters : {str:str}, default is Undefined, optional
        Key-value mapping of the query strings that need to be sent as part of request invoking the API Gateway REST API or EventBridge ApiDestination. Detailed below.
    """


    headerParameters?: {str:str}

    pathParameterValues?: [str]

    queryStringParameters?: {str:str}


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersKinesisStreamParameters:
    r"""
    The parameters for using a Kinesis stream as a source. Detailed below.

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.
    """


    partitionKey?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersLambdaFunctionParameters:
    r"""
    The parameters for using a Lambda function as a target. Detailed below.

    Attributes
    ----------
    invocationType : str, default is Undefined, optional
        Specify whether to invoke the function synchronously or asynchronously. Valid Values: REQUEST_RESPONSE, FIRE_AND_FORGET.
    """


    invocationType?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersRedshiftDataParameters:
    r"""
    These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.

    Attributes
    ----------
    database : str, default is Undefined, optional
        The name of the database. Required when authenticating using temporary credentials.
    dbUser : str, default is Undefined, optional
        The database user name. Required when authenticating using temporary credentials.
    secretManagerArn : str, default is Undefined, optional
        The name or ARN of the secret that enables access to the database. Required when authenticating using Secrets Manager.
    sqls : [str], default is Undefined, optional
        List of SQL statements text to run, each of maximum length of 100,000.
    statementName : str, default is Undefined, optional
        The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
    withEvent : bool, default is Undefined, optional
        Indicates whether to send an event back to EventBridge after the SQL statement runs.
    """


    database?: str

    dbUser?: str

    secretManagerArn?: str

    sqls?: [str]

    statementName?: str

    withEvent?: bool


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSagemakerPipelineParameters:
    r"""
    The parameters for using a SageMaker pipeline as a target. Detailed below.

    Attributes
    ----------
    pipelineParameter : [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0], default is Undefined, optional
        List of Parameter names and values for SageMaker Model Building Pipeline execution. Detailed below.
    """


    pipelineParameter?: [PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0]


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSagemakerPipelineParametersPipelineParameterItems0:
    r"""
    pipes aws upbound io v1beta1 pipe status at provider target parameters sagemaker pipeline parameters pipeline parameter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the container that receives the override. This parameter is required if any override is specified.
    value : str, default is Undefined, optional
        Value of parameter to start execution of a SageMaker Model Building Pipeline. Maximum length of 1024.
    """


    name?: str

    value?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersSqsQueueParameters:
    r"""
    The parameters for using a Amazon SQS stream as a target. Detailed below.

    Attributes
    ----------
    messageDeduplicationId : str, default is Undefined, optional
        This parameter applies only to FIFO (first-in-first-out) queues. The token used for deduplication of sent messages.
    messageGroupId : str, default is Undefined, optional
        The FIFO message group ID to use as the target.
    """


    messageDeduplicationId?: str

    messageGroupId?: str


schema PipesAwsUpboundIoV1beta1PipeStatusAtProviderTargetParametersStepFunctionStateMachineParameters:
    r"""
    The parameters for using a Step Functions state machine as a target. Detailed below.

    Attributes
    ----------
    invocationType : str, default is Undefined, optional
        Specify whether to invoke the function synchronously or asynchronously. Valid Values: REQUEST_RESPONSE, FIRE_AND_FORGET.
    """


    invocationType?: str


schema PipesAwsUpboundIoV1beta1PipeStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


