"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BucketACL:
    r"""
    BucketACL is the Schema for the BucketACLs API. Provides an S3 bucket ACL resource.

    Attributes
    ----------
    apiVersion : str, default is "s3.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BucketACL", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3AwsUpboundIoV1beta1BucketACLSpec, default is Undefined, required
        spec
    status : S3AwsUpboundIoV1beta1BucketACLStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3.aws.upbound.io/v1beta1" = "s3.aws.upbound.io/v1beta1"

    kind: "BucketACL" = "BucketACL"

    metadata?: v1.ObjectMeta

    spec: S3AwsUpboundIoV1beta1BucketACLSpec

    status?: S3AwsUpboundIoV1beta1BucketACLStatus


schema S3AwsUpboundIoV1beta1BucketACLSpec:
    r"""
    BucketACLSpec defines the desired state of BucketACL

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3AwsUpboundIoV1beta1BucketACLSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3AwsUpboundIoV1beta1BucketACLSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3AwsUpboundIoV1beta1BucketACLSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3AwsUpboundIoV1beta1BucketACLSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3AwsUpboundIoV1beta1BucketACLSpecForProvider

    initProvider?: S3AwsUpboundIoV1beta1BucketACLSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3AwsUpboundIoV1beta1BucketACLSpecProviderConfigRef

    publishConnectionDetailsTo?: S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3AwsUpboundIoV1beta1BucketACLSpecWriteConnectionSecretToRef


schema S3AwsUpboundIoV1beta1BucketACLSpecForProvider:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec for provider

    Attributes
    ----------
    accessControlPolicy : [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0], default is Undefined, optional
        Configuration block that sets the ACL permissions for an object per grantee. See below.
    acl : str, default is Undefined, optional
        Canned ACL to apply to the bucket.
    bucket : str, default is Undefined, optional
        Bucket to which to apply the ACL.
    bucketRef : S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketSelector, default is Undefined, optional
        bucket selector
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    accessControlPolicy?: [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0]

    acl?: str

    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketSelector

    expectedBucketOwner?: str

    region: str


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec for provider access control policy items0

    Attributes
    ----------
    grant : [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0GrantItems0], default is Undefined, optional
        Set of grant configuration blocks. See below.
    owner : [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0OwnerItems0], default is Undefined, optional
        Configuration block for the bucket owner's display name and ID. See below.
    """


    grant?: [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0GrantItems0]

    owner?: [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0OwnerItems0]


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0GrantItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec for provider access control policy items0 grant items0

    Attributes
    ----------
    grantee : [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0GrantItems0GranteeItems0], default is Undefined, optional
        Configuration block for the person being granted permissions. See below.
    permission : str, default is Undefined, optional
        Logging permissions assigned to the grantee for the bucket. Valid values: FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP. See What permissions can I grant? for more details about what each permission means in the context of buckets.
    """


    grantee?: [S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0GrantItems0GranteeItems0]

    permission?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0GrantItems0GranteeItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec for provider access control policy items0 grant items0 grantee items0

    Attributes
    ----------
    emailAddress : str, default is Undefined, optional
        Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
    id : str, default is Undefined, optional
        ID of the owner.
    $type : str, default is Undefined, optional
        Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
    uri : str, default is Undefined, optional
        URI of the grantee group.
    """


    emailAddress?: str

    id?: str

    $type?: str

    uri?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderAccessControlPolicyItems0OwnerItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec for provider access control policy items0 owner items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Display name of the owner.
    id : str, default is Undefined, optional
        ID of the owner.
    """


    displayName?: str

    id?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketACLSpecForProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessControlPolicy : [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0], default is Undefined, optional
        Configuration block that sets the ACL permissions for an object per grantee. See below.
    acl : str, default is Undefined, optional
        Canned ACL to apply to the bucket.
    bucket : str, default is Undefined, optional
        Bucket to which to apply the ACL.
    bucketRef : S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketSelector, default is Undefined, optional
        bucket selector
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner.
    """


    accessControlPolicy?: [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0]

    acl?: str

    bucket?: str

    bucketRef?: S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketRef

    bucketSelector?: S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketSelector

    expectedBucketOwner?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec init provider access control policy items0

    Attributes
    ----------
    grant : [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0GrantItems0], default is Undefined, optional
        Set of grant configuration blocks. See below.
    owner : [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0OwnerItems0], default is Undefined, optional
        Configuration block for the bucket owner's display name and ID. See below.
    """


    grant?: [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0GrantItems0]

    owner?: [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0OwnerItems0]


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0GrantItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec init provider access control policy items0 grant items0

    Attributes
    ----------
    grantee : [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0GrantItems0GranteeItems0], default is Undefined, optional
        Configuration block for the person being granted permissions. See below.
    permission : str, default is Undefined, optional
        Logging permissions assigned to the grantee for the bucket. Valid values: FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP. See What permissions can I grant? for more details about what each permission means in the context of buckets.
    """


    grantee?: [S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0GrantItems0GranteeItems0]

    permission?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0GrantItems0GranteeItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec init provider access control policy items0 grant items0 grantee items0

    Attributes
    ----------
    emailAddress : str, default is Undefined, optional
        Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
    id : str, default is Undefined, optional
        ID of the owner.
    $type : str, default is Undefined, optional
        Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
    uri : str, default is Undefined, optional
        URI of the grantee group.
    """


    emailAddress?: str

    id?: str

    $type?: str

    uri?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderAccessControlPolicyItems0OwnerItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL spec init provider access control policy items0 owner items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Display name of the owner.
    id : str, default is Undefined, optional
        ID of the owner.
    """


    displayName?: str

    id?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketRefPolicy


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketSelectorPolicy


schema S3AwsUpboundIoV1beta1BucketACLSpecInitProviderBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketACLSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketACLSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketACLSpecProviderConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketACLSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToConfigRef

    metadata?: S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToMetadata

    name: str


schema S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToConfigRefPolicy


schema S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1BucketACLSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3AwsUpboundIoV1beta1BucketACLSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1BucketACLStatus:
    r"""
    BucketACLStatus defines the observed state of BucketACL.

    Attributes
    ----------
    atProvider : S3AwsUpboundIoV1beta1BucketACLStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3AwsUpboundIoV1beta1BucketACLStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3AwsUpboundIoV1beta1BucketACLStatusAtProvider

    conditions?: [S3AwsUpboundIoV1beta1BucketACLStatusConditionsItems0]

    observedGeneration?: int


schema S3AwsUpboundIoV1beta1BucketACLStatusAtProvider:
    r"""
    s3 aws upbound io v1beta1 bucket ACL status at provider

    Attributes
    ----------
    accessControlPolicy : [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0], default is Undefined, optional
        Configuration block that sets the ACL permissions for an object per grantee. See below.
    acl : str, default is Undefined, optional
        Canned ACL to apply to the bucket.
    bucket : str, default is Undefined, optional
        Bucket to which to apply the ACL.
    expectedBucketOwner : str, default is Undefined, optional
        Account ID of the expected bucket owner.
    id : str, default is Undefined, optional
        The bucket, expected_bucket_owner (if configured), and acl (if configured) separated by commas (,).
    """


    accessControlPolicy?: [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0]

    acl?: str

    bucket?: str

    expectedBucketOwner?: str

    id?: str


schema S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL status at provider access control policy items0

    Attributes
    ----------
    grant : [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0GrantItems0], default is Undefined, optional
        Set of grant configuration blocks. See below.
    owner : [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0OwnerItems0], default is Undefined, optional
        Configuration block for the bucket owner's display name and ID. See below.
    """


    grant?: [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0GrantItems0]

    owner?: [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0OwnerItems0]


schema S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0GrantItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL status at provider access control policy items0 grant items0

    Attributes
    ----------
    grantee : [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0GrantItems0GranteeItems0], default is Undefined, optional
        Configuration block for the person being granted permissions. See below.
    permission : str, default is Undefined, optional
        Logging permissions assigned to the grantee for the bucket. Valid values: FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP. See What permissions can I grant? for more details about what each permission means in the context of buckets.
    """


    grantee?: [S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0GrantItems0GranteeItems0]

    permission?: str


schema S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0GrantItems0GranteeItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL status at provider access control policy items0 grant items0 grantee items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Display name of the owner.
    emailAddress : str, default is Undefined, optional
        Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
    id : str, default is Undefined, optional
        ID of the owner.
    $type : str, default is Undefined, optional
        Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
    uri : str, default is Undefined, optional
        URI of the grantee group.
    """


    displayName?: str

    emailAddress?: str

    id?: str

    $type?: str

    uri?: str


schema S3AwsUpboundIoV1beta1BucketACLStatusAtProviderAccessControlPolicyItems0OwnerItems0:
    r"""
    s3 aws upbound io v1beta1 bucket ACL status at provider access control policy items0 owner items0

    Attributes
    ----------
    displayName : str, default is Undefined, optional
        Display name of the owner.
    id : str, default is Undefined, optional
        ID of the owner.
    """


    displayName?: str

    id?: str


schema S3AwsUpboundIoV1beta1BucketACLStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


