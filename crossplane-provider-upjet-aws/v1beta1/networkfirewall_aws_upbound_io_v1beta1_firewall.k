"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Firewall:
    r"""
    Firewall is the Schema for the Firewalls API. Provides an AWS Network Firewall Firewall resource.

    Attributes
    ----------
    apiVersion : str, default is "networkfirewall.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Firewall", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkfirewallAwsUpboundIoV1beta1FirewallSpec, default is Undefined, required
        spec
    status : NetworkfirewallAwsUpboundIoV1beta1FirewallStatus, default is Undefined, optional
        status
    """


    apiVersion: "networkfirewall.aws.upbound.io/v1beta1" = "networkfirewall.aws.upbound.io/v1beta1"

    kind: "Firewall" = "Firewall"

    metadata?: v1.ObjectMeta

    spec: NetworkfirewallAwsUpboundIoV1beta1FirewallSpec

    status?: NetworkfirewallAwsUpboundIoV1beta1FirewallStatus


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpec:
    r"""
    FirewallSpec defines the desired state of Firewall

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProvider, default is Undefined, required
        for provider
    initProvider : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProvider

    initProvider?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecProviderConfigRef

    publishConnectionDetailsTo?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecWriteConnectionSecretToRef


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProvider:
    r"""
    networkfirewall aws upbound io v1beta1 firewall spec for provider

    Attributes
    ----------
    deleteProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. Defaults to false.
    description : str, default is Undefined, optional
        A friendly description of the firewall.
    encryptionConfiguration : [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderEncryptionConfigurationItems0], default is Undefined, optional
        KMS encryption configuration settings. See Encryption Configuration below for details.
    firewallPolicyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the VPC Firewall policy.
    firewallPolicyArnRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnRef, default is Undefined, optional
        firewall policy arn ref
    firewallPolicyArnSelector : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnSelector, default is Undefined, optional
        firewall policy arn selector
    firewallPolicyChangeProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. Defaults to false.
    name : str, default is Undefined, optional
        A friendly name of the firewall.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    subnetChangeProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. Defaults to false.
    subnetMapping : [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0], default is Undefined, optional
        Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcId : str, default is Undefined, optional
        The unique identifier of the VPC where AWS Network Firewall should create the firewall.
    vpcIdRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    deleteProtection?: bool

    description?: str

    encryptionConfiguration?: [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderEncryptionConfigurationItems0]

    firewallPolicyArn?: str

    firewallPolicyArnRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnRef

    firewallPolicyArnSelector?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnSelector

    firewallPolicyChangeProtection?: bool

    name?: str

    region: str

    subnetChangeProtection?: bool

    subnetMapping?: [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0]

    tags?: {str:str}

    vpcId?: str

    vpcIdRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDRef

    vpcIdSelector?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDSelector


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderEncryptionConfigurationItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall spec for provider encryption configuration items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnRef:
    r"""
    Reference to a FirewallPolicy in networkfirewall to populate firewallPolicyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnSelector:
    r"""
    Selector for a FirewallPolicy in networkfirewall to populate firewallPolicyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderFirewallPolicyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall spec for provider subnet mapping items0

    Attributes
    ----------
    ipAddressType : str, default is Undefined, optional
        The subnet's IP address type. Valida values: "DUALSTACK", "IPV4".
    subnetId : str, default is Undefined, optional
        The unique identifier for the subnet.
    subnetIdRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    ipAddressType?: str

    subnetId?: str

    subnetIdRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDRef

    subnetIdSelector?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDSelector


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderSubnetMappingItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecForProviderVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    deleteProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. Defaults to false.
    description : str, default is Undefined, optional
        A friendly description of the firewall.
    encryptionConfiguration : [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderEncryptionConfigurationItems0], default is Undefined, optional
        KMS encryption configuration settings. See Encryption Configuration below for details.
    firewallPolicyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the VPC Firewall policy.
    firewallPolicyArnRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnRef, default is Undefined, optional
        firewall policy arn ref
    firewallPolicyArnSelector : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnSelector, default is Undefined, optional
        firewall policy arn selector
    firewallPolicyChangeProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. Defaults to false.
    name : str, default is Undefined, optional
        A friendly name of the firewall.
    subnetChangeProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. Defaults to false.
    subnetMapping : [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0], default is Undefined, optional
        Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcId : str, default is Undefined, optional
        The unique identifier of the VPC where AWS Network Firewall should create the firewall.
    vpcIdRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    deleteProtection?: bool

    description?: str

    encryptionConfiguration?: [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderEncryptionConfigurationItems0]

    firewallPolicyArn?: str

    firewallPolicyArnRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnRef

    firewallPolicyArnSelector?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnSelector

    firewallPolicyChangeProtection?: bool

    name?: str

    subnetChangeProtection?: bool

    subnetMapping?: [NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0]

    tags?: {str:str}

    vpcId?: str

    vpcIdRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDRef

    vpcIdSelector?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDSelector


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderEncryptionConfigurationItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall spec init provider encryption configuration items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnRef:
    r"""
    Reference to a FirewallPolicy in networkfirewall to populate firewallPolicyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnSelector:
    r"""
    Selector for a FirewallPolicy in networkfirewall to populate firewallPolicyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderFirewallPolicyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall spec init provider subnet mapping items0

    Attributes
    ----------
    ipAddressType : str, default is Undefined, optional
        The subnet's IP address type. Valida values: "DUALSTACK", "IPV4".
    subnetId : str, default is Undefined, optional
        The unique identifier for the subnet.
    subnetIdRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    ipAddressType?: str

    subnetId?: str

    subnetIdRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDRef

    subnetIdSelector?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDSelector


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderSubnetMappingItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDSelectorPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecInitProviderVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecProviderConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToConfigRef

    metadata?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToMetadata

    name: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToConfigRefPolicy


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatus:
    r"""
    FirewallStatus defines the observed state of Firewall.

    Attributes
    ----------
    atProvider : NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProvider

    conditions?: [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusConditionsItems0]

    observedGeneration?: int


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProvider:
    r"""
    networkfirewall aws upbound io v1beta1 firewall status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the firewall.
    deleteProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. Defaults to false.
    description : str, default is Undefined, optional
        A friendly description of the firewall.
    encryptionConfiguration : [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderEncryptionConfigurationItems0], default is Undefined, optional
        KMS encryption configuration settings. See Encryption Configuration below for details.
    firewallPolicyArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the VPC Firewall policy.
    firewallPolicyChangeProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. Defaults to false.
    firewallStatus : [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0], default is Undefined, optional
        Nested list of information about the current status of the firewall.
    id : str, default is Undefined, optional
        The Amazon Resource Name (ARN) that identifies the firewall.
    name : str, default is Undefined, optional
        A friendly name of the firewall.
    subnetChangeProtection : bool, default is Undefined, optional
        A flag indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. Defaults to false.
    subnetMapping : [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderSubnetMappingItems0], default is Undefined, optional
        Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    updateToken : str, default is Undefined, optional
        A string token used when updating a firewall.
    vpcId : str, default is Undefined, optional
        The unique identifier of the VPC where AWS Network Firewall should create the firewall.
    """


    arn?: str

    deleteProtection?: bool

    description?: str

    encryptionConfiguration?: [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderEncryptionConfigurationItems0]

    firewallPolicyArn?: str

    firewallPolicyChangeProtection?: bool

    firewallStatus?: [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0]

    id?: str

    name?: str

    subnetChangeProtection?: bool

    subnetMapping?: [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderSubnetMappingItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    updateToken?: str

    vpcId?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderEncryptionConfigurationItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall status at provider encryption configuration items0

    Attributes
    ----------
    keyId : str, default is Undefined, optional
        The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.
    $type : str, default is Undefined, optional
        The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.
    """


    keyId?: str

    $type?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall status at provider firewall status items0

    Attributes
    ----------
    syncStates : [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0SyncStatesItems0], default is Undefined, optional
        Set of subnets configured for use by the firewall.
    """


    syncStates?: [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0SyncStatesItems0]


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0SyncStatesItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall status at provider firewall status items0 sync states items0

    Attributes
    ----------
    attachment : [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0SyncStatesItems0AttachmentItems0], default is Undefined, optional
        Nested list describing the attachment status of the firewall's association with a single VPC subnet.
    availabilityZone : str, default is Undefined, optional
        The Availability Zone where the subnet is configured.
    """


    attachment?: [NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0SyncStatesItems0AttachmentItems0]

    availabilityZone?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderFirewallStatusItems0SyncStatesItems0AttachmentItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall status at provider firewall status items0 sync states items0 attachment items0

    Attributes
    ----------
    endpointId : str, default is Undefined, optional
        The identifier of the firewall endpoint that AWS Network Firewall has instantiated in the subnet. You use this to identify the firewall endpoint in the VPC route tables, when you redirect the VPC traffic through the endpoint.
    subnetId : str, default is Undefined, optional
        The unique identifier for the subnet.
    """


    endpointId?: str

    subnetId?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusAtProviderSubnetMappingItems0:
    r"""
    networkfirewall aws upbound io v1beta1 firewall status at provider subnet mapping items0

    Attributes
    ----------
    ipAddressType : str, default is Undefined, optional
        The subnet's IP address type. Valida values: "DUALSTACK", "IPV4".
    subnetId : str, default is Undefined, optional
        The unique identifier for the subnet.
    """


    ipAddressType?: str

    subnetId?: str


schema NetworkfirewallAwsUpboundIoV1beta1FirewallStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


