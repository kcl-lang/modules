"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ScheduledAction:
    r"""
    ScheduledAction is the Schema for the ScheduledActions API. Provides an Application AutoScaling ScheduledAction resource.

    Attributes
    ----------
    apiVersion : str, default is "appautoscaling.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ScheduledAction", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpec, default is Undefined, required
        spec
    status : AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatus, default is Undefined, optional
        status
    """


    apiVersion: "appautoscaling.aws.upbound.io/v1beta1" = "appautoscaling.aws.upbound.io/v1beta1"

    kind: "ScheduledAction" = "ScheduledAction"

    metadata?: v1.ObjectMeta

    spec: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpec

    status?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatus


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpec:
    r"""
    ScheduledActionSpec defines the desired state of ScheduledAction

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProvider

    initProvider?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecProviderConfigRef

    publishConnectionDetailsTo?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecWriteConnectionSecretToRef


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProvider:
    r"""
    appautoscaling aws upbound io v1beta1 scheduled action spec for provider

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of timezone.
    name : str, default is Undefined, optional
        Name of the scheduled action.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceId : str, default is Undefined, optional
        Identifier of the resource associated with the scheduled action. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    resourceIdRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDRef, default is Undefined, optional
        resource Id ref
    resourceIdSelector : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDSelector, default is Undefined, optional
        resource Id selector
    scalableDimension : str, default is Undefined, optional
        Scalable dimension. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference Example: ecs:service:DesiredCount
    scalableDimensionRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionRef, default is Undefined, optional
        scalable dimension ref
    scalableDimensionSelector : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionSelector, default is Undefined, optional
        scalable dimension selector
    scalableTargetAction : [AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableTargetActionItems0], default is Undefined, optional
        New minimum and maximum capacity. You can set both values or just one. See below
    schedule : str, default is Undefined, optional
        Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in timezone. Documentation can be found in the Timezone parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        Namespace of the AWS service. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference Example: ecs
    serviceNamespaceRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceRef, default is Undefined, optional
        service namespace ref
    serviceNamespaceSelector : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceSelector, default is Undefined, optional
        service namespace selector
    startTime : str, default is Undefined, optional
        Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of timezone.
    timezone : str, default is Undefined, optional
        Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for start_time and end_time. Valid values are the canonical names of the IANA time zones supported by Joda-Time, such as Etc/GMT+9 or Pacific/Tahiti. Default is UTC.
    """


    endTime?: str

    name?: str

    region: str

    resourceId?: str

    resourceIdRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDRef

    resourceIdSelector?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDSelector

    scalableDimension?: str

    scalableDimensionRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionRef

    scalableDimensionSelector?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionSelector

    scalableTargetAction?: [AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableTargetActionItems0]

    schedule?: str

    serviceNamespace?: str

    serviceNamespaceRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceRef

    serviceNamespaceSelector?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceSelector

    startTime?: str

    timezone?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDRef:
    r"""
    Reference to a Target in appautoscaling to populate resourceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDSelector:
    r"""
    Selector for a Target in appautoscaling to populate resourceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderResourceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionRef:
    r"""
    Reference to a Target in appautoscaling to populate scalableDimension.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionSelector:
    r"""
    Selector for a Target in appautoscaling to populate scalableDimension.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableDimensionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderScalableTargetActionItems0:
    r"""
    appautoscaling aws upbound io v1beta1 scheduled action spec for provider scalable target action items0

    Attributes
    ----------
    maxCapacity : str, default is Undefined, optional
        Maximum capacity. At least one of max_capacity or min_capacity must be set.
    minCapacity : str, default is Undefined, optional
        Minimum capacity. At least one of min_capacity or max_capacity must be set.
    """


    maxCapacity?: str

    minCapacity?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceRef:
    r"""
    Reference to a Target in appautoscaling to populate serviceNamespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceSelector:
    r"""
    Selector for a Target in appautoscaling to populate serviceNamespace.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecForProviderServiceNamespaceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of timezone.
    name : str, default is Undefined, optional
        Name of the scheduled action.
    resourceId : str, default is Undefined, optional
        Identifier of the resource associated with the scheduled action. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    resourceIdRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDRef, default is Undefined, optional
        resource Id ref
    resourceIdSelector : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDSelector, default is Undefined, optional
        resource Id selector
    scalableDimension : str, default is Undefined, optional
        Scalable dimension. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference Example: ecs:service:DesiredCount
    scalableDimensionRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionRef, default is Undefined, optional
        scalable dimension ref
    scalableDimensionSelector : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionSelector, default is Undefined, optional
        scalable dimension selector
    scalableTargetAction : [AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableTargetActionItems0], default is Undefined, optional
        New minimum and maximum capacity. You can set both values or just one. See below
    schedule : str, default is Undefined, optional
        Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in timezone. Documentation can be found in the Timezone parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        Namespace of the AWS service. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference Example: ecs
    serviceNamespaceRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceRef, default is Undefined, optional
        service namespace ref
    serviceNamespaceSelector : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceSelector, default is Undefined, optional
        service namespace selector
    startTime : str, default is Undefined, optional
        Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of timezone.
    timezone : str, default is Undefined, optional
        Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for start_time and end_time. Valid values are the canonical names of the IANA time zones supported by Joda-Time, such as Etc/GMT+9 or Pacific/Tahiti. Default is UTC.
    """


    endTime?: str

    name?: str

    resourceId?: str

    resourceIdRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDRef

    resourceIdSelector?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDSelector

    scalableDimension?: str

    scalableDimensionRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionRef

    scalableDimensionSelector?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionSelector

    scalableTargetAction?: [AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableTargetActionItems0]

    schedule?: str

    serviceNamespace?: str

    serviceNamespaceRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceRef

    serviceNamespaceSelector?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceSelector

    startTime?: str

    timezone?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDRef:
    r"""
    Reference to a Target in appautoscaling to populate resourceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDSelector:
    r"""
    Selector for a Target in appautoscaling to populate resourceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderResourceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionRef:
    r"""
    Reference to a Target in appautoscaling to populate scalableDimension.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionSelector:
    r"""
    Selector for a Target in appautoscaling to populate scalableDimension.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableDimensionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderScalableTargetActionItems0:
    r"""
    appautoscaling aws upbound io v1beta1 scheduled action spec init provider scalable target action items0

    Attributes
    ----------
    maxCapacity : str, default is Undefined, optional
        Maximum capacity. At least one of max_capacity or min_capacity must be set.
    minCapacity : str, default is Undefined, optional
        Minimum capacity. At least one of min_capacity or max_capacity must be set.
    """


    maxCapacity?: str

    minCapacity?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceRef:
    r"""
    Reference to a Target in appautoscaling to populate serviceNamespace.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceSelector:
    r"""
    Selector for a Target in appautoscaling to populate serviceNamespace.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecInitProviderServiceNamespaceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecProviderConfigRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToConfigRef

    metadata?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToMetadata

    name: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToConfigRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatus:
    r"""
    ScheduledActionStatus defines the observed state of ScheduledAction.

    Attributes
    ----------
    atProvider : AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusAtProvider

    conditions?: [AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusConditionsItems0]

    observedGeneration?: int


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusAtProvider:
    r"""
    appautoscaling aws upbound io v1beta1 scheduled action status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the scheduled action.
    endTime : str, default is Undefined, optional
        Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of timezone.
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        Name of the scheduled action.
    resourceId : str, default is Undefined, optional
        Identifier of the resource associated with the scheduled action. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    scalableDimension : str, default is Undefined, optional
        Scalable dimension. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference Example: ecs:service:DesiredCount
    scalableTargetAction : [AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusAtProviderScalableTargetActionItems0], default is Undefined, optional
        New minimum and maximum capacity. You can set both values or just one. See below
    schedule : str, default is Undefined, optional
        Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in timezone. Documentation can be found in the Timezone parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        Namespace of the AWS service. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference Example: ecs
    startTime : str, default is Undefined, optional
        Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of timezone.
    timezone : str, default is Undefined, optional
        Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for start_time and end_time. Valid values are the canonical names of the IANA time zones supported by Joda-Time, such as Etc/GMT+9 or Pacific/Tahiti. Default is UTC.
    """


    arn?: str

    endTime?: str

    id?: str

    name?: str

    resourceId?: str

    scalableDimension?: str

    scalableTargetAction?: [AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusAtProviderScalableTargetActionItems0]

    schedule?: str

    serviceNamespace?: str

    startTime?: str

    timezone?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusAtProviderScalableTargetActionItems0:
    r"""
    appautoscaling aws upbound io v1beta1 scheduled action status at provider scalable target action items0

    Attributes
    ----------
    maxCapacity : str, default is Undefined, optional
        Maximum capacity. At least one of max_capacity or min_capacity must be set.
    minCapacity : str, default is Undefined, optional
        Minimum capacity. At least one of min_capacity or max_capacity must be set.
    """


    maxCapacity?: str

    minCapacity?: str


schema AppautoscalingAwsUpboundIoV1beta1ScheduledActionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


