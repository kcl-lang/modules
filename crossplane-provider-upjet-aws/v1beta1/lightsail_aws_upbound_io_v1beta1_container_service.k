"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ContainerService:
    r"""
    ContainerService is the Schema for the ContainerServices API. Provides a resource to manage Lightsail container service

    Attributes
    ----------
    apiVersion : str, default is "lightsail.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ContainerService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : LightsailAwsUpboundIoV1beta1ContainerServiceSpec, default is Undefined, required
        spec
    status : LightsailAwsUpboundIoV1beta1ContainerServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "lightsail.aws.upbound.io/v1beta1" = "lightsail.aws.upbound.io/v1beta1"

    kind: "ContainerService" = "ContainerService"

    metadata?: v1.ObjectMeta

    spec: LightsailAwsUpboundIoV1beta1ContainerServiceSpec

    status?: LightsailAwsUpboundIoV1beta1ContainerServiceStatus


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpec:
    r"""
    ContainerServiceSpec defines the desired state of ContainerService

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProvider, default is Undefined, required
        for provider
    initProvider : LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : LightsailAwsUpboundIoV1beta1ContainerServiceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : LightsailAwsUpboundIoV1beta1ContainerServiceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProvider

    initProvider?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecProviderConfigRef

    publishConnectionDetailsTo?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecWriteConnectionSecretToRef


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProvider:
    r"""
    lightsail aws upbound io v1beta1 container service spec for provider

    Attributes
    ----------
    isDisabled : bool, default is Undefined, optional
        A Boolean value indicating whether the container service is disabled. Defaults to false.
    power : str, default is Undefined, optional
        The power specification for the container service. The power specifies the amount of memory,
        the number of vCPUs, and the monthly price of each node of the container service.
        Possible values: nano, micro, small, medium, large, xlarge.
    privateRegistryAccess : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPrivateRegistryAccessItems0], default is Undefined, optional
        An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See Private Registry Access below for more details.
    publicDomainNames : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPublicDomainNamesItems0], default is Undefined, optional
        The public domain names to use with the container service, such as example.com
        and www.example.com. You can specify up to four public domain names for a container service. The domain names that you
        specify are used when you create a deployment with a container configured as the public endpoint of your container
        service. If you don't specify public domain names, then you can use the default domain of the container service.
        Defined below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    scale : float, default is Undefined, optional
        The scale specification for the container service. The scale specifies the allocated compute
        nodes of the container service.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    isDisabled?: bool

    power?: str

    privateRegistryAccess?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPrivateRegistryAccessItems0]

    publicDomainNames?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPublicDomainNamesItems0]

    region: str

    scale?: float

    tags?: {str:str}


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPrivateRegistryAccessItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec for provider private registry access items0

    Attributes
    ----------
    ecrImagePullerRole : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0], default is Undefined, optional
        Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
    """


    ecrImagePullerRole?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0]


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec for provider private registry access items0 ecr image puller role items0

    Attributes
    ----------
    isActive : bool, default is Undefined, optional
        A Boolean value that indicates whether to activate the role. The default is false.
    """


    isActive?: bool


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPublicDomainNamesItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec for provider public domain names items0

    Attributes
    ----------
    certificate : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPublicDomainNamesItems0CertificateItems0], default is Undefined, optional
        certificate
    """


    certificate?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPublicDomainNamesItems0CertificateItems0]


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecForProviderPublicDomainNamesItems0CertificateItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec for provider public domain names items0 certificate items0

    Attributes
    ----------
    certificateName : str, default is Undefined, optional
        The name for the container service. Names must be of length 1 to 63, and be
        unique within each AWS Region in your Lightsail account.
    domainNames : [str], default is Undefined, optional
        domain names
    """


    certificateName?: str

    domainNames?: [str]


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    isDisabled : bool, default is Undefined, optional
        A Boolean value indicating whether the container service is disabled. Defaults to false.
    power : str, default is Undefined, optional
        The power specification for the container service. The power specifies the amount of memory,
        the number of vCPUs, and the monthly price of each node of the container service.
        Possible values: nano, micro, small, medium, large, xlarge.
    privateRegistryAccess : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPrivateRegistryAccessItems0], default is Undefined, optional
        An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See Private Registry Access below for more details.
    publicDomainNames : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPublicDomainNamesItems0], default is Undefined, optional
        The public domain names to use with the container service, such as example.com
        and www.example.com. You can specify up to four public domain names for a container service. The domain names that you
        specify are used when you create a deployment with a container configured as the public endpoint of your container
        service. If you don't specify public domain names, then you can use the default domain of the container service.
        Defined below.
    scale : float, default is Undefined, optional
        The scale specification for the container service. The scale specifies the allocated compute
        nodes of the container service.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    isDisabled?: bool

    power?: str

    privateRegistryAccess?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPrivateRegistryAccessItems0]

    publicDomainNames?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPublicDomainNamesItems0]

    scale?: float

    tags?: {str:str}


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPrivateRegistryAccessItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec init provider private registry access items0

    Attributes
    ----------
    ecrImagePullerRole : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0], default is Undefined, optional
        Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
    """


    ecrImagePullerRole?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0]


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec init provider private registry access items0 ecr image puller role items0

    Attributes
    ----------
    isActive : bool, default is Undefined, optional
        A Boolean value that indicates whether to activate the role. The default is false.
    """


    isActive?: bool


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPublicDomainNamesItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec init provider public domain names items0

    Attributes
    ----------
    certificate : [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPublicDomainNamesItems0CertificateItems0], default is Undefined, optional
        certificate
    """


    certificate?: [LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPublicDomainNamesItems0CertificateItems0]


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecInitProviderPublicDomainNamesItems0CertificateItems0:
    r"""
    lightsail aws upbound io v1beta1 container service spec init provider public domain names items0 certificate items0

    Attributes
    ----------
    certificateName : str, default is Undefined, optional
        The name for the container service. Names must be of length 1 to 63, and be
        unique within each AWS Region in your Lightsail account.
    domainNames : [str], default is Undefined, optional
        domain names
    """


    certificateName?: str

    domainNames?: [str]


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LightsailAwsUpboundIoV1beta1ContainerServiceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecProviderConfigRefPolicy


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToConfigRef

    metadata?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToMetadata

    name: str


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToConfigRefPolicy


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema LightsailAwsUpboundIoV1beta1ContainerServiceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatus:
    r"""
    ContainerServiceStatus defines the observed state of ContainerService.

    Attributes
    ----------
    atProvider : LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [LightsailAwsUpboundIoV1beta1ContainerServiceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProvider

    conditions?: [LightsailAwsUpboundIoV1beta1ContainerServiceStatusConditionsItems0]

    observedGeneration?: int


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProvider:
    r"""
    lightsail aws upbound io v1beta1 container service status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the container service.
    availabilityZone : str, default is Undefined, optional
        The Availability Zone. Follows the format us-east-2a (case-sensitive).
    createdAt : str, default is Undefined, optional
        created at
    id : str, default is Undefined, optional
        Same as name.
    isDisabled : bool, default is Undefined, optional
        A Boolean value indicating whether the container service is disabled. Defaults to false.
    power : str, default is Undefined, optional
        The power specification for the container service. The power specifies the amount of memory,
        the number of vCPUs, and the monthly price of each node of the container service.
        Possible values: nano, micro, small, medium, large, xlarge.
    powerId : str, default is Undefined, optional
        The ID of the power of the container service.
    principalArn : str, default is Undefined, optional
        The principal ARN of the container service. The principal ARN can be used to create a trust
        relationship between your standard AWS account and your Lightsail container service. This allows you to give your
        service permission to access resources in your standard AWS account.
    privateDomainName : str, default is Undefined, optional
        The private domain name of the container service. The private domain name is accessible only
        by other resources within the default virtual private cloud (VPC) of your Lightsail account.
    privateRegistryAccess : [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPrivateRegistryAccessItems0], default is Undefined, optional
        An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See Private Registry Access below for more details.
    publicDomainNames : [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPublicDomainNamesItems0], default is Undefined, optional
        The public domain names to use with the container service, such as example.com
        and www.example.com. You can specify up to four public domain names for a container service. The domain names that you
        specify are used when you create a deployment with a container configured as the public endpoint of your container
        service. If you don't specify public domain names, then you can use the default domain of the container service.
        Defined below.
    resourceType : str, default is Undefined, optional
        The Lightsail resource type of the container service (i.e., ContainerService).
    scale : float, default is Undefined, optional
        The scale specification for the container service. The scale specifies the allocated compute
        nodes of the container service.
    state : str, default is Undefined, optional
        The current state of the container service.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider
        default_tags configuration block.
    url : str, default is Undefined, optional
        The publicly accessible URL of the container service. If no public endpoint is specified in the
        currentDeployment, this URL returns a 404 response.
    """


    arn?: str

    availabilityZone?: str

    createdAt?: str

    id?: str

    isDisabled?: bool

    power?: str

    powerId?: str

    principalArn?: str

    privateDomainName?: str

    privateRegistryAccess?: [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPrivateRegistryAccessItems0]

    publicDomainNames?: [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPublicDomainNamesItems0]

    resourceType?: str

    scale?: float

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    url?: str


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPrivateRegistryAccessItems0:
    r"""
    lightsail aws upbound io v1beta1 container service status at provider private registry access items0

    Attributes
    ----------
    ecrImagePullerRole : [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0], default is Undefined, optional
        Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
    """


    ecrImagePullerRole?: [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0]


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPrivateRegistryAccessItems0EcrImagePullerRoleItems0:
    r"""
    lightsail aws upbound io v1beta1 container service status at provider private registry access items0 ecr image puller role items0

    Attributes
    ----------
    isActive : bool, default is Undefined, optional
        A Boolean value that indicates whether to activate the role. The default is false.
    principalArn : str, default is Undefined, optional
        The principal ARN of the container service. The principal ARN can be used to create a trust
        relationship between your standard AWS account and your Lightsail container service. This allows you to give your
        service permission to access resources in your standard AWS account.
    """


    isActive?: bool

    principalArn?: str


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPublicDomainNamesItems0:
    r"""
    lightsail aws upbound io v1beta1 container service status at provider public domain names items0

    Attributes
    ----------
    certificate : [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPublicDomainNamesItems0CertificateItems0], default is Undefined, optional
        certificate
    """


    certificate?: [LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPublicDomainNamesItems0CertificateItems0]


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatusAtProviderPublicDomainNamesItems0CertificateItems0:
    r"""
    lightsail aws upbound io v1beta1 container service status at provider public domain names items0 certificate items0

    Attributes
    ----------
    certificateName : str, default is Undefined, optional
        The name for the container service. Names must be of length 1 to 63, and be
        unique within each AWS Region in your Lightsail account.
    domainNames : [str], default is Undefined, optional
        domain names
    """


    certificateName?: str

    domainNames?: [str]


schema LightsailAwsUpboundIoV1beta1ContainerServiceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


