"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API.

    Attributes
    ----------
    apiVersion : str, default is "kafka.aws.upbound.io/v1beta3", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaAwsUpboundIoV1beta3ClusterSpec, default is Undefined, required
        spec
    status : KafkaAwsUpboundIoV1beta3ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafka.aws.upbound.io/v1beta3" = "kafka.aws.upbound.io/v1beta3"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: KafkaAwsUpboundIoV1beta3ClusterSpec

    status?: KafkaAwsUpboundIoV1beta3ClusterStatus


schema KafkaAwsUpboundIoV1beta3ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KafkaAwsUpboundIoV1beta3ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : KafkaAwsUpboundIoV1beta3ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KafkaAwsUpboundIoV1beta3ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KafkaAwsUpboundIoV1beta3ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KafkaAwsUpboundIoV1beta3ClusterSpecForProvider

    initProvider?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KafkaAwsUpboundIoV1beta3ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KafkaAwsUpboundIoV1beta3ClusterSpecWriteConnectionSecretToRef


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProvider:
    r"""
    kafka aws upbound io v1beta3 cluster spec for provider

    Attributes
    ----------
    brokerNodeGroupInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfo, default is Undefined, optional
        broker node group info
    clientAuthentication : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthentication, default is Undefined, optional
        client authentication
    clusterName : str, default is Undefined, optional
        Name of the MSK cluster.
    configurationInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfo, default is Undefined, optional
        configuration info
    encryptionInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfo, default is Undefined, optional
        encryption info
    enhancedMonitoring : str, default is Undefined, optional
        Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch
    kafkaVersion : str, default is Undefined, optional
        Specify the desired Kafka software version.
    loggingInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfo, default is Undefined, optional
        logging info
    numberOfBrokerNodes : float, default is Undefined, optional
        The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.
    openMonitoring : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoring, default is Undefined, optional
        open monitoring
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    storageMode : str, default is Undefined, optional
        Controls storage mode for supported storage tiers. Valid values are: LOCAL or TIERED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    brokerNodeGroupInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfo

    clientAuthentication?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthentication

    clusterName?: str

    configurationInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfo

    encryptionInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfo

    enhancedMonitoring?: str

    kafkaVersion?: str

    loggingInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfo

    numberOfBrokerNodes?: float

    openMonitoring?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoring

    region: str

    storageMode?: str

    tags?: {str:str}


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfo:
    r"""
    Configuration block for the broker nodes of the Kafka cluster.

    Attributes
    ----------
    azDistribution : str, default is Undefined, optional
        The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.
    clientSubnets : [str], default is Undefined, optional
        A list of subnets to connect to in client VPC (documentation).
    clientSubnetsRefs : [KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate clientSubnets.
    clientSubnetsSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsSelector, default is Undefined, optional
        client subnets selector
    connectivityInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfo, default is Undefined, optional
        connectivity info
    instanceType : str, default is Undefined, optional
        Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)
    securityGroups : [str], default is Undefined, optional
        A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    securityGroupsRefs : [KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupsSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsSelector, default is Undefined, optional
        security groups selector
    storageInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfo, default is Undefined, optional
        storage info
    """


    azDistribution?: str

    clientSubnets?: [str]

    clientSubnetsRefs?: [KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsRefsItems0]

    clientSubnetsSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsSelector

    connectivityInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfo

    instanceType?: str

    securityGroups?: [str]

    securityGroupsRefs?: [KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0]

    securityGroupsSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsSelector

    storageInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfo


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate clientSubnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoClientSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfo:
    r"""
    Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).

    Attributes
    ----------
    publicAccess : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess, default is Undefined, optional
        public access
    vpcConnectivity : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity, default is Undefined, optional
        vpc connectivity
    """


    publicAccess?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess

    vpcConnectivity?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess:
    r"""
    Access control settings for brokers. See below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Public access type. Valid values: DISABLED, SERVICE_PROVIDED_EIPS.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity:
    r"""
    VPC connectivity access control for brokers. See below.

    Attributes
    ----------
    clientAuthentication : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication, default is Undefined, optional
        client authentication
    """


    clientAuthentication?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication:
    r"""
    Configuration block for specifying a client authentication. See below.

    Attributes
    ----------
    sasl : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl, default is Undefined, optional
        sasl
    tls : bool, default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    """


    sasl?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl

    tls?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl:
    r"""
    SASL authentication type details for VPC connectivity. See below.

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfo:
    r"""
    A block that contains information about storage volumes attached to MSK broker nodes. See below.

    Attributes
    ----------
    ebsStorageInfo : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo, default is Undefined, optional
        ebs storage info
    """


    ebsStorageInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo:
    r"""
    A block that contains EBS volume information. See below.

    Attributes
    ----------
    provisionedThroughput : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput, default is Undefined, optional
        provisioned throughput
    volumeSize : float, default is Undefined, optional
        The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.
    """


    provisionedThroughput?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput

    volumeSize?: float


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput:
    r"""
    A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    volumeThroughput : float, default is Undefined, optional
        Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks
    """


    enabled?: bool

    volumeThroughput?: float


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthentication:
    r"""
    Configuration block for specifying a client authentication. See below.

    Attributes
    ----------
    sasl : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthenticationSasl, default is Undefined, optional
        sasl
    tls : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthenticationTLS, default is Undefined, optional
        tls
    unauthenticated : bool, default is Undefined, optional
        Enables unauthenticated access.
    """


    sasl?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthenticationSasl

    tls?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthenticationTLS

    unauthenticated?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthenticationSasl:
    r"""
    SASL authentication type details for VPC connectivity. See below.

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderClientAuthenticationTLS:
    r"""
    Enables TLS authentication for VPC connectivity.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """


    certificateAuthorityArns?: [str]


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfo:
    r"""
    Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    arnRef : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        Revision of the MSK Configuration to use in the cluster.
    """


    arn?: str

    arnRef?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnRef

    arnSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnSelector

    revision?: float


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnRef:
    r"""
    Reference to a Configuration in kafka to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnSelector:
    r"""
    Selector for a Configuration in kafka to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderConfigurationInfoArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfo:
    r"""
    Configuration block for specifying encryption. See below.

    Attributes
    ----------
    encryptionAtRestKmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used for encryption at rest of the broker data volumes.
    encryptionAtRestKmsKeyArnRef : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnRef, default is Undefined, optional
        encryption at rest kms key arn ref
    encryptionAtRestKmsKeyArnSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelector, default is Undefined, optional
        encryption at rest kms key arn selector
    encryptionInTransit : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionInTransit, default is Undefined, optional
        encryption in transit
    """


    encryptionAtRestKmsKeyArn?: str

    encryptionAtRestKmsKeyArnRef?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnRef

    encryptionAtRestKmsKeyArnSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelector

    encryptionInTransit?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionInTransit


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderEncryptionInfoEncryptionInTransit:
    r"""
    Configuration block to specify encryption in transit. See below.

    Attributes
    ----------
    clientBroker : str, default is Undefined, optional
        Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.
    inCluster : bool, default is Undefined, optional
        Whether data communication among broker nodes is encrypted. Default value: true.
    """


    clientBroker?: str

    inCluster?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfo:
    r"""
    Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.

    Attributes
    ----------
    brokerLogs : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogs, default is Undefined, optional
        broker logs
    """


    brokerLogs?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogs


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogs:
    r"""
    Configuration block for Broker Logs settings for logging info. See below.

    Attributes
    ----------
    cloudwatchLogs : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogs, default is Undefined, optional
        cloudwatch logs
    firehose : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehose, default is Undefined, optional
        firehose
    s3 : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3, default is Undefined, optional
        s3
    """


    cloudwatchLogs?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogs

    firehose?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehose

    s3?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogs:
    r"""
    kafka aws upbound io v1beta3 cluster spec for provider logging info broker logs cloudwatch logs

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    logGroup : str, default is Undefined, optional
        Name of the Cloudwatch Log Group to deliver logs to.
    logGroupRef : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRef, default is Undefined, optional
        log group ref
    logGroupSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelector, default is Undefined, optional
        log group selector
    """


    enabled?: bool

    logGroup?: str

    logGroupRef?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRef

    logGroupSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelector


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehose:
    r"""
    kafka aws upbound io v1beta3 cluster spec for provider logging info broker logs firehose

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    deliveryStreamRef : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRef, default is Undefined, optional
        delivery stream ref
    deliveryStreamSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelector, default is Undefined, optional
        delivery stream selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    """


    deliveryStream?: str

    deliveryStreamRef?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRef

    deliveryStreamSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelector

    enabled?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRef:
    r"""
    Reference to a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3:
    r"""
    kafka aws upbound io v1beta3 cluster spec for provider logging info broker logs s3

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket to deliver logs to.
    bucketRef : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketSelector, default is Undefined, optional
        bucket selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    prefix : str, default is Undefined, optional
        Prefix to append to the folder name.
    """


    bucket?: str

    bucketRef?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketRef

    bucketSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketSelector

    enabled?: bool

    prefix?: str


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderLoggingInfoBrokerLogsS3BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoring:
    r"""
    Configuration block for JMX and Node monitoring for the MSK cluster. See below.

    Attributes
    ----------
    prometheus : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheus, default is Undefined, optional
        prometheus
    """


    prometheus?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheus


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheus:
    r"""
    Configuration block for Prometheus settings for open monitoring. See below.

    Attributes
    ----------
    jmxExporter : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheusJmxExporter, default is Undefined, optional
        jmx exporter
    nodeExporter : KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheusNodeExporter, default is Undefined, optional
        node exporter
    """


    jmxExporter?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheusJmxExporter

    nodeExporter?: KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheusNodeExporter


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheusJmxExporter:
    r"""
    Configuration block for JMX Exporter. See below.

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecForProviderOpenMonitoringPrometheusNodeExporter:
    r"""
    Configuration block for Node Exporter. See below.

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    brokerNodeGroupInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfo, default is Undefined, optional
        broker node group info
    clientAuthentication : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthentication, default is Undefined, optional
        client authentication
    clusterName : str, default is Undefined, optional
        Name of the MSK cluster.
    configurationInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfo, default is Undefined, optional
        configuration info
    encryptionInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfo, default is Undefined, optional
        encryption info
    enhancedMonitoring : str, default is Undefined, optional
        Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch
    kafkaVersion : str, default is Undefined, optional
        Specify the desired Kafka software version.
    loggingInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfo, default is Undefined, optional
        logging info
    numberOfBrokerNodes : float, default is Undefined, optional
        The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.
    openMonitoring : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoring, default is Undefined, optional
        open monitoring
    storageMode : str, default is Undefined, optional
        Controls storage mode for supported storage tiers. Valid values are: LOCAL or TIERED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    brokerNodeGroupInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfo

    clientAuthentication?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthentication

    clusterName?: str

    configurationInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfo

    encryptionInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfo

    enhancedMonitoring?: str

    kafkaVersion?: str

    loggingInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfo

    numberOfBrokerNodes?: float

    openMonitoring?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoring

    storageMode?: str

    tags?: {str:str}


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfo:
    r"""
    Configuration block for the broker nodes of the Kafka cluster.

    Attributes
    ----------
    azDistribution : str, default is Undefined, optional
        The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.
    clientSubnets : [str], default is Undefined, optional
        A list of subnets to connect to in client VPC (documentation).
    clientSubnetsRefs : [KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate clientSubnets.
    clientSubnetsSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsSelector, default is Undefined, optional
        client subnets selector
    connectivityInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfo, default is Undefined, optional
        connectivity info
    instanceType : str, default is Undefined, optional
        Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)
    securityGroups : [str], default is Undefined, optional
        A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    securityGroupsRefs : [KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupsSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsSelector, default is Undefined, optional
        security groups selector
    storageInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfo, default is Undefined, optional
        storage info
    """


    azDistribution?: str

    clientSubnets?: [str]

    clientSubnetsRefs?: [KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsRefsItems0]

    clientSubnetsSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsSelector

    connectivityInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfo

    instanceType?: str

    securityGroups?: [str]

    securityGroupsRefs?: [KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0]

    securityGroupsSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsSelector

    storageInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfo


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate clientSubnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoClientSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfo:
    r"""
    Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).

    Attributes
    ----------
    publicAccess : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess, default is Undefined, optional
        public access
    vpcConnectivity : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity, default is Undefined, optional
        vpc connectivity
    """


    publicAccess?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess

    vpcConnectivity?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess:
    r"""
    Access control settings for brokers. See below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Public access type. Valid values: DISABLED, SERVICE_PROVIDED_EIPS.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity:
    r"""
    VPC connectivity access control for brokers. See below.

    Attributes
    ----------
    clientAuthentication : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication, default is Undefined, optional
        client authentication
    """


    clientAuthentication?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication:
    r"""
    Configuration block for specifying a client authentication. See below.

    Attributes
    ----------
    sasl : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl, default is Undefined, optional
        sasl
    tls : bool, default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    """


    sasl?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl

    tls?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl:
    r"""
    SASL authentication type details for VPC connectivity. See below.

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfo:
    r"""
    A block that contains information about storage volumes attached to MSK broker nodes. See below.

    Attributes
    ----------
    ebsStorageInfo : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo, default is Undefined, optional
        ebs storage info
    """


    ebsStorageInfo?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo:
    r"""
    A block that contains EBS volume information. See below.

    Attributes
    ----------
    provisionedThroughput : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput, default is Undefined, optional
        provisioned throughput
    volumeSize : float, default is Undefined, optional
        The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.
    """


    provisionedThroughput?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput

    volumeSize?: float


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput:
    r"""
    A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    volumeThroughput : float, default is Undefined, optional
        Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks
    """


    enabled?: bool

    volumeThroughput?: float


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthentication:
    r"""
    Configuration block for specifying a client authentication. See below.

    Attributes
    ----------
    sasl : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthenticationSasl, default is Undefined, optional
        sasl
    tls : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthenticationTLS, default is Undefined, optional
        tls
    unauthenticated : bool, default is Undefined, optional
        Enables unauthenticated access.
    """


    sasl?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthenticationSasl

    tls?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthenticationTLS

    unauthenticated?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthenticationSasl:
    r"""
    SASL authentication type details for VPC connectivity. See below.

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderClientAuthenticationTLS:
    r"""
    Enables TLS authentication for VPC connectivity.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """


    certificateAuthorityArns?: [str]


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfo:
    r"""
    Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    arnRef : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        Revision of the MSK Configuration to use in the cluster.
    """


    arn?: str

    arnRef?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnRef

    arnSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnSelector

    revision?: float


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnRef:
    r"""
    Reference to a Configuration in kafka to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnSelector:
    r"""
    Selector for a Configuration in kafka to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderConfigurationInfoArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfo:
    r"""
    Configuration block for specifying encryption. See below.

    Attributes
    ----------
    encryptionAtRestKmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used for encryption at rest of the broker data volumes.
    encryptionAtRestKmsKeyArnRef : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnRef, default is Undefined, optional
        encryption at rest kms key arn ref
    encryptionAtRestKmsKeyArnSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelector, default is Undefined, optional
        encryption at rest kms key arn selector
    encryptionInTransit : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionInTransit, default is Undefined, optional
        encryption in transit
    """


    encryptionAtRestKmsKeyArn?: str

    encryptionAtRestKmsKeyArnRef?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnRef

    encryptionAtRestKmsKeyArnSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelector

    encryptionInTransit?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionInTransit


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionAtRestKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderEncryptionInfoEncryptionInTransit:
    r"""
    Configuration block to specify encryption in transit. See below.

    Attributes
    ----------
    clientBroker : str, default is Undefined, optional
        Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.
    inCluster : bool, default is Undefined, optional
        Whether data communication among broker nodes is encrypted. Default value: true.
    """


    clientBroker?: str

    inCluster?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfo:
    r"""
    Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.

    Attributes
    ----------
    brokerLogs : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogs, default is Undefined, optional
        broker logs
    """


    brokerLogs?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogs


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogs:
    r"""
    Configuration block for Broker Logs settings for logging info. See below.

    Attributes
    ----------
    cloudwatchLogs : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogs, default is Undefined, optional
        cloudwatch logs
    firehose : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehose, default is Undefined, optional
        firehose
    s3 : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3, default is Undefined, optional
        s3
    """


    cloudwatchLogs?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogs

    firehose?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehose

    s3?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogs:
    r"""
    kafka aws upbound io v1beta3 cluster spec init provider logging info broker logs cloudwatch logs

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    logGroup : str, default is Undefined, optional
        Name of the Cloudwatch Log Group to deliver logs to.
    logGroupRef : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRef, default is Undefined, optional
        log group ref
    logGroupSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelector, default is Undefined, optional
        log group selector
    """


    enabled?: bool

    logGroup?: str

    logGroupRef?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRef

    logGroupSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelector


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsCloudwatchLogsLogGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehose:
    r"""
    kafka aws upbound io v1beta3 cluster spec init provider logging info broker logs firehose

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    deliveryStreamRef : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRef, default is Undefined, optional
        delivery stream ref
    deliveryStreamSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelector, default is Undefined, optional
        delivery stream selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    """


    deliveryStream?: str

    deliveryStreamRef?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRef

    deliveryStreamSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelector

    enabled?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRef:
    r"""
    Reference to a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsFirehoseDeliveryStreamSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3:
    r"""
    kafka aws upbound io v1beta3 cluster spec init provider logging info broker logs s3

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket to deliver logs to.
    bucketRef : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketSelector, default is Undefined, optional
        bucket selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    prefix : str, default is Undefined, optional
        Prefix to append to the folder name.
    """


    bucket?: str

    bucketRef?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketRef

    bucketSelector?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketSelector

    enabled?: bool

    prefix?: str


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketSelectorPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderLoggingInfoBrokerLogsS3BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoring:
    r"""
    Configuration block for JMX and Node monitoring for the MSK cluster. See below.

    Attributes
    ----------
    prometheus : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheus, default is Undefined, optional
        prometheus
    """


    prometheus?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheus


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheus:
    r"""
    Configuration block for Prometheus settings for open monitoring. See below.

    Attributes
    ----------
    jmxExporter : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheusJmxExporter, default is Undefined, optional
        jmx exporter
    nodeExporter : KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheusNodeExporter, default is Undefined, optional
        node exporter
    """


    jmxExporter?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheusJmxExporter

    nodeExporter?: KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheusNodeExporter


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheusJmxExporter:
    r"""
    Configuration block for JMX Exporter. See below.

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecInitProviderOpenMonitoringPrometheusNodeExporter:
    r"""
    Configuration block for Node Exporter. See below.

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta3ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecProviderConfigRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta3ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KafkaAwsUpboundIoV1beta3ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KafkaAwsUpboundIoV1beta3ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : KafkaAwsUpboundIoV1beta3ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KafkaAwsUpboundIoV1beta3ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProvider

    conditions?: [KafkaAwsUpboundIoV1beta3ClusterStatusConditionsItems0]

    observedGeneration?: int


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProvider:
    r"""
    kafka aws upbound io v1beta3 cluster status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    bootstrapBrokers : str, default is Undefined, optional
        Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster. Contains a value if encryption_info.0.encryption_in_transit.0.client_broker is set to PLAINTEXT or TLS_PLAINTEXT. The resource sorts values alphabetically. AWS may not always return all endpoints so this value is not guaranteed to be stable across applies.
    bootstrapBrokersPublicSaslIam : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.iam is set to true and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersPublicSaslScram : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.scram is set to true and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersPublicTls : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and TLS port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersSaslIam : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.iam is set to true. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersSaslScram : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.scram is set to true. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersTls : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and TLS port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersVpcConnectivitySaslIam : str, default is Undefined, optional
        A string containing one or more DNS names (or IP addresses) and SASL IAM port pairs for VPC connectivity. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersVpcConnectivitySaslScram : str, default is Undefined, optional
        A string containing one or more DNS names (or IP addresses) and SASL SCRAM port pairs for VPC connectivity. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersVpcConnectivityTls : str, default is Undefined, optional
        A string containing one or more DNS names (or IP addresses) and TLS port pairs for VPC connectivity. AWS may not always return all endpoints so the values may not be stable across applies.
    brokerNodeGroupInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfo, default is Undefined, optional
        broker node group info
    clientAuthentication : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthentication, default is Undefined, optional
        client authentication
    clusterName : str, default is Undefined, optional
        Name of the MSK cluster.
    clusterUuid : str, default is Undefined, optional
        UUID of the MSK cluster, for use in IAM policies.
    configurationInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderConfigurationInfo, default is Undefined, optional
        configuration info
    currentVersion : str, default is Undefined, optional
        Current version of the MSK Cluster used for updates, e.g., K13V1IB3VIYZZH
    encryptionInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderEncryptionInfo, default is Undefined, optional
        encryption info
    enhancedMonitoring : str, default is Undefined, optional
        Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch
    id : str, default is Undefined, optional
        id
    kafkaVersion : str, default is Undefined, optional
        Specify the desired Kafka software version.
    loggingInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfo, default is Undefined, optional
        logging info
    numberOfBrokerNodes : float, default is Undefined, optional
        The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.
    openMonitoring : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoring, default is Undefined, optional
        open monitoring
    storageMode : str, default is Undefined, optional
        Controls storage mode for supported storage tiers. Valid values are: LOCAL or TIERED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    zookeeperConnectString : str, default is Undefined, optional
        A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.
    zookeeperConnectStringTls : str, default is Undefined, optional
        A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster via TLS. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.
    """


    arn?: str

    bootstrapBrokers?: str

    bootstrapBrokersPublicSaslIam?: str

    bootstrapBrokersPublicSaslScram?: str

    bootstrapBrokersPublicTls?: str

    bootstrapBrokersSaslIam?: str

    bootstrapBrokersSaslScram?: str

    bootstrapBrokersTls?: str

    bootstrapBrokersVpcConnectivitySaslIam?: str

    bootstrapBrokersVpcConnectivitySaslScram?: str

    bootstrapBrokersVpcConnectivityTls?: str

    brokerNodeGroupInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfo

    clientAuthentication?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthentication

    clusterName?: str

    clusterUuid?: str

    configurationInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderConfigurationInfo

    currentVersion?: str

    encryptionInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderEncryptionInfo

    enhancedMonitoring?: str

    id?: str

    kafkaVersion?: str

    loggingInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfo

    numberOfBrokerNodes?: float

    openMonitoring?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoring

    storageMode?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    zookeeperConnectString?: str

    zookeeperConnectStringTls?: str


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfo:
    r"""
    Configuration block for the broker nodes of the Kafka cluster.

    Attributes
    ----------
    azDistribution : str, default is Undefined, optional
        The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.
    clientSubnets : [str], default is Undefined, optional
        A list of subnets to connect to in client VPC (documentation).
    connectivityInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfo, default is Undefined, optional
        connectivity info
    instanceType : str, default is Undefined, optional
        Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)
    securityGroups : [str], default is Undefined, optional
        A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    storageInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfo, default is Undefined, optional
        storage info
    """


    azDistribution?: str

    clientSubnets?: [str]

    connectivityInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfo

    instanceType?: str

    securityGroups?: [str]

    storageInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfo


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfo:
    r"""
    Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).

    Attributes
    ----------
    publicAccess : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess, default is Undefined, optional
        public access
    vpcConnectivity : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity, default is Undefined, optional
        vpc connectivity
    """


    publicAccess?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess

    vpcConnectivity?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoPublicAccess:
    r"""
    Access control settings for brokers. See below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Public access type. Valid values: DISABLED, SERVICE_PROVIDED_EIPS.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivity:
    r"""
    VPC connectivity access control for brokers. See below.

    Attributes
    ----------
    clientAuthentication : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication, default is Undefined, optional
        client authentication
    """


    clientAuthentication?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication:
    r"""
    Configuration block for specifying a client authentication. See below.

    Attributes
    ----------
    sasl : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl, default is Undefined, optional
        sasl
    tls : bool, default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    """


    sasl?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl

    tls?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl:
    r"""
    SASL authentication type details for VPC connectivity. See below.

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfo:
    r"""
    A block that contains information about storage volumes attached to MSK broker nodes. See below.

    Attributes
    ----------
    ebsStorageInfo : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo, default is Undefined, optional
        ebs storage info
    """


    ebsStorageInfo?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfo:
    r"""
    A block that contains EBS volume information. See below.

    Attributes
    ----------
    provisionedThroughput : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput, default is Undefined, optional
        provisioned throughput
    volumeSize : float, default is Undefined, optional
        The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.
    """


    provisionedThroughput?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput

    volumeSize?: float


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput:
    r"""
    A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    volumeThroughput : float, default is Undefined, optional
        Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks
    """


    enabled?: bool

    volumeThroughput?: float


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthentication:
    r"""
    Configuration block for specifying a client authentication. See below.

    Attributes
    ----------
    sasl : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthenticationSasl, default is Undefined, optional
        sasl
    tls : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthenticationTLS, default is Undefined, optional
        tls
    unauthenticated : bool, default is Undefined, optional
        Enables unauthenticated access.
    """


    sasl?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthenticationSasl

    tls?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthenticationTLS

    unauthenticated?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthenticationSasl:
    r"""
    SASL authentication type details for VPC connectivity. See below.

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderClientAuthenticationTLS:
    r"""
    Enables TLS authentication for VPC connectivity.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """


    certificateAuthorityArns?: [str]


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderConfigurationInfo:
    r"""
    Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    revision : float, default is Undefined, optional
        Revision of the MSK Configuration to use in the cluster.
    """


    arn?: str

    revision?: float


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderEncryptionInfo:
    r"""
    Configuration block for specifying encryption. See below.

    Attributes
    ----------
    encryptionAtRestKmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used for encryption at rest of the broker data volumes.
    encryptionInTransit : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderEncryptionInfoEncryptionInTransit, default is Undefined, optional
        encryption in transit
    """


    encryptionAtRestKmsKeyArn?: str

    encryptionInTransit?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderEncryptionInfoEncryptionInTransit


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderEncryptionInfoEncryptionInTransit:
    r"""
    Configuration block to specify encryption in transit. See below.

    Attributes
    ----------
    clientBroker : str, default is Undefined, optional
        Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.
    inCluster : bool, default is Undefined, optional
        Whether data communication among broker nodes is encrypted. Default value: true.
    """


    clientBroker?: str

    inCluster?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfo:
    r"""
    Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.

    Attributes
    ----------
    brokerLogs : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogs, default is Undefined, optional
        broker logs
    """


    brokerLogs?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogs


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogs:
    r"""
    Configuration block for Broker Logs settings for logging info. See below.

    Attributes
    ----------
    cloudwatchLogs : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsCloudwatchLogs, default is Undefined, optional
        cloudwatch logs
    firehose : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsFirehose, default is Undefined, optional
        firehose
    s3 : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsS3, default is Undefined, optional
        s3
    """


    cloudwatchLogs?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsCloudwatchLogs

    firehose?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsFirehose

    s3?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsS3


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsCloudwatchLogs:
    r"""
    kafka aws upbound io v1beta3 cluster status at provider logging info broker logs cloudwatch logs

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    logGroup : str, default is Undefined, optional
        Name of the Cloudwatch Log Group to deliver logs to.
    """


    enabled?: bool

    logGroup?: str


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsFirehose:
    r"""
    kafka aws upbound io v1beta3 cluster status at provider logging info broker logs firehose

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    """


    deliveryStream?: str

    enabled?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderLoggingInfoBrokerLogsS3:
    r"""
    kafka aws upbound io v1beta3 cluster status at provider logging info broker logs s3

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket to deliver logs to.
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    prefix : str, default is Undefined, optional
        Prefix to append to the folder name.
    """


    bucket?: str

    enabled?: bool

    prefix?: str


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoring:
    r"""
    Configuration block for JMX and Node monitoring for the MSK cluster. See below.

    Attributes
    ----------
    prometheus : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheus, default is Undefined, optional
        prometheus
    """


    prometheus?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheus


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheus:
    r"""
    Configuration block for Prometheus settings for open monitoring. See below.

    Attributes
    ----------
    jmxExporter : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheusJmxExporter, default is Undefined, optional
        jmx exporter
    nodeExporter : KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheusNodeExporter, default is Undefined, optional
        node exporter
    """


    jmxExporter?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheusJmxExporter

    nodeExporter?: KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheusNodeExporter


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheusJmxExporter:
    r"""
    Configuration block for JMX Exporter. See below.

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusAtProviderOpenMonitoringPrometheusNodeExporter:
    r"""
    Configuration block for Node Exporter. See below.

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta3ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


