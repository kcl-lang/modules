"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema StaticWebLayer:
    r"""
    StaticWebLayer is the Schema for the StaticWebLayers API. Provides an OpsWorks static web server layer resource.

    Attributes
    ----------
    apiVersion : str, default is "opsworks.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "StaticWebLayer", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpec, default is Undefined, required
        spec
    status : OpsworksAwsUpboundIoV1beta2StaticWebLayerStatus, default is Undefined, optional
        status
    """


    apiVersion: "opsworks.aws.upbound.io/v1beta2" = "opsworks.aws.upbound.io/v1beta2"

    kind: "StaticWebLayer" = "StaticWebLayer"

    metadata?: v1.ObjectMeta

    spec: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpec

    status?: OpsworksAwsUpboundIoV1beta2StaticWebLayerStatus


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpec:
    r"""
    StaticWebLayerSpec defines the desired state of StaticWebLayer

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProvider

    initProvider?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecProviderConfigRef

    publishConnectionDetailsTo?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecWriteConnectionSecretToRef


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProvider:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider

    Attributes
    ----------
    autoAssignElasticIps : bool, default is Undefined, optional
        Whether to automatically assign an elastic IP address to the layer's instances.
    autoAssignPublicIps : bool, default is Undefined, optional
        For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
    autoHealing : bool, default is Undefined, optional
        Whether to enable auto-healing for the layer.
    cloudwatchConfiguration : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCloudwatchConfiguration, default is Undefined, optional
        cloudwatch configuration
    customConfigureRecipes : [str], default is Undefined, optional
        custom configure recipes
    customDeployRecipes : [str], default is Undefined, optional
        custom deploy recipes
    customInstanceProfileArn : str, default is Undefined, optional
        The ARN of an IAM profile that will be used for the layer's instances.
    customJson : str, default is Undefined, optional
        custom Json
    customSecurityGroupIdRefs : [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate customSecurityGroupIds.
    customSecurityGroupIdSelector : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDSelector, default is Undefined, optional
        custom security group Id selector
    customSecurityGroupIds : [str], default is Undefined, optional
        Ids for a set of security groups to apply to the layer's instances.
    customSetupRecipes : [str], default is Undefined, optional
        custom setup recipes
    customShutdownRecipes : [str], default is Undefined, optional
        custom shutdown recipes
    customUndeployRecipes : [str], default is Undefined, optional
        custom undeploy recipes
    drainElbOnShutdown : bool, default is Undefined, optional
        Whether to enable Elastic Load Balancing connection draining.
    ebsVolume : [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderEbsVolumeItems0], default is Undefined, optional
        ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.
    elasticLoadBalancer : str, default is Undefined, optional
        Name of an Elastic Load Balancer to attach to this layer
    installUpdatesOnBoot : bool, default is Undefined, optional
        Whether to install OS and package updates on each instance when it boots.
    instanceShutdownTimeout : float, default is Undefined, optional
        The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
    loadBasedAutoScaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScaling, default is Undefined, optional
        load based auto scaling
    name : str, default is Undefined, optional
        A human-readable name for the layer.
    stackId : str, default is Undefined, optional
        ID of the stack the layer will belong to.
    stackIdRef : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDRef, default is Undefined, optional
        stack Id ref
    stackIdSelector : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDSelector, default is Undefined, optional
        stack Id selector
    systemPackages : [str], default is Undefined, optional
        Names of a set of system packages to install on the layer's instances.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    useEbsOptimizedInstances : bool, default is Undefined, optional
        Whether to use EBS-optimized instances.
    """


    autoAssignElasticIps?: bool

    autoAssignPublicIps?: bool

    autoHealing?: bool

    cloudwatchConfiguration?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCloudwatchConfiguration

    customConfigureRecipes?: [str]

    customDeployRecipes?: [str]

    customInstanceProfileArn?: str

    customJson?: str

    customSecurityGroupIdRefs?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDRefsItems0]

    customSecurityGroupIdSelector?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDSelector

    customSecurityGroupIds?: [str]

    customSetupRecipes?: [str]

    customShutdownRecipes?: [str]

    customUndeployRecipes?: [str]

    drainElbOnShutdown?: bool

    ebsVolume?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderEbsVolumeItems0]

    elasticLoadBalancer?: str

    installUpdatesOnBoot?: bool

    instanceShutdownTimeout?: float

    loadBasedAutoScaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScaling

    name?: str

    stackId?: str

    stackIdRef?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDRef

    stackIdSelector?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDSelector

    systemPackages?: [str]

    tags?: {str:str}

    useEbsOptimizedInstances?: bool


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCloudwatchConfiguration:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider cloudwatch configuration

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    logStreams : [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCloudwatchConfigurationLogStreamsItems0], default is Undefined, optional
        log streams
    """


    enabled?: bool

    logStreams?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCloudwatchConfigurationLogStreamsItems0]


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCloudwatchConfigurationLogStreamsItems0:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider cloudwatch configuration log streams items0

    Attributes
    ----------
    batchCount : float, default is Undefined, optional
        batch count
    batchSize : float, default is Undefined, optional
        batch size
    bufferDuration : float, default is Undefined, optional
        buffer duration
    datetimeFormat : str, default is Undefined, optional
        datetime format
    encoding : str, default is Undefined, optional
        encoding
    file : str, default is Undefined, optional
        file
    fileFingerprintLines : str, default is Undefined, optional
        file fingerprint lines
    initialPosition : str, default is Undefined, optional
        initial position
    logGroupName : str, default is Undefined, optional
        A human-readable name for the layer.
    multilineStartPattern : str, default is Undefined, optional
        multiline start pattern
    timeZone : str, default is Undefined, optional
        time zone
    """


    batchCount?: float

    batchSize?: float

    bufferDuration?: float

    datetimeFormat?: str

    encoding?: str

    file?: str

    fileFingerprintLines?: str

    initialPosition?: str

    logGroupName?: str

    multilineStartPattern?: str

    timeZone?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDRefsItems0Policy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate customSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderCustomSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderEbsVolumeItems0:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider ebs volume items0

    Attributes
    ----------
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        For PIOPS volumes, the IOPS per disk.
    mountPoint : str, default is Undefined, optional
        The path to mount the EBS volume on the layer's instances.
    numberOfDisks : float, default is Undefined, optional
        The number of disks to use for the EBS volume.
    raidLevel : str, default is Undefined, optional
        The RAID level to use for the volume.
    size : float, default is Undefined, optional
        The size of the volume in gigabytes.
    $type : str, default is Undefined, optional
        The type of volume to create. This may be standard (the default), io1 or gp2.
    """


    encrypted?: bool

    iops?: float

    mountPoint?: str

    numberOfDisks?: float

    raidLevel?: str

    size?: float

    $type?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider load based auto scaling

    Attributes
    ----------
    downscaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScalingDownscaling, default is Undefined, optional
        downscaling
    enable : bool, default is Undefined, optional
        enable
    upscaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScalingUpscaling, default is Undefined, optional
        upscaling
    """


    downscaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScalingDownscaling

    enable?: bool

    upscaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScalingUpscaling


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScalingDownscaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider load based auto scaling downscaling

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        alarms
    cpuThreshold : float, default is Undefined, optional
        cpu threshold
    ignoreMetricsTime : float, default is Undefined, optional
        ignore metrics time
    instanceCount : float, default is Undefined, optional
        instance count
    loadThreshold : float, default is Undefined, optional
        load threshold
    memoryThreshold : float, default is Undefined, optional
        memory threshold
    thresholdsWaitTime : float, default is Undefined, optional
        thresholds wait time
    """


    alarms?: [str]

    cpuThreshold?: float

    ignoreMetricsTime?: float

    instanceCount?: float

    loadThreshold?: float

    memoryThreshold?: float

    thresholdsWaitTime?: float


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderLoadBasedAutoScalingUpscaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec for provider load based auto scaling upscaling

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        alarms
    cpuThreshold : float, default is Undefined, optional
        cpu threshold
    ignoreMetricsTime : float, default is Undefined, optional
        ignore metrics time
    instanceCount : float, default is Undefined, optional
        instance count
    loadThreshold : float, default is Undefined, optional
        load threshold
    memoryThreshold : float, default is Undefined, optional
        memory threshold
    thresholdsWaitTime : float, default is Undefined, optional
        thresholds wait time
    """


    alarms?: [str]

    cpuThreshold?: float

    ignoreMetricsTime?: float

    instanceCount?: float

    loadThreshold?: float

    memoryThreshold?: float

    thresholdsWaitTime?: float


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDRef:
    r"""
    Reference to a Stack in opsworks to populate stackId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDRefPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDSelector:
    r"""
    Selector for a Stack in opsworks to populate stackId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecForProviderStackIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoAssignElasticIps : bool, default is Undefined, optional
        Whether to automatically assign an elastic IP address to the layer's instances.
    autoAssignPublicIps : bool, default is Undefined, optional
        For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
    autoHealing : bool, default is Undefined, optional
        Whether to enable auto-healing for the layer.
    cloudwatchConfiguration : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCloudwatchConfiguration, default is Undefined, optional
        cloudwatch configuration
    customConfigureRecipes : [str], default is Undefined, optional
        custom configure recipes
    customDeployRecipes : [str], default is Undefined, optional
        custom deploy recipes
    customInstanceProfileArn : str, default is Undefined, optional
        The ARN of an IAM profile that will be used for the layer's instances.
    customJson : str, default is Undefined, optional
        custom Json
    customSecurityGroupIdRefs : [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate customSecurityGroupIds.
    customSecurityGroupIdSelector : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDSelector, default is Undefined, optional
        custom security group Id selector
    customSecurityGroupIds : [str], default is Undefined, optional
        Ids for a set of security groups to apply to the layer's instances.
    customSetupRecipes : [str], default is Undefined, optional
        custom setup recipes
    customShutdownRecipes : [str], default is Undefined, optional
        custom shutdown recipes
    customUndeployRecipes : [str], default is Undefined, optional
        custom undeploy recipes
    drainElbOnShutdown : bool, default is Undefined, optional
        Whether to enable Elastic Load Balancing connection draining.
    ebsVolume : [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderEbsVolumeItems0], default is Undefined, optional
        ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.
    elasticLoadBalancer : str, default is Undefined, optional
        Name of an Elastic Load Balancer to attach to this layer
    installUpdatesOnBoot : bool, default is Undefined, optional
        Whether to install OS and package updates on each instance when it boots.
    instanceShutdownTimeout : float, default is Undefined, optional
        The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
    loadBasedAutoScaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScaling, default is Undefined, optional
        load based auto scaling
    name : str, default is Undefined, optional
        A human-readable name for the layer.
    stackId : str, default is Undefined, optional
        ID of the stack the layer will belong to.
    stackIdRef : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDRef, default is Undefined, optional
        stack Id ref
    stackIdSelector : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDSelector, default is Undefined, optional
        stack Id selector
    systemPackages : [str], default is Undefined, optional
        Names of a set of system packages to install on the layer's instances.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    useEbsOptimizedInstances : bool, default is Undefined, optional
        Whether to use EBS-optimized instances.
    """


    autoAssignElasticIps?: bool

    autoAssignPublicIps?: bool

    autoHealing?: bool

    cloudwatchConfiguration?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCloudwatchConfiguration

    customConfigureRecipes?: [str]

    customDeployRecipes?: [str]

    customInstanceProfileArn?: str

    customJson?: str

    customSecurityGroupIdRefs?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDRefsItems0]

    customSecurityGroupIdSelector?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDSelector

    customSecurityGroupIds?: [str]

    customSetupRecipes?: [str]

    customShutdownRecipes?: [str]

    customUndeployRecipes?: [str]

    drainElbOnShutdown?: bool

    ebsVolume?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderEbsVolumeItems0]

    elasticLoadBalancer?: str

    installUpdatesOnBoot?: bool

    instanceShutdownTimeout?: float

    loadBasedAutoScaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScaling

    name?: str

    stackId?: str

    stackIdRef?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDRef

    stackIdSelector?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDSelector

    systemPackages?: [str]

    tags?: {str:str}

    useEbsOptimizedInstances?: bool


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCloudwatchConfiguration:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec init provider cloudwatch configuration

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    logStreams : [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCloudwatchConfigurationLogStreamsItems0], default is Undefined, optional
        log streams
    """


    enabled?: bool

    logStreams?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCloudwatchConfigurationLogStreamsItems0]


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCloudwatchConfigurationLogStreamsItems0:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec init provider cloudwatch configuration log streams items0

    Attributes
    ----------
    batchCount : float, default is Undefined, optional
        batch count
    batchSize : float, default is Undefined, optional
        batch size
    bufferDuration : float, default is Undefined, optional
        buffer duration
    datetimeFormat : str, default is Undefined, optional
        datetime format
    encoding : str, default is Undefined, optional
        encoding
    file : str, default is Undefined, optional
        file
    fileFingerprintLines : str, default is Undefined, optional
        file fingerprint lines
    initialPosition : str, default is Undefined, optional
        initial position
    logGroupName : str, default is Undefined, optional
        A human-readable name for the layer.
    multilineStartPattern : str, default is Undefined, optional
        multiline start pattern
    timeZone : str, default is Undefined, optional
        time zone
    """


    batchCount?: float

    batchSize?: float

    bufferDuration?: float

    datetimeFormat?: str

    encoding?: str

    file?: str

    fileFingerprintLines?: str

    initialPosition?: str

    logGroupName?: str

    multilineStartPattern?: str

    timeZone?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDRefsItems0Policy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate customSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderCustomSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderEbsVolumeItems0:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec init provider ebs volume items0

    Attributes
    ----------
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        For PIOPS volumes, the IOPS per disk.
    mountPoint : str, default is Undefined, optional
        The path to mount the EBS volume on the layer's instances.
    numberOfDisks : float, default is Undefined, optional
        The number of disks to use for the EBS volume.
    raidLevel : str, default is Undefined, optional
        The RAID level to use for the volume.
    size : float, default is Undefined, optional
        The size of the volume in gigabytes.
    $type : str, default is Undefined, optional
        The type of volume to create. This may be standard (the default), io1 or gp2.
    """


    encrypted?: bool

    iops?: float

    mountPoint?: str

    numberOfDisks?: float

    raidLevel?: str

    size?: float

    $type?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec init provider load based auto scaling

    Attributes
    ----------
    downscaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScalingDownscaling, default is Undefined, optional
        downscaling
    enable : bool, default is Undefined, optional
        enable
    upscaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScalingUpscaling, default is Undefined, optional
        upscaling
    """


    downscaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScalingDownscaling

    enable?: bool

    upscaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScalingUpscaling


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScalingDownscaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec init provider load based auto scaling downscaling

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        alarms
    cpuThreshold : float, default is Undefined, optional
        cpu threshold
    ignoreMetricsTime : float, default is Undefined, optional
        ignore metrics time
    instanceCount : float, default is Undefined, optional
        instance count
    loadThreshold : float, default is Undefined, optional
        load threshold
    memoryThreshold : float, default is Undefined, optional
        memory threshold
    thresholdsWaitTime : float, default is Undefined, optional
        thresholds wait time
    """


    alarms?: [str]

    cpuThreshold?: float

    ignoreMetricsTime?: float

    instanceCount?: float

    loadThreshold?: float

    memoryThreshold?: float

    thresholdsWaitTime?: float


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderLoadBasedAutoScalingUpscaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer spec init provider load based auto scaling upscaling

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        alarms
    cpuThreshold : float, default is Undefined, optional
        cpu threshold
    ignoreMetricsTime : float, default is Undefined, optional
        ignore metrics time
    instanceCount : float, default is Undefined, optional
        instance count
    loadThreshold : float, default is Undefined, optional
        load threshold
    memoryThreshold : float, default is Undefined, optional
        memory threshold
    thresholdsWaitTime : float, default is Undefined, optional
        thresholds wait time
    """


    alarms?: [str]

    cpuThreshold?: float

    ignoreMetricsTime?: float

    instanceCount?: float

    loadThreshold?: float

    memoryThreshold?: float

    thresholdsWaitTime?: float


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDRef:
    r"""
    Reference to a Stack in opsworks to populate stackId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDRefPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDSelector:
    r"""
    Selector for a Stack in opsworks to populate stackId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecInitProviderStackIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecProviderConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToConfigRef

    metadata?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToMetadata

    name: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatus:
    r"""
    StaticWebLayerStatus defines the observed state of StaticWebLayer.

    Attributes
    ----------
    atProvider : OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProvider

    conditions?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusConditionsItems0]

    observedGeneration?: int


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProvider:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name(ARN) of the layer.
    autoAssignElasticIps : bool, default is Undefined, optional
        Whether to automatically assign an elastic IP address to the layer's instances.
    autoAssignPublicIps : bool, default is Undefined, optional
        For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer's instances.
    autoHealing : bool, default is Undefined, optional
        Whether to enable auto-healing for the layer.
    cloudwatchConfiguration : OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderCloudwatchConfiguration, default is Undefined, optional
        cloudwatch configuration
    customConfigureRecipes : [str], default is Undefined, optional
        custom configure recipes
    customDeployRecipes : [str], default is Undefined, optional
        custom deploy recipes
    customInstanceProfileArn : str, default is Undefined, optional
        The ARN of an IAM profile that will be used for the layer's instances.
    customJson : str, default is Undefined, optional
        custom Json
    customSecurityGroupIds : [str], default is Undefined, optional
        Ids for a set of security groups to apply to the layer's instances.
    customSetupRecipes : [str], default is Undefined, optional
        custom setup recipes
    customShutdownRecipes : [str], default is Undefined, optional
        custom shutdown recipes
    customUndeployRecipes : [str], default is Undefined, optional
        custom undeploy recipes
    drainElbOnShutdown : bool, default is Undefined, optional
        Whether to enable Elastic Load Balancing connection draining.
    ebsVolume : [OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderEbsVolumeItems0], default is Undefined, optional
        ebs_volume blocks, as described below, will each create an EBS volume and connect it to the layer's instances.
    elasticLoadBalancer : str, default is Undefined, optional
        Name of an Elastic Load Balancer to attach to this layer
    id : str, default is Undefined, optional
        The id of the layer.
    installUpdatesOnBoot : bool, default is Undefined, optional
        Whether to install OS and package updates on each instance when it boots.
    instanceShutdownTimeout : float, default is Undefined, optional
        The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
    loadBasedAutoScaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScaling, default is Undefined, optional
        load based auto scaling
    name : str, default is Undefined, optional
        A human-readable name for the layer.
    stackId : str, default is Undefined, optional
        ID of the stack the layer will belong to.
    systemPackages : [str], default is Undefined, optional
        Names of a set of system packages to install on the layer's instances.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    useEbsOptimizedInstances : bool, default is Undefined, optional
        Whether to use EBS-optimized instances.
    """


    arn?: str

    autoAssignElasticIps?: bool

    autoAssignPublicIps?: bool

    autoHealing?: bool

    cloudwatchConfiguration?: OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderCloudwatchConfiguration

    customConfigureRecipes?: [str]

    customDeployRecipes?: [str]

    customInstanceProfileArn?: str

    customJson?: str

    customSecurityGroupIds?: [str]

    customSetupRecipes?: [str]

    customShutdownRecipes?: [str]

    customUndeployRecipes?: [str]

    drainElbOnShutdown?: bool

    ebsVolume?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderEbsVolumeItems0]

    elasticLoadBalancer?: str

    id?: str

    installUpdatesOnBoot?: bool

    instanceShutdownTimeout?: float

    loadBasedAutoScaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScaling

    name?: str

    stackId?: str

    systemPackages?: [str]

    tags?: {str:str}

    tagsAll?: {str:str}

    useEbsOptimizedInstances?: bool


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderCloudwatchConfiguration:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider cloudwatch configuration

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    logStreams : [OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderCloudwatchConfigurationLogStreamsItems0], default is Undefined, optional
        log streams
    """


    enabled?: bool

    logStreams?: [OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderCloudwatchConfigurationLogStreamsItems0]


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderCloudwatchConfigurationLogStreamsItems0:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider cloudwatch configuration log streams items0

    Attributes
    ----------
    batchCount : float, default is Undefined, optional
        batch count
    batchSize : float, default is Undefined, optional
        batch size
    bufferDuration : float, default is Undefined, optional
        buffer duration
    datetimeFormat : str, default is Undefined, optional
        datetime format
    encoding : str, default is Undefined, optional
        encoding
    file : str, default is Undefined, optional
        file
    fileFingerprintLines : str, default is Undefined, optional
        file fingerprint lines
    initialPosition : str, default is Undefined, optional
        initial position
    logGroupName : str, default is Undefined, optional
        A human-readable name for the layer.
    multilineStartPattern : str, default is Undefined, optional
        multiline start pattern
    timeZone : str, default is Undefined, optional
        time zone
    """


    batchCount?: float

    batchSize?: float

    bufferDuration?: float

    datetimeFormat?: str

    encoding?: str

    file?: str

    fileFingerprintLines?: str

    initialPosition?: str

    logGroupName?: str

    multilineStartPattern?: str

    timeZone?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderEbsVolumeItems0:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider ebs volume items0

    Attributes
    ----------
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        For PIOPS volumes, the IOPS per disk.
    mountPoint : str, default is Undefined, optional
        The path to mount the EBS volume on the layer's instances.
    numberOfDisks : float, default is Undefined, optional
        The number of disks to use for the EBS volume.
    raidLevel : str, default is Undefined, optional
        The RAID level to use for the volume.
    size : float, default is Undefined, optional
        The size of the volume in gigabytes.
    $type : str, default is Undefined, optional
        The type of volume to create. This may be standard (the default), io1 or gp2.
    """


    encrypted?: bool

    iops?: float

    mountPoint?: str

    numberOfDisks?: float

    raidLevel?: str

    size?: float

    $type?: str


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider load based auto scaling

    Attributes
    ----------
    downscaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScalingDownscaling, default is Undefined, optional
        downscaling
    enable : bool, default is Undefined, optional
        enable
    upscaling : OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScalingUpscaling, default is Undefined, optional
        upscaling
    """


    downscaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScalingDownscaling

    enable?: bool

    upscaling?: OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScalingUpscaling


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScalingDownscaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider load based auto scaling downscaling

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        alarms
    cpuThreshold : float, default is Undefined, optional
        cpu threshold
    ignoreMetricsTime : float, default is Undefined, optional
        ignore metrics time
    instanceCount : float, default is Undefined, optional
        instance count
    loadThreshold : float, default is Undefined, optional
        load threshold
    memoryThreshold : float, default is Undefined, optional
        memory threshold
    thresholdsWaitTime : float, default is Undefined, optional
        thresholds wait time
    """


    alarms?: [str]

    cpuThreshold?: float

    ignoreMetricsTime?: float

    instanceCount?: float

    loadThreshold?: float

    memoryThreshold?: float

    thresholdsWaitTime?: float


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusAtProviderLoadBasedAutoScalingUpscaling:
    r"""
    opsworks aws upbound io v1beta2 static web layer status at provider load based auto scaling upscaling

    Attributes
    ----------
    alarms : [str], default is Undefined, optional
        alarms
    cpuThreshold : float, default is Undefined, optional
        cpu threshold
    ignoreMetricsTime : float, default is Undefined, optional
        ignore metrics time
    instanceCount : float, default is Undefined, optional
        instance count
    loadThreshold : float, default is Undefined, optional
        load threshold
    memoryThreshold : float, default is Undefined, optional
        memory threshold
    thresholdsWaitTime : float, default is Undefined, optional
        thresholds wait time
    """


    alarms?: [str]

    cpuThreshold?: float

    ignoreMetricsTime?: float

    instanceCount?: float

    loadThreshold?: float

    memoryThreshold?: float

    thresholdsWaitTime?: float


schema OpsworksAwsUpboundIoV1beta2StaticWebLayerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


