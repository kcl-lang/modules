"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema LaunchTemplate:
    r"""
    LaunchTemplate is the Schema for the LaunchTemplates API. Provides an EC2 launch template resource. Can be used to create instances or auto scaling groups.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "LaunchTemplate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta2LaunchTemplateSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta2LaunchTemplateStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta2" = "ec2.aws.upbound.io/v1beta2"

    kind: "LaunchTemplate" = "LaunchTemplate"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta2LaunchTemplateSpec

    status?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatus


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpec:
    r"""
    LaunchTemplateSpec defines the desired state of LaunchTemplate

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProvider:
    r"""
    ec2 aws upbound io v1beta2 launch template spec for provider

    Attributes
    ----------
    blockDeviceMappings : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0], default is Undefined, optional
        Specify volumes to attach to the instance besides the volumes specified by the AMI.
        See Block Devices below for details.
    capacityReservationSpecification : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCPUOptions, default is Undefined, optional
        cpu options
    creditSpecification : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCreditSpecification, default is Undefined, optional
        credit specification
    defaultVersion : float, default is Undefined, optional
        Default Version of the launch template.
    description : str, default is Undefined, optional
        Description of the launch template.
    disableApiStop : bool, default is Undefined, optional
        If true, enables EC2 Instance Stop Protection.
    disableApiTermination : bool, default is Undefined, optional
        If true, enables EC2 Instance
        Termination Protection
    ebsOptimized : str, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized.
    elasticGpuSpecifications : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderElasticGpuSpecificationsItems0], default is Undefined, optional
        The elastic GPU to attach to the instance. See Elastic GPU
        below for more details.
    elasticInferenceAccelerator : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderElasticInferenceAccelerator, default is Undefined, optional
        elastic inference accelerator
    enclaveOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderEnclaveOptions, default is Undefined, optional
        enclave options
    hibernationOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderHibernationOptions, default is Undefined, optional
        hibernation options
    iamInstanceProfile : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfile, default is Undefined, optional
        iam instance profile
    imageId : str, default is Undefined, optional
        The AMI from which to launch the instance or use a Systems Manager parameter convention e.g. resolve:ssm:parameter-name. See docs for more details.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Shutdown behavior for the instance. Can be stop or terminate.
        (Default: stop).
    instanceMarketOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceMarketOptions, default is Undefined, optional
        instance market options
    instanceRequirements : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        The type of the instance. If present then instance_requirements cannot be present.
    kernelId : str, default is Undefined, optional
        The kernel ID.
    keyName : str, default is Undefined, optional
        The key name to use for the instance.
    licenseSpecification : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderLicenseSpecificationItems0], default is Undefined, optional
        A list of license specifications to associate with. See License Specification below for more details.
    maintenanceOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMaintenanceOptions, default is Undefined, optional
        maintenance options
    metadataOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMonitoring, default is Undefined, optional
        monitoring
    name : str, default is Undefined, optional
        The name of the launch template.
    networkInterfaces : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0], default is Undefined, optional
        Customize network interfaces to be attached at instance boot time. See Network
        Interfaces below for more details.
    placement : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderPlacement, default is Undefined, optional
        placement
    privateDnsNameOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderPrivateDNSNameOptions, default is Undefined, optional
        private Dns name options
    ramDiskId : str, default is Undefined, optional
        The ID of the RAM disk.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupNameRefs : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupNames.
    securityGroupNameSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameSelector, default is Undefined, optional
        security group name selector
    securityGroupNames : [str], default is Undefined, optional
        A list of security group names to associate with. If you are creating Instances in a VPC, use
        vpc_security_group_ids instead.
    tagSpecifications : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderTagSpecificationsItems0], default is Undefined, optional
        The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    updateDefaultVersion : bool, default is Undefined, optional
        Whether to update Default Version each update. Conflicts with default_version.
    userData : str, default is Undefined, optional
        The base64-encoded user data to provide when launching the instance.
    vpcSecurityGroupIdRefs : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups
    """


    blockDeviceMappings?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0]

    capacityReservationSpecification?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCapacityReservationSpecification

    cpuOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCPUOptions

    creditSpecification?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCreditSpecification

    defaultVersion?: float

    description?: str

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsOptimized?: str

    elasticGpuSpecifications?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderElasticGpuSpecificationsItems0]

    elasticInferenceAccelerator?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderElasticInferenceAccelerator

    enclaveOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderEnclaveOptions

    hibernationOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderHibernationOptions

    iamInstanceProfile?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfile

    imageId?: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceMarketOptions

    instanceRequirements?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirements

    instanceType?: str

    kernelId?: str

    keyName?: str

    licenseSpecification?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderLicenseSpecificationItems0]

    maintenanceOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMaintenanceOptions

    metadataOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMetadataOptions

    monitoring?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMonitoring

    name?: str

    networkInterfaces?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0]

    placement?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderPlacement

    privateDnsNameOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderPrivateDNSNameOptions

    ramDiskId?: str

    region: str

    securityGroupNameRefs?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameRefsItems0]

    securityGroupNameSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameSelector

    securityGroupNames?: [str]

    tagSpecifications?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderTagSpecificationsItems0]

    tags?: {str:str}

    updateDefaultVersion?: bool

    userData?: str

    vpcSecurityGroupIdRefs?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec for provider block device mappings items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The name of the device to mount.
    ebs : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0Ebs, default is Undefined, optional
        ebs
    noDevice : str, default is Undefined, optional
        Suppresses the specified device included in the AMI's block device mapping.
    virtualName : str, default is Undefined, optional
        The Instance Store Device
        Name
        (e.g., "ephemeral0").
    """


    deviceName?: str

    ebs?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0Ebs

    noDevice?: str

    virtualName?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0Ebs:
    r"""
    Configure EBS volume properties.

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether the volume should be destroyed on instance termination.
        See Preserving Amazon EBS Volumes on Instance Termination for more information.
    encrypted : str, default is Undefined, optional
        Enables EBS encryption on the volume.
        Cannot be used with snapshot_id.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS.
        This must be set with a volume_type of "io1/io2/gp3".
    kmsKeyId : str, default is Undefined, optional
        The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
        encrypted must be set to true when this is set.
    kmsKeyIdRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    snapshotId : str, default is Undefined, optional
        The Snapshot ID to mount.
    throughput : float, default is Undefined, optional
        The throughput to provision for a gp3 volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The volume type.
        Can be one of standard, gp2, gp3, io1, io2, sc1 or st1.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCPUOptions:
    r"""
    The CPU options for the instance. See CPU Options below for more details.

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    coreCount : float, default is Undefined, optional
        The number of CPU cores for the instance.
    threadsPerCore : float, default is Undefined, optional
        The number of threads per CPU core.
        To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
        Otherwise, specify the default value of 2.
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCapacityReservationSpecification:
    r"""
    Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        Indicates the instance's Capacity Reservation preferences. Can be open or none. (Default none).
    capacityReservationTarget : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCapacityReservationSpecificationCapacityReservationTarget:
    r"""
    Used to target a specific Capacity Reservation:

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The ID of the Capacity Reservation in which to run the instance.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        The ARN of the Capacity Reservation resource group in which to run the instance.
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderCreditSpecification:
    r"""
    Customize the credit specification of the instance. See Credit
    Specification below for more details.

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        The credit option for CPU usage.
        Can be standard or unlimited.
        T3 instances are launched as unlimited by default.
        T2 instances are launched as standard by default.
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderElasticGpuSpecificationsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec for provider elastic gpu specifications items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The Elastic GPU Type
    """


    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderElasticInferenceAccelerator:
    r"""
    Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Accelerator type.
    """


    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderEnclaveOptions:
    r"""
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If set to true, Nitro Enclaves will be enabled on the instance.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderHibernationOptions:
    r"""
    The hibernation options for the instance. See Hibernation Options below for more details.

    Attributes
    ----------
    configured : bool, default is Undefined, optional
        If set to true, the launched EC2 instance will hibernation enabled.
    """


    configured?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfile:
    r"""
    The IAM Instance Profile to launch the instance with. See Instance Profile
    below for more details.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the instance profile. Conflicts with name.
    arnRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnRef, default is Undefined, optional
        arn ref
    arnSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnSelector, default is Undefined, optional
        arn selector
    name : str, default is Undefined, optional
        The name of the instance profile.
    nameRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameRef, default is Undefined, optional
        name ref
    nameSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameSelector, default is Undefined, optional
        name selector
    """


    arn?: str

    arnRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnRef

    arnSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnSelector

    name?: str

    nameRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameRef

    nameSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameSelector


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnRef:
    r"""
    Reference to a InstanceProfile in iam to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnSelector:
    r"""
    Selector for a InstanceProfile in iam to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameRef:
    r"""
    Reference to a InstanceProfile in iam to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameSelector:
    r"""
    Selector for a InstanceProfile in iam to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderIamInstanceProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceMarketOptions:
    r"""
    The market (purchasing) option for the instance. See Market Options
    below for details.

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        The market type. Can be spot.
    spotOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceMarketOptionsSpotOptions, default is Undefined, optional
        spot options
    """


    marketType?: str

    spotOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceMarketOptionsSpotOptions


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceMarketOptionsSpotOptions:
    r"""
    The options for Spot Instance

    Attributes
    ----------
    blockDurationMinutes : float, default is Undefined, optional
        The required duration in minutes. This value must be a multiple of 60.
    instanceInterruptionBehavior : str, default is Undefined, optional
        The behavior when a Spot Instance is interrupted. Can be hibernate,
        stop, or terminate. (Default: terminate).
    maxPrice : str, default is Undefined, optional
        The maximum hourly price you're willing to pay for the Spot Instances.
    spotInstanceType : str, default is Undefined, optional
        The Spot Instance request type. Can be one-time, or persistent.
    validUntil : str, default is Undefined, optional
        The end date of the request.
    """


    blockDurationMinutes?: float

    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirements:
    r"""
    The attribute requirements for the type of instance. If present then instance_type cannot be present.

    Attributes
    ----------
    acceleratorCount : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        List of accelerator types. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        List of CPU manufacturer names. Default is any manufacturer.
    excludedInstanceTypes : [str], default is Undefined, optional
        List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        List of instance generation names. Default is any generation.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsMemoryGibPerVcpu

    memoryMib?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsMemoryMib

    networkBandwidthGbps?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsTotalLocalStorageGb

    vcpuCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsVcpuCount


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsMemoryMib:
    r"""
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsNetworkBandwidthGbps:
    r"""
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderInstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderLicenseSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec for provider license specification items0

    Attributes
    ----------
    licenseConfigurationArn : str, default is Undefined, optional
        ARN of the license configuration.
    """


    licenseConfigurationArn?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMaintenanceOptions:
    r"""
    The maintenance options for the instance. See Maintenance Options below for more details.

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        Disables the automatic recovery behavior of your instance or sets it to default. Can be "default" or "disabled". See Recover your instance for more details.
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMetadataOptions:
    r"""
    Customize the metadata options for the instance. See Metadata Options below for more details.

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        Whether the metadata service is available. Can be "enabled" or "disabled". (Default: "enabled").
    httpProtocolIpv6 : str, default is Undefined, optional
        Enables or disables the IPv6 endpoint for the instance metadata service. Can be "enabled" or "disabled".
    httpPutResponseHopLimit : float, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from 1 to 64. (Default: 1).
    httpTokens : str, default is Undefined, optional
        Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Can be "optional" or "required". (Default: "optional").
    instanceMetadataTags : str, default is Undefined, optional
        Enables or disables access to instance tags from the instance metadata service. Can be "enabled" or "disabled".
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderMonitoring:
    r"""
    The monitoring option for the instance. See Monitoring below for more details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If true, the launched EC2 instance will have detailed monitoring enabled.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec for provider network interfaces items0

    Attributes
    ----------
    associateCarrierIpAddress : str, default is Undefined, optional
        Associate a Carrier IP address with eth0 for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value, can be left unset.
    associatePublicIpAddress : str, default is Undefined, optional
        Associate a public ip address with the network interface. Boolean value, can be left unset.
    deleteOnTermination : str, default is Undefined, optional
        Whether the network interface should be destroyed on instance termination.
    description : str, default is Undefined, optional
        Description of the network interface.
    deviceIndex : float, default is Undefined, optional
        The integer index of the network interface attachment.
    interfaceType : str, default is Undefined, optional
        The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa.
    ipv4AddressCount : float, default is Undefined, optional
        The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with ipv4_addresses
    ipv4Addresses : [str], default is Undefined, optional
        One or more private IPv4 addresses to associate. Conflicts with ipv4_address_count
    ipv4PrefixCount : float, default is Undefined, optional
        The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with ipv4_prefixes
    ipv4Prefixes : [str], default is Undefined, optional
        One or more IPv4 prefixes to be assigned to the network interface. Conflicts with ipv4_prefix_count
    ipv6AddressCount : float, default is Undefined, optional
        The number of IPv6 addresses to assign to a network interface. Conflicts with ipv6_addresses
    ipv6Addresses : [str], default is Undefined, optional
        One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with ipv6_address_count
    ipv6PrefixCount : float, default is Undefined, optional
        The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with ipv6_prefixes
    ipv6Prefixes : [str], default is Undefined, optional
        One or more IPv6 prefixes to be assigned to the network interface. Conflicts with ipv6_prefix_count
    networkCardIndex : float, default is Undefined, optional
        The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
    networkInterfaceId : str, default is Undefined, optional
        The ID of the network interface to attach.
    networkInterfaceIdRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDRef, default is Undefined, optional
        network interface Id ref
    networkInterfaceIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDSelector, default is Undefined, optional
        network interface Id selector
    primaryIpv6 : str, default is Undefined, optional
        Whether the first IPv6 GUA will be made the primary IPv6 address.
    privateIpAddress : str, default is Undefined, optional
        The primary private IPv4 address.
    securityGroupRefs : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        A list of security group IDs to associate.
    subnetId : str, default is Undefined, optional
        The VPC Subnet ID to associate.
    subnetIdRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    associateCarrierIpAddress?: str

    associatePublicIpAddress?: str

    deleteOnTermination?: str

    description?: str

    deviceIndex?: float

    interfaceType?: str

    ipv4AddressCount?: float

    ipv4Addresses?: [str]

    ipv4PrefixCount?: float

    ipv4Prefixes?: [str]

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    ipv6PrefixCount?: float

    ipv6Prefixes?: [str]

    networkCardIndex?: float

    networkInterfaceId?: str

    networkInterfaceIdRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDRef

    networkInterfaceIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDSelector

    primaryIpv6?: str

    privateIpAddress?: str

    securityGroupRefs?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupRefsItems0]

    securityGroupSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupSelector

    securityGroups?: [str]

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDSelector


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDRef:
    r"""
    Reference to a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDSelector:
    r"""
    Selector for a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0NetworkInterfaceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SecurityGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderNetworkInterfacesItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderPlacement:
    r"""
    The placement of the instance. See Placement below for more details.

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        The affinity setting for an instance on a Dedicated Host.
    availabilityZone : str, default is Undefined, optional
        The Availability Zone for the instance.
    groupName : str, default is Undefined, optional
        The name of the placement group for the instance.
    hostId : str, default is Undefined, optional
        The ID of the Dedicated Host for the instance.
    hostResourceGroupArn : str, default is Undefined, optional
        The ARN of the Host Resource Group in which to launch instances.
    partitionNumber : float, default is Undefined, optional
        The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
    spreadDomain : str, default is Undefined, optional
        Reserved for future use.
    tenancy : str, default is Undefined, optional
        The tenancy of the instance (if the instance is running in a VPC). Can be default, dedicated, or host.
    """


    affinity?: str

    availabilityZone?: str

    groupName?: str

    hostId?: str

    hostResourceGroupArn?: str

    partitionNumber?: float

    spreadDomain?: str

    tenancy?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderPrivateDNSNameOptions:
    r"""
    The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    hostnameType : str, default is Undefined, optional
        The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupNames.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderSecurityGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderTagSpecificationsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec for provider tag specifications items0

    Attributes
    ----------
    resourceType : str, default is Undefined, optional
        The type of resource to tag.
    tags : {str:str}, default is Undefined, optional
        A map of tags to assign to the resource.
    """


    resourceType?: str

    tags?: {str:str}


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    blockDeviceMappings : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0], default is Undefined, optional
        Specify volumes to attach to the instance besides the volumes specified by the AMI.
        See Block Devices below for details.
    capacityReservationSpecification : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCPUOptions, default is Undefined, optional
        cpu options
    creditSpecification : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCreditSpecification, default is Undefined, optional
        credit specification
    defaultVersion : float, default is Undefined, optional
        Default Version of the launch template.
    description : str, default is Undefined, optional
        Description of the launch template.
    disableApiStop : bool, default is Undefined, optional
        If true, enables EC2 Instance Stop Protection.
    disableApiTermination : bool, default is Undefined, optional
        If true, enables EC2 Instance
        Termination Protection
    ebsOptimized : str, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized.
    elasticGpuSpecifications : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderElasticGpuSpecificationsItems0], default is Undefined, optional
        The elastic GPU to attach to the instance. See Elastic GPU
        below for more details.
    elasticInferenceAccelerator : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderElasticInferenceAccelerator, default is Undefined, optional
        elastic inference accelerator
    enclaveOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderEnclaveOptions, default is Undefined, optional
        enclave options
    hibernationOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderHibernationOptions, default is Undefined, optional
        hibernation options
    iamInstanceProfile : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfile, default is Undefined, optional
        iam instance profile
    imageId : str, default is Undefined, optional
        The AMI from which to launch the instance or use a Systems Manager parameter convention e.g. resolve:ssm:parameter-name. See docs for more details.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Shutdown behavior for the instance. Can be stop or terminate.
        (Default: stop).
    instanceMarketOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceMarketOptions, default is Undefined, optional
        instance market options
    instanceRequirements : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        The type of the instance. If present then instance_requirements cannot be present.
    kernelId : str, default is Undefined, optional
        The kernel ID.
    keyName : str, default is Undefined, optional
        The key name to use for the instance.
    licenseSpecification : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderLicenseSpecificationItems0], default is Undefined, optional
        A list of license specifications to associate with. See License Specification below for more details.
    maintenanceOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMaintenanceOptions, default is Undefined, optional
        maintenance options
    metadataOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMonitoring, default is Undefined, optional
        monitoring
    name : str, default is Undefined, optional
        The name of the launch template.
    networkInterfaces : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0], default is Undefined, optional
        Customize network interfaces to be attached at instance boot time. See Network
        Interfaces below for more details.
    placement : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderPlacement, default is Undefined, optional
        placement
    privateDnsNameOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderPrivateDNSNameOptions, default is Undefined, optional
        private Dns name options
    ramDiskId : str, default is Undefined, optional
        The ID of the RAM disk.
    securityGroupNameRefs : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupNames.
    securityGroupNameSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameSelector, default is Undefined, optional
        security group name selector
    securityGroupNames : [str], default is Undefined, optional
        A list of security group names to associate with. If you are creating Instances in a VPC, use
        vpc_security_group_ids instead.
    tagSpecifications : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderTagSpecificationsItems0], default is Undefined, optional
        The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    updateDefaultVersion : bool, default is Undefined, optional
        Whether to update Default Version each update. Conflicts with default_version.
    userData : str, default is Undefined, optional
        The base64-encoded user data to provide when launching the instance.
    vpcSecurityGroupIdRefs : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups
    """


    blockDeviceMappings?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0]

    capacityReservationSpecification?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCapacityReservationSpecification

    cpuOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCPUOptions

    creditSpecification?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCreditSpecification

    defaultVersion?: float

    description?: str

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsOptimized?: str

    elasticGpuSpecifications?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderElasticGpuSpecificationsItems0]

    elasticInferenceAccelerator?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderElasticInferenceAccelerator

    enclaveOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderEnclaveOptions

    hibernationOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderHibernationOptions

    iamInstanceProfile?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfile

    imageId?: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceMarketOptions

    instanceRequirements?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirements

    instanceType?: str

    kernelId?: str

    keyName?: str

    licenseSpecification?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderLicenseSpecificationItems0]

    maintenanceOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMaintenanceOptions

    metadataOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMetadataOptions

    monitoring?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMonitoring

    name?: str

    networkInterfaces?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0]

    placement?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderPlacement

    privateDnsNameOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderPrivateDNSNameOptions

    ramDiskId?: str

    securityGroupNameRefs?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameRefsItems0]

    securityGroupNameSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameSelector

    securityGroupNames?: [str]

    tagSpecifications?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderTagSpecificationsItems0]

    tags?: {str:str}

    updateDefaultVersion?: bool

    userData?: str

    vpcSecurityGroupIdRefs?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec init provider block device mappings items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The name of the device to mount.
    ebs : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0Ebs, default is Undefined, optional
        ebs
    noDevice : str, default is Undefined, optional
        Suppresses the specified device included in the AMI's block device mapping.
    virtualName : str, default is Undefined, optional
        The Instance Store Device
        Name
        (e.g., "ephemeral0").
    """


    deviceName?: str

    ebs?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0Ebs

    noDevice?: str

    virtualName?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0Ebs:
    r"""
    Configure EBS volume properties.

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether the volume should be destroyed on instance termination.
        See Preserving Amazon EBS Volumes on Instance Termination for more information.
    encrypted : str, default is Undefined, optional
        Enables EBS encryption on the volume.
        Cannot be used with snapshot_id.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS.
        This must be set with a volume_type of "io1/io2/gp3".
    kmsKeyId : str, default is Undefined, optional
        The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
        encrypted must be set to true when this is set.
    kmsKeyIdRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    snapshotId : str, default is Undefined, optional
        The Snapshot ID to mount.
    throughput : float, default is Undefined, optional
        The throughput to provision for a gp3 volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The volume type.
        Can be one of standard, gp2, gp3, io1, io2, sc1 or st1.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef

    kmsKeyIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderBlockDeviceMappingsItems0EbsKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCPUOptions:
    r"""
    The CPU options for the instance. See CPU Options below for more details.

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    coreCount : float, default is Undefined, optional
        The number of CPU cores for the instance.
    threadsPerCore : float, default is Undefined, optional
        The number of threads per CPU core.
        To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
        Otherwise, specify the default value of 2.
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCapacityReservationSpecification:
    r"""
    Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        Indicates the instance's Capacity Reservation preferences. Can be open or none. (Default none).
    capacityReservationTarget : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCapacityReservationSpecificationCapacityReservationTarget:
    r"""
    Used to target a specific Capacity Reservation:

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The ID of the Capacity Reservation in which to run the instance.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        The ARN of the Capacity Reservation resource group in which to run the instance.
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderCreditSpecification:
    r"""
    Customize the credit specification of the instance. See Credit
    Specification below for more details.

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        The credit option for CPU usage.
        Can be standard or unlimited.
        T3 instances are launched as unlimited by default.
        T2 instances are launched as standard by default.
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderElasticGpuSpecificationsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec init provider elastic gpu specifications items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The Elastic GPU Type
    """


    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderElasticInferenceAccelerator:
    r"""
    Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Accelerator type.
    """


    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderEnclaveOptions:
    r"""
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If set to true, Nitro Enclaves will be enabled on the instance.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderHibernationOptions:
    r"""
    The hibernation options for the instance. See Hibernation Options below for more details.

    Attributes
    ----------
    configured : bool, default is Undefined, optional
        If set to true, the launched EC2 instance will hibernation enabled.
    """


    configured?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfile:
    r"""
    The IAM Instance Profile to launch the instance with. See Instance Profile
    below for more details.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the instance profile. Conflicts with name.
    arnRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnRef, default is Undefined, optional
        arn ref
    arnSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnSelector, default is Undefined, optional
        arn selector
    name : str, default is Undefined, optional
        The name of the instance profile.
    nameRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameRef, default is Undefined, optional
        name ref
    nameSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameSelector, default is Undefined, optional
        name selector
    """


    arn?: str

    arnRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnRef

    arnSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnSelector

    name?: str

    nameRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameRef

    nameSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameSelector


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnRef:
    r"""
    Reference to a InstanceProfile in iam to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnSelector:
    r"""
    Selector for a InstanceProfile in iam to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameRef:
    r"""
    Reference to a InstanceProfile in iam to populate name.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameSelector:
    r"""
    Selector for a InstanceProfile in iam to populate name.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderIamInstanceProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceMarketOptions:
    r"""
    The market (purchasing) option for the instance. See Market Options
    below for details.

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        The market type. Can be spot.
    spotOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceMarketOptionsSpotOptions, default is Undefined, optional
        spot options
    """


    marketType?: str

    spotOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceMarketOptionsSpotOptions


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceMarketOptionsSpotOptions:
    r"""
    The options for Spot Instance

    Attributes
    ----------
    blockDurationMinutes : float, default is Undefined, optional
        The required duration in minutes. This value must be a multiple of 60.
    instanceInterruptionBehavior : str, default is Undefined, optional
        The behavior when a Spot Instance is interrupted. Can be hibernate,
        stop, or terminate. (Default: terminate).
    maxPrice : str, default is Undefined, optional
        The maximum hourly price you're willing to pay for the Spot Instances.
    spotInstanceType : str, default is Undefined, optional
        The Spot Instance request type. Can be one-time, or persistent.
    validUntil : str, default is Undefined, optional
        The end date of the request.
    """


    blockDurationMinutes?: float

    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirements:
    r"""
    The attribute requirements for the type of instance. If present then instance_type cannot be present.

    Attributes
    ----------
    acceleratorCount : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        List of accelerator types. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        List of CPU manufacturer names. Default is any manufacturer.
    excludedInstanceTypes : [str], default is Undefined, optional
        List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        List of instance generation names. Default is any generation.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsMemoryGibPerVcpu

    memoryMib?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsMemoryMib

    networkBandwidthGbps?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsTotalLocalStorageGb

    vcpuCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsVcpuCount


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsMemoryMib:
    r"""
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsNetworkBandwidthGbps:
    r"""
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderInstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderLicenseSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec init provider license specification items0

    Attributes
    ----------
    licenseConfigurationArn : str, default is Undefined, optional
        ARN of the license configuration.
    """


    licenseConfigurationArn?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMaintenanceOptions:
    r"""
    The maintenance options for the instance. See Maintenance Options below for more details.

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        Disables the automatic recovery behavior of your instance or sets it to default. Can be "default" or "disabled". See Recover your instance for more details.
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMetadataOptions:
    r"""
    Customize the metadata options for the instance. See Metadata Options below for more details.

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        Whether the metadata service is available. Can be "enabled" or "disabled". (Default: "enabled").
    httpProtocolIpv6 : str, default is Undefined, optional
        Enables or disables the IPv6 endpoint for the instance metadata service. Can be "enabled" or "disabled".
    httpPutResponseHopLimit : float, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from 1 to 64. (Default: 1).
    httpTokens : str, default is Undefined, optional
        Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Can be "optional" or "required". (Default: "optional").
    instanceMetadataTags : str, default is Undefined, optional
        Enables or disables access to instance tags from the instance metadata service. Can be "enabled" or "disabled".
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderMonitoring:
    r"""
    The monitoring option for the instance. See Monitoring below for more details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If true, the launched EC2 instance will have detailed monitoring enabled.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec init provider network interfaces items0

    Attributes
    ----------
    associateCarrierIpAddress : str, default is Undefined, optional
        Associate a Carrier IP address with eth0 for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value, can be left unset.
    associatePublicIpAddress : str, default is Undefined, optional
        Associate a public ip address with the network interface. Boolean value, can be left unset.
    deleteOnTermination : str, default is Undefined, optional
        Whether the network interface should be destroyed on instance termination.
    description : str, default is Undefined, optional
        Description of the network interface.
    deviceIndex : float, default is Undefined, optional
        The integer index of the network interface attachment.
    interfaceType : str, default is Undefined, optional
        The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa.
    ipv4AddressCount : float, default is Undefined, optional
        The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with ipv4_addresses
    ipv4Addresses : [str], default is Undefined, optional
        One or more private IPv4 addresses to associate. Conflicts with ipv4_address_count
    ipv4PrefixCount : float, default is Undefined, optional
        The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with ipv4_prefixes
    ipv4Prefixes : [str], default is Undefined, optional
        One or more IPv4 prefixes to be assigned to the network interface. Conflicts with ipv4_prefix_count
    ipv6AddressCount : float, default is Undefined, optional
        The number of IPv6 addresses to assign to a network interface. Conflicts with ipv6_addresses
    ipv6Addresses : [str], default is Undefined, optional
        One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with ipv6_address_count
    ipv6PrefixCount : float, default is Undefined, optional
        The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with ipv6_prefixes
    ipv6Prefixes : [str], default is Undefined, optional
        One or more IPv6 prefixes to be assigned to the network interface. Conflicts with ipv6_prefix_count
    networkCardIndex : float, default is Undefined, optional
        The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
    networkInterfaceId : str, default is Undefined, optional
        The ID of the network interface to attach.
    networkInterfaceIdRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDRef, default is Undefined, optional
        network interface Id ref
    networkInterfaceIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDSelector, default is Undefined, optional
        network interface Id selector
    primaryIpv6 : str, default is Undefined, optional
        Whether the first IPv6 GUA will be made the primary IPv6 address.
    privateIpAddress : str, default is Undefined, optional
        The primary private IPv4 address.
    securityGroupRefs : [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupSelector, default is Undefined, optional
        security group selector
    securityGroups : [str], default is Undefined, optional
        A list of security group IDs to associate.
    subnetId : str, default is Undefined, optional
        The VPC Subnet ID to associate.
    subnetIdRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    associateCarrierIpAddress?: str

    associatePublicIpAddress?: str

    deleteOnTermination?: str

    description?: str

    deviceIndex?: float

    interfaceType?: str

    ipv4AddressCount?: float

    ipv4Addresses?: [str]

    ipv4PrefixCount?: float

    ipv4Prefixes?: [str]

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    ipv6PrefixCount?: float

    ipv6Prefixes?: [str]

    networkCardIndex?: float

    networkInterfaceId?: str

    networkInterfaceIdRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDRef

    networkInterfaceIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDSelector

    primaryIpv6?: str

    privateIpAddress?: str

    securityGroupRefs?: [Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupRefsItems0]

    securityGroupSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupSelector

    securityGroups?: [str]

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDSelector


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDRef:
    r"""
    Reference to a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDSelector:
    r"""
    Selector for a NetworkInterface in ec2 to populate networkInterfaceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0NetworkInterfaceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SecurityGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderNetworkInterfacesItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderPlacement:
    r"""
    The placement of the instance. See Placement below for more details.

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        The affinity setting for an instance on a Dedicated Host.
    availabilityZone : str, default is Undefined, optional
        The Availability Zone for the instance.
    groupName : str, default is Undefined, optional
        The name of the placement group for the instance.
    hostId : str, default is Undefined, optional
        The ID of the Dedicated Host for the instance.
    hostResourceGroupArn : str, default is Undefined, optional
        The ARN of the Host Resource Group in which to launch instances.
    partitionNumber : float, default is Undefined, optional
        The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
    spreadDomain : str, default is Undefined, optional
        Reserved for future use.
    tenancy : str, default is Undefined, optional
        The tenancy of the instance (if the instance is running in a VPC). Can be default, dedicated, or host.
    """


    affinity?: str

    availabilityZone?: str

    groupName?: str

    hostId?: str

    hostResourceGroupArn?: str

    partitionNumber?: float

    spreadDomain?: str

    tenancy?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderPrivateDNSNameOptions:
    r"""
    The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    hostnameType : str, default is Undefined, optional
        The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupNames.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderSecurityGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderTagSpecificationsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template spec init provider tag specifications items0

    Attributes
    ----------
    resourceType : str, default is Undefined, optional
        The type of resource to tag.
    tags : {str:str}, default is Undefined, optional
        A map of tags to assign to the resource.
    """


    resourceType?: str

    tags?: {str:str}


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatus:
    r"""
    LaunchTemplateStatus defines the observed state of LaunchTemplate.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta2 launch template status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the launch template.
    blockDeviceMappings : [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderBlockDeviceMappingsItems0], default is Undefined, optional
        Specify volumes to attach to the instance besides the volumes specified by the AMI.
        See Block Devices below for details.
    capacityReservationSpecification : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCPUOptions, default is Undefined, optional
        cpu options
    creditSpecification : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCreditSpecification, default is Undefined, optional
        credit specification
    defaultVersion : float, default is Undefined, optional
        Default Version of the launch template.
    description : str, default is Undefined, optional
        Description of the launch template.
    disableApiStop : bool, default is Undefined, optional
        If true, enables EC2 Instance Stop Protection.
    disableApiTermination : bool, default is Undefined, optional
        If true, enables EC2 Instance
        Termination Protection
    ebsOptimized : str, default is Undefined, optional
        If true, the launched EC2 instance will be EBS-optimized.
    elasticGpuSpecifications : [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderElasticGpuSpecificationsItems0], default is Undefined, optional
        The elastic GPU to attach to the instance. See Elastic GPU
        below for more details.
    elasticInferenceAccelerator : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderElasticInferenceAccelerator, default is Undefined, optional
        elastic inference accelerator
    enclaveOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderEnclaveOptions, default is Undefined, optional
        enclave options
    hibernationOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderHibernationOptions, default is Undefined, optional
        hibernation options
    iamInstanceProfile : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderIamInstanceProfile, default is Undefined, optional
        iam instance profile
    id : str, default is Undefined, optional
        The ID of the launch template.
    imageId : str, default is Undefined, optional
        The AMI from which to launch the instance or use a Systems Manager parameter convention e.g. resolve:ssm:parameter-name. See docs for more details.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        Shutdown behavior for the instance. Can be stop or terminate.
        (Default: stop).
    instanceMarketOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceMarketOptions, default is Undefined, optional
        instance market options
    instanceRequirements : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        The type of the instance. If present then instance_requirements cannot be present.
    kernelId : str, default is Undefined, optional
        The kernel ID.
    keyName : str, default is Undefined, optional
        The key name to use for the instance.
    latestVersion : float, default is Undefined, optional
        The latest version of the launch template.
    licenseSpecification : [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderLicenseSpecificationItems0], default is Undefined, optional
        A list of license specifications to associate with. See License Specification below for more details.
    maintenanceOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMaintenanceOptions, default is Undefined, optional
        maintenance options
    metadataOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMonitoring, default is Undefined, optional
        monitoring
    name : str, default is Undefined, optional
        The name of the launch template.
    networkInterfaces : [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderNetworkInterfacesItems0], default is Undefined, optional
        Customize network interfaces to be attached at instance boot time. See Network
        Interfaces below for more details.
    placement : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderPlacement, default is Undefined, optional
        placement
    privateDnsNameOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderPrivateDNSNameOptions, default is Undefined, optional
        private Dns name options
    ramDiskId : str, default is Undefined, optional
        The ID of the RAM disk.
    securityGroupNames : [str], default is Undefined, optional
        A list of security group names to associate with. If you are creating Instances in a VPC, use
        vpc_security_group_ids instead.
    tagSpecifications : [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderTagSpecificationsItems0], default is Undefined, optional
        The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    updateDefaultVersion : bool, default is Undefined, optional
        Whether to update Default Version each update. Conflicts with default_version.
    userData : str, default is Undefined, optional
        The base64-encoded user data to provide when launching the instance.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups
    """


    arn?: str

    blockDeviceMappings?: [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderBlockDeviceMappingsItems0]

    capacityReservationSpecification?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCapacityReservationSpecification

    cpuOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCPUOptions

    creditSpecification?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCreditSpecification

    defaultVersion?: float

    description?: str

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsOptimized?: str

    elasticGpuSpecifications?: [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderElasticGpuSpecificationsItems0]

    elasticInferenceAccelerator?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderElasticInferenceAccelerator

    enclaveOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderEnclaveOptions

    hibernationOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderHibernationOptions

    iamInstanceProfile?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderIamInstanceProfile

    id?: str

    imageId?: str

    instanceInitiatedShutdownBehavior?: str

    instanceMarketOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceMarketOptions

    instanceRequirements?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirements

    instanceType?: str

    kernelId?: str

    keyName?: str

    latestVersion?: float

    licenseSpecification?: [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderLicenseSpecificationItems0]

    maintenanceOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMaintenanceOptions

    metadataOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMetadataOptions

    monitoring?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMonitoring

    name?: str

    networkInterfaces?: [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderNetworkInterfacesItems0]

    placement?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderPlacement

    privateDnsNameOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderPrivateDNSNameOptions

    ramDiskId?: str

    securityGroupNames?: [str]

    tagSpecifications?: [Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderTagSpecificationsItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    updateDefaultVersion?: bool

    userData?: str

    vpcSecurityGroupIds?: [str]


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderBlockDeviceMappingsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template status at provider block device mappings items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        The name of the device to mount.
    ebs : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderBlockDeviceMappingsItems0Ebs, default is Undefined, optional
        ebs
    noDevice : str, default is Undefined, optional
        Suppresses the specified device included in the AMI's block device mapping.
    virtualName : str, default is Undefined, optional
        The Instance Store Device
        Name
        (e.g., "ephemeral0").
    """


    deviceName?: str

    ebs?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderBlockDeviceMappingsItems0Ebs

    noDevice?: str

    virtualName?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderBlockDeviceMappingsItems0Ebs:
    r"""
    Configure EBS volume properties.

    Attributes
    ----------
    deleteOnTermination : str, default is Undefined, optional
        Whether the volume should be destroyed on instance termination.
        See Preserving Amazon EBS Volumes on Instance Termination for more information.
    encrypted : str, default is Undefined, optional
        Enables EBS encryption on the volume.
        Cannot be used with snapshot_id.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS.
        This must be set with a volume_type of "io1/io2/gp3".
    kmsKeyId : str, default is Undefined, optional
        The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
        encrypted must be set to true when this is set.
    snapshotId : str, default is Undefined, optional
        The Snapshot ID to mount.
    throughput : float, default is Undefined, optional
        The throughput to provision for a gp3 volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
    volumeSize : float, default is Undefined, optional
        The size of the volume in gigabytes.
    volumeType : str, default is Undefined, optional
        The volume type.
        Can be one of standard, gp2, gp3, io1, io2, sc1 or st1.
    """


    deleteOnTermination?: str

    encrypted?: str

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCPUOptions:
    r"""
    The CPU options for the instance. See CPU Options below for more details.

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    coreCount : float, default is Undefined, optional
        The number of CPU cores for the instance.
    threadsPerCore : float, default is Undefined, optional
        The number of threads per CPU core.
        To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
        Otherwise, specify the default value of 2.
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCapacityReservationSpecification:
    r"""
    Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        Indicates the instance's Capacity Reservation preferences. Can be open or none. (Default none).
    capacityReservationTarget : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget:
    r"""
    Used to target a specific Capacity Reservation:

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The ID of the Capacity Reservation in which to run the instance.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        The ARN of the Capacity Reservation resource group in which to run the instance.
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderCreditSpecification:
    r"""
    Customize the credit specification of the instance. See Credit
    Specification below for more details.

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        The credit option for CPU usage.
        Can be standard or unlimited.
        T3 instances are launched as unlimited by default.
        T2 instances are launched as standard by default.
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderElasticGpuSpecificationsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template status at provider elastic gpu specifications items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The Elastic GPU Type
    """


    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderElasticInferenceAccelerator:
    r"""
    Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Accelerator type.
    """


    $type?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderEnclaveOptions:
    r"""
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If set to true, Nitro Enclaves will be enabled on the instance.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderHibernationOptions:
    r"""
    The hibernation options for the instance. See Hibernation Options below for more details.

    Attributes
    ----------
    configured : bool, default is Undefined, optional
        If set to true, the launched EC2 instance will hibernation enabled.
    """


    configured?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderIamInstanceProfile:
    r"""
    The IAM Instance Profile to launch the instance with. See Instance Profile
    below for more details.

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the instance profile. Conflicts with name.
    name : str, default is Undefined, optional
        The name of the instance profile.
    """


    arn?: str

    name?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceMarketOptions:
    r"""
    The market (purchasing) option for the instance. See Market Options
    below for details.

    Attributes
    ----------
    marketType : str, default is Undefined, optional
        The market type. Can be spot.
    spotOptions : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceMarketOptionsSpotOptions, default is Undefined, optional
        spot options
    """


    marketType?: str

    spotOptions?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceMarketOptionsSpotOptions


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceMarketOptionsSpotOptions:
    r"""
    The options for Spot Instance

    Attributes
    ----------
    blockDurationMinutes : float, default is Undefined, optional
        The required duration in minutes. This value must be a multiple of 60.
    instanceInterruptionBehavior : str, default is Undefined, optional
        The behavior when a Spot Instance is interrupted. Can be hibernate,
        stop, or terminate. (Default: terminate).
    maxPrice : str, default is Undefined, optional
        The maximum hourly price you're willing to pay for the Spot Instances.
    spotInstanceType : str, default is Undefined, optional
        The Spot Instance request type. Can be one-time, or persistent.
    validUntil : str, default is Undefined, optional
        The end date of the request.
    """


    blockDurationMinutes?: float

    instanceInterruptionBehavior?: str

    maxPrice?: str

    spotInstanceType?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirements:
    r"""
    The attribute requirements for the type of instance. If present then instance_type cannot be present.

    Attributes
    ----------
    acceleratorCount : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        List of accelerator types. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        List of CPU manufacturer names. Default is any manufacturer.
    excludedInstanceTypes : [str], default is Undefined, optional
        List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        List of instance generation names. Default is any generation.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsMemoryGibPerVcpu

    memoryMib?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsMemoryMib

    networkBandwidthGbps?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsTotalLocalStorageGb

    vcpuCount?: Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsVcpuCount


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsMemoryMib:
    r"""
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsNetworkBandwidthGbps:
    r"""
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderInstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Maximum.
    min : float, default is Undefined, optional
        Minimum.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderLicenseSpecificationItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template status at provider license specification items0

    Attributes
    ----------
    licenseConfigurationArn : str, default is Undefined, optional
        ARN of the license configuration.
    """


    licenseConfigurationArn?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMaintenanceOptions:
    r"""
    The maintenance options for the instance. See Maintenance Options below for more details.

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        Disables the automatic recovery behavior of your instance or sets it to default. Can be "default" or "disabled". See Recover your instance for more details.
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMetadataOptions:
    r"""
    Customize the metadata options for the instance. See Metadata Options below for more details.

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        Whether the metadata service is available. Can be "enabled" or "disabled". (Default: "enabled").
    httpProtocolIpv6 : str, default is Undefined, optional
        Enables or disables the IPv6 endpoint for the instance metadata service. Can be "enabled" or "disabled".
    httpPutResponseHopLimit : float, default is Undefined, optional
        The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from 1 to 64. (Default: 1).
    httpTokens : str, default is Undefined, optional
        Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Can be "optional" or "required". (Default: "optional").
    instanceMetadataTags : str, default is Undefined, optional
        Enables or disables access to instance tags from the instance metadata service. Can be "enabled" or "disabled".
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderMonitoring:
    r"""
    The monitoring option for the instance. See Monitoring below for more details.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        If true, the launched EC2 instance will have detailed monitoring enabled.
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderNetworkInterfacesItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template status at provider network interfaces items0

    Attributes
    ----------
    associateCarrierIpAddress : str, default is Undefined, optional
        Associate a Carrier IP address with eth0 for a new network interface. Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. Boolean value, can be left unset.
    associatePublicIpAddress : str, default is Undefined, optional
        Associate a public ip address with the network interface. Boolean value, can be left unset.
    deleteOnTermination : str, default is Undefined, optional
        Whether the network interface should be destroyed on instance termination.
    description : str, default is Undefined, optional
        Description of the network interface.
    deviceIndex : float, default is Undefined, optional
        The integer index of the network interface attachment.
    interfaceType : str, default is Undefined, optional
        The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa.
    ipv4AddressCount : float, default is Undefined, optional
        The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with ipv4_addresses
    ipv4Addresses : [str], default is Undefined, optional
        One or more private IPv4 addresses to associate. Conflicts with ipv4_address_count
    ipv4PrefixCount : float, default is Undefined, optional
        The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with ipv4_prefixes
    ipv4Prefixes : [str], default is Undefined, optional
        One or more IPv4 prefixes to be assigned to the network interface. Conflicts with ipv4_prefix_count
    ipv6AddressCount : float, default is Undefined, optional
        The number of IPv6 addresses to assign to a network interface. Conflicts with ipv6_addresses
    ipv6Addresses : [str], default is Undefined, optional
        One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with ipv6_address_count
    ipv6PrefixCount : float, default is Undefined, optional
        The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with ipv6_prefixes
    ipv6Prefixes : [str], default is Undefined, optional
        One or more IPv6 prefixes to be assigned to the network interface. Conflicts with ipv6_prefix_count
    networkCardIndex : float, default is Undefined, optional
        The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
    networkInterfaceId : str, default is Undefined, optional
        The ID of the network interface to attach.
    primaryIpv6 : str, default is Undefined, optional
        Whether the first IPv6 GUA will be made the primary IPv6 address.
    privateIpAddress : str, default is Undefined, optional
        The primary private IPv4 address.
    securityGroups : [str], default is Undefined, optional
        A list of security group IDs to associate.
    subnetId : str, default is Undefined, optional
        The VPC Subnet ID to associate.
    """


    associateCarrierIpAddress?: str

    associatePublicIpAddress?: str

    deleteOnTermination?: str

    description?: str

    deviceIndex?: float

    interfaceType?: str

    ipv4AddressCount?: float

    ipv4Addresses?: [str]

    ipv4PrefixCount?: float

    ipv4Prefixes?: [str]

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    ipv6PrefixCount?: float

    ipv6Prefixes?: [str]

    networkCardIndex?: float

    networkInterfaceId?: str

    primaryIpv6?: str

    privateIpAddress?: str

    securityGroups?: [str]

    subnetId?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderPlacement:
    r"""
    The placement of the instance. See Placement below for more details.

    Attributes
    ----------
    affinity : str, default is Undefined, optional
        The affinity setting for an instance on a Dedicated Host.
    availabilityZone : str, default is Undefined, optional
        The Availability Zone for the instance.
    groupName : str, default is Undefined, optional
        The name of the placement group for the instance.
    hostId : str, default is Undefined, optional
        The ID of the Dedicated Host for the instance.
    hostResourceGroupArn : str, default is Undefined, optional
        The ARN of the Host Resource Group in which to launch instances.
    partitionNumber : float, default is Undefined, optional
        The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
    spreadDomain : str, default is Undefined, optional
        Reserved for future use.
    tenancy : str, default is Undefined, optional
        The tenancy of the instance (if the instance is running in a VPC). Can be default, dedicated, or host.
    """


    affinity?: str

    availabilityZone?: str

    groupName?: str

    hostId?: str

    hostResourceGroupArn?: str

    partitionNumber?: float

    spreadDomain?: str

    tenancy?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderPrivateDNSNameOptions:
    r"""
    The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    hostnameType : str, default is Undefined, optional
        The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusAtProviderTagSpecificationsItems0:
    r"""
    ec2 aws upbound io v1beta2 launch template status at provider tag specifications items0

    Attributes
    ----------
    resourceType : str, default is Undefined, optional
        The type of resource to tag.
    tags : {str:str}, default is Undefined, optional
        A map of tags to assign to the resource.
    """


    resourceType?: str

    tags?: {str:str}


schema Ec2AwsUpboundIoV1beta2LaunchTemplateStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


