"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Connection:
    r"""
    Connection is the Schema for the Connections API. Provides an Glue Connection resource.

    Attributes
    ----------
    apiVersion : str, default is "glue.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Connection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GlueAwsUpboundIoV1beta2ConnectionSpec, default is Undefined, required
        spec
    status : GlueAwsUpboundIoV1beta2ConnectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "glue.aws.upbound.io/v1beta2" = "glue.aws.upbound.io/v1beta2"

    kind: "Connection" = "Connection"

    metadata?: v1.ObjectMeta

    spec: GlueAwsUpboundIoV1beta2ConnectionSpec

    status?: GlueAwsUpboundIoV1beta2ConnectionStatus


schema GlueAwsUpboundIoV1beta2ConnectionSpec:
    r"""
    ConnectionSpec defines the desired state of Connection

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GlueAwsUpboundIoV1beta2ConnectionSpecForProvider, default is Undefined, required
        for provider
    initProvider : GlueAwsUpboundIoV1beta2ConnectionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GlueAwsUpboundIoV1beta2ConnectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GlueAwsUpboundIoV1beta2ConnectionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GlueAwsUpboundIoV1beta2ConnectionSpecForProvider

    initProvider?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GlueAwsUpboundIoV1beta2ConnectionSpecProviderConfigRef

    publishConnectionDetailsTo?: GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GlueAwsUpboundIoV1beta2ConnectionSpecWriteConnectionSecretToRef


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProvider:
    r"""
    glue aws upbound io v1beta2 connection spec for provider

    Attributes
    ----------
    catalogId : str, default is Undefined, required
        –  ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
    connectionPropertiesSecretRef : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderConnectionPropertiesSecretRef, default is Undefined, optional
        connection properties secret ref
    connectionType : str, default is Undefined, optional
        –  Type of the connection. Valid values: AZURECOSMOS, AZURESQL, BIGQUERY, CUSTOM, JDBC, KAFKA, MARKETPLACE, MONGODB, NETWORK, OPENSEARCH, SNOWFLAKE. Defaults to JDBC.
    description : str, default is Undefined, optional
        –  Description of the connection.
    matchCriteria : [str], default is Undefined, optional
        –  List of criteria that can be used in selecting this connection.
    physicalConnectionRequirements : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirements, default is Undefined, optional
        physical connection requirements
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    catalogId: str

    connectionPropertiesSecretRef?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderConnectionPropertiesSecretRef

    connectionType?: str

    description?: str

    matchCriteria?: [str]

    physicalConnectionRequirements?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirements

    region: str

    tags?: {str:str}


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderConnectionPropertiesSecretRef:
    r"""
    value pairs used as parameters for this connection. For more information, see the AWS Documentation.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirements:
    r"""
    Map of physical connection requirements, such as VPC and SecurityGroup. See physical_connection_requirements Block for details.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The availability zone of the connection. This field is redundant and implied by subnet_id, but is currently an api requirement.
    availabilityZoneRef : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneRef, default is Undefined, optional
        availability zone ref
    availabilityZoneSelector : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneSelector, default is Undefined, optional
        availability zone selector
    securityGroupIdList : [str], default is Undefined, optional
        The security group ID list used by the connection.
    securityGroupIdListRefs : [GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIdList.
    securityGroupIdListSelector : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListSelector, default is Undefined, optional
        security group Id list selector
    subnetId : str, default is Undefined, optional
        The subnet ID used by the connection.
    subnetIdRef : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    availabilityZone?: str

    availabilityZoneRef?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneRef

    availabilityZoneSelector?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneSelector

    securityGroupIdList?: [str]

    securityGroupIdListRefs?: [GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0]

    securityGroupIdListSelector?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListSelector

    subnetId?: str

    subnetIdRef?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDRef

    subnetIdSelector?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDSelector


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneRef:
    r"""
    Reference to a Subnet in ec2 to populate availabilityZone.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneRefPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneSelector:
    r"""
    Selector for a Subnet in ec2 to populate availabilityZone.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneSelectorPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsAvailabilityZoneSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0Policy


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIdList.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListSelectorPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSecurityGroupIDListSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDRefPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDSelectorPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecForProviderPhysicalConnectionRequirementsSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    connectionPropertiesSecretRef : {str:str}, default is Undefined, optional
        connection properties secret ref
    connectionType : str, default is Undefined, optional
        –  Type of the connection. Valid values: AZURECOSMOS, AZURESQL, BIGQUERY, CUSTOM, JDBC, KAFKA, MARKETPLACE, MONGODB, NETWORK, OPENSEARCH, SNOWFLAKE. Defaults to JDBC.
    description : str, default is Undefined, optional
        –  Description of the connection.
    matchCriteria : [str], default is Undefined, optional
        –  List of criteria that can be used in selecting this connection.
    physicalConnectionRequirements : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirements, default is Undefined, optional
        physical connection requirements
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    connectionPropertiesSecretRef?: {str:str}

    connectionType?: str

    description?: str

    matchCriteria?: [str]

    physicalConnectionRequirements?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirements

    tags?: {str:str}


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirements:
    r"""
    Map of physical connection requirements, such as VPC and SecurityGroup. See physical_connection_requirements Block for details.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The availability zone of the connection. This field is redundant and implied by subnet_id, but is currently an api requirement.
    availabilityZoneRef : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneRef, default is Undefined, optional
        availability zone ref
    availabilityZoneSelector : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneSelector, default is Undefined, optional
        availability zone selector
    securityGroupIdList : [str], default is Undefined, optional
        The security group ID list used by the connection.
    securityGroupIdListRefs : [GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIdList.
    securityGroupIdListSelector : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListSelector, default is Undefined, optional
        security group Id list selector
    subnetId : str, default is Undefined, optional
        The subnet ID used by the connection.
    subnetIdRef : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    availabilityZone?: str

    availabilityZoneRef?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneRef

    availabilityZoneSelector?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneSelector

    securityGroupIdList?: [str]

    securityGroupIdListRefs?: [GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0]

    securityGroupIdListSelector?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListSelector

    subnetId?: str

    subnetIdRef?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDRef

    subnetIdSelector?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDSelector


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneRef:
    r"""
    Reference to a Subnet in ec2 to populate availabilityZone.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneRefPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneSelector:
    r"""
    Selector for a Subnet in ec2 to populate availabilityZone.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneSelectorPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsAvailabilityZoneSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0Policy


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIdList.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListSelectorPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSecurityGroupIDListSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDRefPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDSelectorPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecInitProviderPhysicalConnectionRequirementsSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecProviderConfigRefPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRef

    metadata?: GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToMetadata

    name: str


schema GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRefPolicy


schema GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta2ConnectionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta2ConnectionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GlueAwsUpboundIoV1beta2ConnectionStatus:
    r"""
    ConnectionStatus defines the observed state of Connection.

    Attributes
    ----------
    atProvider : GlueAwsUpboundIoV1beta2ConnectionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GlueAwsUpboundIoV1beta2ConnectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GlueAwsUpboundIoV1beta2ConnectionStatusAtProvider

    conditions?: [GlueAwsUpboundIoV1beta2ConnectionStatusConditionsItems0]

    observedGeneration?: int


schema GlueAwsUpboundIoV1beta2ConnectionStatusAtProvider:
    r"""
    glue aws upbound io v1beta2 connection status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the Glue Connection.
    catalogId : str, default is Undefined, optional
        –  ID of the Data Catalog in which to create the connection. If none is supplied, the AWS account ID is used by default.
    connectionType : str, default is Undefined, optional
        –  Type of the connection. Valid values: AZURECOSMOS, AZURESQL, BIGQUERY, CUSTOM, JDBC, KAFKA, MARKETPLACE, MONGODB, NETWORK, OPENSEARCH, SNOWFLAKE. Defaults to JDBC.
    description : str, default is Undefined, optional
        –  Description of the connection.
    id : str, default is Undefined, optional
        Catalog ID and name of the connection.
    matchCriteria : [str], default is Undefined, optional
        –  List of criteria that can be used in selecting this connection.
    physicalConnectionRequirements : GlueAwsUpboundIoV1beta2ConnectionStatusAtProviderPhysicalConnectionRequirements, default is Undefined, optional
        physical connection requirements
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    catalogId?: str

    connectionType?: str

    description?: str

    id?: str

    matchCriteria?: [str]

    physicalConnectionRequirements?: GlueAwsUpboundIoV1beta2ConnectionStatusAtProviderPhysicalConnectionRequirements

    tags?: {str:str}

    tagsAll?: {str:str}


schema GlueAwsUpboundIoV1beta2ConnectionStatusAtProviderPhysicalConnectionRequirements:
    r"""
    Map of physical connection requirements, such as VPC and SecurityGroup. See physical_connection_requirements Block for details.

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The availability zone of the connection. This field is redundant and implied by subnet_id, but is currently an api requirement.
    securityGroupIdList : [str], default is Undefined, optional
        The security group ID list used by the connection.
    subnetId : str, default is Undefined, optional
        The subnet ID used by the connection.
    """


    availabilityZone?: str

    securityGroupIdList?: [str]

    subnetId?: str


schema GlueAwsUpboundIoV1beta2ConnectionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


