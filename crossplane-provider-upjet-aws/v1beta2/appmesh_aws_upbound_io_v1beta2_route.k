"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Route:
    r"""
    Route is the Schema for the Routes API. Provides an AWS App Mesh route resource.

    Attributes
    ----------
    apiVersion : str, default is "appmesh.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Route", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppmeshAwsUpboundIoV1beta2RouteSpec, default is Undefined, required
        spec
    status : AppmeshAwsUpboundIoV1beta2RouteStatus, default is Undefined, optional
        status
    """


    apiVersion: "appmesh.aws.upbound.io/v1beta2" = "appmesh.aws.upbound.io/v1beta2"

    kind: "Route" = "Route"

    metadata?: v1.ObjectMeta

    spec: AppmeshAwsUpboundIoV1beta2RouteSpec

    status?: AppmeshAwsUpboundIoV1beta2RouteStatus


schema AppmeshAwsUpboundIoV1beta2RouteSpec:
    r"""
    RouteSpec defines the desired state of Route

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppmeshAwsUpboundIoV1beta2RouteSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppmeshAwsUpboundIoV1beta2RouteSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppmeshAwsUpboundIoV1beta2RouteSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppmeshAwsUpboundIoV1beta2RouteSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppmeshAwsUpboundIoV1beta2RouteSpecForProvider

    initProvider?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppmeshAwsUpboundIoV1beta2RouteSpecProviderConfigRef

    publishConnectionDetailsTo?: AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppmeshAwsUpboundIoV1beta2RouteSpecWriteConnectionSecretToRef


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProvider:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    spec : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    virtualRouterName : str, default is Undefined, optional
        Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
    virtualRouterNameRef : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameRef, default is Undefined, optional
        virtual router name ref
    virtualRouterNameSelector : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameSelector, default is Undefined, optional
        virtual router name selector
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameSelector

    meshOwner?: str

    name?: str

    region: str

    spec?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpec

    tags?: {str:str}

    virtualRouterName?: str

    virtualRouterNameRef?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameRef

    virtualRouterNameSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameSelector


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpec:
    r"""
    Route specification to apply.

    Attributes
    ----------
    grpcRoute : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRoute, default is Undefined, optional
        grpc route
    http2Route : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2Route, default is Undefined, optional
        http2 route
    httpRoute : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRoute, default is Undefined, optional
        http route
    priority : float, default is Undefined, optional
        Priority for the route, between 0 and 1000.
        Routes are matched based on the specified value, where 0 is the highest priority.
    tcpRoute : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRoute, default is Undefined, optional
        tcp route
    """


    grpcRoute?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRoute

    http2Route?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2Route

    httpRoute?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRoute

    priority?: float

    tcpRoute?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRoute


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRoute:
    r"""
    GRPC routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec grpc route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    metadata : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0], default is Undefined, optional
        Data to match from the gRPC request.
    methodName : str, default is Undefined, optional
        Method name to match from the request. If you specify a name, you must also specify a service_name.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    serviceName : str, default is Undefined, optional
        Fully qualified domain name for the service to match from the request.
    """


    metadata?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0]

    methodName?: str

    port?: float

    prefix?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec grpc route match metadata items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteMatchMetadataItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    grpcRetryEvents : [str], default is Undefined, optional
        List of gRPC retry events.
        Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    grpcRetryEvents?: [str]

    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecGrpcRouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRoute:
    r"""
    HTTP routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec HTTP route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchPath, default is Undefined, optional
        path
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchQueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0]

    method?: str

    path?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchPath

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchQueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec HTTP route match header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchHeaderItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchPath:
    r"""
    Client request path to match on.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchQueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec HTTP route match query parameter items0

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchQueryParameterItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchQueryParameterItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteMatchQueryParameterItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHTTPRouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2Route:
    r"""
    HTTP/2 routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec http2 route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchPath, default is Undefined, optional
        path
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchQueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0]

    method?: str

    path?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchPath

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchQueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec http2 route match header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchHeaderItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchPath:
    r"""
    Client request path to match on.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchQueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec http2 route match query parameter items0

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchQueryParameterItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchQueryParameterItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteMatchQueryParameterItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecHttp2RouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRoute:
    r"""
    TCP routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteMatch, default is Undefined, optional
        match
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteMatch

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec for provider spec TCP route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    """


    port?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteTimeoutIdle, default is Undefined, optional
        idle
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteTimeoutIdle


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderSpecTCPRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameRef:
    r"""
    Reference to a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameSelector:
    r"""
    Selector for a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecForProviderVirtualRouterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    spec : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    virtualRouterName : str, default is Undefined, optional
        Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
    virtualRouterNameRef : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameRef, default is Undefined, optional
        virtual router name ref
    virtualRouterNameSelector : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameSelector, default is Undefined, optional
        virtual router name selector
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameSelector

    meshOwner?: str

    name?: str

    spec?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpec

    tags?: {str:str}

    virtualRouterName?: str

    virtualRouterNameRef?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameRef

    virtualRouterNameSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameSelector


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpec:
    r"""
    Route specification to apply.

    Attributes
    ----------
    grpcRoute : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRoute, default is Undefined, optional
        grpc route
    http2Route : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2Route, default is Undefined, optional
        http2 route
    httpRoute : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRoute, default is Undefined, optional
        http route
    priority : float, default is Undefined, optional
        Priority for the route, between 0 and 1000.
        Routes are matched based on the specified value, where 0 is the highest priority.
    tcpRoute : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRoute, default is Undefined, optional
        tcp route
    """


    grpcRoute?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRoute

    http2Route?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2Route

    httpRoute?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRoute

    priority?: float

    tcpRoute?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRoute


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRoute:
    r"""
    GRPC routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec grpc route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    metadata : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0], default is Undefined, optional
        Data to match from the gRPC request.
    methodName : str, default is Undefined, optional
        Method name to match from the request. If you specify a name, you must also specify a service_name.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    serviceName : str, default is Undefined, optional
        Fully qualified domain name for the service to match from the request.
    """


    metadata?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0]

    methodName?: str

    port?: float

    prefix?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec grpc route match metadata items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteMatchMetadataItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    grpcRetryEvents : [str], default is Undefined, optional
        List of gRPC retry events.
        Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    grpcRetryEvents?: [str]

    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecGrpcRouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRoute:
    r"""
    HTTP routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec HTTP route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchPath, default is Undefined, optional
        path
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchQueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0]

    method?: str

    path?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchPath

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchQueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec HTTP route match header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchHeaderItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchPath:
    r"""
    Client request path to match on.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchQueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec HTTP route match query parameter items0

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchQueryParameterItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchQueryParameterItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteMatchQueryParameterItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHTTPRouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2Route:
    r"""
    HTTP/2 routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec http2 route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchPath, default is Undefined, optional
        path
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchQueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0]

    method?: str

    path?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchPath

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchQueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec http2 route match header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchHeaderItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchPath:
    r"""
    Client request path to match on.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchQueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec http2 route match query parameter items0

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchQueryParameterItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchQueryParameterItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteMatchQueryParameterItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecHttp2RouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRoute:
    r"""
    TCP routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteMatch, default is Undefined, optional
        match
    timeout : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteMatch

    timeout?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route spec init provider spec TCP route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    virtualNodeRef : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRef, default is Undefined, optional
        virtual node ref
    virtualNodeSelector : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelector, default is Undefined, optional
        virtual node selector
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    virtualNodeRef?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRef

    virtualNodeSelector?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelector

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRef:
    r"""
    Reference to a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelector:
    r"""
    Selector for a VirtualNode in appmesh to populate virtualNode.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteActionWeightedTargetItems0VirtualNodeSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    """


    port?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteTimeoutIdle, default is Undefined, optional
        idle
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteTimeoutIdle


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderSpecTCPRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameRef:
    r"""
    Reference to a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameSelector:
    r"""
    Selector for a VirtualRouter in appmesh to populate virtualRouterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecInitProviderVirtualRouterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecProviderConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToConfigRef

    metadata?: AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToMetadata

    name: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2RouteSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppmeshAwsUpboundIoV1beta2RouteSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppmeshAwsUpboundIoV1beta2RouteStatus:
    r"""
    RouteStatus defines the observed state of Route.

    Attributes
    ----------
    atProvider : AppmeshAwsUpboundIoV1beta2RouteStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppmeshAwsUpboundIoV1beta2RouteStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProvider

    conditions?: [AppmeshAwsUpboundIoV1beta2RouteStatusConditionsItems0]

    observedGeneration?: int


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProvider:
    r"""
    appmesh aws upbound io v1beta2 route status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the route.
    createdDate : str, default is Undefined, optional
        Creation date of the route.
    id : str, default is Undefined, optional
        ID of the route.
    lastUpdatedDate : str, default is Undefined, optional
        Last update date of the route.
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    resourceOwner : str, default is Undefined, optional
        Resource owner's AWS account ID.
    spec : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    virtualRouterName : str, default is Undefined, optional
        Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
    """


    arn?: str

    createdDate?: str

    id?: str

    lastUpdatedDate?: str

    meshName?: str

    meshOwner?: str

    name?: str

    resourceOwner?: str

    spec?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpec

    tags?: {str:str}

    tagsAll?: {str:str}

    virtualRouterName?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpec:
    r"""
    Route specification to apply.

    Attributes
    ----------
    grpcRoute : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRoute, default is Undefined, optional
        grpc route
    http2Route : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2Route, default is Undefined, optional
        http2 route
    httpRoute : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRoute, default is Undefined, optional
        http route
    priority : float, default is Undefined, optional
        Priority for the route, between 0 and 1000.
        Routes are matched based on the specified value, where 0 is the highest priority.
    tcpRoute : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRoute, default is Undefined, optional
        tcp route
    """


    grpcRoute?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRoute

    http2Route?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2Route

    httpRoute?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRoute

    priority?: float

    tcpRoute?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRoute


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRoute:
    r"""
    GRPC routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec grpc route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    metadata : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0], default is Undefined, optional
        Data to match from the gRPC request.
    methodName : str, default is Undefined, optional
        Method name to match from the request. If you specify a name, you must also specify a service_name.
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    serviceName : str, default is Undefined, optional
        Fully qualified domain name for the service to match from the request.
    """


    metadata?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0]

    methodName?: str

    port?: float

    prefix?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec grpc route match metadata items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteMatchMetadataItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    grpcRetryEvents : [str], default is Undefined, optional
        List of gRPC retry events.
        Valid values: cancelled, deadline-exceeded, internal, resource-exhausted, unavailable.
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    grpcRetryEvents?: [str]

    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecGrpcRouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRoute:
    r"""
    HTTP routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec HTTP route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchPath, default is Undefined, optional
        path
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchQueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0]

    method?: str

    path?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchPath

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchQueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec HTTP route match header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchHeaderItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchPath:
    r"""
    Client request path to match on.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchQueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec HTTP route match query parameter items0

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchQueryParameterItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchQueryParameterItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteMatchQueryParameterItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHTTPRouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2Route:
    r"""
    HTTP/2 routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatch, default is Undefined, optional
        match
    retryPolicy : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteRetryPolicy, default is Undefined, optional
        retry policy
    timeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatch

    retryPolicy?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteRetryPolicy

    timeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec http2 route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    header : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0], default is Undefined, optional
        Client request headers to match on.
    method : str, default is Undefined, optional
        Client request header method to match on. Valid values: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH.
    path : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchPath, default is Undefined, optional
        path
    port : float, default is Undefined, optional
        The port number to match from the request.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    queryParameter : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchQueryParameterItems0], default is Undefined, optional
        Client request query parameters to match on.
    scheme : str, default is Undefined, optional
        Client request header scheme to match on. Valid values: http, https.
    """


    header?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0]

    method?: str

    path?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchPath

    port?: float

    prefix?: str

    queryParameter?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchQueryParameterItems0]

    scheme?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec http2 route match header items0

    Attributes
    ----------
    invert : bool, default is Undefined, optional
        If true, the match is on the opposite of the match criteria. Default is false.
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    invert?: bool

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    prefix : str, default is Undefined, optional
        Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.
    range : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0MatchRange, default is Undefined, optional
        range
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    suffix : str, default is Undefined, optional
        Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    prefix?: str

    range?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0MatchRange

    regex?: str

    suffix?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchHeaderItems0MatchRange:
    r"""
    Object that specifies the range of numbers that the value sent by the client must be included in.

    Attributes
    ----------
    end : float, default is Undefined, optional
        End of the range.
    start : float, default is Undefined, optional
        (Requited) Start of the range.
    """


    end?: float

    start?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchPath:
    r"""
    Client request path to match on.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    regex : str, default is Undefined, optional
        Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.
    """


    exact?: str

    regex?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchQueryParameterItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec http2 route match query parameter items0

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchQueryParameterItems0Match, default is Undefined, optional
        match
    name : str, default is Undefined, optional
        Name to use for the route. Must be between 1 and 255 characters in length.
    """


    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchQueryParameterItems0Match

    name?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteMatchQueryParameterItems0Match:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    exact : str, default is Undefined, optional
        Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.
    """


    exact?: str


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteRetryPolicy:
    r"""
    Retry policy.

    Attributes
    ----------
    httpRetryEvents : [str], default is Undefined, optional
        List of HTTP retry events.
        Valid values: client-error (HTTP status code 409), gateway-error (HTTP status codes 502, 503, and 504), server-error (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), stream-error (retry on refused stream).
    maxRetries : float, default is Undefined, optional
        Maximum number of retries.
    perRetryTimeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteRetryPolicyPerRetryTimeout, default is Undefined, optional
        per retry timeout
    tcpRetryEvents : [str], default is Undefined, optional
        List of TCP retry events. The only valid value is connection-error.
    """


    httpRetryEvents?: [str]

    maxRetries?: float

    perRetryTimeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteRetryPolicyPerRetryTimeout

    tcpRetryEvents?: [str]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteRetryPolicyPerRetryTimeout:
    r"""
    Per-retry timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeoutIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeoutPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeoutIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeoutPerRequest


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecHttp2RouteTimeoutPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRoute:
    r"""
    TCP routing information for the route.

    Attributes
    ----------
    action : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteAction, default is Undefined, optional
        action
    match : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteMatch, default is Undefined, optional
        match
    timeout : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteTimeout, default is Undefined, optional
        timeout
    """


    action?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteAction

    match?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteMatch

    timeout?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteTimeout


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteAction:
    r"""
    Action to take if a match is determined.

    Attributes
    ----------
    weightedTarget : [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteActionWeightedTargetItems0], default is Undefined, optional
        Targets that traffic is routed to when a request matches the route.
        You can specify one or more targets and their relative weights with which to distribute traffic.
    """


    weightedTarget?: [AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteActionWeightedTargetItems0]


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteActionWeightedTargetItems0:
    r"""
    appmesh aws upbound io v1beta2 route status at provider spec TCP route action weighted target items0

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    virtualNode : str, default is Undefined, optional
        Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.
    weight : float, default is Undefined, optional
        Relative weight of the weighted target. An integer between 0 and 100.
    """


    port?: float

    virtualNode?: str

    weight?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteMatch:
    r"""
    Criteria for determining an gRPC request match.

    Attributes
    ----------
    port : float, default is Undefined, optional
        The port number to match from the request.
    """


    port?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteTimeout:
    r"""
    Types of timeouts.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteTimeoutIdle, default is Undefined, optional
        idle
    """


    idle?: AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteTimeoutIdle


schema AppmeshAwsUpboundIoV1beta2RouteStatusAtProviderSpecTCPRouteTimeoutIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        Number of time units. Minimum value of 0.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2RouteStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


