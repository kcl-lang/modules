"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema InfrastructureConfiguration:
    r"""
    InfrastructureConfiguration is the Schema for the InfrastructureConfigurations API. Manages an Image Builder Infrastructure Configuration

    Attributes
    ----------
    apiVersion : str, default is "imagebuilder.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "InfrastructureConfiguration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpec, default is Undefined, required
        spec
    status : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatus, default is Undefined, optional
        status
    """


    apiVersion: "imagebuilder.aws.upbound.io/v1beta2" = "imagebuilder.aws.upbound.io/v1beta2"

    kind: "InfrastructureConfiguration" = "InfrastructureConfiguration"

    metadata?: v1.ObjectMeta

    spec: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpec

    status?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatus


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpec:
    r"""
    InfrastructureConfigurationSpec defines the desired state of InfrastructureConfiguration

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProvider, default is Undefined, required
        for provider
    initProvider : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProvider

    initProvider?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecProviderConfigRef

    publishConnectionDetailsTo?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecWriteConnectionSecretToRef


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProvider:
    r"""
    imagebuilder aws upbound io v1beta2 infrastructure configuration spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description for the configuration.
    instanceMetadataOptions : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceMetadataOptions, default is Undefined, optional
        instance metadata options
    instanceProfileName : str, default is Undefined, optional
        Name of IAM Instance Profile.
    instanceProfileNameRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameRef, default is Undefined, optional
        instance profile name ref
    instanceProfileNameSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameSelector, default is Undefined, optional
        instance profile name selector
    instanceTypes : [str], default is Undefined, optional
        Set of EC2 Instance Types.
    keyPair : str, default is Undefined, optional
        Name of EC2 Key Pair.
    keyPairRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairRef, default is Undefined, optional
        key pair ref
    keyPairSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairSelector, default is Undefined, optional
        key pair selector
    logging : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLogging, default is Undefined, optional
        logging
    name : str, default is Undefined, optional
        Name for the configuration.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceTags : {str:str}, default is Undefined, optional
        Key-value map of resource tags to assign to infrastructure created by the configuration.
    securityGroupIdRefs : [ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        Set of EC2 Security Group identifiers.
    snsTopicArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of SNS Topic.
    snsTopicArnRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnRef, default is Undefined, optional
        sns topic arn ref
    snsTopicArnSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnSelector, default is Undefined, optional
        sns topic arn selector
    subnetId : str, default is Undefined, optional
        EC2 Subnet identifier. Also requires security_group_ids argument.
    subnetIdRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    terminateInstanceOnFailure : bool, default is Undefined, optional
        Enable if the instance should be terminated when the pipeline fails. Defaults to false.
    """


    description?: str

    instanceMetadataOptions?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceMetadataOptions

    instanceProfileName?: str

    instanceProfileNameRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameRef

    instanceProfileNameSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameSelector

    instanceTypes?: [str]

    keyPair?: str

    keyPairRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairRef

    keyPairSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairSelector

    logging?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLogging

    name?: str

    region: str

    resourceTags?: {str:str}

    securityGroupIdRefs?: [ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snsTopicArn?: str

    snsTopicArnRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnRef

    snsTopicArnSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnSelector

    subnetId?: str

    subnetIdRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDRef

    subnetIdSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDSelector

    tags?: {str:str}

    terminateInstanceOnFailure?: bool


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceMetadataOptions:
    r"""
    Configuration block with instance metadata options for the HTTP requests that pipeline builds use to launch EC2 build and test instances. Detailed below.

    Attributes
    ----------
    httpPutResponseHopLimit : float, default is Undefined, optional
        The number of hops that an instance can traverse to reach its destonation.
    httpTokens : str, default is Undefined, optional
        Whether a signed token is required for instance metadata retrieval requests. Valid values: required, optional.
    """


    httpPutResponseHopLimit?: float

    httpTokens?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameRef:
    r"""
    Reference to a InstanceProfile in iam to populate instanceProfileName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameSelector:
    r"""
    Selector for a InstanceProfile in iam to populate instanceProfileName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderInstanceProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairRef:
    r"""
    Reference to a KeyPair in ec2 to populate keyPair.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairSelector:
    r"""
    Selector for a KeyPair in ec2 to populate keyPair.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderKeyPairSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLogging:
    r"""
    Configuration block with logging settings. Detailed below.

    Attributes
    ----------
    s3Logs : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3Logs, default is Undefined, optional
        s3 logs
    """


    s3Logs?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3Logs


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3Logs:
    r"""
    Configuration block with S3 logging settings. Detailed below.

    Attributes
    ----------
    s3BucketName : str, default is Undefined, optional
        Name of the S3 Bucket.
    s3BucketNameRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameRef, default is Undefined, optional
        s3 bucket name ref
    s3BucketNameSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameSelector, default is Undefined, optional
        s3 bucket name selector
    s3KeyPrefix : str, default is Undefined, optional
        Prefix to use for S3 logs. Defaults to /.
    """


    s3BucketName?: str

    s3BucketNameRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameRef

    s3BucketNameSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameSelector

    s3KeyPrefix?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameRef:
    r"""
    Reference to a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameSelector:
    r"""
    Selector for a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderLoggingS3LogsS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDRefsItems0Policy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnRef:
    r"""
    Reference to a Topic in sns to populate snsTopicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnSelector:
    r"""
    Selector for a Topic in sns to populate snsTopicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSnsTopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description for the configuration.
    instanceMetadataOptions : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceMetadataOptions, default is Undefined, optional
        instance metadata options
    instanceProfileName : str, default is Undefined, optional
        Name of IAM Instance Profile.
    instanceProfileNameRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameRef, default is Undefined, optional
        instance profile name ref
    instanceProfileNameSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameSelector, default is Undefined, optional
        instance profile name selector
    instanceTypes : [str], default is Undefined, optional
        Set of EC2 Instance Types.
    keyPair : str, default is Undefined, optional
        Name of EC2 Key Pair.
    keyPairRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairRef, default is Undefined, optional
        key pair ref
    keyPairSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairSelector, default is Undefined, optional
        key pair selector
    logging : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLogging, default is Undefined, optional
        logging
    name : str, default is Undefined, optional
        Name for the configuration.
    resourceTags : {str:str}, default is Undefined, optional
        Key-value map of resource tags to assign to infrastructure created by the configuration.
    securityGroupIdRefs : [ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        Set of EC2 Security Group identifiers.
    snsTopicArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of SNS Topic.
    snsTopicArnRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnRef, default is Undefined, optional
        sns topic arn ref
    snsTopicArnSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnSelector, default is Undefined, optional
        sns topic arn selector
    subnetId : str, default is Undefined, optional
        EC2 Subnet identifier. Also requires security_group_ids argument.
    subnetIdRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    terminateInstanceOnFailure : bool, default is Undefined, optional
        Enable if the instance should be terminated when the pipeline fails. Defaults to false.
    """


    description?: str

    instanceMetadataOptions?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceMetadataOptions

    instanceProfileName?: str

    instanceProfileNameRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameRef

    instanceProfileNameSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameSelector

    instanceTypes?: [str]

    keyPair?: str

    keyPairRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairRef

    keyPairSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairSelector

    logging?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLogging

    name?: str

    resourceTags?: {str:str}

    securityGroupIdRefs?: [ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snsTopicArn?: str

    snsTopicArnRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnRef

    snsTopicArnSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnSelector

    subnetId?: str

    subnetIdRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDRef

    subnetIdSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDSelector

    tags?: {str:str}

    terminateInstanceOnFailure?: bool


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceMetadataOptions:
    r"""
    Configuration block with instance metadata options for the HTTP requests that pipeline builds use to launch EC2 build and test instances. Detailed below.

    Attributes
    ----------
    httpPutResponseHopLimit : float, default is Undefined, optional
        The number of hops that an instance can traverse to reach its destonation.
    httpTokens : str, default is Undefined, optional
        Whether a signed token is required for instance metadata retrieval requests. Valid values: required, optional.
    """


    httpPutResponseHopLimit?: float

    httpTokens?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameRef:
    r"""
    Reference to a InstanceProfile in iam to populate instanceProfileName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameSelector:
    r"""
    Selector for a InstanceProfile in iam to populate instanceProfileName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderInstanceProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairRef:
    r"""
    Reference to a KeyPair in ec2 to populate keyPair.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairSelector:
    r"""
    Selector for a KeyPair in ec2 to populate keyPair.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderKeyPairSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLogging:
    r"""
    Configuration block with logging settings. Detailed below.

    Attributes
    ----------
    s3Logs : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3Logs, default is Undefined, optional
        s3 logs
    """


    s3Logs?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3Logs


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3Logs:
    r"""
    Configuration block with S3 logging settings. Detailed below.

    Attributes
    ----------
    s3BucketName : str, default is Undefined, optional
        Name of the S3 Bucket.
    s3BucketNameRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameRef, default is Undefined, optional
        s3 bucket name ref
    s3BucketNameSelector : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameSelector, default is Undefined, optional
        s3 bucket name selector
    s3KeyPrefix : str, default is Undefined, optional
        Prefix to use for S3 logs. Defaults to /.
    """


    s3BucketName?: str

    s3BucketNameRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameRef

    s3BucketNameSelector?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameSelector

    s3KeyPrefix?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameRef:
    r"""
    Reference to a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameSelector:
    r"""
    Selector for a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderLoggingS3LogsS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDRefsItems0Policy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnRef:
    r"""
    Reference to a Topic in sns to populate snsTopicArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnSelector:
    r"""
    Selector for a Topic in sns to populate snsTopicArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSnsTopicArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDSelectorPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecProviderConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToConfigRef

    metadata?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToMetadata

    name: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToConfigRefPolicy


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatus:
    r"""
    InfrastructureConfigurationStatus defines the observed state of InfrastructureConfiguration.

    Attributes
    ----------
    atProvider : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProvider

    conditions?: [ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusConditionsItems0]

    observedGeneration?: int


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProvider:
    r"""
    imagebuilder aws upbound io v1beta2 infrastructure configuration status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the configuration.
    dateCreated : str, default is Undefined, optional
        Date when the configuration was created.
    dateUpdated : str, default is Undefined, optional
        Date when the configuration was updated.
    description : str, default is Undefined, optional
        Description for the configuration.
    id : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the configuration.
    instanceMetadataOptions : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderInstanceMetadataOptions, default is Undefined, optional
        instance metadata options
    instanceProfileName : str, default is Undefined, optional
        Name of IAM Instance Profile.
    instanceTypes : [str], default is Undefined, optional
        Set of EC2 Instance Types.
    keyPair : str, default is Undefined, optional
        Name of EC2 Key Pair.
    logging : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderLogging, default is Undefined, optional
        logging
    name : str, default is Undefined, optional
        Name for the configuration.
    resourceTags : {str:str}, default is Undefined, optional
        Key-value map of resource tags to assign to infrastructure created by the configuration.
    securityGroupIds : [str], default is Undefined, optional
        Set of EC2 Security Group identifiers.
    snsTopicArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of SNS Topic.
    subnetId : str, default is Undefined, optional
        EC2 Subnet identifier. Also requires security_group_ids argument.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    terminateInstanceOnFailure : bool, default is Undefined, optional
        Enable if the instance should be terminated when the pipeline fails. Defaults to false.
    """


    arn?: str

    dateCreated?: str

    dateUpdated?: str

    description?: str

    id?: str

    instanceMetadataOptions?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderInstanceMetadataOptions

    instanceProfileName?: str

    instanceTypes?: [str]

    keyPair?: str

    logging?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderLogging

    name?: str

    resourceTags?: {str:str}

    securityGroupIds?: [str]

    snsTopicArn?: str

    subnetId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    terminateInstanceOnFailure?: bool


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderInstanceMetadataOptions:
    r"""
    Configuration block with instance metadata options for the HTTP requests that pipeline builds use to launch EC2 build and test instances. Detailed below.

    Attributes
    ----------
    httpPutResponseHopLimit : float, default is Undefined, optional
        The number of hops that an instance can traverse to reach its destonation.
    httpTokens : str, default is Undefined, optional
        Whether a signed token is required for instance metadata retrieval requests. Valid values: required, optional.
    """


    httpPutResponseHopLimit?: float

    httpTokens?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderLogging:
    r"""
    Configuration block with logging settings. Detailed below.

    Attributes
    ----------
    s3Logs : ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderLoggingS3Logs, default is Undefined, optional
        s3 logs
    """


    s3Logs?: ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderLoggingS3Logs


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusAtProviderLoggingS3Logs:
    r"""
    Configuration block with S3 logging settings. Detailed below.

    Attributes
    ----------
    s3BucketName : str, default is Undefined, optional
        Name of the S3 Bucket.
    s3KeyPrefix : str, default is Undefined, optional
        Prefix to use for S3 logs. Defaults to /.
    """


    s3BucketName?: str

    s3KeyPrefix?: str


schema ImagebuilderAwsUpboundIoV1beta2InfrastructureConfigurationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


