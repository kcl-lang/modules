"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TopicRule:
    r"""
    TopicRule is the Schema for the TopicRules API. Creates and manages an AWS IoT topic rule

    Attributes
    ----------
    apiVersion : str, default is "iot.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TopicRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IotAwsUpboundIoV1beta2TopicRuleSpec, default is Undefined, required
        spec
    status : IotAwsUpboundIoV1beta2TopicRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "iot.aws.upbound.io/v1beta2" = "iot.aws.upbound.io/v1beta2"

    kind: "TopicRule" = "TopicRule"

    metadata?: v1.ObjectMeta

    spec: IotAwsUpboundIoV1beta2TopicRuleSpec

    status?: IotAwsUpboundIoV1beta2TopicRuleStatus


schema IotAwsUpboundIoV1beta2TopicRuleSpec:
    r"""
    TopicRuleSpec defines the desired state of TopicRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : IotAwsUpboundIoV1beta2TopicRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : IotAwsUpboundIoV1beta2TopicRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : IotAwsUpboundIoV1beta2TopicRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : IotAwsUpboundIoV1beta2TopicRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: IotAwsUpboundIoV1beta2TopicRuleSpecForProvider

    initProvider?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: IotAwsUpboundIoV1beta2TopicRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: IotAwsUpboundIoV1beta2TopicRuleSpecWriteConnectionSecretToRef


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProvider:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider

    Attributes
    ----------
    cloudwatchAlarm : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchAlarmItems0], default is Undefined, optional
        cloudwatch alarm
    cloudwatchLogs : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchLogsItems0], default is Undefined, optional
        cloudwatch logs
    cloudwatchMetric : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchMetricItems0], default is Undefined, optional
        cloudwatch metric
    description : str, default is Undefined, optional
        The description of the rule.
    dynamodb : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbItems0], default is Undefined, optional
        dynamodb
    dynamodbv2 : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbv2Items0], default is Undefined, optional
        dynamodbv2
    elasticsearch : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderElasticsearchItems0], default is Undefined, optional
        elasticsearch
    enabled : bool, default is Undefined, optional
        Specifies whether the rule is enabled.
    errorAction : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorAction, default is Undefined, optional
        error action
    firehose : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderFirehoseItems0], default is Undefined, optional
        firehose
    http : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderHTTPItems0], default is Undefined, optional
        http
    iotAnalytics : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderIotAnalyticsItems0], default is Undefined, optional
        iot analytics
    iotEvents : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderIotEventsItems0], default is Undefined, optional
        iot events
    kafka : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKafkaItems0], default is Undefined, optional
        kafka
    kinesis : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKinesisItems0], default is Undefined, optional
        kinesis
    $lambda : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderLambdaItems0], default is Undefined, optional
        lambda
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    republish : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderRepublishItems0], default is Undefined, optional
        republish
    s3 : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderS3Items0], default is Undefined, optional
        s3
    sns : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0], default is Undefined, optional
        sns
    sql : str, default is Undefined, optional
        The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
    sqlVersion : str, default is Undefined, optional
        The version of the SQL rules engine to use when evaluating the rule.
    sqs : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSqsItems0], default is Undefined, optional
        sqs
    stepFunctions : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderStepFunctionsItems0], default is Undefined, optional
        step functions
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timestream : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0], default is Undefined, optional
        timestream
    """


    cloudwatchAlarm?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchAlarmItems0]

    cloudwatchLogs?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchLogsItems0]

    cloudwatchMetric?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchMetricItems0]

    description?: str

    dynamodb?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbItems0]

    dynamodbv2?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbv2Items0]

    elasticsearch?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderElasticsearchItems0]

    enabled?: bool

    errorAction?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorAction

    firehose?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderFirehoseItems0]

    http?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderHTTPItems0]

    iotAnalytics?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderIotAnalyticsItems0]

    iotEvents?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderIotEventsItems0]

    kafka?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKafkaItems0]

    kinesis?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKinesisItems0]

    $lambda?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderLambdaItems0]

    region: str

    republish?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderRepublishItems0]

    s3?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderS3Items0]

    sns?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0]

    sql?: str

    sqlVersion?: str

    sqs?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSqsItems0]

    stepFunctions?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderStepFunctionsItems0]

    tags?: {str:str}

    timestream?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0]


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchAlarmItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider cloudwatch alarm items0

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The CloudWatch alarm name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateReason : str, default is Undefined, optional
        The reason for the alarm change.
    stateValue : str, default is Undefined, optional
        The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
    """


    alarmName?: str

    roleArn?: str

    stateReason?: str

    stateValue?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchLogsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider cloudwatch logs items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    logGroupName : str, default is Undefined, optional
        The CloudWatch log group name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    logGroupName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderCloudwatchMetricItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider cloudwatch metric items0

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The CloudWatch metric name.
    metricNamespace : str, default is Undefined, optional
        The CloudWatch metric namespace name.
    metricTimestamp : str, default is Undefined, optional
        An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
    metricUnit : str, default is Undefined, optional
        The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
    metricValue : str, default is Undefined, optional
        The CloudWatch metric value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    metricName?: str

    metricNamespace?: str

    metricTimestamp?: str

    metricUnit?: str

    metricValue?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider dynamodb items0

    Attributes
    ----------
    hashKeyField : str, default is Undefined, optional
        The hash key name.
    hashKeyType : str, default is Undefined, optional
        The hash key type. Valid values are "STRING" or "NUMBER".
    hashKeyValue : str, default is Undefined, optional
        The hash key value.
    operation : str, default is Undefined, optional
        The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
    payloadField : str, default is Undefined, optional
        The action payload.
    rangeKeyField : str, default is Undefined, optional
        The range key name.
    rangeKeyType : str, default is Undefined, optional
        The range key type. Valid values are "STRING" or "NUMBER".
    rangeKeyValue : str, default is Undefined, optional
        The range key value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    hashKeyField?: str

    hashKeyType?: str

    hashKeyValue?: str

    operation?: str

    payloadField?: str

    rangeKeyField?: str

    rangeKeyType?: str

    rangeKeyValue?: str

    roleArn?: str

    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbv2Items0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider dynamodbv2 items0

    Attributes
    ----------
    putItem : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbv2Items0PutItem, default is Undefined, optional
        put item
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    putItem?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbv2Items0PutItem

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderDynamodbv2Items0PutItem:
    r"""
    Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.

    Attributes
    ----------
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderElasticsearchItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider elasticsearch items0

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        The endpoint of your Elasticsearch domain.
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    index : str, default is Undefined, optional
        The Elasticsearch index where you want to store your data.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    $type : str, default is Undefined, optional
        The type of document you are storing.
    """


    endpoint?: str

    id?: str

    index?: str

    roleArn?: str

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorAction:
    r"""
    Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.

    Attributes
    ----------
    cloudwatchAlarm : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchAlarm, default is Undefined, optional
        cloudwatch alarm
    cloudwatchLogs : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchLogs, default is Undefined, optional
        cloudwatch logs
    cloudwatchMetric : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchMetric, default is Undefined, optional
        cloudwatch metric
    dynamodb : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodb, default is Undefined, optional
        dynamodb
    dynamodbv2 : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodbv2, default is Undefined, optional
        dynamodbv2
    elasticsearch : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionElasticsearch, default is Undefined, optional
        elasticsearch
    firehose : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionFirehose, default is Undefined, optional
        firehose
    http : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionHTTP, default is Undefined, optional
        http
    iotAnalytics : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionIotAnalytics, default is Undefined, optional
        iot analytics
    iotEvents : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionIotEvents, default is Undefined, optional
        iot events
    kafka : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKafka, default is Undefined, optional
        kafka
    kinesis : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKinesis, default is Undefined, optional
        kinesis
    $lambda : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionLambda, default is Undefined, optional
        lambda
    republish : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionRepublish, default is Undefined, optional
        republish
    s3 : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionS3, default is Undefined, optional
        s3
    sns : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSns, default is Undefined, optional
        sns
    sqs : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSqs, default is Undefined, optional
        sqs
    stepFunctions : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionStepFunctions, default is Undefined, optional
        step functions
    timestream : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestream, default is Undefined, optional
        timestream
    """


    cloudwatchAlarm?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchAlarm

    cloudwatchLogs?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchLogs

    cloudwatchMetric?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchMetric

    dynamodb?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodb

    dynamodbv2?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodbv2

    elasticsearch?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionElasticsearch

    firehose?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionFirehose

    http?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionHTTP

    iotAnalytics?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionIotAnalytics

    iotEvents?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionIotEvents

    kafka?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKafka

    kinesis?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKinesis

    $lambda?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionLambda

    republish?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionRepublish

    s3?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionS3

    sns?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSns

    sqs?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSqs

    stepFunctions?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionStepFunctions

    timestream?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestream


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchAlarm:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action cloudwatch alarm

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The CloudWatch alarm name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateReason : str, default is Undefined, optional
        The reason for the alarm change.
    stateValue : str, default is Undefined, optional
        The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
    """


    alarmName?: str

    roleArn?: str

    stateReason?: str

    stateValue?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchLogs:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action cloudwatch logs

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    logGroupName : str, default is Undefined, optional
        The CloudWatch log group name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    logGroupName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionCloudwatchMetric:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action cloudwatch metric

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The CloudWatch metric name.
    metricNamespace : str, default is Undefined, optional
        The CloudWatch metric namespace name.
    metricTimestamp : str, default is Undefined, optional
        An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
    metricUnit : str, default is Undefined, optional
        The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
    metricValue : str, default is Undefined, optional
        The CloudWatch metric value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    metricName?: str

    metricNamespace?: str

    metricTimestamp?: str

    metricUnit?: str

    metricValue?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodb:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action dynamodb

    Attributes
    ----------
    hashKeyField : str, default is Undefined, optional
        The hash key name.
    hashKeyType : str, default is Undefined, optional
        The hash key type. Valid values are "STRING" or "NUMBER".
    hashKeyValue : str, default is Undefined, optional
        The hash key value.
    operation : str, default is Undefined, optional
        The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
    payloadField : str, default is Undefined, optional
        The action payload.
    rangeKeyField : str, default is Undefined, optional
        The range key name.
    rangeKeyType : str, default is Undefined, optional
        The range key type. Valid values are "STRING" or "NUMBER".
    rangeKeyValue : str, default is Undefined, optional
        The range key value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    hashKeyField?: str

    hashKeyType?: str

    hashKeyValue?: str

    operation?: str

    payloadField?: str

    rangeKeyField?: str

    rangeKeyType?: str

    rangeKeyValue?: str

    roleArn?: str

    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodbv2:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action dynamodbv2

    Attributes
    ----------
    putItem : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodbv2PutItem, default is Undefined, optional
        put item
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    putItem?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodbv2PutItem

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionDynamodbv2PutItem:
    r"""
    Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.

    Attributes
    ----------
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionElasticsearch:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action elasticsearch

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        The endpoint of your Elasticsearch domain.
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    index : str, default is Undefined, optional
        The Elasticsearch index where you want to store your data.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    $type : str, default is Undefined, optional
        The type of document you are storing.
    """


    endpoint?: str

    id?: str

    index?: str

    roleArn?: str

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionFirehose:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action firehose

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    deliveryStreamName : str, default is Undefined, optional
        The delivery stream name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    separator : str, default is Undefined, optional
        A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
    """


    batchMode?: bool

    deliveryStreamName?: str

    roleArn?: str

    separator?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionHTTP:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action HTTP

    Attributes
    ----------
    confirmationUrl : str, default is Undefined, optional
        The HTTPS URL used to verify ownership of url.
    httpHeader : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionHTTPHTTPHeaderItems0], default is Undefined, optional
        Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
    url : str, default is Undefined, optional
        The HTTPS URL.
    """


    confirmationUrl?: str

    httpHeader?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionHTTPHTTPHeaderItems0]

    url?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionHTTPHTTPHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action HTTP HTTP header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionIotAnalytics:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action iot analytics

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    channelName : str, default is Undefined, optional
        Name of AWS IOT Analytics channel.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    channelName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionIotEvents:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action iot events

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    inputName : str, default is Undefined, optional
        The name of the AWS IoT Events input.
    messageId : str, default is Undefined, optional
        Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    inputName?: str

    messageId?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKafka:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action kafka

    Attributes
    ----------
    clientProperties : {str:str}, default is Undefined, optional
        Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
    destinationArn : str, default is Undefined, optional
        The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
    header : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKafkaHeaderItems0], default is Undefined, optional
        The list of Kafka headers that you specify. Nested arguments below.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    partition : str, default is Undefined, optional
        The Kafka message partition.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    clientProperties?: {str:str}

    destinationArn?: str

    header?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKafkaHeaderItems0]

    key?: str

    partition?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKafkaHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action kafka header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionKinesis:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action kinesis

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        The partition key.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    streamName : str, default is Undefined, optional
        The name of the Amazon Kinesis stream.
    """


    partitionKey?: str

    roleArn?: str

    streamName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionLambda:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action lambda

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    """


    functionArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionRepublish:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action republish

    Attributes
    ----------
    qos : float, default is Undefined, optional
        The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    qos?: float

    roleArn?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionS3:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action s3

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The Amazon S3 bucket name.
    cannedAcl : str, default is Undefined, optional
        The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    bucketName?: str

    cannedAcl?: str

    key?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSns:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action sns

    Attributes
    ----------
    messageFormat : str, default is Undefined, optional
        The message format of the message to publish. Accepted values are "JSON" and "RAW".
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    roleArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnSelector, default is Undefined, optional
        role arn selector
    targetArn : str, default is Undefined, optional
        The ARN of the SNS topic.
    targetArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnRef, default is Undefined, optional
        target arn ref
    targetArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnSelector, default is Undefined, optional
        target arn selector
    """


    messageFormat?: str

    roleArn?: str

    roleArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnRef

    roleArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnSelector

    targetArn?: str

    targetArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnRef

    targetArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnSelector


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnRef:
    r"""
    Reference to a Topic in sns to populate targetArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnSelector:
    r"""
    Selector for a Topic in sns to populate targetArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSnsTargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionSqs:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action sqs

    Attributes
    ----------
    queueUrl : str, default is Undefined, optional
        The URL of the Amazon SQS queue.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    useBase64 : bool, default is Undefined, optional
        Specifies whether to use Base64 encoding.
    """


    queueUrl?: str

    roleArn?: str

    useBase64?: bool


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionStepFunctions:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action step functions

    Attributes
    ----------
    executionNamePrefix : str, default is Undefined, optional
        The prefix used to generate, along with a UUID, the unique state machine execution name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateMachineName : str, default is Undefined, optional
        The name of the Step Functions state machine whose execution will be started.
    """


    executionNamePrefix?: str

    roleArn?: str

    stateMachineName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestream:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action timestream

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an Amazon Timestream database.
    dimension : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestreamDimensionItems0], default is Undefined, optional
        Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    timestamp : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestreamTimestamp, default is Undefined, optional
        timestamp
    """


    databaseName?: str

    dimension?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestreamDimensionItems0]

    roleArn?: str

    tableName?: str

    timestamp?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestreamTimestamp


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestreamDimensionItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider error action timestream dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    name?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderErrorActionTimestreamTimestamp:
    r"""
    Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    unit?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderFirehoseItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider firehose items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    deliveryStreamName : str, default is Undefined, optional
        The delivery stream name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    separator : str, default is Undefined, optional
        A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
    """


    batchMode?: bool

    deliveryStreamName?: str

    roleArn?: str

    separator?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderHTTPItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider HTTP items0

    Attributes
    ----------
    confirmationUrl : str, default is Undefined, optional
        The HTTPS URL used to verify ownership of url.
    httpHeader : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderHTTPItems0HTTPHeaderItems0], default is Undefined, optional
        Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
    url : str, default is Undefined, optional
        The HTTPS URL.
    """


    confirmationUrl?: str

    httpHeader?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderHTTPItems0HTTPHeaderItems0]

    url?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderHTTPItems0HTTPHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider HTTP items0 HTTP header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderIotAnalyticsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider iot analytics items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    channelName : str, default is Undefined, optional
        Name of AWS IOT Analytics channel.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    channelName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderIotEventsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider iot events items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    inputName : str, default is Undefined, optional
        The name of the AWS IoT Events input.
    messageId : str, default is Undefined, optional
        Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    inputName?: str

    messageId?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKafkaItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider kafka items0

    Attributes
    ----------
    clientProperties : {str:str}, default is Undefined, optional
        Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
    destinationArn : str, default is Undefined, optional
        The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
    header : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKafkaItems0HeaderItems0], default is Undefined, optional
        The list of Kafka headers that you specify. Nested arguments below.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    partition : str, default is Undefined, optional
        The Kafka message partition.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    clientProperties?: {str:str}

    destinationArn?: str

    header?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKafkaItems0HeaderItems0]

    key?: str

    partition?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKafkaItems0HeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider kafka items0 header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderKinesisItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider kinesis items0

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        The partition key.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    streamName : str, default is Undefined, optional
        The name of the Amazon Kinesis stream.
    """


    partitionKey?: str

    roleArn?: str

    streamName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderLambdaItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider lambda items0

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    """


    functionArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderRepublishItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider republish items0

    Attributes
    ----------
    qos : float, default is Undefined, optional
        The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    qos?: float

    roleArn?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderS3Items0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider s3 items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The Amazon S3 bucket name.
    cannedAcl : str, default is Undefined, optional
        The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    bucketName?: str

    cannedAcl?: str

    key?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider sns items0

    Attributes
    ----------
    messageFormat : str, default is Undefined, optional
        The message format of the message to publish. Accepted values are "JSON" and "RAW".
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    roleArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    targetArn : str, default is Undefined, optional
        The ARN of the SNS topic.
    targetArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnRef, default is Undefined, optional
        target arn ref
    targetArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnSelector, default is Undefined, optional
        target arn selector
    """


    messageFormat?: str

    roleArn?: str

    roleArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnRef

    roleArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnSelector

    targetArn?: str

    targetArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnRef

    targetArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnSelector


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnRef:
    r"""
    Reference to a Topic in sns to populate targetArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnSelector:
    r"""
    Selector for a Topic in sns to populate targetArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSnsItems0TargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderSqsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider sqs items0

    Attributes
    ----------
    queueUrl : str, default is Undefined, optional
        The URL of the Amazon SQS queue.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    useBase64 : bool, default is Undefined, optional
        Specifies whether to use Base64 encoding.
    """


    queueUrl?: str

    roleArn?: str

    useBase64?: bool


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderStepFunctionsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider step functions items0

    Attributes
    ----------
    executionNamePrefix : str, default is Undefined, optional
        The prefix used to generate, along with a UUID, the unique state machine execution name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateMachineName : str, default is Undefined, optional
        The name of the Step Functions state machine whose execution will be started.
    """


    executionNamePrefix?: str

    roleArn?: str

    stateMachineName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider timestream items0

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an Amazon Timestream database.
    dimension : [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0DimensionItems0], default is Undefined, optional
        Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    timestamp : IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0Timestamp, default is Undefined, optional
        timestamp
    """


    databaseName?: str

    dimension?: [IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0DimensionItems0]

    roleArn?: str

    tableName?: str

    timestamp?: IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0Timestamp


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0DimensionItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec for provider timestream items0 dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    name?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecForProviderTimestreamItems0Timestamp:
    r"""
    Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    unit?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cloudwatchAlarm : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchAlarmItems0], default is Undefined, optional
        cloudwatch alarm
    cloudwatchLogs : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchLogsItems0], default is Undefined, optional
        cloudwatch logs
    cloudwatchMetric : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchMetricItems0], default is Undefined, optional
        cloudwatch metric
    description : str, default is Undefined, optional
        The description of the rule.
    dynamodb : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbItems0], default is Undefined, optional
        dynamodb
    dynamodbv2 : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbv2Items0], default is Undefined, optional
        dynamodbv2
    elasticsearch : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderElasticsearchItems0], default is Undefined, optional
        elasticsearch
    enabled : bool, default is Undefined, optional
        Specifies whether the rule is enabled.
    errorAction : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorAction, default is Undefined, optional
        error action
    firehose : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderFirehoseItems0], default is Undefined, optional
        firehose
    http : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderHTTPItems0], default is Undefined, optional
        http
    iotAnalytics : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderIotAnalyticsItems0], default is Undefined, optional
        iot analytics
    iotEvents : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderIotEventsItems0], default is Undefined, optional
        iot events
    kafka : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKafkaItems0], default is Undefined, optional
        kafka
    kinesis : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKinesisItems0], default is Undefined, optional
        kinesis
    $lambda : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderLambdaItems0], default is Undefined, optional
        lambda
    republish : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderRepublishItems0], default is Undefined, optional
        republish
    s3 : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderS3Items0], default is Undefined, optional
        s3
    sns : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0], default is Undefined, optional
        sns
    sql : str, default is Undefined, optional
        The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
    sqlVersion : str, default is Undefined, optional
        The version of the SQL rules engine to use when evaluating the rule.
    sqs : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSqsItems0], default is Undefined, optional
        sqs
    stepFunctions : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderStepFunctionsItems0], default is Undefined, optional
        step functions
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timestream : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0], default is Undefined, optional
        timestream
    """


    cloudwatchAlarm?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchAlarmItems0]

    cloudwatchLogs?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchLogsItems0]

    cloudwatchMetric?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchMetricItems0]

    description?: str

    dynamodb?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbItems0]

    dynamodbv2?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbv2Items0]

    elasticsearch?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderElasticsearchItems0]

    enabled?: bool

    errorAction?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorAction

    firehose?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderFirehoseItems0]

    http?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderHTTPItems0]

    iotAnalytics?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderIotAnalyticsItems0]

    iotEvents?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderIotEventsItems0]

    kafka?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKafkaItems0]

    kinesis?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKinesisItems0]

    $lambda?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderLambdaItems0]

    republish?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderRepublishItems0]

    s3?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderS3Items0]

    sns?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0]

    sql?: str

    sqlVersion?: str

    sqs?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSqsItems0]

    stepFunctions?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderStepFunctionsItems0]

    tags?: {str:str}

    timestream?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0]


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchAlarmItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider cloudwatch alarm items0

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The CloudWatch alarm name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateReason : str, default is Undefined, optional
        The reason for the alarm change.
    stateValue : str, default is Undefined, optional
        The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
    """


    alarmName?: str

    roleArn?: str

    stateReason?: str

    stateValue?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchLogsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider cloudwatch logs items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    logGroupName : str, default is Undefined, optional
        The CloudWatch log group name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    logGroupName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderCloudwatchMetricItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider cloudwatch metric items0

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The CloudWatch metric name.
    metricNamespace : str, default is Undefined, optional
        The CloudWatch metric namespace name.
    metricTimestamp : str, default is Undefined, optional
        An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
    metricUnit : str, default is Undefined, optional
        The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
    metricValue : str, default is Undefined, optional
        The CloudWatch metric value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    metricName?: str

    metricNamespace?: str

    metricTimestamp?: str

    metricUnit?: str

    metricValue?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider dynamodb items0

    Attributes
    ----------
    hashKeyField : str, default is Undefined, optional
        The hash key name.
    hashKeyType : str, default is Undefined, optional
        The hash key type. Valid values are "STRING" or "NUMBER".
    hashKeyValue : str, default is Undefined, optional
        The hash key value.
    operation : str, default is Undefined, optional
        The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
    payloadField : str, default is Undefined, optional
        The action payload.
    rangeKeyField : str, default is Undefined, optional
        The range key name.
    rangeKeyType : str, default is Undefined, optional
        The range key type. Valid values are "STRING" or "NUMBER".
    rangeKeyValue : str, default is Undefined, optional
        The range key value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    hashKeyField?: str

    hashKeyType?: str

    hashKeyValue?: str

    operation?: str

    payloadField?: str

    rangeKeyField?: str

    rangeKeyType?: str

    rangeKeyValue?: str

    roleArn?: str

    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbv2Items0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider dynamodbv2 items0

    Attributes
    ----------
    putItem : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbv2Items0PutItem, default is Undefined, optional
        put item
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    putItem?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbv2Items0PutItem

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderDynamodbv2Items0PutItem:
    r"""
    Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.

    Attributes
    ----------
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderElasticsearchItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider elasticsearch items0

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        The endpoint of your Elasticsearch domain.
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    index : str, default is Undefined, optional
        The Elasticsearch index where you want to store your data.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    $type : str, default is Undefined, optional
        The type of document you are storing.
    """


    endpoint?: str

    id?: str

    index?: str

    roleArn?: str

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorAction:
    r"""
    Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.

    Attributes
    ----------
    cloudwatchAlarm : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchAlarm, default is Undefined, optional
        cloudwatch alarm
    cloudwatchLogs : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchLogs, default is Undefined, optional
        cloudwatch logs
    cloudwatchMetric : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchMetric, default is Undefined, optional
        cloudwatch metric
    dynamodb : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodb, default is Undefined, optional
        dynamodb
    dynamodbv2 : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodbv2, default is Undefined, optional
        dynamodbv2
    elasticsearch : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionElasticsearch, default is Undefined, optional
        elasticsearch
    firehose : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionFirehose, default is Undefined, optional
        firehose
    http : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionHTTP, default is Undefined, optional
        http
    iotAnalytics : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionIotAnalytics, default is Undefined, optional
        iot analytics
    iotEvents : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionIotEvents, default is Undefined, optional
        iot events
    kafka : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKafka, default is Undefined, optional
        kafka
    kinesis : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKinesis, default is Undefined, optional
        kinesis
    $lambda : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionLambda, default is Undefined, optional
        lambda
    republish : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionRepublish, default is Undefined, optional
        republish
    s3 : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionS3, default is Undefined, optional
        s3
    sns : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSns, default is Undefined, optional
        sns
    sqs : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSqs, default is Undefined, optional
        sqs
    stepFunctions : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionStepFunctions, default is Undefined, optional
        step functions
    timestream : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestream, default is Undefined, optional
        timestream
    """


    cloudwatchAlarm?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchAlarm

    cloudwatchLogs?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchLogs

    cloudwatchMetric?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchMetric

    dynamodb?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodb

    dynamodbv2?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodbv2

    elasticsearch?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionElasticsearch

    firehose?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionFirehose

    http?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionHTTP

    iotAnalytics?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionIotAnalytics

    iotEvents?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionIotEvents

    kafka?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKafka

    kinesis?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKinesis

    $lambda?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionLambda

    republish?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionRepublish

    s3?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionS3

    sns?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSns

    sqs?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSqs

    stepFunctions?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionStepFunctions

    timestream?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestream


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchAlarm:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action cloudwatch alarm

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The CloudWatch alarm name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateReason : str, default is Undefined, optional
        The reason for the alarm change.
    stateValue : str, default is Undefined, optional
        The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
    """


    alarmName?: str

    roleArn?: str

    stateReason?: str

    stateValue?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchLogs:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action cloudwatch logs

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    logGroupName : str, default is Undefined, optional
        The CloudWatch log group name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    logGroupName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionCloudwatchMetric:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action cloudwatch metric

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The CloudWatch metric name.
    metricNamespace : str, default is Undefined, optional
        The CloudWatch metric namespace name.
    metricTimestamp : str, default is Undefined, optional
        An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
    metricUnit : str, default is Undefined, optional
        The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
    metricValue : str, default is Undefined, optional
        The CloudWatch metric value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    metricName?: str

    metricNamespace?: str

    metricTimestamp?: str

    metricUnit?: str

    metricValue?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodb:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action dynamodb

    Attributes
    ----------
    hashKeyField : str, default is Undefined, optional
        The hash key name.
    hashKeyType : str, default is Undefined, optional
        The hash key type. Valid values are "STRING" or "NUMBER".
    hashKeyValue : str, default is Undefined, optional
        The hash key value.
    operation : str, default is Undefined, optional
        The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
    payloadField : str, default is Undefined, optional
        The action payload.
    rangeKeyField : str, default is Undefined, optional
        The range key name.
    rangeKeyType : str, default is Undefined, optional
        The range key type. Valid values are "STRING" or "NUMBER".
    rangeKeyValue : str, default is Undefined, optional
        The range key value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    hashKeyField?: str

    hashKeyType?: str

    hashKeyValue?: str

    operation?: str

    payloadField?: str

    rangeKeyField?: str

    rangeKeyType?: str

    rangeKeyValue?: str

    roleArn?: str

    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodbv2:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action dynamodbv2

    Attributes
    ----------
    putItem : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodbv2PutItem, default is Undefined, optional
        put item
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    putItem?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodbv2PutItem

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionDynamodbv2PutItem:
    r"""
    Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.

    Attributes
    ----------
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionElasticsearch:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action elasticsearch

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        The endpoint of your Elasticsearch domain.
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    index : str, default is Undefined, optional
        The Elasticsearch index where you want to store your data.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    $type : str, default is Undefined, optional
        The type of document you are storing.
    """


    endpoint?: str

    id?: str

    index?: str

    roleArn?: str

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionFirehose:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action firehose

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    deliveryStreamName : str, default is Undefined, optional
        The delivery stream name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    separator : str, default is Undefined, optional
        A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
    """


    batchMode?: bool

    deliveryStreamName?: str

    roleArn?: str

    separator?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionHTTP:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action HTTP

    Attributes
    ----------
    confirmationUrl : str, default is Undefined, optional
        The HTTPS URL used to verify ownership of url.
    httpHeader : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionHTTPHTTPHeaderItems0], default is Undefined, optional
        Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
    url : str, default is Undefined, optional
        The HTTPS URL.
    """


    confirmationUrl?: str

    httpHeader?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionHTTPHTTPHeaderItems0]

    url?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionHTTPHTTPHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action HTTP HTTP header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionIotAnalytics:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action iot analytics

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    channelName : str, default is Undefined, optional
        Name of AWS IOT Analytics channel.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    channelName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionIotEvents:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action iot events

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    inputName : str, default is Undefined, optional
        The name of the AWS IoT Events input.
    messageId : str, default is Undefined, optional
        Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    inputName?: str

    messageId?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKafka:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action kafka

    Attributes
    ----------
    clientProperties : {str:str}, default is Undefined, optional
        Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
    destinationArn : str, default is Undefined, optional
        The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
    header : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKafkaHeaderItems0], default is Undefined, optional
        The list of Kafka headers that you specify. Nested arguments below.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    partition : str, default is Undefined, optional
        The Kafka message partition.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    clientProperties?: {str:str}

    destinationArn?: str

    header?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKafkaHeaderItems0]

    key?: str

    partition?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKafkaHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action kafka header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionKinesis:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action kinesis

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        The partition key.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    streamName : str, default is Undefined, optional
        The name of the Amazon Kinesis stream.
    """


    partitionKey?: str

    roleArn?: str

    streamName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionLambda:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action lambda

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    """


    functionArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionRepublish:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action republish

    Attributes
    ----------
    qos : float, default is Undefined, optional
        The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    qos?: float

    roleArn?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionS3:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action s3

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The Amazon S3 bucket name.
    cannedAcl : str, default is Undefined, optional
        The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    bucketName?: str

    cannedAcl?: str

    key?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSns:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action sns

    Attributes
    ----------
    messageFormat : str, default is Undefined, optional
        The message format of the message to publish. Accepted values are "JSON" and "RAW".
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    roleArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnSelector, default is Undefined, optional
        role arn selector
    targetArn : str, default is Undefined, optional
        The ARN of the SNS topic.
    targetArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnRef, default is Undefined, optional
        target arn ref
    targetArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnSelector, default is Undefined, optional
        target arn selector
    """


    messageFormat?: str

    roleArn?: str

    roleArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnRef

    roleArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnSelector

    targetArn?: str

    targetArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnRef

    targetArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnSelector


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnRef:
    r"""
    Reference to a Topic in sns to populate targetArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnSelector:
    r"""
    Selector for a Topic in sns to populate targetArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSnsTargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionSqs:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action sqs

    Attributes
    ----------
    queueUrl : str, default is Undefined, optional
        The URL of the Amazon SQS queue.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    useBase64 : bool, default is Undefined, optional
        Specifies whether to use Base64 encoding.
    """


    queueUrl?: str

    roleArn?: str

    useBase64?: bool


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionStepFunctions:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action step functions

    Attributes
    ----------
    executionNamePrefix : str, default is Undefined, optional
        The prefix used to generate, along with a UUID, the unique state machine execution name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateMachineName : str, default is Undefined, optional
        The name of the Step Functions state machine whose execution will be started.
    """


    executionNamePrefix?: str

    roleArn?: str

    stateMachineName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestream:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action timestream

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an Amazon Timestream database.
    dimension : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestreamDimensionItems0], default is Undefined, optional
        Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    timestamp : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestreamTimestamp, default is Undefined, optional
        timestamp
    """


    databaseName?: str

    dimension?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestreamDimensionItems0]

    roleArn?: str

    tableName?: str

    timestamp?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestreamTimestamp


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestreamDimensionItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider error action timestream dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    name?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderErrorActionTimestreamTimestamp:
    r"""
    Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    unit?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderFirehoseItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider firehose items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    deliveryStreamName : str, default is Undefined, optional
        The delivery stream name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    separator : str, default is Undefined, optional
        A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
    """


    batchMode?: bool

    deliveryStreamName?: str

    roleArn?: str

    separator?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderHTTPItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider HTTP items0

    Attributes
    ----------
    confirmationUrl : str, default is Undefined, optional
        The HTTPS URL used to verify ownership of url.
    httpHeader : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderHTTPItems0HTTPHeaderItems0], default is Undefined, optional
        Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
    url : str, default is Undefined, optional
        The HTTPS URL.
    """


    confirmationUrl?: str

    httpHeader?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderHTTPItems0HTTPHeaderItems0]

    url?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderHTTPItems0HTTPHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider HTTP items0 HTTP header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderIotAnalyticsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider iot analytics items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    channelName : str, default is Undefined, optional
        Name of AWS IOT Analytics channel.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    channelName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderIotEventsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider iot events items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    inputName : str, default is Undefined, optional
        The name of the AWS IoT Events input.
    messageId : str, default is Undefined, optional
        Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    inputName?: str

    messageId?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKafkaItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider kafka items0

    Attributes
    ----------
    clientProperties : {str:str}, default is Undefined, optional
        Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
    destinationArn : str, default is Undefined, optional
        The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
    header : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKafkaItems0HeaderItems0], default is Undefined, optional
        The list of Kafka headers that you specify. Nested arguments below.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    partition : str, default is Undefined, optional
        The Kafka message partition.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    clientProperties?: {str:str}

    destinationArn?: str

    header?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKafkaItems0HeaderItems0]

    key?: str

    partition?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKafkaItems0HeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider kafka items0 header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderKinesisItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider kinesis items0

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        The partition key.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    streamName : str, default is Undefined, optional
        The name of the Amazon Kinesis stream.
    """


    partitionKey?: str

    roleArn?: str

    streamName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderLambdaItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider lambda items0

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    """


    functionArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderRepublishItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider republish items0

    Attributes
    ----------
    qos : float, default is Undefined, optional
        The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    qos?: float

    roleArn?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderS3Items0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider s3 items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The Amazon S3 bucket name.
    cannedAcl : str, default is Undefined, optional
        The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    bucketName?: str

    cannedAcl?: str

    key?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider sns items0

    Attributes
    ----------
    messageFormat : str, default is Undefined, optional
        The message format of the message to publish. Accepted values are "JSON" and "RAW".
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    roleArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    targetArn : str, default is Undefined, optional
        The ARN of the SNS topic.
    targetArnRef : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnRef, default is Undefined, optional
        target arn ref
    targetArnSelector : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnSelector, default is Undefined, optional
        target arn selector
    """


    messageFormat?: str

    roleArn?: str

    roleArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnRef

    roleArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnSelector

    targetArn?: str

    targetArnRef?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnRef

    targetArnSelector?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnSelector


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnRef:
    r"""
    Reference to a Topic in sns to populate targetArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnSelector:
    r"""
    Selector for a Topic in sns to populate targetArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnSelectorPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSnsItems0TargetArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderSqsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider sqs items0

    Attributes
    ----------
    queueUrl : str, default is Undefined, optional
        The URL of the Amazon SQS queue.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    useBase64 : bool, default is Undefined, optional
        Specifies whether to use Base64 encoding.
    """


    queueUrl?: str

    roleArn?: str

    useBase64?: bool


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderStepFunctionsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider step functions items0

    Attributes
    ----------
    executionNamePrefix : str, default is Undefined, optional
        The prefix used to generate, along with a UUID, the unique state machine execution name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateMachineName : str, default is Undefined, optional
        The name of the Step Functions state machine whose execution will be started.
    """


    executionNamePrefix?: str

    roleArn?: str

    stateMachineName?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider timestream items0

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an Amazon Timestream database.
    dimension : [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0DimensionItems0], default is Undefined, optional
        Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    timestamp : IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0Timestamp, default is Undefined, optional
        timestamp
    """


    databaseName?: str

    dimension?: [IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0DimensionItems0]

    roleArn?: str

    tableName?: str

    timestamp?: IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0Timestamp


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0DimensionItems0:
    r"""
    iot aws upbound io v1beta2 topic rule spec init provider timestream items0 dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    name?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecInitProviderTimestreamItems0Timestamp:
    r"""
    Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    unit?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecProviderConfigRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema IotAwsUpboundIoV1beta2TopicRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema IotAwsUpboundIoV1beta2TopicRuleStatus:
    r"""
    TopicRuleStatus defines the observed state of TopicRule.

    Attributes
    ----------
    atProvider : IotAwsUpboundIoV1beta2TopicRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [IotAwsUpboundIoV1beta2TopicRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProvider

    conditions?: [IotAwsUpboundIoV1beta2TopicRuleStatusConditionsItems0]

    observedGeneration?: int


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProvider:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the topic rule
    cloudwatchAlarm : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchAlarmItems0], default is Undefined, optional
        cloudwatch alarm
    cloudwatchLogs : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchLogsItems0], default is Undefined, optional
        cloudwatch logs
    cloudwatchMetric : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchMetricItems0], default is Undefined, optional
        cloudwatch metric
    description : str, default is Undefined, optional
        The description of the rule.
    dynamodb : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbItems0], default is Undefined, optional
        dynamodb
    dynamodbv2 : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbv2Items0], default is Undefined, optional
        dynamodbv2
    elasticsearch : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderElasticsearchItems0], default is Undefined, optional
        elasticsearch
    enabled : bool, default is Undefined, optional
        Specifies whether the rule is enabled.
    errorAction : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorAction, default is Undefined, optional
        error action
    firehose : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderFirehoseItems0], default is Undefined, optional
        firehose
    http : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderHTTPItems0], default is Undefined, optional
        http
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    iotAnalytics : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderIotAnalyticsItems0], default is Undefined, optional
        iot analytics
    iotEvents : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderIotEventsItems0], default is Undefined, optional
        iot events
    kafka : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKafkaItems0], default is Undefined, optional
        kafka
    kinesis : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKinesisItems0], default is Undefined, optional
        kinesis
    $lambda : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderLambdaItems0], default is Undefined, optional
        lambda
    republish : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderRepublishItems0], default is Undefined, optional
        republish
    s3 : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderS3Items0], default is Undefined, optional
        s3
    sns : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderSnsItems0], default is Undefined, optional
        sns
    sql : str, default is Undefined, optional
        The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
    sqlVersion : str, default is Undefined, optional
        The version of the SQL rules engine to use when evaluating the rule.
    sqs : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderSqsItems0], default is Undefined, optional
        sqs
    stepFunctions : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderStepFunctionsItems0], default is Undefined, optional
        step functions
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    timestream : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0], default is Undefined, optional
        timestream
    """


    arn?: str

    cloudwatchAlarm?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchAlarmItems0]

    cloudwatchLogs?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchLogsItems0]

    cloudwatchMetric?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchMetricItems0]

    description?: str

    dynamodb?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbItems0]

    dynamodbv2?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbv2Items0]

    elasticsearch?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderElasticsearchItems0]

    enabled?: bool

    errorAction?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorAction

    firehose?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderFirehoseItems0]

    http?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderHTTPItems0]

    id?: str

    iotAnalytics?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderIotAnalyticsItems0]

    iotEvents?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderIotEventsItems0]

    kafka?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKafkaItems0]

    kinesis?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKinesisItems0]

    $lambda?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderLambdaItems0]

    republish?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderRepublishItems0]

    s3?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderS3Items0]

    sns?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderSnsItems0]

    sql?: str

    sqlVersion?: str

    sqs?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderSqsItems0]

    stepFunctions?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderStepFunctionsItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    timestream?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0]


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchAlarmItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider cloudwatch alarm items0

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The CloudWatch alarm name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateReason : str, default is Undefined, optional
        The reason for the alarm change.
    stateValue : str, default is Undefined, optional
        The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
    """


    alarmName?: str

    roleArn?: str

    stateReason?: str

    stateValue?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchLogsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider cloudwatch logs items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    logGroupName : str, default is Undefined, optional
        The CloudWatch log group name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    logGroupName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderCloudwatchMetricItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider cloudwatch metric items0

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The CloudWatch metric name.
    metricNamespace : str, default is Undefined, optional
        The CloudWatch metric namespace name.
    metricTimestamp : str, default is Undefined, optional
        An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
    metricUnit : str, default is Undefined, optional
        The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
    metricValue : str, default is Undefined, optional
        The CloudWatch metric value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    metricName?: str

    metricNamespace?: str

    metricTimestamp?: str

    metricUnit?: str

    metricValue?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider dynamodb items0

    Attributes
    ----------
    hashKeyField : str, default is Undefined, optional
        The hash key name.
    hashKeyType : str, default is Undefined, optional
        The hash key type. Valid values are "STRING" or "NUMBER".
    hashKeyValue : str, default is Undefined, optional
        The hash key value.
    operation : str, default is Undefined, optional
        The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
    payloadField : str, default is Undefined, optional
        The action payload.
    rangeKeyField : str, default is Undefined, optional
        The range key name.
    rangeKeyType : str, default is Undefined, optional
        The range key type. Valid values are "STRING" or "NUMBER".
    rangeKeyValue : str, default is Undefined, optional
        The range key value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    hashKeyField?: str

    hashKeyType?: str

    hashKeyValue?: str

    operation?: str

    payloadField?: str

    rangeKeyField?: str

    rangeKeyType?: str

    rangeKeyValue?: str

    roleArn?: str

    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbv2Items0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider dynamodbv2 items0

    Attributes
    ----------
    putItem : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbv2Items0PutItem, default is Undefined, optional
        put item
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    putItem?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbv2Items0PutItem

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderDynamodbv2Items0PutItem:
    r"""
    Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.

    Attributes
    ----------
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderElasticsearchItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider elasticsearch items0

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        The endpoint of your Elasticsearch domain.
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    index : str, default is Undefined, optional
        The Elasticsearch index where you want to store your data.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    $type : str, default is Undefined, optional
        The type of document you are storing.
    """


    endpoint?: str

    id?: str

    index?: str

    roleArn?: str

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorAction:
    r"""
    Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.

    Attributes
    ----------
    cloudwatchAlarm : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchAlarm, default is Undefined, optional
        cloudwatch alarm
    cloudwatchLogs : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchLogs, default is Undefined, optional
        cloudwatch logs
    cloudwatchMetric : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchMetric, default is Undefined, optional
        cloudwatch metric
    dynamodb : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodb, default is Undefined, optional
        dynamodb
    dynamodbv2 : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodbv2, default is Undefined, optional
        dynamodbv2
    elasticsearch : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionElasticsearch, default is Undefined, optional
        elasticsearch
    firehose : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionFirehose, default is Undefined, optional
        firehose
    http : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionHTTP, default is Undefined, optional
        http
    iotAnalytics : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionIotAnalytics, default is Undefined, optional
        iot analytics
    iotEvents : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionIotEvents, default is Undefined, optional
        iot events
    kafka : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKafka, default is Undefined, optional
        kafka
    kinesis : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKinesis, default is Undefined, optional
        kinesis
    $lambda : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionLambda, default is Undefined, optional
        lambda
    republish : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionRepublish, default is Undefined, optional
        republish
    s3 : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionS3, default is Undefined, optional
        s3
    sns : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionSns, default is Undefined, optional
        sns
    sqs : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionSqs, default is Undefined, optional
        sqs
    stepFunctions : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionStepFunctions, default is Undefined, optional
        step functions
    timestream : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestream, default is Undefined, optional
        timestream
    """


    cloudwatchAlarm?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchAlarm

    cloudwatchLogs?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchLogs

    cloudwatchMetric?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchMetric

    dynamodb?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodb

    dynamodbv2?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodbv2

    elasticsearch?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionElasticsearch

    firehose?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionFirehose

    http?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionHTTP

    iotAnalytics?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionIotAnalytics

    iotEvents?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionIotEvents

    kafka?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKafka

    kinesis?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKinesis

    $lambda?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionLambda

    republish?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionRepublish

    s3?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionS3

    sns?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionSns

    sqs?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionSqs

    stepFunctions?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionStepFunctions

    timestream?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestream


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchAlarm:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action cloudwatch alarm

    Attributes
    ----------
    alarmName : str, default is Undefined, optional
        The CloudWatch alarm name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateReason : str, default is Undefined, optional
        The reason for the alarm change.
    stateValue : str, default is Undefined, optional
        The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
    """


    alarmName?: str

    roleArn?: str

    stateReason?: str

    stateValue?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchLogs:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action cloudwatch logs

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    logGroupName : str, default is Undefined, optional
        The CloudWatch log group name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    logGroupName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionCloudwatchMetric:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action cloudwatch metric

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The CloudWatch metric name.
    metricNamespace : str, default is Undefined, optional
        The CloudWatch metric namespace name.
    metricTimestamp : str, default is Undefined, optional
        An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
    metricUnit : str, default is Undefined, optional
        The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
    metricValue : str, default is Undefined, optional
        The CloudWatch metric value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    metricName?: str

    metricNamespace?: str

    metricTimestamp?: str

    metricUnit?: str

    metricValue?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodb:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action dynamodb

    Attributes
    ----------
    hashKeyField : str, default is Undefined, optional
        The hash key name.
    hashKeyType : str, default is Undefined, optional
        The hash key type. Valid values are "STRING" or "NUMBER".
    hashKeyValue : str, default is Undefined, optional
        The hash key value.
    operation : str, default is Undefined, optional
        The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
    payloadField : str, default is Undefined, optional
        The action payload.
    rangeKeyField : str, default is Undefined, optional
        The range key name.
    rangeKeyType : str, default is Undefined, optional
        The range key type. Valid values are "STRING" or "NUMBER".
    rangeKeyValue : str, default is Undefined, optional
        The range key value.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    hashKeyField?: str

    hashKeyType?: str

    hashKeyValue?: str

    operation?: str

    payloadField?: str

    rangeKeyField?: str

    rangeKeyType?: str

    rangeKeyValue?: str

    roleArn?: str

    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodbv2:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action dynamodbv2

    Attributes
    ----------
    putItem : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodbv2PutItem, default is Undefined, optional
        put item
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    putItem?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodbv2PutItem

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionDynamodbv2PutItem:
    r"""
    Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.

    Attributes
    ----------
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    """


    tableName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionElasticsearch:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action elasticsearch

    Attributes
    ----------
    endpoint : str, default is Undefined, optional
        The endpoint of your Elasticsearch domain.
    id : str, default is Undefined, optional
        The unique identifier for the document you are storing.
    index : str, default is Undefined, optional
        The Elasticsearch index where you want to store your data.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    $type : str, default is Undefined, optional
        The type of document you are storing.
    """


    endpoint?: str

    id?: str

    index?: str

    roleArn?: str

    $type?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionFirehose:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action firehose

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    deliveryStreamName : str, default is Undefined, optional
        The delivery stream name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    separator : str, default is Undefined, optional
        A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
    """


    batchMode?: bool

    deliveryStreamName?: str

    roleArn?: str

    separator?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionHTTP:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action HTTP

    Attributes
    ----------
    confirmationUrl : str, default is Undefined, optional
        The HTTPS URL used to verify ownership of url.
    httpHeader : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionHTTPHTTPHeaderItems0], default is Undefined, optional
        Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
    url : str, default is Undefined, optional
        The HTTPS URL.
    """


    confirmationUrl?: str

    httpHeader?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionHTTPHTTPHeaderItems0]

    url?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionHTTPHTTPHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action HTTP HTTP header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionIotAnalytics:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action iot analytics

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    channelName : str, default is Undefined, optional
        Name of AWS IOT Analytics channel.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    channelName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionIotEvents:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action iot events

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    inputName : str, default is Undefined, optional
        The name of the AWS IoT Events input.
    messageId : str, default is Undefined, optional
        Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    inputName?: str

    messageId?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKafka:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action kafka

    Attributes
    ----------
    clientProperties : {str:str}, default is Undefined, optional
        Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
    destinationArn : str, default is Undefined, optional
        The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
    header : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKafkaHeaderItems0], default is Undefined, optional
        The list of Kafka headers that you specify. Nested arguments below.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    partition : str, default is Undefined, optional
        The Kafka message partition.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    clientProperties?: {str:str}

    destinationArn?: str

    header?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKafkaHeaderItems0]

    key?: str

    partition?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKafkaHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action kafka header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionKinesis:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action kinesis

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        The partition key.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    streamName : str, default is Undefined, optional
        The name of the Amazon Kinesis stream.
    """


    partitionKey?: str

    roleArn?: str

    streamName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionLambda:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action lambda

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    """


    functionArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionRepublish:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action republish

    Attributes
    ----------
    qos : float, default is Undefined, optional
        The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    qos?: float

    roleArn?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionS3:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action s3

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The Amazon S3 bucket name.
    cannedAcl : str, default is Undefined, optional
        The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    bucketName?: str

    cannedAcl?: str

    key?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionSns:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action sns

    Attributes
    ----------
    messageFormat : str, default is Undefined, optional
        The message format of the message to publish. Accepted values are "JSON" and "RAW".
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    targetArn : str, default is Undefined, optional
        The ARN of the SNS topic.
    """


    messageFormat?: str

    roleArn?: str

    targetArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionSqs:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action sqs

    Attributes
    ----------
    queueUrl : str, default is Undefined, optional
        The URL of the Amazon SQS queue.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    useBase64 : bool, default is Undefined, optional
        Specifies whether to use Base64 encoding.
    """


    queueUrl?: str

    roleArn?: str

    useBase64?: bool


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionStepFunctions:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action step functions

    Attributes
    ----------
    executionNamePrefix : str, default is Undefined, optional
        The prefix used to generate, along with a UUID, the unique state machine execution name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateMachineName : str, default is Undefined, optional
        The name of the Step Functions state machine whose execution will be started.
    """


    executionNamePrefix?: str

    roleArn?: str

    stateMachineName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestream:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action timestream

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an Amazon Timestream database.
    dimension : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestreamDimensionItems0], default is Undefined, optional
        Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    timestamp : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestreamTimestamp, default is Undefined, optional
        timestamp
    """


    databaseName?: str

    dimension?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestreamDimensionItems0]

    roleArn?: str

    tableName?: str

    timestamp?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestreamTimestamp


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestreamDimensionItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider error action timestream dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    name?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderErrorActionTimestreamTimestamp:
    r"""
    Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    unit?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderFirehoseItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider firehose items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    deliveryStreamName : str, default is Undefined, optional
        The delivery stream name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    separator : str, default is Undefined, optional
        A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
    """


    batchMode?: bool

    deliveryStreamName?: str

    roleArn?: str

    separator?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderHTTPItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider HTTP items0

    Attributes
    ----------
    confirmationUrl : str, default is Undefined, optional
        The HTTPS URL used to verify ownership of url.
    httpHeader : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderHTTPItems0HTTPHeaderItems0], default is Undefined, optional
        Custom HTTP header IoT Core should send. It is possible to define more than one custom header.
    url : str, default is Undefined, optional
        The HTTPS URL.
    """


    confirmationUrl?: str

    httpHeader?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderHTTPItems0HTTPHeaderItems0]

    url?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderHTTPItems0HTTPHeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider HTTP items0 HTTP header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderIotAnalyticsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider iot analytics items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    channelName : str, default is Undefined, optional
        Name of AWS IOT Analytics channel.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    channelName?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderIotEventsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider iot events items0

    Attributes
    ----------
    batchMode : bool, default is Undefined, optional
        The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.
    inputName : str, default is Undefined, optional
        The name of the AWS IoT Events input.
    messageId : str, default is Undefined, optional
        Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    batchMode?: bool

    inputName?: str

    messageId?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKafkaItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider kafka items0

    Attributes
    ----------
    clientProperties : {str:str}, default is Undefined, optional
        Properties of the Apache Kafka producer client. For more info, see the AWS documentation.
    destinationArn : str, default is Undefined, optional
        The ARN of Kafka action's VPC aws_iot_topic_rule_destination.
    header : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKafkaItems0HeaderItems0], default is Undefined, optional
        The list of Kafka headers that you specify. Nested arguments below.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    partition : str, default is Undefined, optional
        The Kafka message partition.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    clientProperties?: {str:str}

    destinationArn?: str

    header?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKafkaItems0HeaderItems0]

    key?: str

    partition?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKafkaItems0HeaderItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider kafka items0 header items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The name of the HTTP header.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    key?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderKinesisItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider kinesis items0

    Attributes
    ----------
    partitionKey : str, default is Undefined, optional
        The partition key.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    streamName : str, default is Undefined, optional
        The name of the Amazon Kinesis stream.
    """


    partitionKey?: str

    roleArn?: str

    streamName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderLambdaItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider lambda items0

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The ARN of the Lambda function.
    """


    functionArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderRepublishItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider republish items0

    Attributes
    ----------
    qos : float, default is Undefined, optional
        The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    topic : str, default is Undefined, optional
        The Kafka topic for messages to be sent to the Kafka broker.
    """


    qos?: float

    roleArn?: str

    topic?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderS3Items0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider s3 items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The Amazon S3 bucket name.
    cannedAcl : str, default is Undefined, optional
        The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.
    key : str, default is Undefined, optional
        The name of the HTTP header.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    """


    bucketName?: str

    cannedAcl?: str

    key?: str

    roleArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderSnsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider sns items0

    Attributes
    ----------
    messageFormat : str, default is Undefined, optional
        The message format of the message to publish. Accepted values are "JSON" and "RAW".
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    targetArn : str, default is Undefined, optional
        The ARN of the SNS topic.
    """


    messageFormat?: str

    roleArn?: str

    targetArn?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderSqsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider sqs items0

    Attributes
    ----------
    queueUrl : str, default is Undefined, optional
        The URL of the Amazon SQS queue.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    useBase64 : bool, default is Undefined, optional
        Specifies whether to use Base64 encoding.
    """


    queueUrl?: str

    roleArn?: str

    useBase64?: bool


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderStepFunctionsItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider step functions items0

    Attributes
    ----------
    executionNamePrefix : str, default is Undefined, optional
        The prefix used to generate, along with a UUID, the unique state machine execution name.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    stateMachineName : str, default is Undefined, optional
        The name of the Step Functions state machine whose execution will be started.
    """


    executionNamePrefix?: str

    roleArn?: str

    stateMachineName?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider timestream items0

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an Amazon Timestream database.
    dimension : [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0DimensionItems0], default is Undefined, optional
        Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.
    roleArn : str, default is Undefined, optional
        The IAM role ARN that allows access to the CloudWatch alarm.
    tableName : str, default is Undefined, optional
        The name of the DynamoDB table.
    timestamp : IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0Timestamp, default is Undefined, optional
        timestamp
    """


    databaseName?: str

    dimension?: [IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0DimensionItems0]

    roleArn?: str

    tableName?: str

    timestamp?: IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0Timestamp


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0DimensionItems0:
    r"""
    iot aws upbound io v1beta2 topic rule status at provider timestream items0 dimension items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the rule.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    name?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusAtProviderTimestreamItems0Timestamp:
    r"""
    Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.
    value : str, default is Undefined, optional
        The value of the HTTP header.
    """


    unit?: str

    value?: str


schema IotAwsUpboundIoV1beta2TopicRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


