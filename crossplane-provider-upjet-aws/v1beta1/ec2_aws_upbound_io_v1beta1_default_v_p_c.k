"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DefaultVPC:
    r"""
    DefaultVPC is the Schema for the DefaultVPCs API. Manage a default VPC resource.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DefaultVPC", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1DefaultVPCSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1DefaultVPCStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"

    kind: "DefaultVPC" = "DefaultVPC"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta1DefaultVPCSpec

    status?: Ec2AwsUpboundIoV1beta1DefaultVPCStatus


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpec:
    r"""
    DefaultVPCSpec defines the desired state of DefaultVPC

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1DefaultVPCSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1DefaultVPCSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1DefaultVPCSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1DefaultVPCSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta1DefaultVPCSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecForProvider:
    r"""
    ec2 aws upbound io v1beta1 default v p c spec for provider

    Attributes
    ----------
    assignGeneratedIpv6CidrBlock : bool, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    enableDnsHostnames : bool, default is Undefined, optional
        is true
    enableDnsSupport : bool, default is Undefined, optional
        enable Dns support
    enableNetworkAddressUsageMetrics : bool, default is Undefined, optional
        enable network address usage metrics
    forceDestroy : bool, default is Undefined, optional
        Whether destroying the resource deletes the default VPC. Default: false
    ipv6CidrBlock : str, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    ipv6CidrBlockNetworkBorderGroup : str, default is Undefined, optional
        ipv6 cidr block network border group
    ipv6IpamPoolId : str, default is Undefined, optional
        ipv6 ipam pool Id
    ipv6NetmaskLength : float, default is Undefined, optional
        ipv6 netmask length
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        tags
    """


    assignGeneratedIpv6CidrBlock?: bool

    enableDnsHostnames?: bool

    enableDnsSupport?: bool

    enableNetworkAddressUsageMetrics?: bool

    forceDestroy?: bool

    ipv6CidrBlock?: str

    ipv6CidrBlockNetworkBorderGroup?: str

    ipv6IpamPoolId?: str

    ipv6NetmaskLength?: float

    region: str

    tags?: {str:str}


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    assignGeneratedIpv6CidrBlock : bool, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    enableDnsHostnames : bool, default is Undefined, optional
        is true
    enableDnsSupport : bool, default is Undefined, optional
        enable Dns support
    enableNetworkAddressUsageMetrics : bool, default is Undefined, optional
        enable network address usage metrics
    forceDestroy : bool, default is Undefined, optional
        Whether destroying the resource deletes the default VPC. Default: false
    ipv6CidrBlock : str, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    ipv6CidrBlockNetworkBorderGroup : str, default is Undefined, optional
        ipv6 cidr block network border group
    ipv6IpamPoolId : str, default is Undefined, optional
        ipv6 ipam pool Id
    ipv6NetmaskLength : float, default is Undefined, optional
        ipv6 netmask length
    tags : {str:str}, default is Undefined, optional
        tags
    """


    assignGeneratedIpv6CidrBlock?: bool

    enableDnsHostnames?: bool

    enableDnsSupport?: bool

    enableNetworkAddressUsageMetrics?: bool

    forceDestroy?: bool

    ipv6CidrBlock?: str

    ipv6CidrBlockNetworkBorderGroup?: str

    ipv6IpamPoolId?: str

    ipv6NetmaskLength?: float

    tags?: {str:str}


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1DefaultVPCSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta1DefaultVPCSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta1DefaultVPCStatus:
    r"""
    DefaultVPCStatus defines the observed state of DefaultVPC.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1DefaultVPCStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1DefaultVPCStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta1DefaultVPCStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta1DefaultVPCStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta1DefaultVPCStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta1 default v p c status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        arn
    assignGeneratedIpv6CidrBlock : bool, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    cidrBlock : str, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    defaultNetworkAclId : str, default is Undefined, optional
        default network Acl Id
    defaultRouteTableId : str, default is Undefined, optional
        default route table Id
    defaultSecurityGroupId : str, default is Undefined, optional
        default security group Id
    dhcpOptionsId : str, default is Undefined, optional
        dhcp options Id
    enableDnsHostnames : bool, default is Undefined, optional
        is true
    enableDnsSupport : bool, default is Undefined, optional
        enable Dns support
    enableNetworkAddressUsageMetrics : bool, default is Undefined, optional
        enable network address usage metrics
    existingDefaultVpc : bool, default is Undefined, optional
        existing default vpc
    forceDestroy : bool, default is Undefined, optional
        Whether destroying the resource deletes the default VPC. Default: false
    id : str, default is Undefined, optional
        id
    instanceTenancy : str, default is Undefined, optional
        The allowed tenancy of instances launched into the VPC
    ipv6AssociationId : str, default is Undefined, optional
        ipv6 association Id
    ipv6CidrBlock : str, default is Undefined, optional
        and instance_tenancy arguments become computed attributes
    ipv6CidrBlockNetworkBorderGroup : str, default is Undefined, optional
        ipv6 cidr block network border group
    ipv6IpamPoolId : str, default is Undefined, optional
        ipv6 ipam pool Id
    ipv6NetmaskLength : float, default is Undefined, optional
        ipv6 netmask length
    mainRouteTableId : str, default is Undefined, optional
        main route table Id
    ownerId : str, default is Undefined, optional
        owner Id
    tags : {str:str}, default is Undefined, optional
        tags
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    """


    arn?: str

    assignGeneratedIpv6CidrBlock?: bool

    cidrBlock?: str

    defaultNetworkAclId?: str

    defaultRouteTableId?: str

    defaultSecurityGroupId?: str

    dhcpOptionsId?: str

    enableDnsHostnames?: bool

    enableDnsSupport?: bool

    enableNetworkAddressUsageMetrics?: bool

    existingDefaultVpc?: bool

    forceDestroy?: bool

    id?: str

    instanceTenancy?: str

    ipv6AssociationId?: str

    ipv6CidrBlock?: str

    ipv6CidrBlockNetworkBorderGroup?: str

    ipv6IpamPoolId?: str

    ipv6NetmaskLength?: float

    mainRouteTableId?: str

    ownerId?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema Ec2AwsUpboundIoV1beta1DefaultVPCStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


