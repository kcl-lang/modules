"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FlowLog:
    r"""
    FlowLog is the Schema for the FlowLogs API. Provides a VPC/Subnet/ENI Flow Log

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FlowLog", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta2FlowLogSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta2FlowLogStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta2" = "ec2.aws.upbound.io/v1beta2"

    kind: "FlowLog" = "FlowLog"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta2FlowLogSpec

    status?: Ec2AwsUpboundIoV1beta2FlowLogStatus


schema Ec2AwsUpboundIoV1beta2FlowLogSpec:
    r"""
    FlowLogSpec defines the desired state of FlowLog

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta2FlowLogSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta2FlowLogSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta2FlowLogSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta2FlowLogSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProvider:
    r"""
    ec2 aws upbound io v1beta2 flow log spec for provider

    Attributes
    ----------
    deliverCrossAccountRole : str, default is Undefined, optional
        ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
    destinationOptions : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderDestinationOptions, default is Undefined, optional
        destination options
    eniId : str, default is Undefined, optional
        Elastic Network Interface ID to attach to
    iamRoleArn : str, default is Undefined, optional
        The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
    iamRoleArnRef : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    logDestination : str, default is Undefined, optional
        The ARN of the logging destination. Either log_destination or log_group_name must be set.
    logDestinationRef : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationRef, default is Undefined, optional
        log destination ref
    logDestinationSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationSelector, default is Undefined, optional
        log destination selector
    logDestinationType : str, default is Undefined, optional
        The type of the logging destination. Valid values: cloud-watch-logs, s3, kinesis-data-firehose. Default: cloud-watch-logs.
    logFormat : str, default is Undefined, optional
        The fields to include in the flow log record. Accepted format example: "$${interface-id} $${srcaddr} $${dstaddr} $${srcport} $${dstport}".
    logGroupName : str, default is Undefined, optional
        Deprecated: Use log_destination instead. The name of the CloudWatch log group. Either log_group_name or log_destination must be set.
    maxAggregationInterval : float, default is Undefined, optional
        The maximum interval of time
        during which a flow of packets is captured and aggregated into a flow
        log record. Valid Values: 60 seconds (1 minute) or 600 seconds (10
        minutes). Default: 600. When transit_gateway_id or transit_gateway_attachment_id is specified, max_aggregation_interval must be 60 seconds (1 minute).
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    subnetId : str, default is Undefined, optional
        Subnet ID to attach to
    subnetIdRef : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    trafficType : str, default is Undefined, optional
        The type of traffic to capture. Valid values: ACCEPT,REJECT, ALL.
    transitGatewayAttachmentId : str, default is Undefined, optional
        Transit Gateway Attachment ID to attach to
    transitGatewayId : str, default is Undefined, optional
        Transit Gateway ID to attach to
    vpcId : str, default is Undefined, optional
        VPC ID to attach to
    vpcIdRef : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    deliverCrossAccountRole?: str

    destinationOptions?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderDestinationOptions

    eniId?: str

    iamRoleArn?: str

    iamRoleArnRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnRef

    iamRoleArnSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnSelector

    logDestination?: str

    logDestinationRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationRef

    logDestinationSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationSelector

    logDestinationType?: str

    logFormat?: str

    logGroupName?: str

    maxAggregationInterval?: float

    region: str

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDSelector

    tags?: {str:str}

    trafficType?: str

    transitGatewayAttachmentId?: str

    transitGatewayId?: str

    vpcId?: str

    vpcIdRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDRef

    vpcIdSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDSelector


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderDestinationOptions:
    r"""
    Describes the destination options for a flow log. More details below.

    Attributes
    ----------
    fileFormat : str, default is Undefined, optional
        The format for the flow log. Default value: plain-text. Valid values: plain-text, parquet.
    hiveCompatiblePartitions : bool, default is Undefined, optional
        Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: false.
    perHourPartition : bool, default is Undefined, optional
        Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: false.
    """


    fileFormat?: str

    hiveCompatiblePartitions?: bool

    perHourPartition?: bool


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logDestination.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logDestination.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderLogDestinationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecForProviderVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    deliverCrossAccountRole : str, default is Undefined, optional
        ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
    destinationOptions : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderDestinationOptions, default is Undefined, optional
        destination options
    eniId : str, default is Undefined, optional
        Elastic Network Interface ID to attach to
    iamRoleArn : str, default is Undefined, optional
        The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
    iamRoleArnRef : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnRef, default is Undefined, optional
        iam role arn ref
    iamRoleArnSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnSelector, default is Undefined, optional
        iam role arn selector
    logDestination : str, default is Undefined, optional
        The ARN of the logging destination. Either log_destination or log_group_name must be set.
    logDestinationRef : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationRef, default is Undefined, optional
        log destination ref
    logDestinationSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationSelector, default is Undefined, optional
        log destination selector
    logDestinationType : str, default is Undefined, optional
        The type of the logging destination. Valid values: cloud-watch-logs, s3, kinesis-data-firehose. Default: cloud-watch-logs.
    logFormat : str, default is Undefined, optional
        The fields to include in the flow log record. Accepted format example: "$${interface-id} $${srcaddr} $${dstaddr} $${srcport} $${dstport}".
    logGroupName : str, default is Undefined, optional
        Deprecated: Use log_destination instead. The name of the CloudWatch log group. Either log_group_name or log_destination must be set.
    maxAggregationInterval : float, default is Undefined, optional
        The maximum interval of time
        during which a flow of packets is captured and aggregated into a flow
        log record. Valid Values: 60 seconds (1 minute) or 600 seconds (10
        minutes). Default: 600. When transit_gateway_id or transit_gateway_attachment_id is specified, max_aggregation_interval must be 60 seconds (1 minute).
    subnetId : str, default is Undefined, optional
        Subnet ID to attach to
    subnetIdRef : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    trafficType : str, default is Undefined, optional
        The type of traffic to capture. Valid values: ACCEPT,REJECT, ALL.
    transitGatewayAttachmentId : str, default is Undefined, optional
        Transit Gateway Attachment ID to attach to
    transitGatewayId : str, default is Undefined, optional
        Transit Gateway ID to attach to
    vpcId : str, default is Undefined, optional
        VPC ID to attach to
    vpcIdRef : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDRef, default is Undefined, optional
        vpc Id ref
    vpcIdSelector : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDSelector, default is Undefined, optional
        vpc Id selector
    """


    deliverCrossAccountRole?: str

    destinationOptions?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderDestinationOptions

    eniId?: str

    iamRoleArn?: str

    iamRoleArnRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnRef

    iamRoleArnSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnSelector

    logDestination?: str

    logDestinationRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationRef

    logDestinationSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationSelector

    logDestinationType?: str

    logFormat?: str

    logGroupName?: str

    maxAggregationInterval?: float

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDSelector

    tags?: {str:str}

    trafficType?: str

    transitGatewayAttachmentId?: str

    transitGatewayId?: str

    vpcId?: str

    vpcIdRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDRef

    vpcIdSelector?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDSelector


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderDestinationOptions:
    r"""
    Describes the destination options for a flow log. More details below.

    Attributes
    ----------
    fileFormat : str, default is Undefined, optional
        The format for the flow log. Default value: plain-text. Valid values: plain-text, parquet.
    hiveCompatiblePartitions : bool, default is Undefined, optional
        Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: false.
    perHourPartition : bool, default is Undefined, optional
        Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: false.
    """


    fileFormat?: str

    hiveCompatiblePartitions?: bool

    perHourPartition?: bool


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnRef:
    r"""
    Reference to a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnSelector:
    r"""
    Selector for a Role in iam to populate iamRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderIamRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logDestination.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logDestination.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderLogDestinationSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDRef:
    r"""
    Reference to a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDSelector:
    r"""
    Selector for a VPC in ec2 to populate vpcId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecInitProviderVpcIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2FlowLogSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta2FlowLogSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta2FlowLogStatus:
    r"""
    FlowLogStatus defines the observed state of FlowLog.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta2FlowLogStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta2FlowLogStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta2FlowLogStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta2FlowLogStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta2FlowLogStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta2 flow log status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the Flow Log.
    deliverCrossAccountRole : str, default is Undefined, optional
        ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts.
    destinationOptions : Ec2AwsUpboundIoV1beta2FlowLogStatusAtProviderDestinationOptions, default is Undefined, optional
        destination options
    eniId : str, default is Undefined, optional
        Elastic Network Interface ID to attach to
    iamRoleArn : str, default is Undefined, optional
        The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group
    id : str, default is Undefined, optional
        The Flow Log ID
    logDestination : str, default is Undefined, optional
        The ARN of the logging destination. Either log_destination or log_group_name must be set.
    logDestinationType : str, default is Undefined, optional
        The type of the logging destination. Valid values: cloud-watch-logs, s3, kinesis-data-firehose. Default: cloud-watch-logs.
    logFormat : str, default is Undefined, optional
        The fields to include in the flow log record. Accepted format example: "$${interface-id} $${srcaddr} $${dstaddr} $${srcport} $${dstport}".
    logGroupName : str, default is Undefined, optional
        Deprecated: Use log_destination instead. The name of the CloudWatch log group. Either log_group_name or log_destination must be set.
    maxAggregationInterval : float, default is Undefined, optional
        The maximum interval of time
        during which a flow of packets is captured and aggregated into a flow
        log record. Valid Values: 60 seconds (1 minute) or 600 seconds (10
        minutes). Default: 600. When transit_gateway_id or transit_gateway_attachment_id is specified, max_aggregation_interval must be 60 seconds (1 minute).
    subnetId : str, default is Undefined, optional
        Subnet ID to attach to
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    trafficType : str, default is Undefined, optional
        The type of traffic to capture. Valid values: ACCEPT,REJECT, ALL.
    transitGatewayAttachmentId : str, default is Undefined, optional
        Transit Gateway Attachment ID to attach to
    transitGatewayId : str, default is Undefined, optional
        Transit Gateway ID to attach to
    vpcId : str, default is Undefined, optional
        VPC ID to attach to
    """


    arn?: str

    deliverCrossAccountRole?: str

    destinationOptions?: Ec2AwsUpboundIoV1beta2FlowLogStatusAtProviderDestinationOptions

    eniId?: str

    iamRoleArn?: str

    id?: str

    logDestination?: str

    logDestinationType?: str

    logFormat?: str

    logGroupName?: str

    maxAggregationInterval?: float

    subnetId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    trafficType?: str

    transitGatewayAttachmentId?: str

    transitGatewayId?: str

    vpcId?: str


schema Ec2AwsUpboundIoV1beta2FlowLogStatusAtProviderDestinationOptions:
    r"""
    Describes the destination options for a flow log. More details below.

    Attributes
    ----------
    fileFormat : str, default is Undefined, optional
        The format for the flow log. Default value: plain-text. Valid values: plain-text, parquet.
    hiveCompatiblePartitions : bool, default is Undefined, optional
        Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3. Default value: false.
    perHourPartition : bool, default is Undefined, optional
        Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries. Default value: false.
    """


    fileFormat?: str

    hiveCompatiblePartitions?: bool

    perHourPartition?: bool


schema Ec2AwsUpboundIoV1beta2FlowLogStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


