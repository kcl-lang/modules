"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MetricStream:
    r"""
    MetricStream is the Schema for the MetricStreams API. Provides a CloudWatch Metric Stream resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudwatch.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MetricStream", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudwatchAwsUpboundIoV1beta1MetricStreamSpec, default is Undefined, required
        spec
    status : CloudwatchAwsUpboundIoV1beta1MetricStreamStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudwatch.aws.upbound.io/v1beta1" = "cloudwatch.aws.upbound.io/v1beta1"

    kind: "MetricStream" = "MetricStream"

    metadata?: v1.ObjectMeta

    spec: CloudwatchAwsUpboundIoV1beta1MetricStreamSpec

    status?: CloudwatchAwsUpboundIoV1beta1MetricStreamStatus


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpec:
    r"""
    MetricStreamSpec defines the desired state of MetricStream

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProvider

    initProvider?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecWriteConnectionSecretToRef


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProvider:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec for provider

    Attributes
    ----------
    excludeFilter : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderExcludeFilterItems0], default is Undefined, optional
        List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with include_filter.
    firehoseArn : str, default is Undefined, optional
        ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
    firehoseArnRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnRef, default is Undefined, optional
        firehose arn ref
    firehoseArnSelector : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnSelector, default is Undefined, optional
        firehose arn selector
    includeFilter : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderIncludeFilterItems0], default is Undefined, optional
        List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with exclude_filter.
    includeLinkedAccountsMetrics : bool, default is Undefined, optional
        account observability.
    name : str, default is Undefined, optional
        Friendly name of the metric stream. Conflicts with name_prefix.
    outputFormat : str, default is Undefined, optional
        Output format for the stream. Possible values are json, opentelemetry0.7, and opentelemetry1.0. For more information about output formats, see Metric streams output formats.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see Trust between CloudWatch and Kinesis Data Firehose.
    roleArnRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    statisticsConfiguration : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderStatisticsConfigurationItems0], default is Undefined, optional
        For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's output_format. If the OutputFormat is json, you can stream any additional statistic that is supported by CloudWatch, listed in CloudWatch statistics definitions. If the OutputFormat is opentelemetry0.7 or opentelemetry1.0, you can stream percentile statistics (p99 etc.). See details below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    excludeFilter?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderExcludeFilterItems0]

    firehoseArn?: str

    firehoseArnRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnRef

    firehoseArnSelector?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnSelector

    includeFilter?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderIncludeFilterItems0]

    includeLinkedAccountsMetrics?: bool

    name?: str

    outputFormat?: str

    region: str

    roleArn?: str

    roleArnRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnRef

    roleArnSelector?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnSelector

    statisticsConfiguration?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderStatisticsConfigurationItems0]

    tags?: {str:str}


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderExcludeFilterItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec for provider exclude filter items0

    Attributes
    ----------
    metricNames : [str], default is Undefined, optional
        An array that defines the metrics you want to exclude for this metric namespace
    namespace : str, default is Undefined, optional
        Name of the metric namespace in the filter.
    """


    metricNames?: [str]

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate firehoseArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate firehoseArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderFirehoseArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderIncludeFilterItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec for provider include filter items0

    Attributes
    ----------
    metricNames : [str], default is Undefined, optional
        An array that defines the metrics you want to include for this metric namespace
    namespace : str, default is Undefined, optional
        Name of the metric namespace in the filter.
    """


    metricNames?: [str]

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderStatisticsConfigurationItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec for provider statistics configuration items0

    Attributes
    ----------
    additionalStatistics : [str], default is Undefined, optional
        The additional statistics to stream for the metrics listed in include_metrics.
    includeMetric : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderStatisticsConfigurationItems0IncludeMetricItems0], default is Undefined, optional
        An array that defines the metrics that are to have additional statistics streamed. See details below.
    """


    additionalStatistics?: [str]

    includeMetric?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderStatisticsConfigurationItems0IncludeMetricItems0]


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecForProviderStatisticsConfigurationItems0IncludeMetricItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec for provider statistics configuration items0 include metric items0

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The name of the metric.
    namespace : str, default is Undefined, optional
        The namespace of the metric.
    """


    metricName?: str

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    excludeFilter : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderExcludeFilterItems0], default is Undefined, optional
        List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with include_filter.
    firehoseArn : str, default is Undefined, optional
        ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
    firehoseArnRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnRef, default is Undefined, optional
        firehose arn ref
    firehoseArnSelector : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnSelector, default is Undefined, optional
        firehose arn selector
    includeFilter : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderIncludeFilterItems0], default is Undefined, optional
        List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with exclude_filter.
    includeLinkedAccountsMetrics : bool, default is Undefined, optional
        account observability.
    name : str, default is Undefined, optional
        Friendly name of the metric stream. Conflicts with name_prefix.
    outputFormat : str, default is Undefined, optional
        Output format for the stream. Possible values are json, opentelemetry0.7, and opentelemetry1.0. For more information about output formats, see Metric streams output formats.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see Trust between CloudWatch and Kinesis Data Firehose.
    roleArnRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    statisticsConfiguration : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderStatisticsConfigurationItems0], default is Undefined, optional
        For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's output_format. If the OutputFormat is json, you can stream any additional statistic that is supported by CloudWatch, listed in CloudWatch statistics definitions. If the OutputFormat is opentelemetry0.7 or opentelemetry1.0, you can stream percentile statistics (p99 etc.). See details below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    excludeFilter?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderExcludeFilterItems0]

    firehoseArn?: str

    firehoseArnRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnRef

    firehoseArnSelector?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnSelector

    includeFilter?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderIncludeFilterItems0]

    includeLinkedAccountsMetrics?: bool

    name?: str

    outputFormat?: str

    roleArn?: str

    roleArnRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnRef

    roleArnSelector?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnSelector

    statisticsConfiguration?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderStatisticsConfigurationItems0]

    tags?: {str:str}


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderExcludeFilterItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec init provider exclude filter items0

    Attributes
    ----------
    metricNames : [str], default is Undefined, optional
        An array that defines the metrics you want to exclude for this metric namespace
    namespace : str, default is Undefined, optional
        Name of the metric namespace in the filter.
    """


    metricNames?: [str]

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnRef:
    r"""
    Reference to a DeliveryStream in firehose to populate firehoseArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate firehoseArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderFirehoseArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderIncludeFilterItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec init provider include filter items0

    Attributes
    ----------
    metricNames : [str], default is Undefined, optional
        An array that defines the metrics you want to include for this metric namespace
    namespace : str, default is Undefined, optional
        Name of the metric namespace in the filter.
    """


    metricNames?: [str]

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnSelectorPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderStatisticsConfigurationItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec init provider statistics configuration items0

    Attributes
    ----------
    additionalStatistics : [str], default is Undefined, optional
        The additional statistics to stream for the metrics listed in include_metrics.
    includeMetric : [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderStatisticsConfigurationItems0IncludeMetricItems0], default is Undefined, optional
        An array that defines the metrics that are to have additional statistics streamed. See details below.
    """


    additionalStatistics?: [str]

    includeMetric?: [CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderStatisticsConfigurationItems0IncludeMetricItems0]


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecInitProviderStatisticsConfigurationItems0IncludeMetricItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream spec init provider statistics configuration items0 include metric items0

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The name of the metric.
    namespace : str, default is Undefined, optional
        The namespace of the metric.
    """


    metricName?: str

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecProviderConfigRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatus:
    r"""
    MetricStreamStatus defines the observed state of MetricStream.

    Attributes
    ----------
    atProvider : CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProvider

    conditions?: [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusConditionsItems0]

    observedGeneration?: int


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProvider:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the metric stream.
    creationDate : str, default is Undefined, optional
        Date and time in RFC3339 format that the metric stream was created.
    excludeFilter : [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderExcludeFilterItems0], default is Undefined, optional
        List of exclusive metric filters. If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces and the conditional metric names that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is excluded. Conflicts with include_filter.
    firehoseArn : str, default is Undefined, optional
        ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.
    id : str, default is Undefined, optional
        id
    includeFilter : [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderIncludeFilterItems0], default is Undefined, optional
        List of inclusive metric filters. If you specify this parameter, the stream sends only the conditional metric names from the metric namespaces that you specify here. If you don't specify metric names or provide empty metric names whole metric namespace is included. Conflicts with exclude_filter.
    includeLinkedAccountsMetrics : bool, default is Undefined, optional
        account observability.
    lastUpdateDate : str, default is Undefined, optional
        Date and time in RFC3339 format that the metric stream was last updated.
    name : str, default is Undefined, optional
        Friendly name of the metric stream. Conflicts with name_prefix.
    outputFormat : str, default is Undefined, optional
        Output format for the stream. Possible values are json, opentelemetry0.7, and opentelemetry1.0. For more information about output formats, see Metric streams output formats.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see Trust between CloudWatch and Kinesis Data Firehose.
    state : str, default is Undefined, optional
        State of the metric stream. Possible values are running and stopped.
    statisticsConfiguration : [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderStatisticsConfigurationItems0], default is Undefined, optional
        For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's output_format. If the OutputFormat is json, you can stream any additional statistic that is supported by CloudWatch, listed in CloudWatch statistics definitions. If the OutputFormat is opentelemetry0.7 or opentelemetry1.0, you can stream percentile statistics (p99 etc.). See details below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    creationDate?: str

    excludeFilter?: [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderExcludeFilterItems0]

    firehoseArn?: str

    id?: str

    includeFilter?: [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderIncludeFilterItems0]

    includeLinkedAccountsMetrics?: bool

    lastUpdateDate?: str

    name?: str

    outputFormat?: str

    roleArn?: str

    state?: str

    statisticsConfiguration?: [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderStatisticsConfigurationItems0]

    tags?: {str:str}

    tagsAll?: {str:str}


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderExcludeFilterItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream status at provider exclude filter items0

    Attributes
    ----------
    metricNames : [str], default is Undefined, optional
        An array that defines the metrics you want to exclude for this metric namespace
    namespace : str, default is Undefined, optional
        Name of the metric namespace in the filter.
    """


    metricNames?: [str]

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderIncludeFilterItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream status at provider include filter items0

    Attributes
    ----------
    metricNames : [str], default is Undefined, optional
        An array that defines the metrics you want to include for this metric namespace
    namespace : str, default is Undefined, optional
        Name of the metric namespace in the filter.
    """


    metricNames?: [str]

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderStatisticsConfigurationItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream status at provider statistics configuration items0

    Attributes
    ----------
    additionalStatistics : [str], default is Undefined, optional
        The additional statistics to stream for the metrics listed in include_metrics.
    includeMetric : [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderStatisticsConfigurationItems0IncludeMetricItems0], default is Undefined, optional
        An array that defines the metrics that are to have additional statistics streamed. See details below.
    """


    additionalStatistics?: [str]

    includeMetric?: [CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderStatisticsConfigurationItems0IncludeMetricItems0]


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatusAtProviderStatisticsConfigurationItems0IncludeMetricItems0:
    r"""
    cloudwatch aws upbound io v1beta1 metric stream status at provider statistics configuration items0 include metric items0

    Attributes
    ----------
    metricName : str, default is Undefined, optional
        The name of the metric.
    namespace : str, default is Undefined, optional
        The namespace of the metric.
    """


    metricName?: str

    namespace?: str


schema CloudwatchAwsUpboundIoV1beta1MetricStreamStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


