"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProviderConfig:
    r"""
    A ProviderConfig configures the AWS provider.

    Attributes
    ----------
    apiVersion : str, default is "aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProviderConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AwsUpboundIoV1beta1ProviderConfigSpec, default is Undefined, required
        spec
    status : AwsUpboundIoV1beta1ProviderConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "aws.upbound.io/v1beta1" = "aws.upbound.io/v1beta1"

    kind: "ProviderConfig" = "ProviderConfig"

    metadata?: v1.ObjectMeta

    spec: AwsUpboundIoV1beta1ProviderConfigSpec

    status?: AwsUpboundIoV1beta1ProviderConfigStatus


schema AwsUpboundIoV1beta1ProviderConfigSpec:
    r"""
    A ProviderConfigSpec defines the desired state of a ProviderConfig.

    Attributes
    ----------
    assumeRoleChain : [AwsUpboundIoV1beta1ProviderConfigSpecAssumeRoleChainItems0], default is Undefined, optional
        AssumeRoleChain defines the options for assuming an IAM role
    credentials : AwsUpboundIoV1beta1ProviderConfigSpecCredentials, default is Undefined, required
        credentials
    endpoint : AwsUpboundIoV1beta1ProviderConfigSpecEndpoint, default is Undefined, optional
        endpoint
    s3_use_path_style : bool, default is Undefined, optional
        Whether to enable the request to use path-style addressing, i.e., https://s3.amazonaws.com/BUCKET/KEY.
    skip_credentials_validation : bool, default is Undefined, optional
        Whether to skip credentials validation via the STS API.
        This can be useful for testing and for AWS API implementations that do not have STS available.
    skip_metadata_api_check : bool, default is Undefined, optional
        Whether to skip the AWS Metadata API check
        Useful for AWS API implementations that do not have a metadata API endpoint.
    skip_region_validation : bool, default is Undefined, optional
        Whether to skip validation of provided region name.
        Useful for AWS-like implementations that use their own region names or to bypass the validation for
        regions that aren't publicly available yet.
    skip_requesting_account_id : bool, default is Undefined, optional
        Whether to skip requesting the account ID.
        Useful for AWS API implementations that do not have the IAM, STS API, or metadata API
    """


    assumeRoleChain?: [AwsUpboundIoV1beta1ProviderConfigSpecAssumeRoleChainItems0]

    credentials: AwsUpboundIoV1beta1ProviderConfigSpecCredentials

    endpoint?: AwsUpboundIoV1beta1ProviderConfigSpecEndpoint

    s3_use_path_style?: bool

    skip_credentials_validation?: bool

    skip_metadata_api_check?: bool

    skip_region_validation?: bool

    skip_requesting_account_id?: bool


schema AwsUpboundIoV1beta1ProviderConfigSpecAssumeRoleChainItems0:
    r"""
    AssumeRoleOptions define the options for assuming an IAM Role
    Fields are similar to the STS AssumeRoleOptions in the AWS SDK

    Attributes
    ----------
    externalID : str, default is Undefined, optional
        ExternalID is the external ID used when assuming role.
    roleARN : str, default is Undefined, optional
        AssumeRoleARN to assume with provider credentials
    tags : [AwsUpboundIoV1beta1ProviderConfigSpecAssumeRoleChainItems0TagsItems0], default is Undefined, optional
        Tags is list of session tags that you want to pass. Each session tag consists of a key
        name and an associated value. For more information about session tags, see
        Tagging STS Sessions
        (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html).
    transitiveTagKeys : [str], default is Undefined, optional
        TransitiveTagKeys is a list of keys for session tags that you want to set as transitive. If you set a
        tag key as transitive, the corresponding key and value passes to subsequent
        sessions in a role chain. For more information, see Chaining Roles with Session Tags
        (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining).
    """


    externalID?: str

    roleARN?: str

    tags?: [AwsUpboundIoV1beta1ProviderConfigSpecAssumeRoleChainItems0TagsItems0]

    transitiveTagKeys?: [str]


schema AwsUpboundIoV1beta1ProviderConfigSpecAssumeRoleChainItems0TagsItems0:
    r"""
    Tag is session tag that can be used to assume an IAM Role

    Attributes
    ----------
    key : str, default is Undefined, required
        Name of the tag.
        Key is a required field
    value : str, default is Undefined, required
        Value of the tag.
        Value is a required field
    """


    key: str

    value: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentials:
    r"""
    Credentials required to authenticate to this provider.

    Attributes
    ----------
    env : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsEnv, default is Undefined, optional
        env
    fs : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsFs, default is Undefined, optional
        fs
    secretRef : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsSecretRef, default is Undefined, optional
        secret ref
    source : str, default is Undefined, required
        Source of the provider credentials.
    upbound : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpbound, default is Undefined, optional
        upbound
    webIdentity : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentity, default is Undefined, optional
        web identity
    """


    env?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsEnv

    fs?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsFs

    secretRef?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsSecretRef

    source: "None" | "Secret" | "IRSA" | "WebIdentity" | "PodIdentity" | "Upbound"

    upbound?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpbound

    webIdentity?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentity


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsEnv:
    r"""
    Env is a reference to an environment variable that contains credentials
    that must be used to connect to the provider.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is the name of an environment variable.
    """


    name: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsFs:
    r"""
    Fs is a reference to a filesystem location that contains credentials that
    must be used to connect to the provider.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a filesystem path.
    """


    path: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsSecretRef:
    r"""
    A SecretRef is a reference to a secret key that contains the credentials
    that must be used to connect to the provider.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpbound:
    r"""
    Upbound defines the options for authenticating using Upbound as an identity provider.

    Attributes
    ----------
    webIdentity : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentity, default is Undefined, optional
        web identity
    """


    webIdentity?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentity


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentity:
    r"""
    WebIdentity defines the options for assuming an IAM role with a Web
    Identity.

    Attributes
    ----------
    roleARN : str, default is Undefined, optional
        AssumeRoleARN to assume with provider credentials
    roleSessionName : str, default is Undefined, optional
        RoleSessionName is the session name, if you wish to uniquely identify this session.
    tokenConfig : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfig, default is Undefined, optional
        token config
    """


    roleARN?: str

    roleSessionName?: str

    tokenConfig?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfig


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfig:
    r"""
    TokenConfig is the Web Identity Token config to assume the role.

    Attributes
    ----------
    fs : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfigFs, default is Undefined, optional
        fs
    secretRef : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfigSecretRef, default is Undefined, optional
        secret ref
    source : str, default is Undefined, required
        Source is the source of the web identity token.
    """


    fs?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfigFs

    secretRef?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfigSecretRef

    source: "Secret" | "Filesystem"


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfigFs:
    r"""
    Fs is a reference to a filesystem location that contains credentials that
    must be used to obtain the web identity token.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a filesystem path.
    """


    path: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsUpboundWebIdentityTokenConfigSecretRef:
    r"""
    A SecretRef is a reference to a secret key that contains the credentials
    that must be used to obtain the web identity token.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentity:
    r"""
    WebIdentity defines the options for assuming an IAM role with a Web Identity.

    Attributes
    ----------
    roleARN : str, default is Undefined, optional
        AssumeRoleARN to assume with provider credentials
    roleSessionName : str, default is Undefined, optional
        RoleSessionName is the session name, if you wish to uniquely identify this session.
    tokenConfig : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfig, default is Undefined, optional
        token config
    """


    roleARN?: str

    roleSessionName?: str

    tokenConfig?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfig


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfig:
    r"""
    TokenConfig is the Web Identity Token config to assume the role.

    Attributes
    ----------
    fs : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfigFs, default is Undefined, optional
        fs
    secretRef : AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfigSecretRef, default is Undefined, optional
        secret ref
    source : str, default is Undefined, required
        Source is the source of the web identity token.
    """


    fs?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfigFs

    secretRef?: AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfigSecretRef

    source: "Secret" | "Filesystem"


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfigFs:
    r"""
    Fs is a reference to a filesystem location that contains credentials that
    must be used to obtain the web identity token.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path is a filesystem path.
    """


    path: str


schema AwsUpboundIoV1beta1ProviderConfigSpecCredentialsWebIdentityTokenConfigSecretRef:
    r"""
    A SecretRef is a reference to a secret key that contains the credentials
    that must be used to obtain the web identity token.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AwsUpboundIoV1beta1ProviderConfigSpecEndpoint:
    r"""
    Endpoint is where you can override the default endpoint configuration
    of AWS calls made by the provider.

    Attributes
    ----------
    hostnameImmutable : bool, default is Undefined, optional
        Specifies if the endpoint's hostname can be modified by the SDK's API
        client.

        If the hostname is mutable the SDK API clients may modify any part of
        the hostname based on the requirements of the API, (e.g. adding, or
        removing content in the hostname). Such as, Amazon S3 API client
        prefixing "bucketname" to the hostname, or changing the
        hostname service name component from "s3." to "s3-accesspoint.dualstack."
        for the dualstack endpoint of an S3 Accesspoint resource.

        Care should be taken when providing a custom endpoint for an API. If the
        endpoint hostname is mutable, and the client cannot modify the endpoint
        correctly, the operation call will most likely fail, or have undefined
        behavior.

        If hostname is immutable, the SDK API clients will not modify the
        hostname of the URL. This may cause the API client not to function
        correctly if the API requires the operation specific hostname values
        to be used by the client.

        This flag does not modify the API client's behavior if this endpoint
        will be used instead of Endpoint Discovery, or if the endpoint will be
        used to perform Endpoint Discovery. That behavior is configured via the
        API Client's Options.
        Note that this is effective only for resources that use AWS SDK v2.
    partitionId : str, default is Undefined, optional
        The AWS partition the endpoint belongs to.
    services : [str], default is Undefined, optional
        Specifies the list of services you want endpoint to be used for
    signingMethod : str, default is Undefined, optional
        The signing method that should be used for signing the requests to the
        endpoint.
    signingName : str, default is Undefined, optional
        The service name that should be used for signing the requests to the
        endpoint.
    signingRegion : str, default is Undefined, optional
        The region that should be used for signing the request to the endpoint.
        For IAM, which doesn't have any region, us-east-1 is used to sign the
        requests, which is the only signing region of IAM.
    source : str, default is Undefined, optional
        The source of the Endpoint. By default, this will be ServiceMetadata.
        When providing a custom endpoint, you should set the source as Custom.
        If source is not provided when providing a custom endpoint, the SDK may not
        perform required host mutations correctly. Source should be used along with
        HostnameImmutable property as per the usage requirement.
        Note that this is effective only for resources that use AWS SDK v2.
    url : AwsUpboundIoV1beta1ProviderConfigSpecEndpointURL, default is Undefined, required
        url
    """


    hostnameImmutable?: bool

    partitionId?: str

    services?: [str]

    signingMethod?: str

    signingName?: str

    signingRegion?: str

    source?: "ServiceMetadata" | "Custom"

    url: AwsUpboundIoV1beta1ProviderConfigSpecEndpointURL


schema AwsUpboundIoV1beta1ProviderConfigSpecEndpointURL:
    r"""
    URL lets you configure the endpoint URL to be used in SDK calls.

    Attributes
    ----------
    dynamic : AwsUpboundIoV1beta1ProviderConfigSpecEndpointURLDynamic, default is Undefined, optional
        dynamic
    static : str, default is Undefined, optional
        Static is the full URL you'd like the AWS SDK to use.
        Recommended for using tools like localstack where a single host is exposed
        for all services and regions.
    $type : str, default is Undefined, required
        You can provide a static URL that will be used regardless of the service
        and region by choosing Static type. Alternatively, you can provide
        configuration for dynamically resolving the URL with the config you provide
        once you set the type as Dynamic.
    """


    dynamic?: AwsUpboundIoV1beta1ProviderConfigSpecEndpointURLDynamic

    static?: str

    $type: "Static" | "Dynamic" | "Auto"


schema AwsUpboundIoV1beta1ProviderConfigSpecEndpointURLDynamic:
    r"""
    Dynamic lets you configure the behavior of endpoint URL resolver.

    Attributes
    ----------
    host : str, default is Undefined, required
        Host is the address of the main host that the resolver will use to
        prepend protocol, service and region configurations.
        For example, the final URL for EC2 in us-east-1 looks like https://ec2.us-east-1.amazonaws.com
        You would need to use "amazonaws.com" as Host and "https" as protocol
        to have the resolver construct it.
    $protocol : str, default is Undefined, required
        Protocol is the HTTP protocol that will be used in the URL. Currently,
        only http and https are supported.
    """


    host: str

    $protocol: "http" | "https"


schema AwsUpboundIoV1beta1ProviderConfigStatus:
    r"""
    A ProviderConfigStatus reflects the observed state of a ProviderConfig.

    Attributes
    ----------
    conditions : [AwsUpboundIoV1beta1ProviderConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    users : int, default is Undefined, optional
        Users of this provider configuration.
    """


    conditions?: [AwsUpboundIoV1beta1ProviderConfigStatusConditionsItems0]

    users?: int


schema AwsUpboundIoV1beta1ProviderConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


