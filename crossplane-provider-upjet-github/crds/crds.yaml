apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: actionssecrets.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: ActionsSecret
    listKind: ActionsSecretList
    plural: actionssecrets
    singular: actionssecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ActionsSecret is the Schema for the ActionsSecrets API. Creates
          and manages an Action Secret within a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActionsSecretSpec defines the desired state of ActionsSecret
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ActionsSecretStatus defines the observed state of ActionsSecret.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_secret creation.
                      Date of 'actions_secret' creation.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                  updatedAt:
                    description: |-
                      Date of actions_secret update.
                      Date of 'actions_secret' update.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: actionsvariables.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: ActionsVariable
    listKind: ActionsVariableList
    plural: actionsvariables
    singular: actionsvariable
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ActionsVariable is the Schema for the ActionsVariables API. Creates
          and manages an Action variable within a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ActionsVariableSpec defines the desired state of ActionsVariable
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ActionsVariableStatus defines the observed state of ActionsVariable.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_variable creation.
                      Date of 'actions_variable' creation.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      Name of the repository
                      Name of the repository.
                    type: string
                  updatedAt:
                    description: |-
                      Date of actions_variable update.
                      Date of 'actions_variable' update.
                    type: string
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: environmentsecrets.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: EnvironmentSecret
    listKind: EnvironmentSecretList
    plural: environmentsecrets
    singular: environmentsecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvironmentSecret is the Schema for the EnvironmentSecrets API.
          Creates and manages an Action Secret within a GitHub repository environment
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentSecretSpec defines the desired state of EnvironmentSecret
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  environment:
                    description: |-
                      Name of the environment.
                      Name of the environment.
                    type: string
                  environmentRef:
                    description: Reference to a Environment in repo to populate environment.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  environmentSelector:
                    description: Selector for a Environment in repo to populate environment.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted.
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  repository:
                    description: |-
                      Name of the repository.
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretName:
                    description: |-
                      Name of the secret.
                      Name of the secret.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  environment:
                    description: |-
                      Name of the environment.
                      Name of the environment.
                    type: string
                  environmentRef:
                    description: Reference to a Environment in repo to populate environment.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  environmentSelector:
                    description: Selector for a Environment in repo to populate environment.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted.
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  repository:
                    description: |-
                      Name of the repository.
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  secretName:
                    description: |-
                      Name of the secret.
                      Name of the secret.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EnvironmentSecretStatus defines the observed state of EnvironmentSecret.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_environment_secret creation.
                      Date of 'actions_environment_secret' creation.
                    type: string
                  environment:
                    description: |-
                      Name of the environment.
                      Name of the environment.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      Name of the repository.
                      Name of the repository.
                    type: string
                  secretName:
                    description: |-
                      Name of the secret.
                      Name of the secret.
                    type: string
                  updatedAt:
                    description: |-
                      Date of actions_environment_secret update.
                      Date of 'actions_environment_secret' update.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: environmentvariables.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: EnvironmentVariable
    listKind: EnvironmentVariableList
    plural: environmentvariables
    singular: environmentvariable
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvironmentVariable is the Schema for the EnvironmentVariables
          API. Creates and manages an Action variable within a GitHub repository environment
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentVariableSpec defines the desired state of EnvironmentVariable
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  environment:
                    description: |-
                      Name of the environment.
                      Name of the environment.
                    type: string
                  environmentRef:
                    description: Reference to a Environment in repo to populate environment.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  environmentSelector:
                    description: Selector for a Environment in repo to populate environment.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  repository:
                    description: |-
                      Name of the repository.
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable.
                      Name of the variable.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  environment:
                    description: |-
                      Name of the environment.
                      Name of the environment.
                    type: string
                  environmentRef:
                    description: Reference to a Environment in repo to populate environment.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  environmentSelector:
                    description: Selector for a Environment in repo to populate environment.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  repository:
                    description: |-
                      Name of the repository.
                      Name of the repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable.
                      Name of the variable.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EnvironmentVariableStatus defines the observed state of EnvironmentVariable.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_environment_secret creation.
                      Date of 'actions_variable' creation.
                    type: string
                  environment:
                    description: |-
                      Name of the environment.
                      Name of the environment.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      Name of the repository.
                      Name of the repository.
                    type: string
                  updatedAt:
                    description: |-
                      Date of actions_environment_secret update.
                      Date of 'actions_variable' update.
                    type: string
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable.
                      Name of the variable.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: organizationactionssecrets.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: OrganizationActionsSecret
    listKind: OrganizationActionsSecretList
    plural: organizationactionssecrets
    singular: organizationactionssecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OrganizationActionsSecret is the Schema for the OrganizationActionsSecrets
          API. Creates and manages an Action Secret within a GitHub organization
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationActionsSecretSpec defines the desired state of
              OrganizationActionsSecret
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                  selectedRepositoryIds:
                    description: |-
                      An array of repository ids that can access the organization secret.
                      An array of repository ids that can access the organization secret.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Configures the access that repositories have to the organization secret.
                      Must be one of all, private, selected. selected_repository_ids is required if set to selected.
                      Configures the access that repositories have to the organization secret. Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  encryptedValueSecretRef:
                    description: |-
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                      Encrypted value of the secret using the GitHub public key in Base64 format.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  plaintextValueSecretRef:
                    description: |-
                      Plaintext value of the secret to be encrypted
                      Plaintext value of the secret to be encrypted.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                  selectedRepositoryIds:
                    description: |-
                      An array of repository ids that can access the organization secret.
                      An array of repository ids that can access the organization secret.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Configures the access that repositories have to the organization secret.
                      Must be one of all, private, selected. selected_repository_ids is required if set to selected.
                      Configures the access that repositories have to the organization secret. Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OrganizationActionsSecretStatus defines the observed state
              of OrganizationActionsSecret.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_secret creation.
                      Date of 'actions_secret' creation.
                    type: string
                  id:
                    type: string
                  secretName:
                    description: |-
                      Name of the secret
                      Name of the secret.
                    type: string
                  selectedRepositoryIds:
                    description: |-
                      An array of repository ids that can access the organization secret.
                      An array of repository ids that can access the organization secret.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  updatedAt:
                    description: |-
                      Date of actions_secret update.
                      Date of 'actions_secret' update.
                    type: string
                  visibility:
                    description: |-
                      Configures the access that repositories have to the organization secret.
                      Must be one of all, private, selected. selected_repository_ids is required if set to selected.
                      Configures the access that repositories have to the organization secret. Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: organizationactionsvariables.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: OrganizationActionsVariable
    listKind: OrganizationActionsVariableList
    plural: organizationactionsvariables
    singular: organizationactionsvariable
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OrganizationActionsVariable is the Schema for the OrganizationActionsVariables
          API. Creates and manages an Action variable within a GitHub organization
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationActionsVariableSpec defines the desired state
              of OrganizationActionsVariable
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  selectedRepositoryIds:
                    description: |-
                      An array of repository ids that can access the organization variable.
                      An array of repository ids that can access the organization variable.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                  visibility:
                    description: |-
                      Configures the access that repositories have to the organization variable.
                      Must be one of all, private, selected. selected_repository_ids is required if set to selected.
                      Configures the access that repositories have to the organization variable. Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  selectedRepositoryIds:
                    description: |-
                      An array of repository ids that can access the organization variable.
                      An array of repository ids that can access the organization variable.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                  visibility:
                    description: |-
                      Configures the access that repositories have to the organization variable.
                      Must be one of all, private, selected. selected_repository_ids is required if set to selected.
                      Configures the access that repositories have to the organization variable. Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OrganizationActionsVariableStatus defines the observed state
              of OrganizationActionsVariable.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: |-
                      Date of actions_variable creation.
                      Date of 'actions_variable' creation.
                    type: string
                  id:
                    type: string
                  selectedRepositoryIds:
                    description: |-
                      An array of repository ids that can access the organization variable.
                      An array of repository ids that can access the organization variable.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  updatedAt:
                    description: |-
                      Date of actions_variable update.
                      Date of 'actions_variable' update.
                    type: string
                  value:
                    description: |-
                      Value of the variable
                      Value of the variable.
                    type: string
                  variableName:
                    description: |-
                      Name of the variable
                      Name of the variable.
                    type: string
                  visibility:
                    description: |-
                      Configures the access that repositories have to the organization variable.
                      Must be one of all, private, selected. selected_repository_ids is required if set to selected.
                      Configures the access that repositories have to the organization variable. Must be one of 'all', 'private', or 'selected'. 'selected_repository_ids' is required if set to 'selected'.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: organizationpermissions.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: OrganizationPermissions
    listKind: OrganizationPermissionsList
    plural: organizationpermissions
    singular: organizationpermissions
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OrganizationPermissions is the Schema for the OrganizationPermissionss
          API. Creates and manages Actions permissions within a GitHub organization
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationPermissionsSpec defines the desired state of
              OrganizationPermissions
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowedActions:
                    description: |-
                      The permissions policy that controls the actions that are allowed to run. Can be one of: all, local_only, or selected.
                      The permissions policy that controls the actions that are allowed to run. Can be one of: 'all', 'local_only', or 'selected'.
                    type: string
                  allowedActionsConfig:
                    description: |-
                      Sets the actions that are allowed in an organization. Only available when allowed_actions = selected. See Allowed Actions Config below for details.
                      Sets the actions that are allowed in an organization. Only available when 'allowed_actions' = 'selected'
                    items:
                      properties:
                        githubOwnedAllowed:
                          description: |-
                            Whether GitHub-owned actions are allowed in the organization.
                            Whether GitHub-owned actions are allowed in the organization.
                          type: boolean
                        patternsAllowed:
                          description: |-
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@, monalisa/octocat@v2, monalisa/."
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        verifiedAllowed:
                          description: |-
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to 'true' to allow all GitHub Marketplace actions by verified creators.
                          type: boolean
                      type: object
                    type: array
                  enabledRepositories:
                    description: |-
                      The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: all, none, or selected.
                      The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: 'all', 'none', or 'selected'.
                    type: string
                  enabledRepositoriesConfig:
                    description: |-
                      Sets the list of selected repositories that are enabled for GitHub Actions in an organization. Only available when enabled_repositories = selected. See Enabled Repositories Config below for details.
                      Sets the list of selected repositories that are enabled for GitHub Actions in an organization. Only available when 'enabled_repositories' = 'selected'.
                    items:
                      properties:
                        repositoryIds:
                          description: |-
                            List of repository IDs to enable for GitHub Actions.
                            List of repository IDs to enable for GitHub Actions.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowedActions:
                    description: |-
                      The permissions policy that controls the actions that are allowed to run. Can be one of: all, local_only, or selected.
                      The permissions policy that controls the actions that are allowed to run. Can be one of: 'all', 'local_only', or 'selected'.
                    type: string
                  allowedActionsConfig:
                    description: |-
                      Sets the actions that are allowed in an organization. Only available when allowed_actions = selected. See Allowed Actions Config below for details.
                      Sets the actions that are allowed in an organization. Only available when 'allowed_actions' = 'selected'
                    items:
                      properties:
                        githubOwnedAllowed:
                          description: |-
                            Whether GitHub-owned actions are allowed in the organization.
                            Whether GitHub-owned actions are allowed in the organization.
                          type: boolean
                        patternsAllowed:
                          description: |-
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@, monalisa/octocat@v2, monalisa/."
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        verifiedAllowed:
                          description: |-
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to 'true' to allow all GitHub Marketplace actions by verified creators.
                          type: boolean
                      type: object
                    type: array
                  enabledRepositories:
                    description: |-
                      The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: all, none, or selected.
                      The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: 'all', 'none', or 'selected'.
                    type: string
                  enabledRepositoriesConfig:
                    description: |-
                      Sets the list of selected repositories that are enabled for GitHub Actions in an organization. Only available when enabled_repositories = selected. See Enabled Repositories Config below for details.
                      Sets the list of selected repositories that are enabled for GitHub Actions in an organization. Only available when 'enabled_repositories' = 'selected'.
                    items:
                      properties:
                        repositoryIds:
                          description: |-
                            List of repository IDs to enable for GitHub Actions.
                            List of repository IDs to enable for GitHub Actions.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OrganizationPermissionsStatus defines the observed state
              of OrganizationPermissions.
            properties:
              atProvider:
                properties:
                  allowedActions:
                    description: |-
                      The permissions policy that controls the actions that are allowed to run. Can be one of: all, local_only, or selected.
                      The permissions policy that controls the actions that are allowed to run. Can be one of: 'all', 'local_only', or 'selected'.
                    type: string
                  allowedActionsConfig:
                    description: |-
                      Sets the actions that are allowed in an organization. Only available when allowed_actions = selected. See Allowed Actions Config below for details.
                      Sets the actions that are allowed in an organization. Only available when 'allowed_actions' = 'selected'
                    items:
                      properties:
                        githubOwnedAllowed:
                          description: |-
                            Whether GitHub-owned actions are allowed in the organization.
                            Whether GitHub-owned actions are allowed in the organization.
                          type: boolean
                        patternsAllowed:
                          description: |-
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@, monalisa/octocat@v2, monalisa/."
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        verifiedAllowed:
                          description: |-
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to 'true' to allow all GitHub Marketplace actions by verified creators.
                          type: boolean
                      type: object
                    type: array
                  enabledRepositories:
                    description: |-
                      The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: all, none, or selected.
                      The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: 'all', 'none', or 'selected'.
                    type: string
                  enabledRepositoriesConfig:
                    description: |-
                      Sets the list of selected repositories that are enabled for GitHub Actions in an organization. Only available when enabled_repositories = selected. See Enabled Repositories Config below for details.
                      Sets the list of selected repositories that are enabled for GitHub Actions in an organization. Only available when 'enabled_repositories' = 'selected'.
                    items:
                      properties:
                        repositoryIds:
                          description: |-
                            List of repository IDs to enable for GitHub Actions.
                            List of repository IDs to enable for GitHub Actions.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositoryaccesslevels.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryAccessLevel
    listKind: RepositoryAccessLevelList
    plural: repositoryaccesslevels
    singular: repositoryaccesslevel
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryAccessLevel is the Schema for the RepositoryAccessLevels
          API. Manages Actions and Reusable Workflow access for a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryAccessLevelSpec defines the desired state of RepositoryAccessLevel
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessLevel:
                    description: |-
                      Where the actions or reusable workflows of the repository may be used. Possible values are none, user, organization, or enterprise.
                      Where the actions or reusable workflows of the repository may be used. Possible values are 'none', 'user', 'organization', or 'enterprise'.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accessLevel:
                    description: |-
                      Where the actions or reusable workflows of the repository may be used. Possible values are none, user, organization, or enterprise.
                      Where the actions or reusable workflows of the repository may be used. Possible values are 'none', 'user', 'organization', or 'enterprise'.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryAccessLevelStatus defines the observed state of
              RepositoryAccessLevel.
            properties:
              atProvider:
                properties:
                  accessLevel:
                    description: |-
                      Where the actions or reusable workflows of the repository may be used. Possible values are none, user, organization, or enterprise.
                      Where the actions or reusable workflows of the repository may be used. Possible values are 'none', 'user', 'organization', or 'enterprise'.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositorypermissions.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryPermissions
    listKind: RepositoryPermissionsList
    plural: repositorypermissions
    singular: repositorypermissions
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryPermissions is the Schema for the RepositoryPermissionss
          API. Enables and manages Actions permissions for a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryPermissionsSpec defines the desired state of RepositoryPermissions
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowedActions:
                    description: |-
                      The permissions policy that controls the actions that are allowed to run. Can be one of: all, local_only, or selected.
                      The permissions policy that controls the actions that are allowed to run. Can be one of: 'all', 'local_only', or 'selected'.
                    type: string
                  allowedActionsConfig:
                    description: |-
                      Sets the actions that are allowed in an repository. Only available when allowed_actions = selected. See Allowed Actions Config below for details.
                      Sets the actions that are allowed in an repository. Only available when 'allowed_actions' = 'selected'.
                    items:
                      properties:
                        githubOwnedAllowed:
                          description: |-
                            Whether GitHub-owned actions are allowed in the repository.
                            Whether GitHub-owned actions are allowed in the repository.
                          type: boolean
                        patternsAllowed:
                          description: |-
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@, monalisa/octocat@v2, monalisa/."
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        verifiedAllowed:
                          description: |-
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to 'true' to allow all GitHub Marketplace actions by verified creators.
                          type: boolean
                      type: object
                    type: array
                  enabled:
                    description: |-
                      Should GitHub actions be enabled on this repository?
                      Should GitHub actions be enabled on this repository.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowedActions:
                    description: |-
                      The permissions policy that controls the actions that are allowed to run. Can be one of: all, local_only, or selected.
                      The permissions policy that controls the actions that are allowed to run. Can be one of: 'all', 'local_only', or 'selected'.
                    type: string
                  allowedActionsConfig:
                    description: |-
                      Sets the actions that are allowed in an repository. Only available when allowed_actions = selected. See Allowed Actions Config below for details.
                      Sets the actions that are allowed in an repository. Only available when 'allowed_actions' = 'selected'.
                    items:
                      properties:
                        githubOwnedAllowed:
                          description: |-
                            Whether GitHub-owned actions are allowed in the repository.
                            Whether GitHub-owned actions are allowed in the repository.
                          type: boolean
                        patternsAllowed:
                          description: |-
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@, monalisa/octocat@v2, monalisa/."
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        verifiedAllowed:
                          description: |-
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to 'true' to allow all GitHub Marketplace actions by verified creators.
                          type: boolean
                      type: object
                    type: array
                  enabled:
                    description: |-
                      Should GitHub actions be enabled on this repository?
                      Should GitHub actions be enabled on this repository.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryPermissionsStatus defines the observed state of
              RepositoryPermissions.
            properties:
              atProvider:
                properties:
                  allowedActions:
                    description: |-
                      The permissions policy that controls the actions that are allowed to run. Can be one of: all, local_only, or selected.
                      The permissions policy that controls the actions that are allowed to run. Can be one of: 'all', 'local_only', or 'selected'.
                    type: string
                  allowedActionsConfig:
                    description: |-
                      Sets the actions that are allowed in an repository. Only available when allowed_actions = selected. See Allowed Actions Config below for details.
                      Sets the actions that are allowed in an repository. Only available when 'allowed_actions' = 'selected'.
                    items:
                      properties:
                        githubOwnedAllowed:
                          description: |-
                            Whether GitHub-owned actions are allowed in the repository.
                            Whether GitHub-owned actions are allowed in the repository.
                          type: boolean
                        patternsAllowed:
                          description: |-
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, monalisa/octocat@, monalisa/octocat@v2, monalisa/."
                            Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, 'monalisa/octocat@', 'monalisa/octocat@v2', 'monalisa/'.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        verifiedAllowed:
                          description: |-
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to true to allow all GitHub Marketplace actions by verified creators.
                            Whether actions in GitHub Marketplace from verified creators are allowed. Set to 'true' to allow all GitHub Marketplace actions by verified creators.
                          type: boolean
                      type: object
                    type: array
                  enabled:
                    description: |-
                      Should GitHub actions be enabled on this repository?
                      Should GitHub actions be enabled on this repository.
                    type: boolean
                  id:
                    type: string
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: runnergroups.actions.github.upbound.io
spec:
  group: actions.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RunnerGroup
    listKind: RunnerGroupList
    plural: runnergroups
    singular: runnergroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RunnerGroup is the Schema for the RunnerGroups API. Creates and
          manages an Actions Runner Group within a GitHub organization
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RunnerGroupSpec defines the desired state of RunnerGroup
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowsPublicRepositories:
                    description: |-
                      Whether public repositories can be added to the runner group. Defaults to false.
                      Whether public repositories can be added to the runner group.
                    type: boolean
                  name:
                    description: |-
                      Name of the runner group
                      Name of the runner group.
                    type: string
                  nameRef:
                    description: Reference to a Repository in repo to populate name.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  nameSelector:
                    description: Selector for a Repository in repo to populate name.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  restrictedToWorkflows:
                    description: |-
                      If true, the runner group will be restricted to running only the workflows specified in the selected_workflows array. Defaults to false.
                      If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array. Defaults to 'false'.
                    type: boolean
                  selectedRepositoryIds:
                    description: |-
                      IDs of the repositories which should be added to the runner group
                      List of repository IDs that can access the runner group.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  selectedWorkflows:
                    description: |-
                      List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to true.
                      List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to 'true'.
                    items:
                      type: string
                    type: array
                  visibility:
                    description: |-
                      Visibility of a runner group. Whether the runner group can include all, selected, or private repositories. A value of private is not currently supported due to limitations in the GitHub API.
                      The visibility of the runner group.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowsPublicRepositories:
                    description: |-
                      Whether public repositories can be added to the runner group. Defaults to false.
                      Whether public repositories can be added to the runner group.
                    type: boolean
                  name:
                    description: |-
                      Name of the runner group
                      Name of the runner group.
                    type: string
                  nameRef:
                    description: Reference to a Repository in repo to populate name.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  nameSelector:
                    description: Selector for a Repository in repo to populate name.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  restrictedToWorkflows:
                    description: |-
                      If true, the runner group will be restricted to running only the workflows specified in the selected_workflows array. Defaults to false.
                      If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array. Defaults to 'false'.
                    type: boolean
                  selectedRepositoryIds:
                    description: |-
                      IDs of the repositories which should be added to the runner group
                      List of repository IDs that can access the runner group.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  selectedWorkflows:
                    description: |-
                      List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to true.
                      List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to 'true'.
                    items:
                      type: string
                    type: array
                  visibility:
                    description: |-
                      Visibility of a runner group. Whether the runner group can include all, selected, or private repositories. A value of private is not currently supported due to limitations in the GitHub API.
                      The visibility of the runner group.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RunnerGroupStatus defines the observed state of RunnerGroup.
            properties:
              atProvider:
                properties:
                  allowsPublicRepositories:
                    description: |-
                      Whether public repositories can be added to the runner group. Defaults to false.
                      Whether public repositories can be added to the runner group.
                    type: boolean
                  default:
                    description: |-
                      Whether this is the default runner group
                      Whether this is the default runner group.
                    type: boolean
                  etag:
                    description: |-
                      An etag representing the runner group object
                      An etag representing the runner group object
                    type: string
                  id:
                    type: string
                  inherited:
                    description: |-
                      Whether the runner group is inherited from the enterprise level
                      Whether the runner group is inherited from the enterprise level
                    type: boolean
                  name:
                    description: |-
                      Name of the runner group
                      Name of the runner group.
                    type: string
                  restrictedToWorkflows:
                    description: |-
                      If true, the runner group will be restricted to running only the workflows specified in the selected_workflows array. Defaults to false.
                      If 'true', the runner group will be restricted to running only the workflows specified in the 'selected_workflows' array. Defaults to 'false'.
                    type: boolean
                  runnersUrl:
                    description: |-
                      The GitHub API URL for the runner group's runners
                      The GitHub API URL for the runner group's runners.
                    type: string
                  selectedRepositoriesUrl:
                    description: |-
                      GitHub API URL for the runner group's repositories
                      GitHub API URL for the runner group's repositories.
                    type: string
                  selectedRepositoryIds:
                    description: |-
                      IDs of the repositories which should be added to the runner group
                      List of repository IDs that can access the runner group.
                    items:
                      format: int64
                      type: integer
                    type: array
                    x-kubernetes-list-type: set
                  selectedWorkflows:
                    description: |-
                      List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to true.
                      List of workflows the runner group should be allowed to run. This setting will be ignored unless restricted_to_workflows is set to 'true'.
                    items:
                      type: string
                    type: array
                  visibility:
                    description: |-
                      Visibility of a runner group. Whether the runner group can include all, selected, or private repositories. A value of private is not currently supported due to limitations in the GitHub API.
                      The visibility of the runner group.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: organizations.enterprise.github.upbound.io
spec:
  group: enterprise.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Organization
    listKind: OrganizationList
    plural: organizations
    singular: organization
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Organization is the Schema for the Organizations API. Create
          and manages a GitHub enterprise organization.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationSpec defines the desired state of Organization
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  adminLogins:
                    description: |-
                      List of organization owner usernames.
                      List of organization owner usernames.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  billingEmail:
                    description: |-
                      The billing email address.
                      The billing email address.
                    type: string
                  description:
                    description: |-
                      The description of the organization.
                      The description of the organization.
                    type: string
                  displayName:
                    description: |-
                      The display name of the organization.
                      The display name of the organization.
                    type: string
                  enterpriseId:
                    description: |-
                      The ID of the enterprise.
                      The ID of the enterprise.
                    type: string
                  name:
                    description: |-
                      The name of the organization.
                      The name of the organization.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  adminLogins:
                    description: |-
                      List of organization owner usernames.
                      List of organization owner usernames.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  billingEmail:
                    description: |-
                      The billing email address.
                      The billing email address.
                    type: string
                  description:
                    description: |-
                      The description of the organization.
                      The description of the organization.
                    type: string
                  displayName:
                    description: |-
                      The display name of the organization.
                      The display name of the organization.
                    type: string
                  enterpriseId:
                    description: |-
                      The ID of the enterprise.
                      The ID of the enterprise.
                    type: string
                  name:
                    description: |-
                      The name of the organization.
                      The name of the organization.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OrganizationStatus defines the observed state of Organization.
            properties:
              atProvider:
                properties:
                  adminLogins:
                    description: |-
                      List of organization owner usernames.
                      List of organization owner usernames.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  billingEmail:
                    description: |-
                      The billing email address.
                      The billing email address.
                    type: string
                  databaseId:
                    description: |-
                      The ID of the organization.
                      The database ID of the organization.
                    format: int64
                    type: integer
                  description:
                    description: |-
                      The description of the organization.
                      The description of the organization.
                    type: string
                  displayName:
                    description: |-
                      The display name of the organization.
                      The display name of the organization.
                    type: string
                  enterpriseId:
                    description: |-
                      The ID of the enterprise.
                      The ID of the enterprise.
                    type: string
                  id:
                    description: The node ID of the organization for use with the
                      v4 API.
                    type: string
                  name:
                    description: |-
                      The name of the organization.
                      The name of the organization.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: organizationrulesets.enterprise.github.upbound.io
spec:
  group: enterprise.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: OrganizationRuleset
    listKind: OrganizationRulesetList
    plural: organizationrulesets
    singular: organizationruleset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OrganizationRuleset is the Schema for the OrganizationRulesets
          API. <no value>
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: OrganizationRulesetSpec defines the desired state of OrganizationRuleset
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bypassActors:
                    description: The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: The ID of the actor that can bypass a ruleset.
                            When `actor_type` is `OrganizationAdmin`, this should
                            be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: 'The type of actor that can bypass a ruleset.
                            Can be one of: `RepositoryRole`, `Team`, `Integration`,
                            `OrganizationAdmin`.'
                          type: string
                        bypassMode:
                          description: 'When the specified actor can bypass the ruleset.
                            pull_request means that an actor can only bypass rules
                            on pull requests. Can be one of: `always`, `pull_request`.'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Parameters for an organization ruleset condition.
                      `ref_name` is required alongside one of `repository_name` or
                      `repository_id`.
                    items:
                      properties:
                        refName:
                          items:
                            properties:
                              exclude:
                                description: Array of ref names or patterns to exclude.
                                  The condition will not pass if any of these patterns
                                  match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of ref names or patterns to include.
                                  One of these patterns must match for the condition
                                  to pass. Also accepts `~DEFAULT_BRANCH` to include
                                  the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        repositoryId:
                          description: The repository IDs that the ruleset applies
                            to. One of these IDs must match for the condition to pass.
                          items:
                            format: int64
                            type: integer
                          type: array
                        repositoryName:
                          items:
                            properties:
                              exclude:
                                description: Array of repository names or patterns
                                  to exclude. The condition will not pass if any of
                                  these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of repository names or patterns
                                  to include. One of these patterns must match for
                                  the condition to pass. Also accepts `~ALL` to include
                                  all repositories.
                                items:
                                  type: string
                                type: array
                              protected:
                                description: Whether renaming of target repositories
                                  is prevented.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: 'Possible values for Enforcement are `disabled`,
                      `active`, `evaluate`. Note: `evaluate` is currently only supported
                      for owners of type `organization`.'
                    type: string
                  name:
                    description: The name of the ruleset.
                    type: string
                  rules:
                    description: Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: Parameters to be used for the branch_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `tag_name_pattern` as it only applies to rulesets with
                            target `branch`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: Parameters to be used for the commit_author_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: Parameters to be used for the commit_message_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: Parameters to be used for the committer_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: Only allow users with bypass permission to
                            create matching refs.
                          type: boolean
                        deletion:
                          description: Only allow users with bypass permissions to
                            delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: Prevent users with push access from force pushing
                            to branches.
                          type: boolean
                        pullRequest:
                          description: Require all commits be made to a non-target
                            branch and submitted via a pull request before they can
                            be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: New, reviewable commits pushed will dismiss
                                  previous pull request review approvals. Defaults
                                  to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: Require an approving review in pull requests
                                  that modify files that have a designated code owner.
                                  Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: Whether the most recent reviewable push
                                  must be approved by someone other than the person
                                  who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: The number of approving reviews that
                                  are required before a pull request can be merged.
                                  Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: All conversations on code must be resolved
                                  before a pull request can be merged. Defaults to
                                  `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: Prevent merge commits from being pushed to
                            matching branches.
                          type: boolean
                        requiredSignatures:
                          description: Commits pushed to matching branches must have
                            verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: Choose which status checks must pass before
                            branches can be merged into a branch that matches this
                            rule. When enabled, commits must first be pushed to another
                            branch, then merged or pushed directly to a branch that
                            matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: Status checks that are required. Several
                                  can be defined.
                                items:
                                  properties:
                                    context:
                                      description: The status check context name that
                                        must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: The optional integration ID that
                                        this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: Whether pull requests targeting a matching
                                  branch must be tested with the latest code. This
                                  setting will not take effect unless at least one
                                  status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredWorkflows:
                          description: Choose which Actions workflows must pass before
                            branches can be merged into a branch that matches this
                            rule.
                          items:
                            properties:
                              requiredWorkflow:
                                description: Actions workflows that are required.
                                  Several can be defined.
                                items:
                                  properties:
                                    path:
                                      description: The path to the workflow YAML definition
                                        file.
                                      type: string
                                    ref:
                                      description: The ref (branch or tag) of the
                                        workflow file to use.
                                      type: string
                                    repositoryId:
                                      description: The repository in which the workflow
                                        is defined.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                            type: object
                          type: array
                        tagNamePattern:
                          description: Parameters to be used for the tag_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `branch_name_pattern` as it only applies to rulesets with
                            target `tag`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: Only allow users with bypass permission to
                            update matching refs.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: 'Possible values are `branch`, `tag` and `push`.
                      Note: The `push` target is in beta and is subject to change.'
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bypassActors:
                    description: The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: The ID of the actor that can bypass a ruleset.
                            When `actor_type` is `OrganizationAdmin`, this should
                            be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: 'The type of actor that can bypass a ruleset.
                            Can be one of: `RepositoryRole`, `Team`, `Integration`,
                            `OrganizationAdmin`.'
                          type: string
                        bypassMode:
                          description: 'When the specified actor can bypass the ruleset.
                            pull_request means that an actor can only bypass rules
                            on pull requests. Can be one of: `always`, `pull_request`.'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Parameters for an organization ruleset condition.
                      `ref_name` is required alongside one of `repository_name` or
                      `repository_id`.
                    items:
                      properties:
                        refName:
                          items:
                            properties:
                              exclude:
                                description: Array of ref names or patterns to exclude.
                                  The condition will not pass if any of these patterns
                                  match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of ref names or patterns to include.
                                  One of these patterns must match for the condition
                                  to pass. Also accepts `~DEFAULT_BRANCH` to include
                                  the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        repositoryId:
                          description: The repository IDs that the ruleset applies
                            to. One of these IDs must match for the condition to pass.
                          items:
                            format: int64
                            type: integer
                          type: array
                        repositoryName:
                          items:
                            properties:
                              exclude:
                                description: Array of repository names or patterns
                                  to exclude. The condition will not pass if any of
                                  these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of repository names or patterns
                                  to include. One of these patterns must match for
                                  the condition to pass. Also accepts `~ALL` to include
                                  all repositories.
                                items:
                                  type: string
                                type: array
                              protected:
                                description: Whether renaming of target repositories
                                  is prevented.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: 'Possible values for Enforcement are `disabled`,
                      `active`, `evaluate`. Note: `evaluate` is currently only supported
                      for owners of type `organization`.'
                    type: string
                  name:
                    description: The name of the ruleset.
                    type: string
                  rules:
                    description: Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: Parameters to be used for the branch_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `tag_name_pattern` as it only applies to rulesets with
                            target `branch`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: Parameters to be used for the commit_author_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: Parameters to be used for the commit_message_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: Parameters to be used for the committer_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: Only allow users with bypass permission to
                            create matching refs.
                          type: boolean
                        deletion:
                          description: Only allow users with bypass permissions to
                            delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: Prevent users with push access from force pushing
                            to branches.
                          type: boolean
                        pullRequest:
                          description: Require all commits be made to a non-target
                            branch and submitted via a pull request before they can
                            be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: New, reviewable commits pushed will dismiss
                                  previous pull request review approvals. Defaults
                                  to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: Require an approving review in pull requests
                                  that modify files that have a designated code owner.
                                  Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: Whether the most recent reviewable push
                                  must be approved by someone other than the person
                                  who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: The number of approving reviews that
                                  are required before a pull request can be merged.
                                  Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: All conversations on code must be resolved
                                  before a pull request can be merged. Defaults to
                                  `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: Prevent merge commits from being pushed to
                            matching branches.
                          type: boolean
                        requiredSignatures:
                          description: Commits pushed to matching branches must have
                            verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: Choose which status checks must pass before
                            branches can be merged into a branch that matches this
                            rule. When enabled, commits must first be pushed to another
                            branch, then merged or pushed directly to a branch that
                            matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: Status checks that are required. Several
                                  can be defined.
                                items:
                                  properties:
                                    context:
                                      description: The status check context name that
                                        must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: The optional integration ID that
                                        this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: Whether pull requests targeting a matching
                                  branch must be tested with the latest code. This
                                  setting will not take effect unless at least one
                                  status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredWorkflows:
                          description: Choose which Actions workflows must pass before
                            branches can be merged into a branch that matches this
                            rule.
                          items:
                            properties:
                              requiredWorkflow:
                                description: Actions workflows that are required.
                                  Several can be defined.
                                items:
                                  properties:
                                    path:
                                      description: The path to the workflow YAML definition
                                        file.
                                      type: string
                                    ref:
                                      description: The ref (branch or tag) of the
                                        workflow file to use.
                                      type: string
                                    repositoryId:
                                      description: The repository in which the workflow
                                        is defined.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                            type: object
                          type: array
                        tagNamePattern:
                          description: Parameters to be used for the tag_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `branch_name_pattern` as it only applies to rulesets with
                            target `tag`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: Only allow users with bypass permission to
                            update matching refs.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: 'Possible values are `branch`, `tag` and `push`.
                      Note: The `push` target is in beta and is subject to change.'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: OrganizationRulesetStatus defines the observed state of OrganizationRuleset.
            properties:
              atProvider:
                properties:
                  bypassActors:
                    description: The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: The ID of the actor that can bypass a ruleset.
                            When `actor_type` is `OrganizationAdmin`, this should
                            be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: 'The type of actor that can bypass a ruleset.
                            Can be one of: `RepositoryRole`, `Team`, `Integration`,
                            `OrganizationAdmin`.'
                          type: string
                        bypassMode:
                          description: 'When the specified actor can bypass the ruleset.
                            pull_request means that an actor can only bypass rules
                            on pull requests. Can be one of: `always`, `pull_request`.'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Parameters for an organization ruleset condition.
                      `ref_name` is required alongside one of `repository_name` or
                      `repository_id`.
                    items:
                      properties:
                        refName:
                          items:
                            properties:
                              exclude:
                                description: Array of ref names or patterns to exclude.
                                  The condition will not pass if any of these patterns
                                  match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of ref names or patterns to include.
                                  One of these patterns must match for the condition
                                  to pass. Also accepts `~DEFAULT_BRANCH` to include
                                  the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        repositoryId:
                          description: The repository IDs that the ruleset applies
                            to. One of these IDs must match for the condition to pass.
                          items:
                            format: int64
                            type: integer
                          type: array
                        repositoryName:
                          items:
                            properties:
                              exclude:
                                description: Array of repository names or patterns
                                  to exclude. The condition will not pass if any of
                                  these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: Array of repository names or patterns
                                  to include. One of these patterns must match for
                                  the condition to pass. Also accepts `~ALL` to include
                                  all repositories.
                                items:
                                  type: string
                                type: array
                              protected:
                                description: Whether renaming of target repositories
                                  is prevented.
                                type: boolean
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: 'Possible values for Enforcement are `disabled`,
                      `active`, `evaluate`. Note: `evaluate` is currently only supported
                      for owners of type `organization`.'
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  name:
                    description: The name of the ruleset.
                    type: string
                  nodeId:
                    description: GraphQL global node id for use with v4 API.
                    type: string
                  rules:
                    description: Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: Parameters to be used for the branch_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `tag_name_pattern` as it only applies to rulesets with
                            target `branch`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: Parameters to be used for the commit_author_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: Parameters to be used for the commit_message_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: Parameters to be used for the committer_email_pattern
                            rule.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: Only allow users with bypass permission to
                            create matching refs.
                          type: boolean
                        deletion:
                          description: Only allow users with bypass permissions to
                            delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: Prevent users with push access from force pushing
                            to branches.
                          type: boolean
                        pullRequest:
                          description: Require all commits be made to a non-target
                            branch and submitted via a pull request before they can
                            be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: New, reviewable commits pushed will dismiss
                                  previous pull request review approvals. Defaults
                                  to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: Require an approving review in pull requests
                                  that modify files that have a designated code owner.
                                  Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: Whether the most recent reviewable push
                                  must be approved by someone other than the person
                                  who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: The number of approving reviews that
                                  are required before a pull request can be merged.
                                  Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: All conversations on code must be resolved
                                  before a pull request can be merged. Defaults to
                                  `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: Prevent merge commits from being pushed to
                            matching branches.
                          type: boolean
                        requiredSignatures:
                          description: Commits pushed to matching branches must have
                            verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: Choose which status checks must pass before
                            branches can be merged into a branch that matches this
                            rule. When enabled, commits must first be pushed to another
                            branch, then merged or pushed directly to a branch that
                            matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: Status checks that are required. Several
                                  can be defined.
                                items:
                                  properties:
                                    context:
                                      description: The status check context name that
                                        must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: The optional integration ID that
                                        this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: Whether pull requests targeting a matching
                                  branch must be tested with the latest code. This
                                  setting will not take effect unless at least one
                                  status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredWorkflows:
                          description: Choose which Actions workflows must pass before
                            branches can be merged into a branch that matches this
                            rule.
                          items:
                            properties:
                              requiredWorkflow:
                                description: Actions workflows that are required.
                                  Several can be defined.
                                items:
                                  properties:
                                    path:
                                      description: The path to the workflow YAML definition
                                        file.
                                      type: string
                                    ref:
                                      description: The ref (branch or tag) of the
                                        workflow file to use.
                                      type: string
                                    repositoryId:
                                      description: The repository in which the workflow
                                        is defined.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                            type: object
                          type: array
                        tagNamePattern:
                          description: Parameters to be used for the tag_name_pattern
                            rule. This rule only applies to repositories within an
                            enterprise, it cannot be applied to repositories owned
                            by individuals or regular organizations. Conflicts with
                            `branch_name_pattern` as it only applies to rulesets with
                            target `tag`.
                          items:
                            properties:
                              name:
                                description: How this rule will appear to users.
                                type: string
                              negate:
                                description: If true, the rule will fail if the pattern
                                  matches.
                                type: boolean
                              operator:
                                description: 'The operator to use for matching. Can
                                  be one of: `starts_with`, `ends_with`, `contains`,
                                  `regex`.'
                                type: string
                              pattern:
                                description: The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: Only allow users with bypass permission to
                            update matching refs.
                          type: boolean
                      type: object
                    type: array
                  rulesetId:
                    description: GitHub ID for the ruleset.
                    format: int64
                    type: integer
                  target:
                    description: 'Possible values are `branch`, `tag` and `push`.
                      Note: The `push` target is in beta and is subject to change.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: storeconfigs.github.upbound.io
spec:
  group: github.upbound.io
  names:
    categories:
    - crossplane
    - store
    - gcp
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.type
      name: TYPE
      type: string
    - jsonPath: .spec.defaultScope
      name: DEFAULT-SCOPE
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A StoreConfig configures how GCP controller should store connection
          details.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A StoreConfigSpec defines the desired state of a ProviderConfig.
            properties:
              defaultScope:
                description: |-
                  DefaultScope used for scoping secrets for "cluster-scoped" resources.
                  If store type is "Kubernetes", this would mean the default namespace to
                  store connection secrets for cluster scoped resources.
                  In case of "Vault", this would be used as the default parent path.
                  Typically, should be set as Crossplane installation namespace.
                type: string
              kubernetes:
                description: |-
                  Kubernetes configures a Kubernetes secret store.
                  If the "type" is "Kubernetes" but no config provided, in cluster config
                  will be used.
                properties:
                  auth:
                    description: Credentials used to connect to the Kubernetes API.
                    properties:
                      env:
                        description: |-
                          Env is a reference to an environment variable that contains credentials
                          that must be used to connect to the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                        - name
                        type: object
                      fs:
                        description: |-
                          Fs is a reference to a filesystem location that contains credentials that
                          must be used to connect to the provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                        - path
                        type: object
                      secretRef:
                        description: |-
                          A SecretRef is a reference to a secret key that contains the credentials
                          that must be used to connect to the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      source:
                        description: Source of the credentials.
                        enum:
                        - None
                        - Secret
                        - Environment
                        - Filesystem
                        type: string
                    required:
                    - source
                    type: object
                required:
                - auth
                type: object
              plugin:
                description: Plugin configures External secret store as a plugin.
                properties:
                  configRef:
                    description: ConfigRef contains store config reference info.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced config.
                        type: string
                      kind:
                        description: Kind of the referenced config.
                        type: string
                      name:
                        description: Name of the referenced config.
                        type: string
                    required:
                    - apiVersion
                    - kind
                    - name
                    type: object
                  endpoint:
                    description: Endpoint is the endpoint of the gRPC server.
                    type: string
                type: object
              type:
                default: Kubernetes
                description: |-
                  Type configures which secret store to be used. Only the configuration
                  block for this store will be used and others will be ignored if provided.
                  Default is Kubernetes.
                enum:
                - Kubernetes
                - Vault
                - Plugin
                type: string
            required:
            - defaultScope
            type: object
          status:
            description: A StoreConfigStatus represents the status of a StoreConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigs.github.upbound.io
spec:
  group: github.upbound.io
  names:
    categories:
    - crossplane
    - provider
    - template
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .spec.credentials.secretRef.name
      name: SECRET-NAME
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ProviderConfig configures how the provider will connect to Github.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
            properties:
              credentials:
                description: Credentials required to authenticate to this provider.
                properties:
                  env:
                    description: |-
                      Env is a reference to an environment variable that contains credentials
                      that must be used to connect to the provider.
                    properties:
                      name:
                        description: Name is the name of an environment variable.
                        type: string
                    required:
                    - name
                    type: object
                  fs:
                    description: |-
                      Fs is a reference to a filesystem location that contains credentials that
                      must be used to connect to the provider.
                    properties:
                      path:
                        description: Path is a filesystem path.
                        type: string
                    required:
                    - path
                    type: object
                  secretRef:
                    description: |-
                      A SecretRef is a reference to a secret key that contains the credentials
                      that must be used to connect to the provider.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  source:
                    description: Source of the provider credentials.
                    enum:
                    - None
                    - Secret
                    - InjectedIdentity
                    - Environment
                    - Filesystem
                    type: string
                required:
                - source
                type: object
            required:
            - credentials
            type: object
          status:
            description: A ProviderConfigStatus reflects the observed state of a ProviderConfig.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              users:
                description: Users of this provider configuration.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: providerconfigusages.github.upbound.io
spec:
  group: github.upbound.io
  names:
    categories:
    - crossplane
    - provider
    - github
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .providerConfigRef.name
      name: CONFIG-NAME
      type: string
    - jsonPath: .resourceRef.kind
      name: RESOURCE-KIND
      type: string
    - jsonPath: .resourceRef.name
      name: RESOURCE-NAME
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          providerConfigRef:
            description: ProviderConfigReference to the provider config being used.
            properties:
              name:
                description: Name of the referenced object.
                type: string
              policy:
                description: Policies for referencing.
                properties:
                  resolution:
                    default: Required
                    description: |-
                      Resolution specifies whether resolution of this reference is required.
                      The default is 'Required', which means the reconcile will fail if the
                      reference cannot be resolved. 'Optional' means this reference will be
                      a no-op if it cannot be resolved.
                    enum:
                    - Required
                    - Optional
                    type: string
                  resolve:
                    description: |-
                      Resolve specifies when this reference should be resolved. The default
                      is 'IfNotPresent', which will attempt to resolve the reference only when
                      the corresponding field is not present. Use 'Always' to resolve the
                      reference on every reconcile.
                    enum:
                    - Always
                    - IfNotPresent
                    type: string
                type: object
            required:
            - name
            type: object
          resourceRef:
            description: ResourceReference to the managed resource using the provider
              config.
            properties:
              apiVersion:
                description: APIVersion of the referenced object.
                type: string
              kind:
                description: Kind of the referenced object.
                type: string
              name:
                description: Name of the referenced object.
                type: string
              uid:
                description: UID of the referenced object.
                type: string
            required:
            - apiVersion
            - kind
            - name
            type: object
        required:
        - providerConfigRef
        - resourceRef
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1beta1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: branches.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Branch
    listKind: BranchList
    plural: branches
    singular: branch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Branch is the Schema for the Branchs API. Creates and manages
          branches within GitHub repositories.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BranchSpec defines the desired state of Branch
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branch:
                    description: |-
                      The repository branch to create.
                      The repository branch to create.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  sourceBranch:
                    description: |-
                      The branch name to start from. Defaults to main.
                      The branch name to start from. Defaults to 'main'.
                    type: string
                  sourceSha:
                    description: |-
                      The commit hash to start from. Defaults to the tip of source_branch. If provided, source_branch is ignored.
                      The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branch:
                    description: |-
                      The repository branch to create.
                      The repository branch to create.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  sourceBranch:
                    description: |-
                      The branch name to start from. Defaults to main.
                      The branch name to start from. Defaults to 'main'.
                    type: string
                  sourceSha:
                    description: |-
                      The commit hash to start from. Defaults to the tip of source_branch. If provided, source_branch is ignored.
                      The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BranchStatus defines the observed state of Branch.
            properties:
              atProvider:
                properties:
                  branch:
                    description: |-
                      The repository branch to create.
                      The repository branch to create.
                    type: string
                  etag:
                    description: |-
                      An etag representing the Branch object.
                      An etag representing the Branch object.
                    type: string
                  id:
                    type: string
                  ref:
                    description: |-
                      A string representing a branch reference, in the form of refs/heads/<branch>.
                      A string representing a branch reference, in the form of 'refs/heads/<branch>'.
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  sha:
                    description: |-
                      A string storing the reference's HEAD commit's SHA1.
                      A string storing the reference's HEAD commit's SHA1.
                    type: string
                  sourceBranch:
                    description: |-
                      The branch name to start from. Defaults to main.
                      The branch name to start from. Defaults to 'main'.
                    type: string
                  sourceSha:
                    description: |-
                      The commit hash to start from. Defaults to the tip of source_branch. If provided, source_branch is ignored.
                      The commit hash to start from. Defaults to the tip of 'source_branch'. If provided, 'source_branch' is ignored.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: branchprotections.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: BranchProtection
    listKind: BranchProtectionList
    plural: branchprotections
    singular: branchprotection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BranchProtection is the Schema for the BranchProtections API.
          Protects a GitHub branch.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BranchProtectionSpec defines the desired state of BranchProtection
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowsDeletions:
                    description: |-
                      Boolean, setting this to true to allow the branch to be deleted.
                      Setting this to 'true' to allow the branch to be deleted.
                    type: boolean
                  allowsForcePushes:
                    description: |-
                      Boolean, setting this to true to allow force pushes on the branch to everyone. Set it to false if you specify force_push_bypassers.
                      Setting this to 'true' to allow force pushes on the branch.
                    type: boolean
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  forcePushBypassers:
                    description: |-
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. If the list is not empty, allows_force_pushes should be set to false.
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  lockBranch:
                    description: |-
                      Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
                      Setting this to 'true' will make the branch read-only and preventing any pushes to it.
                    type: boolean
                  pattern:
                    description: |-
                      Identifies the protection rule pattern.
                      Identifies the protection rule pattern.
                    type: string
                  repositoryId:
                    description: |-
                      The name or node ID of the repository associated with this branch protection rule.
                      The name or node ID of the repository associated with this branch protection rule.
                    type: string
                  repositoryIdRef:
                    description: Reference to a Repository in repo to populate repositoryId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositoryIdSelector:
                    description: Selector for a Repository in repo to populate repositoryId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredLinearHistory:
                    description: |-
                      Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
                      Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalRestrictions:
                          description: |-
                            :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        pullRequestBypassers:
                          description: |-
                            :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that The most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          format: int64
                          type: integer
                        restrictDismissals:
                          description: |-
                            :  Restrict pull request review dismissals.
                            Restrict pull request review dismissals.
                          type: boolean
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        contexts:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
                            The list of status checks to require in order to merge into this branch. No status checks are required by default.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                  restrictPushes:
                    description: |-
                      Restrict pushes to matching branches. See Restrict Pushes below for details.
                      Restrict who can push to matching branches.
                    items:
                      properties:
                        blocksCreations:
                          description: |-
                            Boolean, setting this to false allows people, teams, or apps to create new branches matching this rule. Defaults to true.
                            Restrict pushes that create matching branches.
                          type: boolean
                        pushAllowances:
                          description: |-
                            A list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. Organization administrators, repository administrators, and users with the Maintain role on the repository can always push when all other requirements have passed.
                            The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowsDeletions:
                    description: |-
                      Boolean, setting this to true to allow the branch to be deleted.
                      Setting this to 'true' to allow the branch to be deleted.
                    type: boolean
                  allowsForcePushes:
                    description: |-
                      Boolean, setting this to true to allow force pushes on the branch to everyone. Set it to false if you specify force_push_bypassers.
                      Setting this to 'true' to allow force pushes on the branch.
                    type: boolean
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  forcePushBypassers:
                    description: |-
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. If the list is not empty, allows_force_pushes should be set to false.
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  lockBranch:
                    description: |-
                      Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
                      Setting this to 'true' will make the branch read-only and preventing any pushes to it.
                    type: boolean
                  pattern:
                    description: |-
                      Identifies the protection rule pattern.
                      Identifies the protection rule pattern.
                    type: string
                  repositoryId:
                    description: |-
                      The name or node ID of the repository associated with this branch protection rule.
                      The name or node ID of the repository associated with this branch protection rule.
                    type: string
                  repositoryIdRef:
                    description: Reference to a Repository in repo to populate repositoryId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositoryIdSelector:
                    description: Selector for a Repository in repo to populate repositoryId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredLinearHistory:
                    description: |-
                      Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
                      Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalRestrictions:
                          description: |-
                            :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        pullRequestBypassers:
                          description: |-
                            :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that The most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          format: int64
                          type: integer
                        restrictDismissals:
                          description: |-
                            :  Restrict pull request review dismissals.
                            Restrict pull request review dismissals.
                          type: boolean
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        contexts:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
                            The list of status checks to require in order to merge into this branch. No status checks are required by default.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                  restrictPushes:
                    description: |-
                      Restrict pushes to matching branches. See Restrict Pushes below for details.
                      Restrict who can push to matching branches.
                    items:
                      properties:
                        blocksCreations:
                          description: |-
                            Boolean, setting this to false allows people, teams, or apps to create new branches matching this rule. Defaults to true.
                            Restrict pushes that create matching branches.
                          type: boolean
                        pushAllowances:
                          description: |-
                            A list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. Organization administrators, repository administrators, and users with the Maintain role on the repository can always push when all other requirements have passed.
                            The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BranchProtectionStatus defines the observed state of BranchProtection.
            properties:
              atProvider:
                properties:
                  allowsDeletions:
                    description: |-
                      Boolean, setting this to true to allow the branch to be deleted.
                      Setting this to 'true' to allow the branch to be deleted.
                    type: boolean
                  allowsForcePushes:
                    description: |-
                      Boolean, setting this to true to allow force pushes on the branch to everyone. Set it to false if you specify force_push_bypassers.
                      Setting this to 'true' to allow force pushes on the branch.
                    type: boolean
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  forcePushBypassers:
                    description: |-
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. If the list is not empty, allows_force_pushes should be set to false.
                      The list of actor Names/IDs that are allowed to bypass force push restrictions. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  lockBranch:
                    description: |-
                      Boolean, Setting this to true will make the branch read-only and preventing any pushes to it. Defaults to false
                      Setting this to 'true' will make the branch read-only and preventing any pushes to it.
                    type: boolean
                  pattern:
                    description: |-
                      Identifies the protection rule pattern.
                      Identifies the protection rule pattern.
                    type: string
                  repositoryId:
                    description: |-
                      The name or node ID of the repository associated with this branch protection rule.
                      The name or node ID of the repository associated with this branch protection rule.
                    type: string
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredLinearHistory:
                    description: |-
                      Boolean, setting this to true enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch
                      Setting this to 'true' enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalRestrictions:
                          description: |-
                            :  The list of actor Names/IDs with dismissal access. If not empty, restrict_dismissals is ignored. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs with dismissal access. If not empty, 'restrict_dismissals' is ignored. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        pullRequestBypassers:
                          description: |-
                            :  The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams.
                            The list of actor Names/IDs that are allowed to bypass pull request requirements. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that The most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that The most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            (https://developer.github.com/v3/repos/branches/#parameters-1) for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          format: int64
                          type: integer
                        restrictDismissals:
                          description: |-
                            :  Restrict pull request review dismissals.
                            Restrict pull request review dismissals.
                          type: boolean
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        contexts:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default.
                            The list of status checks to require in order to merge into this branch. No status checks are required by default.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                  restrictPushes:
                    description: |-
                      Restrict pushes to matching branches. See Restrict Pushes below for details.
                      Restrict who can push to matching branches.
                    items:
                      properties:
                        blocksCreations:
                          description: |-
                            Boolean, setting this to false allows people, teams, or apps to create new branches matching this rule. Defaults to true.
                            Restrict pushes that create matching branches.
                          type: boolean
                        pushAllowances:
                          description: |-
                            A list of actor Names/IDs that may push to the branch. Actor names must either begin with a "/" for users or the organization name followed by a "/" for teams. Organization administrators, repository administrators, and users with the Maintain role on the repository can always push when all other requirements have passed.
                            The list of actor Names/IDs that may push to the branch. Actor names must either begin with a '/' for users or the organization name followed by a '/' for teams.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: branchprotectionv3s.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: BranchProtectionv3
    listKind: BranchProtectionv3List
    plural: branchprotectionv3s
    singular: branchprotectionv3
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BranchProtectionv3 is the Schema for the BranchProtectionv3s
          API. Protects a GitHub branch using the v3 / REST implementation.  The
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BranchProtectionv3Spec defines the desired state of BranchProtectionv3
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branch:
                    description: |-
                      The Git branch to protect.
                      The Git branch to protect.
                    type: string
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        bypassPullRequestAllowances:
                          description: ':  Allow specific users, teams, or apps to
                            bypass pull request requirements. See Bypass Pull Request
                            Allowances below for details.'
                          items:
                            properties:
                              apps:
                                description: ':  The list of app slugs with push access.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              teams:
                                description: |-
                                  :  The list of team slugs with push access.
                                  Always use slug of the team, not its name. Each team already has to have access to the repository.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              users:
                                description: ':  The list of user logins with push
                                  access.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalApps:
                          description: |-
                            :  The list of app slugs with dismissal access.
                            The list of apps slugs with dismissal access. Always use slug of the app, not its name. Each app already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        dismissalTeams:
                          description: |-
                            :  The list of team slugs with dismissal access.
                            Always use slug of the team, not its name. Each team already has to have access to the repository.
                            The list of team slugs with dismissal access. Always use slug of the team, not its name. Each team already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        dismissalUsers:
                          description: |-
                            :  The list of user logins with dismissal access
                            The list of user logins with dismissal access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeAdmins:
                          type: boolean
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that the most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that the most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        checks:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default. Checks should be strings containing the context and app_id like so "context:app_id".
                            The list of status checks to require in order to merge into this branch. No status checks are required by default. Checks should be strings containing the 'context' and 'app_id' like so 'context:app_id'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        contexts:
                          description: ': [DEPRECATED]  The list of status checks
                            to require in order to merge into this branch. No status
                            checks are required by default.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeAdmins:
                          type: boolean
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                  restrictions:
                    description: |-
                      Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
                      Enforce restrictions for the users and teams that may push to the branch.
                    items:
                      properties:
                        apps:
                          description: |-
                            :  The list of app slugs with push access.
                            The list of app slugs with push access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        teams:
                          description: |-
                            :  The list of team slugs with push access.
                            Always use slug of the team, not its name. Each team already has to have access to the repository.
                            The list of team slugs with push access. Always use slug of the team, not its name. Each team already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        users:
                          description: |-
                            :  The list of user logins with push access.
                            The list of user logins with push access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branch:
                    description: |-
                      The Git branch to protect.
                      The Git branch to protect.
                    type: string
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        bypassPullRequestAllowances:
                          description: ':  Allow specific users, teams, or apps to
                            bypass pull request requirements. See Bypass Pull Request
                            Allowances below for details.'
                          items:
                            properties:
                              apps:
                                description: ':  The list of app slugs with push access.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              teams:
                                description: |-
                                  :  The list of team slugs with push access.
                                  Always use slug of the team, not its name. Each team already has to have access to the repository.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              users:
                                description: ':  The list of user logins with push
                                  access.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalApps:
                          description: |-
                            :  The list of app slugs with dismissal access.
                            The list of apps slugs with dismissal access. Always use slug of the app, not its name. Each app already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        dismissalTeams:
                          description: |-
                            :  The list of team slugs with dismissal access.
                            Always use slug of the team, not its name. Each team already has to have access to the repository.
                            The list of team slugs with dismissal access. Always use slug of the team, not its name. Each team already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        dismissalUsers:
                          description: |-
                            :  The list of user logins with dismissal access
                            The list of user logins with dismissal access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeAdmins:
                          type: boolean
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that the most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that the most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        checks:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default. Checks should be strings containing the context and app_id like so "context:app_id".
                            The list of status checks to require in order to merge into this branch. No status checks are required by default. Checks should be strings containing the 'context' and 'app_id' like so 'context:app_id'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        contexts:
                          description: ': [DEPRECATED]  The list of status checks
                            to require in order to merge into this branch. No status
                            checks are required by default.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeAdmins:
                          type: boolean
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                  restrictions:
                    description: |-
                      Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
                      Enforce restrictions for the users and teams that may push to the branch.
                    items:
                      properties:
                        apps:
                          description: |-
                            :  The list of app slugs with push access.
                            The list of app slugs with push access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        teams:
                          description: |-
                            :  The list of team slugs with push access.
                            Always use slug of the team, not its name. Each team already has to have access to the repository.
                            The list of team slugs with push access. Always use slug of the team, not its name. Each team already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        users:
                          description: |-
                            :  The list of user logins with push access.
                            The list of user logins with push access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: BranchProtectionv3Status defines the observed state of BranchProtectionv3.
            properties:
              atProvider:
                properties:
                  branch:
                    description: |-
                      The Git branch to protect.
                      The Git branch to protect.
                    type: string
                  enforceAdmins:
                    description: |-
                      Boolean, setting this to true enforces status checks for repository administrators.
                      Setting this to 'true' enforces status checks for repository administrators.
                    type: boolean
                  etag:
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      The GitHub repository name.
                      The GitHub repository name.
                    type: string
                  requireConversationResolution:
                    description: |-
                      Boolean, setting this to true requires all conversations on code must be resolved before a pull request can be merged.
                      Setting this to 'true' requires all conversations on code must be resolved before a pull request can be merged.
                    type: boolean
                  requireSignedCommits:
                    description: |-
                      Boolean, setting this to true requires all commits to be signed with GPG.
                      Setting this to 'true' requires all commits to be signed with GPG.
                    type: boolean
                  requiredPullRequestReviews:
                    description: |-
                      Enforce restrictions for pull request reviews. See Required Pull Request Reviews below for details.
                      Enforce restrictions for pull request reviews.
                    items:
                      properties:
                        bypassPullRequestAllowances:
                          description: ':  Allow specific users, teams, or apps to
                            bypass pull request requirements. See Bypass Pull Request
                            Allowances below for details.'
                          items:
                            properties:
                              apps:
                                description: ':  The list of app slugs with push access.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              teams:
                                description: |-
                                  :  The list of team slugs with push access.
                                  Always use slug of the team, not its name. Each team already has to have access to the repository.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              users:
                                description: ':  The list of user logins with push
                                  access.'
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          type: array
                        dismissStaleReviews:
                          description: |-
                            :  Dismiss approved reviews automatically when a new commit is pushed. Defaults to false.
                            Dismiss approved reviews automatically when a new commit is pushed.
                          type: boolean
                        dismissalApps:
                          description: |-
                            :  The list of app slugs with dismissal access.
                            The list of apps slugs with dismissal access. Always use slug of the app, not its name. Each app already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        dismissalTeams:
                          description: |-
                            :  The list of team slugs with dismissal access.
                            Always use slug of the team, not its name. Each team already has to have access to the repository.
                            The list of team slugs with dismissal access. Always use slug of the team, not its name. Each team already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        dismissalUsers:
                          description: |-
                            :  The list of user logins with dismissal access
                            The list of user logins with dismissal access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeAdmins:
                          type: boolean
                        requireCodeOwnerReviews:
                          description: |-
                            :  Require an approved review in pull requests including files with a designated code owner. Defaults to false.
                            Require an approved review in pull requests including files with a designated code owner.
                          type: boolean
                        requireLastPushApproval:
                          description: |-
                            :  Require that the most recent push must be approved by someone other than the last pusher.  Defaults to false
                            Require that the most recent push must be approved by someone other than the last pusher.
                          type: boolean
                        requiredApprovingReviewCount:
                          description: |-
                            6. This requirement matches GitHub's API, see the upstream documentation for more information.
                            Require 'x' number of approvals to satisfy branch protection requirements. If this is specified it must be a number between 0-6.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  requiredStatusChecks:
                    description: |-
                      Enforce restrictions for required status checks. See Required Status Checks below for details.
                      Enforce restrictions for required status checks.
                    items:
                      properties:
                        checks:
                          description: |-
                            :  The list of status checks to require in order to merge into this branch. No status checks are required by default. Checks should be strings containing the context and app_id like so "context:app_id".
                            The list of status checks to require in order to merge into this branch. No status checks are required by default. Checks should be strings containing the 'context' and 'app_id' like so 'context:app_id'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        contexts:
                          description: ': [DEPRECATED]  The list of status checks
                            to require in order to merge into this branch. No status
                            checks are required by default.'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        includeAdmins:
                          type: boolean
                        strict:
                          description: |-
                            :  Require branches to be up to date before merging. Defaults to false.
                            Require branches to be up to date before merging.
                          type: boolean
                      type: object
                    type: array
                  restrictions:
                    description: |-
                      Enforce restrictions for the users and teams that may push to the branch. See Restrictions below for details.
                      Enforce restrictions for the users and teams that may push to the branch.
                    items:
                      properties:
                        apps:
                          description: |-
                            :  The list of app slugs with push access.
                            The list of app slugs with push access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        teams:
                          description: |-
                            :  The list of team slugs with push access.
                            Always use slug of the team, not its name. Each team already has to have access to the repository.
                            The list of team slugs with push access. Always use slug of the team, not its name. Each team already has to have access to the repository.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        users:
                          description: |-
                            :  The list of user logins with push access.
                            The list of user logins with push access.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: defaultbranches.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: DefaultBranch
    listKind: DefaultBranchList
    plural: defaultbranches
    singular: defaultbranch
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DefaultBranch is the Schema for the DefaultBranchs API. Provides
          a GitHub branch default for a given repository.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DefaultBranchSpec defines the desired state of DefaultBranch
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branch:
                    description: |-
                      The branch (e.g. main)
                      The branch (e.g. 'main').
                    type: string
                  branchRef:
                    description: Reference to a Branch in repo to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch in repo to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rename:
                    description: |-
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to false.
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branch:
                    description: |-
                      The branch (e.g. main)
                      The branch (e.g. 'main').
                    type: string
                  branchRef:
                    description: Reference to a Branch in repo to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch in repo to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rename:
                    description: |-
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to false.
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DefaultBranchStatus defines the observed state of DefaultBranch.
            properties:
              atProvider:
                properties:
                  branch:
                    description: |-
                      The branch (e.g. main)
                      The branch (e.g. 'main').
                    type: string
                  etag:
                    type: string
                  id:
                    type: string
                  rename:
                    description: |-
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to false.
                      Indicate if it should rename the branch rather than use an existing branch. Defaults to 'false'.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: deploykeys.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: DeployKey
    listKind: DeployKeyList
    plural: deploykeys
    singular: deploykey
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeployKey is the Schema for the DeployKeys API. Provides a GitHub
          repository deploy key resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DeployKeySpec defines the desired state of DeployKey
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  keySecretRef:
                    description: |-
                      A SSH key.
                      A SSH key.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  readOnly:
                    description: |-
                      A boolean qualifying the key to be either read only or read/write.
                      A boolean qualifying the key to be either read only or read/write.
                    type: boolean
                  repository:
                    description: |-
                      Name of the GitHub repository.
                      Name of the GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  title:
                    description: |-
                      A title.
                      A title.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  keySecretRef:
                    description: |-
                      A SSH key.
                      A SSH key.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  readOnly:
                    description: |-
                      A boolean qualifying the key to be either read only or read/write.
                      A boolean qualifying the key to be either read only or read/write.
                    type: boolean
                  repository:
                    description: |-
                      Name of the GitHub repository.
                      Name of the GitHub repository.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  title:
                    description: |-
                      A title.
                      A title.
                    type: string
                required:
                - keySecretRef
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DeployKeyStatus defines the observed state of DeployKey.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  readOnly:
                    description: |-
                      A boolean qualifying the key to be either read only or read/write.
                      A boolean qualifying the key to be either read only or read/write.
                    type: boolean
                  repository:
                    description: |-
                      Name of the GitHub repository.
                      Name of the GitHub repository.
                    type: string
                  title:
                    description: |-
                      A title.
                      A title.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: environments.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Environment is the Schema for the Environments API. Creates and
          manages environments for GitHub repositories
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentSpec defines the desired state of Environment
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  canAdminsBypass:
                    description: |-
                      Can repository admins bypass the environment protections.  Defaults to true.
                      Can Admins bypass deployment protections
                    type: boolean
                  deploymentBranchPolicy:
                    description: The deployment branch policy configuration
                    items:
                      properties:
                        customBranchPolicies:
                          description: |-
                            Whether only branches that match the specified name patterns can deploy to this environment.
                            Whether only branches that match the specified name patterns can deploy to this environment.
                          type: boolean
                        protectedBranches:
                          description: |-
                            Whether only branches with branch protection rules can deploy to this environment.
                            Whether only branches with branch protection rules can deploy to this environment.
                          type: boolean
                      type: object
                    type: array
                  environment:
                    description: |-
                      The name of the environment.
                      The name of the environment.
                    type: string
                  preventSelfReview:
                    description: |-
                      Whether or not a user who created the job is prevented from approving their own job. Defaults to false.
                      Prevent users from approving workflows runs that they triggered.
                    type: boolean
                  repository:
                    description: |-
                      The repository of the environment.
                      The repository of the environment.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  reviewers:
                    description: The environment reviewers configuration.
                    items:
                      properties:
                        teams:
                          description: |-
                            Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                            Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                        users:
                          description: |-
                            Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                            Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  waitTimer:
                    description: |-
                      Amount of time to delay a job after the job is initially triggered.
                      Amount of time to delay a job after the job is initially triggered.
                    format: int64
                    type: integer
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  canAdminsBypass:
                    description: |-
                      Can repository admins bypass the environment protections.  Defaults to true.
                      Can Admins bypass deployment protections
                    type: boolean
                  deploymentBranchPolicy:
                    description: The deployment branch policy configuration
                    items:
                      properties:
                        customBranchPolicies:
                          description: |-
                            Whether only branches that match the specified name patterns can deploy to this environment.
                            Whether only branches that match the specified name patterns can deploy to this environment.
                          type: boolean
                        protectedBranches:
                          description: |-
                            Whether only branches with branch protection rules can deploy to this environment.
                            Whether only branches with branch protection rules can deploy to this environment.
                          type: boolean
                      type: object
                    type: array
                  environment:
                    description: |-
                      The name of the environment.
                      The name of the environment.
                    type: string
                  preventSelfReview:
                    description: |-
                      Whether or not a user who created the job is prevented from approving their own job. Defaults to false.
                      Prevent users from approving workflows runs that they triggered.
                    type: boolean
                  repository:
                    description: |-
                      The repository of the environment.
                      The repository of the environment.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  reviewers:
                    description: The environment reviewers configuration.
                    items:
                      properties:
                        teams:
                          description: |-
                            Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                            Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                        users:
                          description: |-
                            Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                            Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  waitTimer:
                    description: |-
                      Amount of time to delay a job after the job is initially triggered.
                      Amount of time to delay a job after the job is initially triggered.
                    format: int64
                    type: integer
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EnvironmentStatus defines the observed state of Environment.
            properties:
              atProvider:
                properties:
                  canAdminsBypass:
                    description: |-
                      Can repository admins bypass the environment protections.  Defaults to true.
                      Can Admins bypass deployment protections
                    type: boolean
                  deploymentBranchPolicy:
                    description: The deployment branch policy configuration
                    items:
                      properties:
                        customBranchPolicies:
                          description: |-
                            Whether only branches that match the specified name patterns can deploy to this environment.
                            Whether only branches that match the specified name patterns can deploy to this environment.
                          type: boolean
                        protectedBranches:
                          description: |-
                            Whether only branches with branch protection rules can deploy to this environment.
                            Whether only branches with branch protection rules can deploy to this environment.
                          type: boolean
                      type: object
                    type: array
                  environment:
                    description: |-
                      The name of the environment.
                      The name of the environment.
                    type: string
                  id:
                    type: string
                  preventSelfReview:
                    description: |-
                      Whether or not a user who created the job is prevented from approving their own job. Defaults to false.
                      Prevent users from approving workflows runs that they triggered.
                    type: boolean
                  repository:
                    description: |-
                      The repository of the environment.
                      The repository of the environment.
                    type: string
                  reviewers:
                    description: The environment reviewers configuration.
                    items:
                      properties:
                        teams:
                          description: |-
                            Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                            Up to 6 IDs for teams who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                        users:
                          description: |-
                            Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                            Up to 6 IDs for users who may review jobs that reference the environment. Reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                          items:
                            format: int64
                            type: integer
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    type: array
                  waitTimer:
                    description: |-
                      Amount of time to delay a job after the job is initially triggered.
                      Amount of time to delay a job after the job is initially triggered.
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: environmentdeploymentpolicies.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: EnvironmentDeploymentPolicy
    listKind: EnvironmentDeploymentPolicyList
    plural: environmentdeploymentpolicies
    singular: environmentdeploymentpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EnvironmentDeploymentPolicy is the Schema for the EnvironmentDeploymentPolicys
          API. Creates and manages environment deployment branch policies for GitHub
          repositories
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EnvironmentDeploymentPolicySpec defines the desired state
              of EnvironmentDeploymentPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  branchPattern:
                    description: |-
                      The name pattern that branches must match in order to deploy to the environment.
                      The name pattern that branches must match in order to deploy to the environment.
                    type: string
                  environment:
                    description: |-
                      The name of the environment.
                      The name of the environment.
                    type: string
                  environmentRef:
                    description: Reference to a Environment in repo to populate environment.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  environmentSelector:
                    description: Selector for a Environment in repo to populate environment.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  repository:
                    description: |-
                      The repository of the environment.
                      The name of the repository. The name is not case sensitive.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  branchPattern:
                    description: |-
                      The name pattern that branches must match in order to deploy to the environment.
                      The name pattern that branches must match in order to deploy to the environment.
                    type: string
                  environment:
                    description: |-
                      The name of the environment.
                      The name of the environment.
                    type: string
                  environmentRef:
                    description: Reference to a Environment in repo to populate environment.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  environmentSelector:
                    description: Selector for a Environment in repo to populate environment.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  repository:
                    description: |-
                      The repository of the environment.
                      The name of the repository. The name is not case sensitive.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EnvironmentDeploymentPolicyStatus defines the observed state
              of EnvironmentDeploymentPolicy.
            properties:
              atProvider:
                properties:
                  branchPattern:
                    description: |-
                      The name pattern that branches must match in order to deploy to the environment.
                      The name pattern that branches must match in order to deploy to the environment.
                    type: string
                  environment:
                    description: |-
                      The name of the environment.
                      The name of the environment.
                    type: string
                  id:
                    type: string
                  repository:
                    description: |-
                      The repository of the environment.
                      The name of the repository. The name is not case sensitive.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: issuelabels.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: IssueLabels
    listKind: IssueLabelsList
    plural: issuelabels
    singular: issuelabels
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IssueLabels is the Schema for the IssueLabelss API. Provides
          GitHub issue labels resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IssueLabelsSpec defines the desired state of IssueLabels
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  label:
                    description: List of labels
                    items:
                      properties:
                        color:
                          description: |-
                            A 6 character hex code, without the leading #, identifying the color of the label.
                            A 6 character hex code, without the leading '#', identifying the color of the label.
                          type: string
                        description:
                          description: |-
                            A short description of the label.
                            A short description of the label.
                          type: string
                        name:
                          description: |-
                            The name of the label.
                            The name of the label.
                          type: string
                      type: object
                    type: array
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  label:
                    description: List of labels
                    items:
                      properties:
                        color:
                          description: |-
                            A 6 character hex code, without the leading #, identifying the color of the label.
                            A 6 character hex code, without the leading '#', identifying the color of the label.
                          type: string
                        description:
                          description: |-
                            A short description of the label.
                            A short description of the label.
                          type: string
                        name:
                          description: |-
                            The name of the label.
                            The name of the label.
                          type: string
                      type: object
                    type: array
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: IssueLabelsStatus defines the observed state of IssueLabels.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  label:
                    description: List of labels
                    items:
                      properties:
                        color:
                          description: |-
                            A 6 character hex code, without the leading #, identifying the color of the label.
                            A 6 character hex code, without the leading '#', identifying the color of the label.
                          type: string
                        description:
                          description: |-
                            A short description of the label.
                            A short description of the label.
                          type: string
                        name:
                          description: |-
                            The name of the label.
                            The name of the label.
                          type: string
                        url:
                          description: |-
                            (Computed) The URL to the issue label
                            The URL to the issue label.
                          type: string
                      type: object
                    type: array
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: pullrequests.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: PullRequest
    listKind: PullRequestList
    plural: pullrequests
    singular: pullrequest
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PullRequest is the Schema for the PullRequests API. Get information
          on a single GitHub Pull Request.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PullRequestSpec defines the desired state of PullRequest
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  baseRef:
                    description: |-
                      Name of the branch serving as the base of the Pull Request.
                      Name of the branch serving as the base of the Pull Request.
                    type: string
                  baseRepository:
                    description: |-
                      Name of the base repository to retrieve the Pull Requests from.
                      Name of the base repository to retrieve the Pull Requests from.
                    type: string
                  baseRepositoryRef:
                    description: Reference to a Repository in repo to populate baseRepository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  baseRepositorySelector:
                    description: Selector for a Repository in repo to populate baseRepository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  body:
                    description: |-
                      Body of the Pull Request.
                      Body of the Pull Request.
                    type: string
                  headRef:
                    description: |-
                      Name of the branch serving as the head of the Pull Request.
                      Name of the branch serving as the head of the Pull Request.
                    type: string
                  headRefRef:
                    description: Reference to a Branch in repo to populate headRef.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  headRefSelector:
                    description: Selector for a Branch in repo to populate headRef.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maintainerCanModify:
                    description: |-
                      Controls whether the base repository maintainers can modify the Pull Request. Default: false.
                      Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
                    type: boolean
                  owner:
                    description: |-
                      Owner of the repository. If not provided, the provider's default owner is used.
                      Owner of the repository. If not provided, the provider's default owner is used.
                    type: string
                  title:
                    description: |-
                      The title of the Pull Request.
                      The title of the Pull Request.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  baseRef:
                    description: |-
                      Name of the branch serving as the base of the Pull Request.
                      Name of the branch serving as the base of the Pull Request.
                    type: string
                  baseRepository:
                    description: |-
                      Name of the base repository to retrieve the Pull Requests from.
                      Name of the base repository to retrieve the Pull Requests from.
                    type: string
                  baseRepositoryRef:
                    description: Reference to a Repository in repo to populate baseRepository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  baseRepositorySelector:
                    description: Selector for a Repository in repo to populate baseRepository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  body:
                    description: |-
                      Body of the Pull Request.
                      Body of the Pull Request.
                    type: string
                  headRef:
                    description: |-
                      Name of the branch serving as the head of the Pull Request.
                      Name of the branch serving as the head of the Pull Request.
                    type: string
                  headRefRef:
                    description: Reference to a Branch in repo to populate headRef.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  headRefSelector:
                    description: Selector for a Branch in repo to populate headRef.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  maintainerCanModify:
                    description: |-
                      Controls whether the base repository maintainers can modify the Pull Request. Default: false.
                      Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
                    type: boolean
                  owner:
                    description: |-
                      Owner of the repository. If not provided, the provider's default owner is used.
                      Owner of the repository. If not provided, the provider's default owner is used.
                    type: string
                  title:
                    description: |-
                      The title of the Pull Request.
                      The title of the Pull Request.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PullRequestStatus defines the observed state of PullRequest.
            properties:
              atProvider:
                properties:
                  baseRef:
                    description: |-
                      Name of the branch serving as the base of the Pull Request.
                      Name of the branch serving as the base of the Pull Request.
                    type: string
                  baseRepository:
                    description: |-
                      Name of the base repository to retrieve the Pull Requests from.
                      Name of the base repository to retrieve the Pull Requests from.
                    type: string
                  baseSha:
                    description: |-
                      Head commit SHA of the Pull Request base.
                      Head commit SHA of the Pull Request base.
                    type: string
                  body:
                    description: |-
                      Body of the Pull Request.
                      Body of the Pull Request.
                    type: string
                  draft:
                    description: |-
                      Indicates Whether this Pull Request is a draft.
                      Indicates Whether this Pull Request is a draft.
                    type: boolean
                  headRef:
                    description: |-
                      Name of the branch serving as the head of the Pull Request.
                      Name of the branch serving as the head of the Pull Request.
                    type: string
                  headSha:
                    description: |-
                      Head commit SHA of the Pull Request head.
                      Head commit SHA of the Pull Request head.
                    type: string
                  id:
                    type: string
                  labels:
                    description: |-
                      List of label names set on the Pull Request.
                      List of names of labels on the PR
                    items:
                      type: string
                    type: array
                  maintainerCanModify:
                    description: |-
                      Controls whether the base repository maintainers can modify the Pull Request. Default: false.
                      Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
                    type: boolean
                  number:
                    description: |-
                      The number of the Pull Request within the repository.
                      The number of the Pull Request within the repository.
                    format: int64
                    type: integer
                  openedAt:
                    description: |-
                      Unix timestamp indicating the Pull Request creation time.
                      Unix timestamp indicating the Pull Request creation time.
                    format: int64
                    type: integer
                  openedBy:
                    description: |-
                      GitHub login of the user who opened the Pull Request.
                      Username of the PR creator
                    type: string
                  owner:
                    description: |-
                      Owner of the repository. If not provided, the provider's default owner is used.
                      Owner of the repository. If not provided, the provider's default owner is used.
                    type: string
                  state:
                    description: |-
                      the current Pull Request state - can be "open", "closed" or "merged".
                      The current Pull Request state - can be 'open', 'closed' or 'merged'.
                    type: string
                  title:
                    description: |-
                      The title of the Pull Request.
                      The title of the Pull Request.
                    type: string
                  updatedAt:
                    description: |-
                      The timestamp of the last Pull Request update.
                      The timestamp of the last Pull Request update.
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositories.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the Repositorys API. Creates and
          manages repositories within GitHub organizations or personal accounts
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowAutoMerge:
                    description: |-
                      Set to true to allow auto-merging pull requests on the repository.
                      Set to 'true' to allow auto-merging pull requests on the repository.
                    type: boolean
                  allowMergeCommit:
                    description: |-
                      (including the related merge_commit_title and merge_commit_message)
                      Set to 'false' to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: |-
                      Set to false to disable rebase merges on the repository.
                      Set to 'false' to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: |-
                      (including the related squash_merge_commit_title and squash_merge_commit_message)
                      Set to 'false' to disable squash merges on the repository.
                    type: boolean
                  allowUpdateBranch:
                    description: |-
                      Set to true to always suggest updating pull request branches.
                      Set to 'true' to always suggest updating pull request branches.
                    type: boolean
                  archiveOnDestroy:
                    description: |-
                      Set to true to archive the repository instead of deleting on destroy.
                      Set to 'true' to archive the repository instead of deleting on destroy.
                    type: boolean
                  archived:
                    description: |-
                      Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
                      Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: |-
                      Set to true to produce an initial commit in the repository.
                      Set to 'true' to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: |-
                      (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
                      initial repository creation and create the target branch inside of the repository prior to setting this attribute.
                      Can only be set after initial repository creation, and only if the target branch exists
                    type: string
                  deleteBranchOnMerge:
                    description: |-
                      Automatically delete head branch after a pull request is merged. Defaults to false.
                      Automatically delete head branch after a pull request is merged. Defaults to 'false'.
                    type: boolean
                  description:
                    description: |-
                      A description of the repository.
                      A description of the repository.
                    type: string
                  gitignoreTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "Haskell".
                      Use the name of the template without the extension. For example, 'Haskell'.
                    type: string
                  hasDiscussions:
                    description: |-
                      Set to true to enable GitHub Discussions on the repository. Defaults to false.
                      Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
                    type: boolean
                  hasDownloads:
                    description: |-
                      Set to true to enable the (deprecated) downloads features on the repository.
                      Set to 'true' to enable the (deprecated) downloads features on the repository.
                    type: boolean
                  hasIssues:
                    description: |-
                      Set to true to enable the GitHub Issues features
                      on the repository.
                      Set to 'true' to enable the GitHub Issues features on the repository
                    type: boolean
                  hasProjects:
                    description: |-
                      Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
                      Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: |-
                      Set to true to enable the GitHub Wiki features on
                      the repository.
                      Set to 'true' to enable the GitHub Wiki features on the repository.
                    type: boolean
                  homepageUrl:
                    description: |-
                      URL of a page describing the project.
                      URL of a page describing the project.
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: |-
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to tell GitHub that this is a template repository.
                      Set to 'true' to tell GitHub that this is a template repository.
                    type: boolean
                  licenseTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
                      Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
                    type: string
                  mergeCommitMessage:
                    description: |-
                      Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
                      Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
                      Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
                    type: string
                  name:
                    description: |-
                      The name of the repository.
                      The name of the repository.
                    type: string
                  pages:
                    description: |-
                      The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
                      The repository's GitHub Pages configuration
                    items:
                      properties:
                        buildType:
                          description: |-
                            The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
                            The type the page should be sourced.
                          type: string
                        cname:
                          description: |-
                            The custom domain for the repository. This can only be set after the repository has been created.
                            The custom domain for the repository. This can only be set after the repository has been created.
                          type: string
                        source:
                          description: |-
                            The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
                            The source branch and directory for the rendered Pages site.
                          items:
                            properties:
                              branch:
                                description: |-
                                  The repository branch used to publish the site's source files. (i.e. main or gh-pages.
                                  The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
                                type: string
                              path:
                                description: |-
                                  The repository directory from which the site publishes (Default: /).
                                  The repository directory from which the site publishes (Default: '/')
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  private:
                    description: |-
                      Set to true to create a private repository.
                      Repositories are created as public (e.g. open source) by default.
                    type: boolean
                  securityAndAnalysis:
                    description: |-
                      The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
                      Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
                    items:
                      properties:
                        advancedSecurity:
                          description: |-
                            The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                            The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
                                type: string
                            type: object
                          type: array
                        secretScanning:
                          description: |-
                            The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
                            The secret scanning configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                        secretScanningPushProtection:
                          description: |-
                            The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
                            The secret scanning push protection configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  squashMergeCommitMessage:
                    description: |-
                      Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
                      Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
                      Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
                    type: string
                  template:
                    description: |-
                      Use a template repository to create this resource. See Template Repositories below for details.
                      Use a template repository to create this resource.
                    items:
                      properties:
                        includeAllBranches:
                          description: |-
                            : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
                            Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
                          type: boolean
                        owner:
                          description: |-
                            : The GitHub organization or user the template repository is owned by.
                            The GitHub organization or user the template repository is owned by.
                          type: string
                        repository:
                          description: |-
                            : The name of the template repository.
                            The name of the template repository.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: |-
                      The list of topics of the repository.
                      The list of topics of the repository.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
                      Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
                    type: string
                  vulnerabilityAlerts:
                    description: |-
                      Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                      Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                    type: boolean
                  webCommitSignoffRequired:
                    description: |-
                      Require contributors to sign off on web-based commits. See more here. Defaults to false.
                      Require contributors to sign off on web-based commits. Defaults to 'false'.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  allowAutoMerge:
                    description: |-
                      Set to true to allow auto-merging pull requests on the repository.
                      Set to 'true' to allow auto-merging pull requests on the repository.
                    type: boolean
                  allowMergeCommit:
                    description: |-
                      (including the related merge_commit_title and merge_commit_message)
                      Set to 'false' to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: |-
                      Set to false to disable rebase merges on the repository.
                      Set to 'false' to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: |-
                      (including the related squash_merge_commit_title and squash_merge_commit_message)
                      Set to 'false' to disable squash merges on the repository.
                    type: boolean
                  allowUpdateBranch:
                    description: |-
                      Set to true to always suggest updating pull request branches.
                      Set to 'true' to always suggest updating pull request branches.
                    type: boolean
                  archiveOnDestroy:
                    description: |-
                      Set to true to archive the repository instead of deleting on destroy.
                      Set to 'true' to archive the repository instead of deleting on destroy.
                    type: boolean
                  archived:
                    description: |-
                      Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
                      Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: |-
                      Set to true to produce an initial commit in the repository.
                      Set to 'true' to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: |-
                      (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
                      initial repository creation and create the target branch inside of the repository prior to setting this attribute.
                      Can only be set after initial repository creation, and only if the target branch exists
                    type: string
                  deleteBranchOnMerge:
                    description: |-
                      Automatically delete head branch after a pull request is merged. Defaults to false.
                      Automatically delete head branch after a pull request is merged. Defaults to 'false'.
                    type: boolean
                  description:
                    description: |-
                      A description of the repository.
                      A description of the repository.
                    type: string
                  gitignoreTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "Haskell".
                      Use the name of the template without the extension. For example, 'Haskell'.
                    type: string
                  hasDiscussions:
                    description: |-
                      Set to true to enable GitHub Discussions on the repository. Defaults to false.
                      Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
                    type: boolean
                  hasDownloads:
                    description: |-
                      Set to true to enable the (deprecated) downloads features on the repository.
                      Set to 'true' to enable the (deprecated) downloads features on the repository.
                    type: boolean
                  hasIssues:
                    description: |-
                      Set to true to enable the GitHub Issues features
                      on the repository.
                      Set to 'true' to enable the GitHub Issues features on the repository
                    type: boolean
                  hasProjects:
                    description: |-
                      Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
                      Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: |-
                      Set to true to enable the GitHub Wiki features on
                      the repository.
                      Set to 'true' to enable the GitHub Wiki features on the repository.
                    type: boolean
                  homepageUrl:
                    description: |-
                      URL of a page describing the project.
                      URL of a page describing the project.
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: |-
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to tell GitHub that this is a template repository.
                      Set to 'true' to tell GitHub that this is a template repository.
                    type: boolean
                  licenseTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
                      Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
                    type: string
                  mergeCommitMessage:
                    description: |-
                      Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
                      Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
                      Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
                    type: string
                  name:
                    description: |-
                      The name of the repository.
                      The name of the repository.
                    type: string
                  pages:
                    description: |-
                      The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
                      The repository's GitHub Pages configuration
                    items:
                      properties:
                        buildType:
                          description: |-
                            The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
                            The type the page should be sourced.
                          type: string
                        cname:
                          description: |-
                            The custom domain for the repository. This can only be set after the repository has been created.
                            The custom domain for the repository. This can only be set after the repository has been created.
                          type: string
                        source:
                          description: |-
                            The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
                            The source branch and directory for the rendered Pages site.
                          items:
                            properties:
                              branch:
                                description: |-
                                  The repository branch used to publish the site's source files. (i.e. main or gh-pages.
                                  The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
                                type: string
                              path:
                                description: |-
                                  The repository directory from which the site publishes (Default: /).
                                  The repository directory from which the site publishes (Default: '/')
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  private:
                    description: |-
                      Set to true to create a private repository.
                      Repositories are created as public (e.g. open source) by default.
                    type: boolean
                  securityAndAnalysis:
                    description: |-
                      The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
                      Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
                    items:
                      properties:
                        advancedSecurity:
                          description: |-
                            The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                            The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
                                type: string
                            type: object
                          type: array
                        secretScanning:
                          description: |-
                            The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
                            The secret scanning configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                        secretScanningPushProtection:
                          description: |-
                            The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
                            The secret scanning push protection configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  squashMergeCommitMessage:
                    description: |-
                      Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
                      Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
                      Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
                    type: string
                  template:
                    description: |-
                      Use a template repository to create this resource. See Template Repositories below for details.
                      Use a template repository to create this resource.
                    items:
                      properties:
                        includeAllBranches:
                          description: |-
                            : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
                            Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
                          type: boolean
                        owner:
                          description: |-
                            : The GitHub organization or user the template repository is owned by.
                            The GitHub organization or user the template repository is owned by.
                          type: string
                        repository:
                          description: |-
                            : The name of the template repository.
                            The name of the template repository.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: |-
                      The list of topics of the repository.
                      The list of topics of the repository.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
                      Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
                    type: string
                  vulnerabilityAlerts:
                    description: |-
                      Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                      Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                    type: boolean
                  webCommitSignoffRequired:
                    description: |-
                      Require contributors to sign off on web-based commits. See more here. Defaults to false.
                      Require contributors to sign off on web-based commits. Defaults to 'false'.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository.
            properties:
              atProvider:
                properties:
                  allowAutoMerge:
                    description: |-
                      Set to true to allow auto-merging pull requests on the repository.
                      Set to 'true' to allow auto-merging pull requests on the repository.
                    type: boolean
                  allowMergeCommit:
                    description: |-
                      (including the related merge_commit_title and merge_commit_message)
                      Set to 'false' to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: |-
                      Set to false to disable rebase merges on the repository.
                      Set to 'false' to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: |-
                      (including the related squash_merge_commit_title and squash_merge_commit_message)
                      Set to 'false' to disable squash merges on the repository.
                    type: boolean
                  allowUpdateBranch:
                    description: |-
                      Set to true to always suggest updating pull request branches.
                      Set to 'true' to always suggest updating pull request branches.
                    type: boolean
                  archiveOnDestroy:
                    description: |-
                      Set to true to archive the repository instead of deleting on destroy.
                      Set to 'true' to archive the repository instead of deleting on destroy.
                    type: boolean
                  archived:
                    description: |-
                      Specifies if the repository should be archived. Defaults to false. NOTE Currently, the API does not support unarchiving.
                      Specifies if the repository should be archived. Defaults to 'false'. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: |-
                      Set to true to produce an initial commit in the repository.
                      Set to 'true' to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: |-
                      (Deprecated: Use github_branch_default resource instead) The name of the default branch of the repository. NOTE: This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target branch inside the repository. This means a user will have to omit this parameter from the
                      initial repository creation and create the target branch inside of the repository prior to setting this attribute.
                      Can only be set after initial repository creation, and only if the target branch exists
                    type: string
                  deleteBranchOnMerge:
                    description: |-
                      Automatically delete head branch after a pull request is merged. Defaults to false.
                      Automatically delete head branch after a pull request is merged. Defaults to 'false'.
                    type: boolean
                  description:
                    description: |-
                      A description of the repository.
                      A description of the repository.
                    type: string
                  etag:
                    type: string
                  fullName:
                    description: |-
                      A string of the form "orgname/reponame".
                      A string of the form 'orgname/reponame'.
                    type: string
                  gitCloneUrl:
                    description: |-
                      URL that can be provided to git clone to clone the repository anonymously via the git protocol.
                      URL that can be provided to 'git clone' to clone the repository anonymously via the git protocol.
                    type: string
                  gitignoreTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "Haskell".
                      Use the name of the template without the extension. For example, 'Haskell'.
                    type: string
                  hasDiscussions:
                    description: |-
                      Set to true to enable GitHub Discussions on the repository. Defaults to false.
                      Set to 'true' to enable GitHub Discussions on the repository. Defaults to 'false'.
                    type: boolean
                  hasDownloads:
                    description: |-
                      Set to true to enable the (deprecated) downloads features on the repository.
                      Set to 'true' to enable the (deprecated) downloads features on the repository.
                    type: boolean
                  hasIssues:
                    description: |-
                      Set to true to enable the GitHub Issues features
                      on the repository.
                      Set to 'true' to enable the GitHub Issues features on the repository
                    type: boolean
                  hasProjects:
                    description: |-
                      Set to true to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to false and will otherwise default to true. If you specify true when it has been disabled it will return an error.
                      Set to 'true' to enable the GitHub Projects features on the repository. Per the GitHub documentation when in an organization that has disabled repository projects it will default to 'false' and will otherwise default to 'true'. If you specify 'true' when it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: |-
                      Set to true to enable the GitHub Wiki features on
                      the repository.
                      Set to 'true' to enable the GitHub Wiki features on the repository.
                    type: boolean
                  homepageUrl:
                    description: |-
                      URL of a page describing the project.
                      URL of a page describing the project.
                    type: string
                  htmlUrl:
                    description: |-
                      URL to the repository on the web.
                      URL to the repository on the web.
                    type: string
                  httpCloneUrl:
                    description: |-
                      URL that can be provided to git clone to clone the repository via HTTPS.
                      URL that can be provided to 'git clone' to clone the repository via HTTPS.
                    type: string
                  id:
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: |-
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                      Set to true to not call the vulnerability alerts endpoint so the resource can also be used without admin permissions during read.
                    type: boolean
                  isTemplate:
                    description: |-
                      Set to true to tell GitHub that this is a template repository.
                      Set to 'true' to tell GitHub that this is a template repository.
                    type: boolean
                  licenseTemplate:
                    description: |-
                      Use the name of the template without the extension. For example, "mit" or "mpl-2.0".
                      Use the name of the template without the extension. For example, 'mit' or 'mpl-2.0'.
                    type: string
                  mergeCommitMessage:
                    description: |-
                      Can be PR_BODY, PR_TITLE, or BLANK for a default merge commit message. Applicable only if allow_merge_commit is true.
                      Can be 'PR_BODY', 'PR_TITLE', or 'BLANK' for a default merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or MERGE_MESSAGE for a default merge commit title. Applicable only if allow_merge_commit is true.
                      Can be 'PR_TITLE' or 'MERGE_MESSAGE' for a default merge commit title.
                    type: string
                  name:
                    description: |-
                      The name of the repository.
                      The name of the repository.
                    type: string
                  nodeId:
                    description: |-
                      GraphQL global node id for use with v4 API
                      GraphQL global node id for use with v4 API.
                    type: string
                  pages:
                    description: |-
                      The repository's GitHub Pages configuration. See GitHub Pages Configuration below for details.
                      The repository's GitHub Pages configuration
                    items:
                      properties:
                        buildType:
                          description: |-
                            The type of GitHub Pages site to build. Can be legacy or workflow. If you use legacy as build type you need to set the option source.
                            The type the page should be sourced.
                          type: string
                        cname:
                          description: |-
                            The custom domain for the repository. This can only be set after the repository has been created.
                            The custom domain for the repository. This can only be set after the repository has been created.
                          type: string
                        custom404:
                          description: |-
                            Whether the rendered GitHub Pages site has a custom 404 page.
                            Whether the rendered GitHub Pages site has a custom 404 page
                          type: boolean
                        htmlUrl:
                          description: |-
                            URL to the repository on the web.
                            URL to the repository on the web.
                          type: string
                        source:
                          description: |-
                            The source branch and directory for the rendered Pages site. See GitHub Pages Source below for details.
                            The source branch and directory for the rendered Pages site.
                          items:
                            properties:
                              branch:
                                description: |-
                                  The repository branch used to publish the site's source files. (i.e. main or gh-pages.
                                  The repository branch used to publish the site's source files. (i.e. 'main' or 'gh-pages')
                                type: string
                              path:
                                description: |-
                                  The repository directory from which the site publishes (Default: /).
                                  The repository directory from which the site publishes (Default: '/')
                                type: string
                            type: object
                          type: array
                        status:
                          description: |-
                            Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                            The GitHub Pages site's build status e.g. building or built.
                          type: string
                        url:
                          type: string
                      type: object
                    type: array
                  primaryLanguage:
                    description: The primary language used in the repository.
                    type: string
                  private:
                    description: |-
                      Set to true to create a private repository.
                      Repositories are created as public (e.g. open source) by default.
                    type: boolean
                  repoId:
                    description: |-
                      GitHub ID for the repository
                      GitHub ID for the repository.
                    format: int64
                    type: integer
                  securityAndAnalysis:
                    description: |-
                      The repository's security and analysis configuration. See Security and Analysis Configuration below for details.
                      Security and analysis settings for the repository. To use this parameter you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository.
                    items:
                      properties:
                        advancedSecurity:
                          description: |-
                            The advanced security configuration for the repository. See Advanced Security Configuration below for details. If a repository's visibility is public, advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                            The advanced security configuration for the repository. If a repository's visibility is 'public', advanced security is always enabled and cannot be changed, so this setting cannot be supplied.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable advanced security features on the repository. Can be 'enabled' or 'disabled'.
                                type: string
                            type: object
                          type: array
                        secretScanning:
                          description: |-
                            The secret scanning configuration for the repository. See Secret Scanning Configuration below for details.
                            The secret scanning configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                        secretScanningPushProtection:
                          description: |-
                            The secret scanning push protection configuration for the repository. See Secret Scanning Push Protection Configuration below for details.
                            The secret scanning push protection configuration for the repository.
                          items:
                            properties:
                              status:
                                description: |-
                                  Set to enabled to enable secret scanning on the repository. Can be enabled or disabled. If set to enabled, the repository's visibility must be public or security_and_analysis[0].advanced_security[0].status must also be set to enabled.
                                  Set to 'enabled' to enable secret scanning push protection on the repository. Can be 'enabled' or 'disabled'. If set to 'enabled', the repository's visibility must be 'public' or 'security_and_analysis[0].advanced_security[0].status' must also be set to 'enabled'.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  squashMergeCommitMessage:
                    description: |-
                      Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default squash merge commit message. Applicable only if allow_squash_merge is true.
                      Can be 'PR_BODY', 'COMMIT_MESSAGES', or 'BLANK' for a default squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: |-
                      Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default squash merge commit title. Applicable only if allow_squash_merge is true.
                      Can be 'PR_TITLE' or 'COMMIT_OR_PR_TITLE' for a default squash merge commit title.
                    type: string
                  sshCloneUrl:
                    description: |-
                      URL that can be provided to git clone to clone the repository via SSH.
                      URL that can be provided to 'git clone' to clone the repository via SSH.
                    type: string
                  svnUrl:
                    description: |-
                      URL that can be provided to svn checkout to check out the repository via GitHub's Subversion protocol emulation.
                      URL that can be provided to 'svn checkout' to check out the repository via GitHub's Subversion protocol emulation.
                    type: string
                  template:
                    description: |-
                      Use a template repository to create this resource. See Template Repositories below for details.
                      Use a template repository to create this resource.
                    items:
                      properties:
                        includeAllBranches:
                          description: |-
                            : Whether the new repository should include all the branches from the template repository (defaults to false, which includes only the default branch from the template).
                            Whether the new repository should include all the branches from the template repository (defaults to 'false', which includes only the default branch from the template).
                          type: boolean
                        owner:
                          description: |-
                            : The GitHub organization or user the template repository is owned by.
                            The GitHub organization or user the template repository is owned by.
                          type: string
                        repository:
                          description: |-
                            : The name of the template repository.
                            The name of the template repository.
                          type: string
                      type: object
                    type: array
                  topics:
                    description: |-
                      The list of topics of the repository.
                      The list of topics of the repository.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  visibility:
                    description: |-
                      Can be public or private. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be internal. The visibility parameter overrides the private parameter.
                      Can be 'public' or 'private'. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, visibility can also be 'internal'.
                    type: string
                  vulnerabilityAlerts:
                    description: |-
                      Set to true to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default.) See GitHub Documentation for details. Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                      Set to 'true' to enable security alerts for vulnerable dependencies. Enabling requires alerts to be enabled on the owner level. (Note for importing: GitHub enables the alerts on public repos but disables them on private repos by default). Note that vulnerability alerts have not been successfully tested on any GitHub Enterprise instance and may be unavailable in those settings.
                    type: boolean
                  webCommitSignoffRequired:
                    description: |-
                      Require contributors to sign off on web-based commits. See more here. Defaults to false.
                      Require contributors to sign off on web-based commits. Defaults to 'false'.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositoryautolinkreferences.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryAutolinkReference
    listKind: RepositoryAutolinkReferenceList
    plural: repositoryautolinkreferences
    singular: repositoryautolinkreference
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryAutolinkReference is the Schema for the RepositoryAutolinkReferences
          API. Creates and manages autolink references for a single repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryAutolinkReferenceSpec defines the desired state
              of RepositoryAutolinkReference
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  isAlphanumeric:
                    description: |-
                      Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
                      Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
                    type: boolean
                  keyPrefix:
                    description: |-
                      This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
                      This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit
                    type: string
                  repository:
                    description: |-
                      The repository of the autolink reference.
                      The repository name
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  targetUrlTemplate:
                    description: |-
                      The template of the target URL used for the links; must be a valid URL and contain <num> for the reference number
                      The template of the target URL used for the links; must be a valid URL and contain `<num>` for the reference number
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  isAlphanumeric:
                    description: |-
                      Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
                      Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
                    type: boolean
                  keyPrefix:
                    description: |-
                      This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
                      This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit
                    type: string
                  repository:
                    description: |-
                      The repository of the autolink reference.
                      The repository name
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  targetUrlTemplate:
                    description: |-
                      The template of the target URL used for the links; must be a valid URL and contain <num> for the reference number
                      The template of the target URL used for the links; must be a valid URL and contain `<num>` for the reference number
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryAutolinkReferenceStatus defines the observed state
              of RepositoryAutolinkReference.
            properties:
              atProvider:
                properties:
                  etag:
                    description: An etag representing the autolink reference object.
                    type: string
                  id:
                    type: string
                  isAlphanumeric:
                    description: |-
                      Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters. Default is true.
                      Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
                    type: boolean
                  keyPrefix:
                    description: |-
                      This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.
                      This prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit
                    type: string
                  repository:
                    description: |-
                      The repository of the autolink reference.
                      The repository name
                    type: string
                  targetUrlTemplate:
                    description: |-
                      The template of the target URL used for the links; must be a valid URL and contain <num> for the reference number
                      The template of the target URL used for the links; must be a valid URL and contain `<num>` for the reference number
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositorycollaborators.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryCollaborator
    listKind: RepositoryCollaboratorList
    plural: repositorycollaborators
    singular: repositorycollaborator
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryCollaborator is the Schema for the RepositoryCollaborators
          API. Provides a GitHub repository collaborator resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryCollaboratorSpec defines the desired state of RepositoryCollaborator
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  permission:
                    description: |-
                      The permission of the outside collaborator for the repository.
                      Must be one of pull, push, maintain, triage or admin or the name of an existing custom repository role within the organization for organization-owned repositories.
                      Must be push for personal repositories. Defaults to push.
                      The permission of the outside collaborator for the repository. Must be one of 'pull', 'push', 'maintain', 'triage' or 'admin' or the name of an existing custom repository role within the organization for organization-owned repositories. Must be 'push' for personal repositories. Defaults to 'push'.
                    type: string
                  permissionDiffSuppression:
                    description: |-
                      Suppress plan diffs for triage and maintain.  Defaults to false.
                      Suppress plan diffs for triage and maintain. Defaults to 'false'.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  username:
                    description: |-
                      The user to add to the repository as a collaborator.
                      The user to add to the repository as a collaborator.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  permission:
                    description: |-
                      The permission of the outside collaborator for the repository.
                      Must be one of pull, push, maintain, triage or admin or the name of an existing custom repository role within the organization for organization-owned repositories.
                      Must be push for personal repositories. Defaults to push.
                      The permission of the outside collaborator for the repository. Must be one of 'pull', 'push', 'maintain', 'triage' or 'admin' or the name of an existing custom repository role within the organization for organization-owned repositories. Must be 'push' for personal repositories. Defaults to 'push'.
                    type: string
                  permissionDiffSuppression:
                    description: |-
                      Suppress plan diffs for triage and maintain.  Defaults to false.
                      Suppress plan diffs for triage and maintain. Defaults to 'false'.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  username:
                    description: |-
                      The user to add to the repository as a collaborator.
                      The user to add to the repository as a collaborator.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryCollaboratorStatus defines the observed state of
              RepositoryCollaborator.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  invitationId:
                    description: |-
                      ID of the invitation to be used in github_user_invitation_accepter
                      ID of the invitation to be used in 'github_user_invitation_accepter'
                    type: string
                  permission:
                    description: |-
                      The permission of the outside collaborator for the repository.
                      Must be one of pull, push, maintain, triage or admin or the name of an existing custom repository role within the organization for organization-owned repositories.
                      Must be push for personal repositories. Defaults to push.
                      The permission of the outside collaborator for the repository. Must be one of 'pull', 'push', 'maintain', 'triage' or 'admin' or the name of an existing custom repository role within the organization for organization-owned repositories. Must be 'push' for personal repositories. Defaults to 'push'.
                    type: string
                  permissionDiffSuppression:
                    description: |-
                      Suppress plan diffs for triage and maintain.  Defaults to false.
                      Suppress plan diffs for triage and maintain. Defaults to 'false'.
                    type: boolean
                  repository:
                    description: |-
                      The GitHub repository
                      The GitHub repository
                    type: string
                  username:
                    description: |-
                      The user to add to the repository as a collaborator.
                      The user to add to the repository as a collaborator.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositoryfiles.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryFile
    listKind: RepositoryFileList
    plural: repositoryfiles
    singular: repositoryfile
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryFile is the Schema for the RepositoryFiles API. Creates
          and manages files within a GitHub repository
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryFileSpec defines the desired state of RepositoryFile
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autocreateBranch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      Automatically create the branch if it could not be found. Subsequent reads if the branch is deleted will occur from 'autocreate_branch_source_branch'
                    type: boolean
                  autocreateBranchSourceBranch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name to start from, if 'autocreate_branch' is set. Defaults to 'main'.
                    type: string
                  autocreateBranchSourceSha:
                    description: |-
                      The SHA blob of the file.
                      The commit hash to start from, if 'autocreate_branch' is set. Defaults to the tip of 'autocreate_branch_source_branch'. If provided, 'autocreate_branch_source_branch' is ignored.
                    type: string
                  branch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name, defaults to the repository's default branch
                    type: string
                  branchRef:
                    description: Reference to a Branch in repo to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch in repo to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  commitAuthor:
                    description: |-
                      Committer author name to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This maybe useful when a branch protection rule requires signed commits.
                      The commit author name, defaults to the authenticated user's name. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitEmail:
                    description: |-
                      Committer email address to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This may be useful when a branch protection rule requires signed commits.
                      The commit author email address, defaults to the authenticated user's email address. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitMessage:
                    description: |-
                      The commit message when creating, updating or deleting the managed file.
                      The commit message when creating, updating or deleting the file
                    type: string
                  content:
                    description: |-
                      The file content.
                      The file's content
                    type: string
                  file:
                    description: |-
                      The path of the file to manage.
                      The file path to manage
                    type: string
                  overwriteOnCreate:
                    description: |-
                      Enable overwriting existing files. If set to true it will overwrite an existing file with the same name. If set to false it will fail if there is an existing file with the same name.
                      Enable overwriting existing files, defaults to "false"
                    type: boolean
                  repository:
                    description: |-
                      The repository to create the file in.
                      The repository name
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  autocreateBranch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      Automatically create the branch if it could not be found. Subsequent reads if the branch is deleted will occur from 'autocreate_branch_source_branch'
                    type: boolean
                  autocreateBranchSourceBranch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name to start from, if 'autocreate_branch' is set. Defaults to 'main'.
                    type: string
                  autocreateBranchSourceSha:
                    description: |-
                      The SHA blob of the file.
                      The commit hash to start from, if 'autocreate_branch' is set. Defaults to the tip of 'autocreate_branch_source_branch'. If provided, 'autocreate_branch_source_branch' is ignored.
                    type: string
                  branch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name, defaults to the repository's default branch
                    type: string
                  branchRef:
                    description: Reference to a Branch in repo to populate branch.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  branchSelector:
                    description: Selector for a Branch in repo to populate branch.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  commitAuthor:
                    description: |-
                      Committer author name to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This maybe useful when a branch protection rule requires signed commits.
                      The commit author name, defaults to the authenticated user's name. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitEmail:
                    description: |-
                      Committer email address to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This may be useful when a branch protection rule requires signed commits.
                      The commit author email address, defaults to the authenticated user's email address. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitMessage:
                    description: |-
                      The commit message when creating, updating or deleting the managed file.
                      The commit message when creating, updating or deleting the file
                    type: string
                  content:
                    description: |-
                      The file content.
                      The file's content
                    type: string
                  file:
                    description: |-
                      The path of the file to manage.
                      The file path to manage
                    type: string
                  overwriteOnCreate:
                    description: |-
                      Enable overwriting existing files. If set to true it will overwrite an existing file with the same name. If set to false it will fail if there is an existing file with the same name.
                      Enable overwriting existing files, defaults to "false"
                    type: boolean
                  repository:
                    description: |-
                      The repository to create the file in.
                      The repository name
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryFileStatus defines the observed state of RepositoryFile.
            properties:
              atProvider:
                properties:
                  autocreateBranch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      Automatically create the branch if it could not be found. Subsequent reads if the branch is deleted will occur from 'autocreate_branch_source_branch'
                    type: boolean
                  autocreateBranchSourceBranch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name to start from, if 'autocreate_branch' is set. Defaults to 'main'.
                    type: string
                  autocreateBranchSourceSha:
                    description: |-
                      The SHA blob of the file.
                      The commit hash to start from, if 'autocreate_branch' is set. Defaults to the tip of 'autocreate_branch_source_branch'. If provided, 'autocreate_branch_source_branch' is ignored.
                    type: string
                  branch:
                    description: |-
                      Git branch (defaults to the repository's default branch).
                      The branch must already exist, it will not be created if it does not already exist.
                      The branch name, defaults to the repository's default branch
                    type: string
                  commitAuthor:
                    description: |-
                      Committer author name to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This maybe useful when a branch protection rule requires signed commits.
                      The commit author name, defaults to the authenticated user's name. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitEmail:
                    description: |-
                      Committer email address to use. NOTE: GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App. This may be useful when a branch protection rule requires signed commits.
                      The commit author email address, defaults to the authenticated user's email address. GitHub app users may omit author and email information so GitHub can verify commits as the GitHub App.
                    type: string
                  commitMessage:
                    description: |-
                      The commit message when creating, updating or deleting the managed file.
                      The commit message when creating, updating or deleting the file
                    type: string
                  commitSha:
                    description: |-
                      The SHA of the commit that modified the file.
                      The SHA of the commit that modified the file
                    type: string
                  content:
                    description: |-
                      The file content.
                      The file's content
                    type: string
                  file:
                    description: |-
                      The path of the file to manage.
                      The file path to manage
                    type: string
                  id:
                    type: string
                  overwriteOnCreate:
                    description: |-
                      Enable overwriting existing files. If set to true it will overwrite an existing file with the same name. If set to false it will fail if there is an existing file with the same name.
                      Enable overwriting existing files, defaults to "false"
                    type: boolean
                  ref:
                    description: |-
                      The name of the commit/branch/tag.
                      The name of the commit/branch/tag
                    type: string
                  repository:
                    description: |-
                      The repository to create the file in.
                      The repository name
                    type: string
                  sha:
                    description: |-
                      The SHA blob of the file.
                      The blob SHA of the file
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositoryrulesets.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryRuleset
    listKind: RepositoryRulesetList
    plural: repositoryrulesets
    singular: repositoryruleset
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryRuleset is the Schema for the RepositoryRulesets API.
          Creates a GitHub repository ruleset.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryRulesetSpec defines the desired state of RepositoryRuleset
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bypassActors:
                    description: |-
                      (Block List) The actors that can bypass the rules in this ruleset. (see below for nested schema)
                      The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: |-
                            (Number) The ID of the actor that can bypass a ruleset.
                            The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: |-
                            (String) The type of actor that can bypass a ruleset. Can be one of: RepositoryRole, Team, Integration, OrganizationAdmin.
                            The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
                          type: string
                        bypassMode:
                          description: |-
                            (String) When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: always, pull_request.
                            When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: |-
                      (Block List, Max: 1) Parameters for a repository ruleset ref name condition. (see below for nested schema)
                      Parameters for a repository ruleset ref name condition.
                    items:
                      properties:
                        refName:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              exclude:
                                description: |-
                                  (List of String) Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                  Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: |-
                                  (List of String) Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the default branch or ~ALL to include all branches.
                                  Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: |-
                      (String) Possible values for Enforcement are disabled, active, evaluate. Note: evaluate is currently only supported for owners of type organization.
                      Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
                    type: string
                  name:
                    description: |-
                      (String) The name of the ruleset.
                      The name of the ruleset.
                    type: string
                  repository:
                    description: |-
                      (String) Name of the repository to apply rulset to.
                      Name of the repository to apply rulset to.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Rules within the ruleset. (see below for nested schema)
                      Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with tag_name_pattern as it only applied to rulesets with target branch. (see below for nested schema)
                            Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: |-
                            (Boolean) Only allow users with bypass permission to create matching refs.
                            Only allow users with bypass permission to create matching refs.
                          type: boolean
                        deletion:
                          description: |-
                            (Boolean) Only allow users with bypass permissions to delete matching refs.
                            Only allow users with bypass permissions to delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: |-
                            (Boolean) Prevent users with push access from force pushing to branches.
                            Prevent users with push access from force pushing to branches.
                          type: boolean
                        pullRequest:
                          description: |-
                            (Block List, Max: 1) Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. (see below for nested schema)
                            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: |-
                                  (Boolean) New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to false.
                                  New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: |-
                                  (Boolean) Require an approving review in pull requests that modify files that have a designated code owner. Defaults to false.
                                  Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: |-
                                  (Boolean) Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to false.
                                  Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: |-
                                  (Number) The number of approving reviews that are required before a pull request can be merged. Defaults to 0.
                                  The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: |-
                                  (Boolean) All conversations on code must be resolved before a pull request can be merged. Defaults to false.
                                  All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredDeployments:
                          description: |-
                            (Block List, Max: 1) Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule. (see below for nested schema)
                            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
                          items:
                            properties:
                              requiredDeploymentEnvironments:
                                description: |-
                                  (List of String) The environments that must be successfully deployed to before branches can be merged.
                                  The environments that must be successfully deployed to before branches can be merged.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: |-
                            (Boolean) Prevent merge commits from being pushed to matching branches.
                            Prevent merge commits from being pushed to matching branches.
                          type: boolean
                        requiredSignatures:
                          description: |-
                            (Boolean) Commits pushed to matching branches must have verified signatures.
                            Commits pushed to matching branches must have verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: |-
                            (Block List, Max: 1) Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed. (see below for nested schema)
                            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: |-
                                  (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
                                  Status checks that are required. Several can be defined.
                                items:
                                  properties:
                                    context:
                                      description: |-
                                        (String) The status check context name that must be present on the commit.
                                        The status check context name that must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: |-
                                        (Number) The optional integration ID that this status check must originate from.
                                        The optional integration ID that this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: |-
                                  (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to false.
                                  Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        tagNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with branch_name_pattern as it only applied to rulesets with target tag. (see below for nested schema)
                            Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: |-
                            (Boolean) Only allow users with bypass permission to update matching refs.
                            Only allow users with bypass permission to update matching refs.
                          type: boolean
                        updateAllowsFetchAndMerge:
                          description: |-
                            (Boolean) Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires update to be set to true. Note: behaviour is affected by a known bug on the GitHub side which may cause issues when using this parameter.
                            Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires `update` to be set to `true`.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Possible values are branch and tag.
                      Possible values are `branch` and `tag`.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bypassActors:
                    description: |-
                      (Block List) The actors that can bypass the rules in this ruleset. (see below for nested schema)
                      The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: |-
                            (Number) The ID of the actor that can bypass a ruleset.
                            The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: |-
                            (String) The type of actor that can bypass a ruleset. Can be one of: RepositoryRole, Team, Integration, OrganizationAdmin.
                            The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
                          type: string
                        bypassMode:
                          description: |-
                            (String) When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: always, pull_request.
                            When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: |-
                      (Block List, Max: 1) Parameters for a repository ruleset ref name condition. (see below for nested schema)
                      Parameters for a repository ruleset ref name condition.
                    items:
                      properties:
                        refName:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              exclude:
                                description: |-
                                  (List of String) Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                  Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: |-
                                  (List of String) Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the default branch or ~ALL to include all branches.
                                  Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: |-
                      (String) Possible values for Enforcement are disabled, active, evaluate. Note: evaluate is currently only supported for owners of type organization.
                      Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
                    type: string
                  name:
                    description: |-
                      (String) The name of the ruleset.
                      The name of the ruleset.
                    type: string
                  repository:
                    description: |-
                      (String) Name of the repository to apply rulset to.
                      Name of the repository to apply rulset to.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Rules within the ruleset. (see below for nested schema)
                      Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with tag_name_pattern as it only applied to rulesets with target branch. (see below for nested schema)
                            Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: |-
                            (Boolean) Only allow users with bypass permission to create matching refs.
                            Only allow users with bypass permission to create matching refs.
                          type: boolean
                        deletion:
                          description: |-
                            (Boolean) Only allow users with bypass permissions to delete matching refs.
                            Only allow users with bypass permissions to delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: |-
                            (Boolean) Prevent users with push access from force pushing to branches.
                            Prevent users with push access from force pushing to branches.
                          type: boolean
                        pullRequest:
                          description: |-
                            (Block List, Max: 1) Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. (see below for nested schema)
                            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: |-
                                  (Boolean) New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to false.
                                  New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: |-
                                  (Boolean) Require an approving review in pull requests that modify files that have a designated code owner. Defaults to false.
                                  Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: |-
                                  (Boolean) Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to false.
                                  Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: |-
                                  (Number) The number of approving reviews that are required before a pull request can be merged. Defaults to 0.
                                  The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: |-
                                  (Boolean) All conversations on code must be resolved before a pull request can be merged. Defaults to false.
                                  All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredDeployments:
                          description: |-
                            (Block List, Max: 1) Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule. (see below for nested schema)
                            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
                          items:
                            properties:
                              requiredDeploymentEnvironments:
                                description: |-
                                  (List of String) The environments that must be successfully deployed to before branches can be merged.
                                  The environments that must be successfully deployed to before branches can be merged.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: |-
                            (Boolean) Prevent merge commits from being pushed to matching branches.
                            Prevent merge commits from being pushed to matching branches.
                          type: boolean
                        requiredSignatures:
                          description: |-
                            (Boolean) Commits pushed to matching branches must have verified signatures.
                            Commits pushed to matching branches must have verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: |-
                            (Block List, Max: 1) Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed. (see below for nested schema)
                            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: |-
                                  (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
                                  Status checks that are required. Several can be defined.
                                items:
                                  properties:
                                    context:
                                      description: |-
                                        (String) The status check context name that must be present on the commit.
                                        The status check context name that must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: |-
                                        (Number) The optional integration ID that this status check must originate from.
                                        The optional integration ID that this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: |-
                                  (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to false.
                                  Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        tagNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with branch_name_pattern as it only applied to rulesets with target tag. (see below for nested schema)
                            Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: |-
                            (Boolean) Only allow users with bypass permission to update matching refs.
                            Only allow users with bypass permission to update matching refs.
                          type: boolean
                        updateAllowsFetchAndMerge:
                          description: |-
                            (Boolean) Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires update to be set to true. Note: behaviour is affected by a known bug on the GitHub side which may cause issues when using this parameter.
                            Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires `update` to be set to `true`.
                          type: boolean
                      type: object
                    type: array
                  target:
                    description: |-
                      (String) Possible values are branch and tag.
                      Possible values are `branch` and `tag`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryRulesetStatus defines the observed state of RepositoryRuleset.
            properties:
              atProvider:
                properties:
                  bypassActors:
                    description: |-
                      (Block List) The actors that can bypass the rules in this ruleset. (see below for nested schema)
                      The actors that can bypass the rules in this ruleset.
                    items:
                      properties:
                        actorId:
                          description: |-
                            (Number) The ID of the actor that can bypass a ruleset.
                            The ID of the actor that can bypass a ruleset. When `actor_type` is `OrganizationAdmin`, this should be set to `1`.
                          format: int64
                          type: integer
                        actorType:
                          description: |-
                            (String) The type of actor that can bypass a ruleset. Can be one of: RepositoryRole, Team, Integration, OrganizationAdmin.
                            The type of actor that can bypass a ruleset. Can be one of: `RepositoryRole`, `Team`, `Integration`, `OrganizationAdmin`.
                          type: string
                        bypassMode:
                          description: |-
                            (String) When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: always, pull_request.
                            When the specified actor can bypass the ruleset. pull_request means that an actor can only bypass rules on pull requests. Can be one of: `always`, `pull_request`.
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: |-
                      (Block List, Max: 1) Parameters for a repository ruleset ref name condition. (see below for nested schema)
                      Parameters for a repository ruleset ref name condition.
                    items:
                      properties:
                        refName:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              exclude:
                                description: |-
                                  (List of String) Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                  Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
                                items:
                                  type: string
                                type: array
                              include:
                                description: |-
                                  (List of String) Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts ~DEFAULT_BRANCH to include the default branch or ~ALL to include all branches.
                                  Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  enforcement:
                    description: |-
                      (String) Possible values for Enforcement are disabled, active, evaluate. Note: evaluate is currently only supported for owners of type organization.
                      Possible values for Enforcement are `disabled`, `active`, `evaluate`. Note: `evaluate` is currently only supported for owners of type `organization`.
                    type: string
                  etag:
                    description: (String)
                    type: string
                  id:
                    type: string
                  name:
                    description: |-
                      (String) The name of the ruleset.
                      The name of the ruleset.
                    type: string
                  nodeId:
                    description: |-
                      (String) GraphQL global node id for use with v4 API.
                      GraphQL global node id for use with v4 API.
                    type: string
                  repository:
                    description: |-
                      (String) Name of the repository to apply rulset to.
                      Name of the repository to apply rulset to.
                    type: string
                  rules:
                    description: |-
                      (Block List, Min: 1, Max: 1) Rules within the ruleset. (see below for nested schema)
                      Rules within the ruleset.
                    items:
                      properties:
                        branchNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with tag_name_pattern as it only applied to rulesets with target branch. (see below for nested schema)
                            Parameters to be used for the branch_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `tag_name_pattern` as it only applies to rulesets with target `branch`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitAuthorEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_author_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        commitMessagePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the commit_message_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        committerEmailPattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. (see below for nested schema)
                            Parameters to be used for the committer_email_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        creation:
                          description: |-
                            (Boolean) Only allow users with bypass permission to create matching refs.
                            Only allow users with bypass permission to create matching refs.
                          type: boolean
                        deletion:
                          description: |-
                            (Boolean) Only allow users with bypass permissions to delete matching refs.
                            Only allow users with bypass permissions to delete matching refs.
                          type: boolean
                        nonFastForward:
                          description: |-
                            (Boolean) Prevent users with push access from force pushing to branches.
                            Prevent users with push access from force pushing to branches.
                          type: boolean
                        pullRequest:
                          description: |-
                            (Block List, Max: 1) Require all commits be made to a non-target branch and submitted via a pull request before they can be merged. (see below for nested schema)
                            Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
                          items:
                            properties:
                              dismissStaleReviewsOnPush:
                                description: |-
                                  (Boolean) New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to false.
                                  New, reviewable commits pushed will dismiss previous pull request review approvals. Defaults to `false`.
                                type: boolean
                              requireCodeOwnerReview:
                                description: |-
                                  (Boolean) Require an approving review in pull requests that modify files that have a designated code owner. Defaults to false.
                                  Require an approving review in pull requests that modify files that have a designated code owner. Defaults to `false`.
                                type: boolean
                              requireLastPushApproval:
                                description: |-
                                  (Boolean) Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to false.
                                  Whether the most recent reviewable push must be approved by someone other than the person who pushed it. Defaults to `false`.
                                type: boolean
                              requiredApprovingReviewCount:
                                description: |-
                                  (Number) The number of approving reviews that are required before a pull request can be merged. Defaults to 0.
                                  The number of approving reviews that are required before a pull request can be merged. Defaults to `0`.
                                format: int64
                                type: integer
                              requiredReviewThreadResolution:
                                description: |-
                                  (Boolean) All conversations on code must be resolved before a pull request can be merged. Defaults to false.
                                  All conversations on code must be resolved before a pull request can be merged. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        requiredDeployments:
                          description: |-
                            (Block List, Max: 1) Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule. (see below for nested schema)
                            Choose which environments must be successfully deployed to before branches can be merged into a branch that matches this rule.
                          items:
                            properties:
                              requiredDeploymentEnvironments:
                                description: |-
                                  (List of String) The environments that must be successfully deployed to before branches can be merged.
                                  The environments that must be successfully deployed to before branches can be merged.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        requiredLinearHistory:
                          description: |-
                            (Boolean) Prevent merge commits from being pushed to matching branches.
                            Prevent merge commits from being pushed to matching branches.
                          type: boolean
                        requiredSignatures:
                          description: |-
                            (Boolean) Commits pushed to matching branches must have verified signatures.
                            Commits pushed to matching branches must have verified signatures.
                          type: boolean
                        requiredStatusChecks:
                          description: |-
                            (Block List, Max: 1) Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed. (see below for nested schema)
                            Choose which status checks must pass before branches can be merged into a branch that matches this rule. When enabled, commits must first be pushed to another branch, then merged or pushed directly to a branch that matches this rule after status checks have passed.
                          items:
                            properties:
                              requiredCheck:
                                description: |-
                                  (Block Set, Min: 1) Status checks that are required. Several can be defined. (see below for nested schema)
                                  Status checks that are required. Several can be defined.
                                items:
                                  properties:
                                    context:
                                      description: |-
                                        (String) The status check context name that must be present on the commit.
                                        The status check context name that must be present on the commit.
                                      type: string
                                    integrationId:
                                      description: |-
                                        (Number) The optional integration ID that this status check must originate from.
                                        The optional integration ID that this status check must originate from.
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                              strictRequiredStatusChecksPolicy:
                                description: |-
                                  (Boolean) Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to false.
                                  Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled. Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        tagNamePattern:
                          description: |-
                            (Block List, Max: 1) Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with branch_name_pattern as it only applied to rulesets with target tag. (see below for nested schema)
                            Parameters to be used for the tag_name_pattern rule. This rule only applies to repositories within an enterprise, it cannot be applied to repositories owned by individuals or regular organizations. Conflicts with `branch_name_pattern` as it only applies to rulesets with target `tag`.
                          items:
                            properties:
                              name:
                                description: |-
                                  (String) How this rule will appear to users.
                                  How this rule will appear to users.
                                type: string
                              negate:
                                description: |-
                                  (Boolean) If true, the rule will fail if the pattern matches.
                                  If true, the rule will fail if the pattern matches.
                                type: boolean
                              operator:
                                description: |-
                                  (String) The operator to use for matching. Can be one of: starts_with, ends_with, contains, regex.
                                  The operator to use for matching. Can be one of: `starts_with`, `ends_with`, `contains`, `regex`.
                                type: string
                              pattern:
                                description: |-
                                  (String) The pattern to match with.
                                  The pattern to match with.
                                type: string
                            type: object
                          type: array
                        update:
                          description: |-
                            (Boolean) Only allow users with bypass permission to update matching refs.
                            Only allow users with bypass permission to update matching refs.
                          type: boolean
                        updateAllowsFetchAndMerge:
                          description: |-
                            (Boolean) Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires update to be set to true. Note: behaviour is affected by a known bug on the GitHub side which may cause issues when using this parameter.
                            Branch can pull changes from its upstream repository. This is only applicable to forked repositories. Requires `update` to be set to `true`.
                          type: boolean
                      type: object
                    type: array
                  rulesetId:
                    description: |-
                      (Number) GitHub ID for the ruleset.
                      GitHub ID for the ruleset.
                    format: int64
                    type: integer
                  target:
                    description: |-
                      (String) Possible values are branch and tag.
                      Possible values are `branch` and `tag`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: repositorywebhooks.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: RepositoryWebhook
    listKind: RepositoryWebhookList
    plural: repositorywebhooks
    singular: repositorywebhook
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RepositoryWebhook is the Schema for the RepositoryWebhooks API.
          Creates and manages repository webhooks within GitHub organizations or personal
          accounts
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RepositoryWebhookSpec defines the desired state of RepositoryWebhook
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  active:
                    description: |-
                      Indicate if the webhook should receive events. Defaults to true.
                      Indicate if the webhook should receive events. Defaults to 'true'.
                    type: boolean
                  configuration:
                    description: |-
                      Configuration block for the webhook. Detailed below.
                      Configuration for the webhook.
                    items:
                      properties:
                        contentType:
                          description: |-
                            The content type for the payload. Valid values are either form or json.
                            The content type for the payload. Valid values are either 'form' or 'json'.
                          type: string
                        insecureSsl:
                          description: |-
                            Insecure SSL boolean toggle. Defaults to false.
                            Insecure SSL boolean toggle. Defaults to 'false'.
                          type: boolean
                        secretSecretRef:
                          description: |-
                            The shared secret for the webhook. See API documentation.
                            The shared secret for the webhook
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        urlSecretRef:
                          description: |-
                            The URL of the webhook.
                            The URL of the webhook.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  events:
                    description: |-
                      A list of events which should trigger the webhook. See a list of available events.
                      A list of events which should trigger the webhook
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  repository:
                    description: |-
                      The repository of the webhook.
                      The repository of the webhook.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  active:
                    description: |-
                      Indicate if the webhook should receive events. Defaults to true.
                      Indicate if the webhook should receive events. Defaults to 'true'.
                    type: boolean
                  configuration:
                    description: |-
                      Configuration block for the webhook. Detailed below.
                      Configuration for the webhook.
                    items:
                      properties:
                        contentType:
                          description: |-
                            The content type for the payload. Valid values are either form or json.
                            The content type for the payload. Valid values are either 'form' or 'json'.
                          type: string
                        insecureSsl:
                          description: |-
                            Insecure SSL boolean toggle. Defaults to false.
                            Insecure SSL boolean toggle. Defaults to 'false'.
                          type: boolean
                        secretSecretRef:
                          description: |-
                            The shared secret for the webhook. See API documentation.
                            The shared secret for the webhook
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        urlSecretRef:
                          description: |-
                            The URL of the webhook.
                            The URL of the webhook.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      required:
                      - urlSecretRef
                      type: object
                    type: array
                  events:
                    description: |-
                      A list of events which should trigger the webhook. See a list of available events.
                      A list of events which should trigger the webhook
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  repository:
                    description: |-
                      The repository of the webhook.
                      The repository of the webhook.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryWebhookStatus defines the observed state of RepositoryWebhook.
            properties:
              atProvider:
                properties:
                  active:
                    description: |-
                      Indicate if the webhook should receive events. Defaults to true.
                      Indicate if the webhook should receive events. Defaults to 'true'.
                    type: boolean
                  configuration:
                    description: |-
                      Configuration block for the webhook. Detailed below.
                      Configuration for the webhook.
                    items:
                      properties:
                        contentType:
                          description: |-
                            The content type for the payload. Valid values are either form or json.
                            The content type for the payload. Valid values are either 'form' or 'json'.
                          type: string
                        insecureSsl:
                          description: |-
                            Insecure SSL boolean toggle. Defaults to false.
                            Insecure SSL boolean toggle. Defaults to 'false'.
                          type: boolean
                      type: object
                    type: array
                  etag:
                    type: string
                  events:
                    description: |-
                      A list of events which should trigger the webhook. See a list of available events.
                      A list of events which should trigger the webhook
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  id:
                    type: string
                  repository:
                    description: |-
                      The repository of the webhook.
                      The repository of the webhook.
                    type: string
                  url:
                    description: |-
                      URL of the webhook.  This is a sensitive attribute because it may include basic auth credentials.
                      Configuration block for the webhook
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: tagprotections.repo.github.upbound.io
spec:
  group: repo.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TagProtection
    listKind: TagProtectionList
    plural: tagprotections
    singular: tagprotection
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TagProtection is the Schema for the TagProtections API. Creates
          and manages repository tag protection within GitHub organizations or personal
          accounts
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TagProtectionSpec defines the desired state of TagProtection
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  pattern:
                    description: |-
                      The pattern of the tag to protect.
                      The pattern of the tag to protect.
                    type: string
                  repository:
                    description: |-
                      Name of the repository to add the tag protection to.
                      Name of the repository to add the tag protection to.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  pattern:
                    description: |-
                      The pattern of the tag to protect.
                      The pattern of the tag to protect.
                    type: string
                  repository:
                    description: |-
                      Name of the repository to add the tag protection to.
                      Name of the repository to add the tag protection to.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TagProtectionStatus defines the observed state of TagProtection.
            properties:
              atProvider:
                properties:
                  id:
                    description: The ID of the tag protection.
                    type: string
                  pattern:
                    description: |-
                      The pattern of the tag to protect.
                      The pattern of the tag to protect.
                    type: string
                  repository:
                    description: |-
                      Name of the repository to add the tag protection to.
                      Name of the repository to add the tag protection to.
                    type: string
                  tagProtectionId:
                    description: |-
                      The ID of the tag protection.
                      The ID of the tag protection.
                    format: int64
                    type: integer
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: emugroupmappings.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: EmuGroupMapping
    listKind: EmuGroupMappingList
    plural: emugroupmappings
    singular: emugroupmapping
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EmuGroupMapping is the Schema for the EmuGroupMappings API. Manages
          mappings between external groups for enterprise managed users.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EmuGroupMappingSpec defines the desired state of EmuGroupMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  groupId:
                    description: |-
                      Integer corresponding to the external group ID to be linked
                      Integer corresponding to the external group ID to be linked.
                    format: int64
                    type: integer
                  teamSlug:
                    description: |-
                      Slug of the GitHub team
                      Slug of the GitHub team.
                    type: string
                  teamSlugRef:
                    description: Reference to a Team in team to populate teamSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamSlugSelector:
                    description: Selector for a Team in team to populate teamSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  groupId:
                    description: |-
                      Integer corresponding to the external group ID to be linked
                      Integer corresponding to the external group ID to be linked.
                    format: int64
                    type: integer
                  teamSlug:
                    description: |-
                      Slug of the GitHub team
                      Slug of the GitHub team.
                    type: string
                  teamSlugRef:
                    description: Reference to a Team in team to populate teamSlug.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamSlugSelector:
                    description: Selector for a Team in team to populate teamSlug.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: EmuGroupMappingStatus defines the observed state of EmuGroupMapping.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  groupId:
                    description: |-
                      Integer corresponding to the external group ID to be linked
                      Integer corresponding to the external group ID to be linked.
                    format: int64
                    type: integer
                  id:
                    type: string
                  teamSlug:
                    description: |-
                      Slug of the GitHub team
                      Slug of the GitHub team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: members.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Members
    listKind: MembersList
    plural: members
    singular: members
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Members is the Schema for the Memberss API. Provides an authoritative
          GitHub team members resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MembersSpec defines the desired state of Members
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  members:
                    description: |-
                      List of team members. See Members below for details.
                      List of team members.
                    items:
                      properties:
                        role:
                          description: |-
                            The role of the user within the team.
                            Must be one of member or maintainer. Defaults to member.
                            The role of the user within the team. Must be one of 'member' or 'maintainer'.
                          type: string
                        username:
                          description: |-
                            The user to add to the team.
                            The user to add to the team.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The team id or the team slug
                      The GitHub team id or slug
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  members:
                    description: |-
                      List of team members. See Members below for details.
                      List of team members.
                    items:
                      properties:
                        role:
                          description: |-
                            The role of the user within the team.
                            Must be one of member or maintainer. Defaults to member.
                            The role of the user within the team. Must be one of 'member' or 'maintainer'.
                          type: string
                        username:
                          description: |-
                            The user to add to the team.
                            The user to add to the team.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The team id or the team slug
                      The GitHub team id or slug
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MembersStatus defines the observed state of Members.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  members:
                    description: |-
                      List of team members. See Members below for details.
                      List of team members.
                    items:
                      properties:
                        role:
                          description: |-
                            The role of the user within the team.
                            Must be one of member or maintainer. Defaults to member.
                            The role of the user within the team. Must be one of 'member' or 'maintainer'.
                          type: string
                        username:
                          description: |-
                            The user to add to the team.
                            The user to add to the team.
                          type: string
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The team id or the team slug
                      The GitHub team id or slug
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: teams.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Team
    listKind: TeamList
    plural: teams
    singular: team
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Team is the Schema for the Teams API. Provides a GitHub team
          resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSpec defines the desired state of Team
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  createDefaultMaintainer:
                    description: |-
                      Adds a default maintainer to the team. Defaults to false and adds the creating user to the team when true.
                      Adds a default maintainer to the team. Adds the creating user to the team when 'true'.
                    type: boolean
                  description:
                    description: |-
                      A description of the team.
                      A description of the team.
                    type: string
                  ldapDn:
                    description: |-
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                    type: string
                  name:
                    description: |-
                      The name of the team.
                      The name of the team.
                    type: string
                  parentTeamId:
                    description: |-
                      The ID or slug of the parent team, if this is a nested team.
                      The ID or slug of the parent team, if this is a nested team.
                    type: string
                  parentTeamReadId:
                    description: |-
                      The ID of the created team.
                      The id of the parent team read in Github.
                    type: string
                  parentTeamReadSlug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The id of the parent team read in Github.
                    type: string
                  privacy:
                    description: |-
                      The level of privacy for the team. Must be one of secret or closed.
                      Defaults to secret.
                      The level of privacy for the team. Must be one of 'secret' or 'closed'.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  createDefaultMaintainer:
                    description: |-
                      Adds a default maintainer to the team. Defaults to false and adds the creating user to the team when true.
                      Adds a default maintainer to the team. Adds the creating user to the team when 'true'.
                    type: boolean
                  description:
                    description: |-
                      A description of the team.
                      A description of the team.
                    type: string
                  ldapDn:
                    description: |-
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                    type: string
                  name:
                    description: |-
                      The name of the team.
                      The name of the team.
                    type: string
                  parentTeamId:
                    description: |-
                      The ID or slug of the parent team, if this is a nested team.
                      The ID or slug of the parent team, if this is a nested team.
                    type: string
                  parentTeamReadId:
                    description: |-
                      The ID of the created team.
                      The id of the parent team read in Github.
                    type: string
                  parentTeamReadSlug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The id of the parent team read in Github.
                    type: string
                  privacy:
                    description: |-
                      The level of privacy for the team. Must be one of secret or closed.
                      Defaults to secret.
                      The level of privacy for the team. Must be one of 'secret' or 'closed'.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamStatus defines the observed state of Team.
            properties:
              atProvider:
                properties:
                  createDefaultMaintainer:
                    description: |-
                      Adds a default maintainer to the team. Defaults to false and adds the creating user to the team when true.
                      Adds a default maintainer to the team. Adds the creating user to the team when 'true'.
                    type: boolean
                  description:
                    description: |-
                      A description of the team.
                      A description of the team.
                    type: string
                  etag:
                    type: string
                  id:
                    description: The ID of the created team.
                    type: string
                  ldapDn:
                    description: |-
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                      The LDAP Distinguished Name of the group where membership will be synchronized. Only available in GitHub Enterprise Server.
                    type: string
                  membersCount:
                    format: int64
                    type: integer
                  name:
                    description: |-
                      The name of the team.
                      The name of the team.
                    type: string
                  nodeId:
                    description: |-
                      The Node ID of the created team.
                      The Node ID of the created team.
                    type: string
                  parentTeamId:
                    description: |-
                      The ID or slug of the parent team, if this is a nested team.
                      The ID or slug of the parent team, if this is a nested team.
                    type: string
                  parentTeamReadId:
                    description: |-
                      The ID of the created team.
                      The id of the parent team read in Github.
                    type: string
                  parentTeamReadSlug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The id of the parent team read in Github.
                    type: string
                  privacy:
                    description: |-
                      The level of privacy for the team. Must be one of secret or closed.
                      Defaults to secret.
                      The level of privacy for the team. Must be one of 'secret' or 'closed'.
                    type: string
                  slug:
                    description: |-
                      The slug of the created team, which may or may not differ from name,
                      depending on whether name contains "URL-unsafe" characters.
                      Useful when referencing the team in github_branch_protection.
                      The slug of the created team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: teammemberships.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamMembership
    listKind: TeamMembershipList
    plural: teammemberships
    singular: teammembership
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamMembership is the Schema for the TeamMemberships API. Provides
          a GitHub team membership resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamMembershipSpec defines the desired state of TeamMembership
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  role:
                    description: |-
                      The role of the user within the team.
                      Must be one of member or maintainer. Defaults to member.
                      The role of the user within the team. Must be one of 'member' or 'maintainer'.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  username:
                    description: |-
                      The user to add to the team.
                      The user to add to the team.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  role:
                    description: |-
                      The role of the user within the team.
                      Must be one of member or maintainer. Defaults to member.
                      The role of the user within the team. Must be one of 'member' or 'maintainer'.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  username:
                    description: |-
                      The user to add to the team.
                      The user to add to the team.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamMembershipStatus defines the observed state of TeamMembership.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  role:
                    description: |-
                      The role of the user within the team.
                      Must be one of member or maintainer. Defaults to member.
                      The role of the user within the team. Must be one of 'member' or 'maintainer'.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  username:
                    description: |-
                      The user to add to the team.
                      The user to add to the team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: teamrepositories.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamRepository
    listKind: TeamRepositoryList
    plural: teamrepositories
    singular: teamrepository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamRepository is the Schema for the TeamRepositorys API. Manages
          the associations between teams and repositories.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamRepositorySpec defines the desired state of TeamRepository
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  permission:
                    description: |-
                      The permissions of team members regarding the repository.
                      Must be one of pull, triage, push, maintain, admin or the name of an existing custom repository role within the organisation. Defaults to pull.
                      The permissions of team members regarding the repository. Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.
                    type: string
                  repository:
                    description: |-
                      The repository to add to the team.
                      The repository to add to the team.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      ID or slug of team
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  permission:
                    description: |-
                      The permissions of team members regarding the repository.
                      Must be one of pull, triage, push, maintain, admin or the name of an existing custom repository role within the organisation. Defaults to pull.
                      The permissions of team members regarding the repository. Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.
                    type: string
                  repository:
                    description: |-
                      The repository to add to the team.
                      The repository to add to the team.
                    type: string
                  repositoryRef:
                    description: Reference to a Repository in repo to populate repository.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  repositorySelector:
                    description: Selector for a Repository in repo to populate repository.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      ID or slug of team
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamRepositoryStatus defines the observed state of TeamRepository.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  id:
                    type: string
                  permission:
                    description: |-
                      The permissions of team members regarding the repository.
                      Must be one of pull, triage, push, maintain, admin or the name of an existing custom repository role within the organisation. Defaults to pull.
                      The permissions of team members regarding the repository. Must be one of 'pull', 'triage', 'push', 'maintain', 'admin' or the name of an existing custom repository role within the organisation.
                    type: string
                  repository:
                    description: |-
                      The repository to add to the team.
                      The repository to add to the team.
                    type: string
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      ID or slug of team
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: teamsettings.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamSettings
    listKind: TeamSettingsList
    plural: teamsettings
    singular: teamsettings
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamSettings is the Schema for the TeamSettingss API. Manages
          the team settings (in particular the request review delegation settings)
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSettingsSpec defines the desired state of TeamSettings
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  reviewRequestDelegation:
                    description: |-
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See GitHub's documentation for more configuration details.
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team.
                    items:
                      properties:
                        algorithm:
                          description: |-
                            The algorithm to use when assigning pull requests to team members. Supported values are ROUND_ROBIN and LOAD_BALANCE. Default value is ROUND_ROBIN
                            The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'.
                          type: string
                        memberCount:
                          description: |-
                            The number of team members to assign to a pull request
                            The number of team members to assign to a pull request.
                          format: int64
                          type: integer
                        notify:
                          description: |-
                            whether to notify the entire team when at least one member is also assigned to the pull request
                            whether to notify the entire team when at least one member is also assigned to the pull request.
                          type: boolean
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  reviewRequestDelegation:
                    description: |-
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See GitHub's documentation for more configuration details.
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team.
                    items:
                      properties:
                        algorithm:
                          description: |-
                            The algorithm to use when assigning pull requests to team members. Supported values are ROUND_ROBIN and LOAD_BALANCE. Default value is ROUND_ROBIN
                            The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'.
                          type: string
                        memberCount:
                          description: |-
                            The number of team members to assign to a pull request
                            The number of team members to assign to a pull request.
                          format: int64
                          type: integer
                        notify:
                          description: |-
                            whether to notify the entire team when at least one member is also assigned to the pull request
                            whether to notify the entire team when at least one member is also assigned to the pull request.
                          type: boolean
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamIdRef:
                    description: Reference to a Team in team to populate teamId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  teamIdSelector:
                    description: Selector for a Team in team to populate teamId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamSettingsStatus defines the observed state of TeamSettings.
            properties:
              atProvider:
                properties:
                  id:
                    type: string
                  reviewRequestDelegation:
                    description: |-
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team. See GitHub Review Request Delegation below for details. See GitHub's documentation for more configuration details.
                      The settings for delegating code reviews to individuals on behalf of the team. If this block is present, even without any fields, then review request delegation will be enabled for the team.
                    items:
                      properties:
                        algorithm:
                          description: |-
                            The algorithm to use when assigning pull requests to team members. Supported values are ROUND_ROBIN and LOAD_BALANCE. Default value is ROUND_ROBIN
                            The algorithm to use when assigning pull requests to team members. Supported values are 'ROUND_ROBIN' and 'LOAD_BALANCE'.
                          type: string
                        memberCount:
                          description: |-
                            The number of team members to assign to a pull request
                            The number of team members to assign to a pull request.
                          format: int64
                          type: integer
                        notify:
                          description: |-
                            whether to notify the entire team when at least one member is also assigned to the pull request
                            whether to notify the entire team when at least one member is also assigned to the pull request.
                          type: boolean
                      type: object
                    type: array
                  teamId:
                    description: |-
                      The GitHub team id or the GitHub team slug
                      The GitHub team id or the GitHub team slug.
                    type: string
                  teamSlug:
                    description: The slug of the Team within the Organization.
                    type: string
                  teamUid:
                    description: The unique ID of the Team on GitHub. Corresponds
                      to the ID of the 'github_team_settings' resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: teamsyncgroupmappings.team.github.upbound.io
spec:
  group: team.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: TeamSyncGroupMapping
    listKind: TeamSyncGroupMappingList
    plural: teamsyncgroupmappings
    singular: teamsyncgroupmapping
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TeamSyncGroupMapping is the Schema for the TeamSyncGroupMappings
          API. Creates and manages the connections between a team and its IdP group(s).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TeamSyncGroupMappingSpec defines the desired state of TeamSyncGroupMapping
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  group:
                    description: |-
                      An Array of GitHub Identity Provider Groups (or empty []).  Each group block consists of the fields documented below.
                      An Array of GitHub Identity Provider Groups (or empty []).
                    items:
                      properties:
                        groupDescription:
                          description: |-
                            The description of the IdP group.
                            The description of the IdP group.
                          type: string
                        groupId:
                          description: |-
                            The ID of the IdP group.
                            The ID of the IdP group.
                          type: string
                        groupName:
                          description: |-
                            The name of the IdP group.
                            The name of the IdP group.
                          type: string
                      type: object
                    type: array
                  teamSlug:
                    description: |-
                      Slug of the team
                      Slug of the team.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  group:
                    description: |-
                      An Array of GitHub Identity Provider Groups (or empty []).  Each group block consists of the fields documented below.
                      An Array of GitHub Identity Provider Groups (or empty []).
                    items:
                      properties:
                        groupDescription:
                          description: |-
                            The description of the IdP group.
                            The description of the IdP group.
                          type: string
                        groupId:
                          description: |-
                            The ID of the IdP group.
                            The ID of the IdP group.
                          type: string
                        groupName:
                          description: |-
                            The name of the IdP group.
                            The name of the IdP group.
                          type: string
                      type: object
                    type: array
                  teamSlug:
                    description: |-
                      Slug of the team
                      Slug of the team.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TeamSyncGroupMappingStatus defines the observed state of
              TeamSyncGroupMapping.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  group:
                    description: |-
                      An Array of GitHub Identity Provider Groups (or empty []).  Each group block consists of the fields documented below.
                      An Array of GitHub Identity Provider Groups (or empty []).
                    items:
                      properties:
                        groupDescription:
                          description: |-
                            The description of the IdP group.
                            The description of the IdP group.
                          type: string
                        groupId:
                          description: |-
                            The ID of the IdP group.
                            The ID of the IdP group.
                          type: string
                        groupName:
                          description: |-
                            The name of the IdP group.
                            The name of the IdP group.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  teamSlug:
                    description: |-
                      Slug of the team
                      Slug of the team.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: memberships.user.github.upbound.io
spec:
  group: user.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Membership
    listKind: MembershipList
    plural: memberships
    singular: membership
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Membership is the Schema for the Memberships API. Provides a
          GitHub membership resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MembershipSpec defines the desired state of Membership
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  downgradeOnDestroy:
                    description: |-
                      Defaults to false. If set to true,
                      when this resource is destroyed, the member will not be removed
                      from the organization. Instead, the member's role will be
                      downgraded to 'member'.
                      Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed. This is useful when wanting to downgrade admins while keeping them in the organization
                    type: boolean
                  role:
                    description: |-
                      The role of the user within the organization.
                      Must be one of member or admin. Defaults to member.
                      admin role represents the owner role available via GitHub UI.
                      The role of the user within the organization. Must be one of 'member' or 'admin'.
                    type: string
                  username:
                    description: |-
                      The user to add to the organization.
                      The user to add to the organization.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  downgradeOnDestroy:
                    description: |-
                      Defaults to false. If set to true,
                      when this resource is destroyed, the member will not be removed
                      from the organization. Instead, the member's role will be
                      downgraded to 'member'.
                      Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed. This is useful when wanting to downgrade admins while keeping them in the organization
                    type: boolean
                  role:
                    description: |-
                      The role of the user within the organization.
                      Must be one of member or admin. Defaults to member.
                      admin role represents the owner role available via GitHub UI.
                      The role of the user within the organization. Must be one of 'member' or 'admin'.
                    type: string
                  username:
                    description: |-
                      The user to add to the organization.
                      The user to add to the organization.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MembershipStatus defines the observed state of Membership.
            properties:
              atProvider:
                properties:
                  downgradeOnDestroy:
                    description: |-
                      Defaults to false. If set to true,
                      when this resource is destroyed, the member will not be removed
                      from the organization. Instead, the member's role will be
                      downgraded to 'member'.
                      Instead of removing the member from the org, you can choose to downgrade their membership to 'member' when this resource is destroyed. This is useful when wanting to downgrade admins while keeping them in the organization
                    type: boolean
                  etag:
                    type: string
                  id:
                    type: string
                  role:
                    description: |-
                      The role of the user within the organization.
                      Must be one of member or admin. Defaults to member.
                      admin role represents the owner role available via GitHub UI.
                      The role of the user within the organization. Must be one of 'member' or 'admin'.
                    type: string
                  username:
                    description: |-
                      The user to add to the organization.
                      The user to add to the organization.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions:
  - v1alpha1

---
