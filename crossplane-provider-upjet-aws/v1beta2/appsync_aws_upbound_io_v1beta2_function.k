"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Function:
    r"""
    Function is the Schema for the Functions API. Provides an AppSync Function.

    Attributes
    ----------
    apiVersion : str, default is "appsync.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Function", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsyncAwsUpboundIoV1beta2FunctionSpec, default is Undefined, required
        spec
    status : AppsyncAwsUpboundIoV1beta2FunctionStatus, default is Undefined, optional
        status
    """


    apiVersion: "appsync.aws.upbound.io/v1beta2" = "appsync.aws.upbound.io/v1beta2"

    kind: "Function" = "Function"

    metadata?: v1.ObjectMeta

    spec: AppsyncAwsUpboundIoV1beta2FunctionSpec

    status?: AppsyncAwsUpboundIoV1beta2FunctionStatus


schema AppsyncAwsUpboundIoV1beta2FunctionSpec:
    r"""
    FunctionSpec defines the desired state of Function

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppsyncAwsUpboundIoV1beta2FunctionSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppsyncAwsUpboundIoV1beta2FunctionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppsyncAwsUpboundIoV1beta2FunctionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppsyncAwsUpboundIoV1beta2FunctionSpecForProvider

    initProvider?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecProviderConfigRef

    publishConnectionDetailsTo?: AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecWriteConnectionSecretToRef


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProvider:
    r"""
    appsync aws upbound io v1beta2 function spec for provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        ID of the associated AppSync API.
    apiIdRef : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    code : str, default is Undefined, optional
        The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
    dataSource : str, default is Undefined, optional
        Function data source name.
    dataSourceRef : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceRef, default is Undefined, optional
        data source ref
    dataSourceSelector : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceSelector, default is Undefined, optional
        data source selector
    description : str, default is Undefined, optional
        Function description.
    functionVersion : str, default is Undefined, optional
        Version of the request mapping template. Currently the supported value is 2018-05-29. Does not apply when specifying code.
    maxBatchSize : float, default is Undefined, optional
        Maximum batching size for a resolver. Valid values are between 0 and 2000.
    name : str, default is Undefined, optional
        Function name. The function name does not have to be unique.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requestMappingTemplate : str, default is Undefined, optional
        Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
    responseMappingTemplate : str, default is Undefined, optional
        Function response mapping template.
    runtime : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderRuntime, default is Undefined, optional
        runtime
    syncConfig : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderSyncConfig, default is Undefined, optional
        sync config
    """


    apiId?: str

    apiIdRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDRef

    apiIdSelector?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDSelector

    code?: str

    dataSource?: str

    dataSourceRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceRef

    dataSourceSelector?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceSelector

    description?: str

    functionVersion?: str

    maxBatchSize?: float

    name?: str

    region: str

    requestMappingTemplate?: str

    responseMappingTemplate?: str

    runtime?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderRuntime

    syncConfig?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderSyncConfig


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDRef:
    r"""
    Reference to a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDRefPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDSelector:
    r"""
    Selector for a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceRef:
    r"""
    Reference to a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceRefPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceSelector:
    r"""
    Selector for a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderDataSourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderRuntime:
    r"""
    Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See runtime Block for details.

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
    runtimeVersion : str, default is Undefined, optional
        The version of the runtime to use. Currently, the only allowed version is 1.0.0.
    """


    name?: str

    runtimeVersion?: str


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderSyncConfig:
    r"""
    Describes a Sync configuration for a resolver. See sync_config Block for details.

    Attributes
    ----------
    conflictDetection : str, default is Undefined, optional
        Conflict Detection strategy to use. Valid values are NONE and VERSION.
    conflictHandler : str, default is Undefined, optional
        Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.
    lambdaConflictHandlerConfig : AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderSyncConfigLambdaConflictHandlerConfig, default is Undefined, optional
        lambda conflict handler config
    """


    conflictDetection?: str

    conflictHandler?: str

    lambdaConflictHandlerConfig?: AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderSyncConfigLambdaConflictHandlerConfig


schema AppsyncAwsUpboundIoV1beta2FunctionSpecForProviderSyncConfigLambdaConflictHandlerConfig:
    r"""
    Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See lambda_conflict_handler_config Block for details.

    Attributes
    ----------
    lambdaConflictHandlerArn : str, default is Undefined, optional
        ARN for the Lambda function to use as the Conflict Handler.
    """


    lambdaConflictHandlerArn?: str


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        ID of the associated AppSync API.
    apiIdRef : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    code : str, default is Undefined, optional
        The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
    dataSource : str, default is Undefined, optional
        Function data source name.
    dataSourceRef : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceRef, default is Undefined, optional
        data source ref
    dataSourceSelector : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceSelector, default is Undefined, optional
        data source selector
    description : str, default is Undefined, optional
        Function description.
    functionVersion : str, default is Undefined, optional
        Version of the request mapping template. Currently the supported value is 2018-05-29. Does not apply when specifying code.
    maxBatchSize : float, default is Undefined, optional
        Maximum batching size for a resolver. Valid values are between 0 and 2000.
    name : str, default is Undefined, optional
        Function name. The function name does not have to be unique.
    requestMappingTemplate : str, default is Undefined, optional
        Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
    responseMappingTemplate : str, default is Undefined, optional
        Function response mapping template.
    runtime : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderRuntime, default is Undefined, optional
        runtime
    syncConfig : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderSyncConfig, default is Undefined, optional
        sync config
    """


    apiId?: str

    apiIdRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDRef

    apiIdSelector?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDSelector

    code?: str

    dataSource?: str

    dataSourceRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceRef

    dataSourceSelector?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceSelector

    description?: str

    functionVersion?: str

    maxBatchSize?: float

    name?: str

    requestMappingTemplate?: str

    responseMappingTemplate?: str

    runtime?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderRuntime

    syncConfig?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderSyncConfig


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDRef:
    r"""
    Reference to a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDRefPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDSelector:
    r"""
    Selector for a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceRef:
    r"""
    Reference to a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceRefPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceSelector:
    r"""
    Selector for a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderDataSourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderRuntime:
    r"""
    Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See runtime Block for details.

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
    runtimeVersion : str, default is Undefined, optional
        The version of the runtime to use. Currently, the only allowed version is 1.0.0.
    """


    name?: str

    runtimeVersion?: str


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderSyncConfig:
    r"""
    Describes a Sync configuration for a resolver. See sync_config Block for details.

    Attributes
    ----------
    conflictDetection : str, default is Undefined, optional
        Conflict Detection strategy to use. Valid values are NONE and VERSION.
    conflictHandler : str, default is Undefined, optional
        Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.
    lambdaConflictHandlerConfig : AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderSyncConfigLambdaConflictHandlerConfig, default is Undefined, optional
        lambda conflict handler config
    """


    conflictDetection?: str

    conflictHandler?: str

    lambdaConflictHandlerConfig?: AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderSyncConfigLambdaConflictHandlerConfig


schema AppsyncAwsUpboundIoV1beta2FunctionSpecInitProviderSyncConfigLambdaConflictHandlerConfig:
    r"""
    Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See lambda_conflict_handler_config Block for details.

    Attributes
    ----------
    lambdaConflictHandlerArn : str, default is Undefined, optional
        ARN for the Lambda function to use as the Conflict Handler.
    """


    lambdaConflictHandlerArn?: str


schema AppsyncAwsUpboundIoV1beta2FunctionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecProviderConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToConfigRef

    metadata?: AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToMetadata

    name: str


schema AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2FunctionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppsyncAwsUpboundIoV1beta2FunctionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppsyncAwsUpboundIoV1beta2FunctionStatus:
    r"""
    FunctionStatus defines the observed state of Function.

    Attributes
    ----------
    atProvider : AppsyncAwsUpboundIoV1beta2FunctionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppsyncAwsUpboundIoV1beta2FunctionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppsyncAwsUpboundIoV1beta2FunctionStatusAtProvider

    conditions?: [AppsyncAwsUpboundIoV1beta2FunctionStatusConditionsItems0]

    observedGeneration?: int


schema AppsyncAwsUpboundIoV1beta2FunctionStatusAtProvider:
    r"""
    appsync aws upbound io v1beta2 function status at provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        ID of the associated AppSync API.
    arn : str, default is Undefined, optional
        ARN of the Function object.
    code : str, default is Undefined, optional
        The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
    dataSource : str, default is Undefined, optional
        Function data source name.
    description : str, default is Undefined, optional
        Function description.
    functionId : str, default is Undefined, optional
        Unique ID representing the Function object.
    functionVersion : str, default is Undefined, optional
        Version of the request mapping template. Currently the supported value is 2018-05-29. Does not apply when specifying code.
    id : str, default is Undefined, optional
        API Function ID (Formatted as ApiId-FunctionId)
    maxBatchSize : float, default is Undefined, optional
        Maximum batching size for a resolver. Valid values are between 0 and 2000.
    name : str, default is Undefined, optional
        Function name. The function name does not have to be unique.
    requestMappingTemplate : str, default is Undefined, optional
        Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
    responseMappingTemplate : str, default is Undefined, optional
        Function response mapping template.
    runtime : AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderRuntime, default is Undefined, optional
        runtime
    syncConfig : AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderSyncConfig, default is Undefined, optional
        sync config
    """


    apiId?: str

    arn?: str

    code?: str

    dataSource?: str

    description?: str

    functionId?: str

    functionVersion?: str

    id?: str

    maxBatchSize?: float

    name?: str

    requestMappingTemplate?: str

    responseMappingTemplate?: str

    runtime?: AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderRuntime

    syncConfig?: AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderSyncConfig


schema AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderRuntime:
    r"""
    Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See runtime Block for details.

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
    runtimeVersion : str, default is Undefined, optional
        The version of the runtime to use. Currently, the only allowed version is 1.0.0.
    """


    name?: str

    runtimeVersion?: str


schema AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderSyncConfig:
    r"""
    Describes a Sync configuration for a resolver. See sync_config Block for details.

    Attributes
    ----------
    conflictDetection : str, default is Undefined, optional
        Conflict Detection strategy to use. Valid values are NONE and VERSION.
    conflictHandler : str, default is Undefined, optional
        Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.
    lambdaConflictHandlerConfig : AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderSyncConfigLambdaConflictHandlerConfig, default is Undefined, optional
        lambda conflict handler config
    """


    conflictDetection?: str

    conflictHandler?: str

    lambdaConflictHandlerConfig?: AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderSyncConfigLambdaConflictHandlerConfig


schema AppsyncAwsUpboundIoV1beta2FunctionStatusAtProviderSyncConfigLambdaConflictHandlerConfig:
    r"""
    Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See lambda_conflict_handler_config Block for details.

    Attributes
    ----------
    lambdaConflictHandlerArn : str, default is Undefined, optional
        ARN for the Lambda function to use as the Conflict Handler.
    """


    lambdaConflictHandlerArn?: str


schema AppsyncAwsUpboundIoV1beta2FunctionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


