"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SpotInstanceRequest:
    r"""
    SpotInstanceRequest is the Schema for the SpotInstanceRequests API. Provides a Spot Instance Request resource.

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SpotInstanceRequest", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta2" = "ec2.aws.upbound.io/v1beta2"

    kind: "SpotInstanceRequest" = "SpotInstanceRequest"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpec

    status?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatus


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpec:
    r"""
    SpotInstanceRequestSpec defines the desired state of SpotInstanceRequest

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProvider:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider

    Attributes
    ----------
    ami : str, default is Undefined, optional
        ami
    associatePublicIpAddress : bool, default is Undefined, optional
        associate public Ip address
    availabilityZone : str, default is Undefined, optional
        availability zone
    blockDurationMinutes : float, default is Undefined, optional
        The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
        The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
        Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
    capacityReservationSpecification : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuCoreCount : float, default is Undefined, optional
        cpu core count
    cpuOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCPUOptions, default is Undefined, optional
        cpu options
    cpuThreadsPerCore : float, default is Undefined, optional
        cpu threads per core
    creditSpecification : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCreditSpecification, default is Undefined, optional
        credit specification
    disableApiStop : bool, default is Undefined, optional
        disable Api stop
    disableApiTermination : bool, default is Undefined, optional
        disable Api termination
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEbsBlockDeviceItems0], default is Undefined, optional
        ebs block device
    ebsOptimized : bool, default is Undefined, optional
        ebs optimized
    enablePrimaryIpv6 : bool, default is Undefined, optional
        enable primary Ipv6
    enclaveOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEnclaveOptions, default is Undefined, optional
        enclave options
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        ephemeral block device
    getPasswordData : bool, default is Undefined, optional
        get password data
    hibernation : bool, default is Undefined, optional
        hibernation
    hostId : str, default is Undefined, optional
        The Spot Instance Request ID.
    hostResourceGroupArn : str, default is Undefined, optional
        host resource group arn
    iamInstanceProfile : str, default is Undefined, optional
        iam instance profile
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        instance initiated shutdown behavior
    instanceInterruptionBehavior : str, default is Undefined, optional
        Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
    instanceType : str, default is Undefined, optional
        instance type
    ipv6AddressCount : float, default is Undefined, optional
        ipv6 address count
    ipv6Addresses : [str], default is Undefined, optional
        ipv6 addresses
    keyName : str, default is Undefined, optional
        key name
    launchGroup : str, default is Undefined, optional
        A launch group is a group of spot instances that launch together and terminate together.
        If left empty instances are launched and terminated individually.
    launchTemplate : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderLaunchTemplate, default is Undefined, optional
        launch template
    maintenanceOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderMaintenanceOptions, default is Undefined, optional
        maintenance options
    metadataOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : bool, default is Undefined, optional
        monitoring
    networkInterface : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderNetworkInterfaceItems0], default is Undefined, optional
        network interface
    placementGroup : str, default is Undefined, optional
        placement group
    placementPartitionNumber : float, default is Undefined, optional
        placement partition number
    privateDnsNameOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderPrivateDNSNameOptions, default is Undefined, optional
        private Dns name options
    privateIp : str, default is Undefined, optional
        The private IP address assigned to the instance
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rootBlockDevice : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderRootBlockDevice, default is Undefined, optional
        root block device
    secondaryPrivateIps : [str], default is Undefined, optional
        secondary private ips
    securityGroups : [str], default is Undefined, optional
        security groups
    sourceDestCheck : bool, default is Undefined, optional
        source dest check
    spotPrice : str, default is Undefined, optional
        The maximum price to request on the spot market.
    spotType : str, default is Undefined, optional
        If set to one-time, after
        the instance is terminated, the spot request will be closed.
    subnetId : str, default is Undefined, optional
        The Spot Instance Request ID.
    subnetIdRef : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tenancy : str, default is Undefined, optional
        tenancy
    userData : str, default is Undefined, optional
        user data
    userDataBase64 : str, default is Undefined, optional
        user data base64
    userDataReplaceOnChange : bool, default is Undefined, optional
        user data replace on change
    validFrom : str, default is Undefined, optional
        The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    validUntil : str, default is Undefined, optional
        The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
    volumeTags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        vpc security group ids
    waitForFulfillment : bool, default is Undefined, optional
        wait for fulfillment
    """


    ami?: str

    associatePublicIpAddress?: bool

    availabilityZone?: str

    blockDurationMinutes?: float

    capacityReservationSpecification?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCapacityReservationSpecification

    cpuCoreCount?: float

    cpuOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCPUOptions

    cpuThreadsPerCore?: float

    creditSpecification?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCreditSpecification

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enablePrimaryIpv6?: bool

    enclaveOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEnclaveOptions

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEphemeralBlockDeviceItems0]

    getPasswordData?: bool

    hibernation?: bool

    hostId?: str

    hostResourceGroupArn?: str

    iamInstanceProfile?: str

    instanceInitiatedShutdownBehavior?: str

    instanceInterruptionBehavior?: str

    instanceType?: str

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    keyName?: str

    launchGroup?: str

    launchTemplate?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderLaunchTemplate

    maintenanceOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderMaintenanceOptions

    metadataOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderMetadataOptions

    monitoring?: bool

    networkInterface?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderNetworkInterfaceItems0]

    placementGroup?: str

    placementPartitionNumber?: float

    privateDnsNameOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderPrivateDNSNameOptions

    privateIp?: str

    region: str

    rootBlockDevice?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderRootBlockDevice

    secondaryPrivateIps?: [str]

    securityGroups?: [str]

    sourceDestCheck?: bool

    spotPrice?: str

    spotType?: str

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDSelector

    tags?: {str:str}

    tenancy?: str

    userData?: str

    userDataBase64?: str

    userDataReplaceOnChange?: bool

    validFrom?: str

    validUntil?: str

    volumeTags?: {str:str}

    vpcSecurityGroupIdRefs?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]

    waitForFulfillment?: bool


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCPUOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider CPU options

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        amd sev snp
    coreCount : float, default is Undefined, optional
        core count
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCapacityReservationSpecification:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider capacity reservation specification

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        capacity reservation preference
    capacityReservationTarget : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCapacityReservationSpecificationCapacityReservationTarget:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider capacity reservation specification capacity reservation target

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The Spot Instance Request ID.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        capacity reservation resource group arn
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderCreditSpecification:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider credit specification

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        cpu credits
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceName : str, default is Undefined, optional
        device name
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        iops
    kmsKeyId : str, default is Undefined, optional
        The Spot Instance Request ID.
    snapshotId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        throughput
    volumeSize : float, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEnclaveOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider enclave options

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        device name
    noDevice : bool, default is Undefined, optional
        no device
    virtualName : str, default is Undefined, optional
        virtual name
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderLaunchTemplate:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider launch template

    Attributes
    ----------
    id : str, default is Undefined, optional
        The Spot Instance Request ID.
    name : str, default is Undefined, optional
        name
    version : str, default is Undefined, optional
        version
    """


    id?: str

    name?: str

    version?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderMaintenanceOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider maintenance options

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        auto recovery
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderMetadataOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider metadata options

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        http endpoint
    httpProtocolIpv6 : str, default is Undefined, optional
        http protocol Ipv6
    httpPutResponseHopLimit : float, default is Undefined, optional
        http put response hop limit
    httpTokens : str, default is Undefined, optional
        http tokens
    instanceMetadataTags : str, default is Undefined, optional
        Key-value map of resource tags.
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderNetworkInterfaceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider network interface items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceIndex : float, default is Undefined, optional
        device index
    networkCardIndex : float, default is Undefined, optional
        network card index
    networkInterfaceId : str, default is Undefined, optional
        The Spot Instance Request ID.
    """


    deleteOnTermination?: bool

    deviceIndex?: float

    networkCardIndex?: float

    networkInterfaceId?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderPrivateDNSNameOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider private DNS name options

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        enable resource name Dns a record
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        enable resource name Dns aaaa record
    hostnameType : str, default is Undefined, optional
        hostname type
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderRootBlockDevice:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec for provider root block device

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        iops
    kmsKeyId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        throughput
    volumeSize : float, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    ami : str, default is Undefined, optional
        ami
    associatePublicIpAddress : bool, default is Undefined, optional
        associate public Ip address
    availabilityZone : str, default is Undefined, optional
        availability zone
    blockDurationMinutes : float, default is Undefined, optional
        The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
        The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
        Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
    capacityReservationSpecification : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuCoreCount : float, default is Undefined, optional
        cpu core count
    cpuOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCPUOptions, default is Undefined, optional
        cpu options
    cpuThreadsPerCore : float, default is Undefined, optional
        cpu threads per core
    creditSpecification : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCreditSpecification, default is Undefined, optional
        credit specification
    disableApiStop : bool, default is Undefined, optional
        disable Api stop
    disableApiTermination : bool, default is Undefined, optional
        disable Api termination
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEbsBlockDeviceItems0], default is Undefined, optional
        ebs block device
    ebsOptimized : bool, default is Undefined, optional
        ebs optimized
    enablePrimaryIpv6 : bool, default is Undefined, optional
        enable primary Ipv6
    enclaveOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEnclaveOptions, default is Undefined, optional
        enclave options
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        ephemeral block device
    getPasswordData : bool, default is Undefined, optional
        get password data
    hibernation : bool, default is Undefined, optional
        hibernation
    hostId : str, default is Undefined, optional
        The Spot Instance Request ID.
    hostResourceGroupArn : str, default is Undefined, optional
        host resource group arn
    iamInstanceProfile : str, default is Undefined, optional
        iam instance profile
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        instance initiated shutdown behavior
    instanceInterruptionBehavior : str, default is Undefined, optional
        Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
    instanceType : str, default is Undefined, optional
        instance type
    ipv6AddressCount : float, default is Undefined, optional
        ipv6 address count
    ipv6Addresses : [str], default is Undefined, optional
        ipv6 addresses
    keyName : str, default is Undefined, optional
        key name
    launchGroup : str, default is Undefined, optional
        A launch group is a group of spot instances that launch together and terminate together.
        If left empty instances are launched and terminated individually.
    launchTemplate : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderLaunchTemplate, default is Undefined, optional
        launch template
    maintenanceOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderMaintenanceOptions, default is Undefined, optional
        maintenance options
    metadataOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : bool, default is Undefined, optional
        monitoring
    networkInterface : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderNetworkInterfaceItems0], default is Undefined, optional
        network interface
    placementGroup : str, default is Undefined, optional
        placement group
    placementPartitionNumber : float, default is Undefined, optional
        placement partition number
    privateDnsNameOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderPrivateDNSNameOptions, default is Undefined, optional
        private Dns name options
    privateIp : str, default is Undefined, optional
        The private IP address assigned to the instance
    rootBlockDevice : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderRootBlockDevice, default is Undefined, optional
        root block device
    secondaryPrivateIps : [str], default is Undefined, optional
        secondary private ips
    securityGroups : [str], default is Undefined, optional
        security groups
    sourceDestCheck : bool, default is Undefined, optional
        source dest check
    spotPrice : str, default is Undefined, optional
        The maximum price to request on the spot market.
    spotType : str, default is Undefined, optional
        If set to one-time, after
        the instance is terminated, the spot request will be closed.
    subnetId : str, default is Undefined, optional
        The Spot Instance Request ID.
    subnetIdRef : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tenancy : str, default is Undefined, optional
        tenancy
    userData : str, default is Undefined, optional
        user data
    userDataBase64 : str, default is Undefined, optional
        user data base64
    userDataReplaceOnChange : bool, default is Undefined, optional
        user data replace on change
    validFrom : str, default is Undefined, optional
        The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    validUntil : str, default is Undefined, optional
        The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
    volumeTags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        vpc security group ids
    waitForFulfillment : bool, default is Undefined, optional
        wait for fulfillment
    """


    ami?: str

    associatePublicIpAddress?: bool

    availabilityZone?: str

    blockDurationMinutes?: float

    capacityReservationSpecification?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCapacityReservationSpecification

    cpuCoreCount?: float

    cpuOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCPUOptions

    cpuThreadsPerCore?: float

    creditSpecification?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCreditSpecification

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enablePrimaryIpv6?: bool

    enclaveOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEnclaveOptions

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEphemeralBlockDeviceItems0]

    getPasswordData?: bool

    hibernation?: bool

    hostId?: str

    hostResourceGroupArn?: str

    iamInstanceProfile?: str

    instanceInitiatedShutdownBehavior?: str

    instanceInterruptionBehavior?: str

    instanceType?: str

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    keyName?: str

    launchGroup?: str

    launchTemplate?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderLaunchTemplate

    maintenanceOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderMaintenanceOptions

    metadataOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderMetadataOptions

    monitoring?: bool

    networkInterface?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderNetworkInterfaceItems0]

    placementGroup?: str

    placementPartitionNumber?: float

    privateDnsNameOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderPrivateDNSNameOptions

    privateIp?: str

    rootBlockDevice?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderRootBlockDevice

    secondaryPrivateIps?: [str]

    securityGroups?: [str]

    sourceDestCheck?: bool

    spotPrice?: str

    spotType?: str

    subnetId?: str

    subnetIdRef?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDRef

    subnetIdSelector?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDSelector

    tags?: {str:str}

    tenancy?: str

    userData?: str

    userDataBase64?: str

    userDataReplaceOnChange?: bool

    validFrom?: str

    validUntil?: str

    volumeTags?: {str:str}

    vpcSecurityGroupIdRefs?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]

    waitForFulfillment?: bool


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCPUOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider CPU options

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        amd sev snp
    coreCount : float, default is Undefined, optional
        core count
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCapacityReservationSpecification:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider capacity reservation specification

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        capacity reservation preference
    capacityReservationTarget : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCapacityReservationSpecificationCapacityReservationTarget:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider capacity reservation specification capacity reservation target

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The Spot Instance Request ID.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        capacity reservation resource group arn
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderCreditSpecification:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider credit specification

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        cpu credits
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceName : str, default is Undefined, optional
        device name
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        iops
    kmsKeyId : str, default is Undefined, optional
        The Spot Instance Request ID.
    snapshotId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        throughput
    volumeSize : float, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEnclaveOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider enclave options

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        device name
    noDevice : bool, default is Undefined, optional
        no device
    virtualName : str, default is Undefined, optional
        virtual name
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderLaunchTemplate:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider launch template

    Attributes
    ----------
    id : str, default is Undefined, optional
        The Spot Instance Request ID.
    name : str, default is Undefined, optional
        name
    version : str, default is Undefined, optional
        version
    """


    id?: str

    name?: str

    version?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderMaintenanceOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider maintenance options

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        auto recovery
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderMetadataOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider metadata options

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        http endpoint
    httpProtocolIpv6 : str, default is Undefined, optional
        http protocol Ipv6
    httpPutResponseHopLimit : float, default is Undefined, optional
        http put response hop limit
    httpTokens : str, default is Undefined, optional
        http tokens
    instanceMetadataTags : str, default is Undefined, optional
        Key-value map of resource tags.
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderNetworkInterfaceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider network interface items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceIndex : float, default is Undefined, optional
        device index
    networkCardIndex : float, default is Undefined, optional
        network card index
    networkInterfaceId : str, default is Undefined, optional
        The Spot Instance Request ID.
    """


    deleteOnTermination?: bool

    deviceIndex?: float

    networkCardIndex?: float

    networkInterfaceId?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderPrivateDNSNameOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider private DNS name options

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        enable resource name Dns a record
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        enable resource name Dns aaaa record
    hostnameType : str, default is Undefined, optional
        hostname type
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderRootBlockDevice:
    r"""
    ec2 aws upbound io v1beta2 spot instance request spec init provider root block device

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        iops
    kmsKeyId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        throughput
    volumeSize : float, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDRefPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatus:
    r"""
    SpotInstanceRequestStatus defines the observed state of SpotInstanceRequest.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider

    Attributes
    ----------
    ami : str, default is Undefined, optional
        ami
    arn : str, default is Undefined, optional
        arn
    associatePublicIpAddress : bool, default is Undefined, optional
        associate public Ip address
    availabilityZone : str, default is Undefined, optional
        availability zone
    blockDurationMinutes : float, default is Undefined, optional
        The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
        The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
        Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
    capacityReservationSpecification : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCapacityReservationSpecification, default is Undefined, optional
        capacity reservation specification
    cpuCoreCount : float, default is Undefined, optional
        cpu core count
    cpuOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCPUOptions, default is Undefined, optional
        cpu options
    cpuThreadsPerCore : float, default is Undefined, optional
        cpu threads per core
    creditSpecification : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCreditSpecification, default is Undefined, optional
        credit specification
    disableApiStop : bool, default is Undefined, optional
        disable Api stop
    disableApiTermination : bool, default is Undefined, optional
        disable Api termination
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEbsBlockDeviceItems0], default is Undefined, optional
        ebs block device
    ebsOptimized : bool, default is Undefined, optional
        ebs optimized
    enablePrimaryIpv6 : bool, default is Undefined, optional
        enable primary Ipv6
    enclaveOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEnclaveOptions, default is Undefined, optional
        enclave options
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        ephemeral block device
    getPasswordData : bool, default is Undefined, optional
        get password data
    hibernation : bool, default is Undefined, optional
        hibernation
    hostId : str, default is Undefined, optional
        The Spot Instance Request ID.
    hostResourceGroupArn : str, default is Undefined, optional
        host resource group arn
    iamInstanceProfile : str, default is Undefined, optional
        iam instance profile
    id : str, default is Undefined, optional
        The Spot Instance Request ID.
    instanceInitiatedShutdownBehavior : str, default is Undefined, optional
        instance initiated shutdown behavior
    instanceInterruptionBehavior : str, default is Undefined, optional
        Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
    instanceState : str, default is Undefined, optional
        instance state
    instanceType : str, default is Undefined, optional
        instance type
    ipv6AddressCount : float, default is Undefined, optional
        ipv6 address count
    ipv6Addresses : [str], default is Undefined, optional
        ipv6 addresses
    keyName : str, default is Undefined, optional
        key name
    launchGroup : str, default is Undefined, optional
        A launch group is a group of spot instances that launch together and terminate together.
        If left empty instances are launched and terminated individually.
    launchTemplate : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderLaunchTemplate, default is Undefined, optional
        launch template
    maintenanceOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderMaintenanceOptions, default is Undefined, optional
        maintenance options
    metadataOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderMetadataOptions, default is Undefined, optional
        metadata options
    monitoring : bool, default is Undefined, optional
        monitoring
    networkInterface : [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderNetworkInterfaceItems0], default is Undefined, optional
        network interface
    outpostArn : str, default is Undefined, optional
        outpost arn
    passwordData : str, default is Undefined, optional
        password data
    placementGroup : str, default is Undefined, optional
        placement group
    placementPartitionNumber : float, default is Undefined, optional
        placement partition number
    primaryNetworkInterfaceId : str, default is Undefined, optional
        The Spot Instance Request ID.
    privateDns : str, default is Undefined, optional
        The private DNS name assigned to the instance. Can only be
        used inside the Amazon EC2, and only available if you've enabled DNS hostnames
        for your VPC
    privateDnsNameOptions : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderPrivateDNSNameOptions, default is Undefined, optional
        private Dns name options
    privateIp : str, default is Undefined, optional
        The private IP address assigned to the instance
    publicDns : str, default is Undefined, optional
        The public DNS name assigned to the instance. For EC2-VPC, this
        is only available if you've enabled DNS hostnames for your VPC
    publicIp : str, default is Undefined, optional
        The public IP address assigned to the instance, if applicable.
    rootBlockDevice : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderRootBlockDevice, default is Undefined, optional
        root block device
    secondaryPrivateIps : [str], default is Undefined, optional
        secondary private ips
    securityGroups : [str], default is Undefined, optional
        security groups
    sourceDestCheck : bool, default is Undefined, optional
        source dest check
    spotBidStatus : str, default is Undefined, optional
        The current bid
        status
        of the Spot Instance Request.
    spotInstanceId : str, default is Undefined, optional
        The Instance ID (if any) that is currently fulfilling
        the Spot Instance request.
    spotPrice : str, default is Undefined, optional
        The maximum price to request on the spot market.
    spotRequestState : str, default is Undefined, optional
        The current request
        state
        of the Spot Instance Request.
    spotType : str, default is Undefined, optional
        If set to one-time, after
        the instance is terminated, the spot request will be closed.
    subnetId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tenancy : str, default is Undefined, optional
        tenancy
    userData : str, default is Undefined, optional
        user data
    userDataBase64 : str, default is Undefined, optional
        user data base64
    userDataReplaceOnChange : bool, default is Undefined, optional
        user data replace on change
    validFrom : str, default is Undefined, optional
        The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    validUntil : str, default is Undefined, optional
        The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
    volumeTags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        vpc security group ids
    waitForFulfillment : bool, default is Undefined, optional
        wait for fulfillment
    """


    ami?: str

    arn?: str

    associatePublicIpAddress?: bool

    availabilityZone?: str

    blockDurationMinutes?: float

    capacityReservationSpecification?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCapacityReservationSpecification

    cpuCoreCount?: float

    cpuOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCPUOptions

    cpuThreadsPerCore?: float

    creditSpecification?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCreditSpecification

    disableApiStop?: bool

    disableApiTermination?: bool

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEbsBlockDeviceItems0]

    ebsOptimized?: bool

    enablePrimaryIpv6?: bool

    enclaveOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEnclaveOptions

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEphemeralBlockDeviceItems0]

    getPasswordData?: bool

    hibernation?: bool

    hostId?: str

    hostResourceGroupArn?: str

    iamInstanceProfile?: str

    id?: str

    instanceInitiatedShutdownBehavior?: str

    instanceInterruptionBehavior?: str

    instanceState?: str

    instanceType?: str

    ipv6AddressCount?: float

    ipv6Addresses?: [str]

    keyName?: str

    launchGroup?: str

    launchTemplate?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderLaunchTemplate

    maintenanceOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderMaintenanceOptions

    metadataOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderMetadataOptions

    monitoring?: bool

    networkInterface?: [Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderNetworkInterfaceItems0]

    outpostArn?: str

    passwordData?: str

    placementGroup?: str

    placementPartitionNumber?: float

    primaryNetworkInterfaceId?: str

    privateDns?: str

    privateDnsNameOptions?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderPrivateDNSNameOptions

    privateIp?: str

    publicDns?: str

    publicIp?: str

    rootBlockDevice?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderRootBlockDevice

    secondaryPrivateIps?: [str]

    securityGroups?: [str]

    sourceDestCheck?: bool

    spotBidStatus?: str

    spotInstanceId?: str

    spotPrice?: str

    spotRequestState?: str

    spotType?: str

    subnetId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    tenancy?: str

    userData?: str

    userDataBase64?: str

    userDataReplaceOnChange?: bool

    validFrom?: str

    validUntil?: str

    volumeTags?: {str:str}

    vpcSecurityGroupIds?: [str]

    waitForFulfillment?: bool


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCPUOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider CPU options

    Attributes
    ----------
    amdSevSnp : str, default is Undefined, optional
        amd sev snp
    coreCount : float, default is Undefined, optional
        core count
    threadsPerCore : float, default is Undefined, optional
        threads per core
    """


    amdSevSnp?: str

    coreCount?: float

    threadsPerCore?: float


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCapacityReservationSpecification:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider capacity reservation specification

    Attributes
    ----------
    capacityReservationPreference : str, default is Undefined, optional
        capacity reservation preference
    capacityReservationTarget : Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget, default is Undefined, optional
        capacity reservation target
    """


    capacityReservationPreference?: str

    capacityReservationTarget?: Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCapacityReservationSpecificationCapacityReservationTarget:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider capacity reservation specification capacity reservation target

    Attributes
    ----------
    capacityReservationId : str, default is Undefined, optional
        The Spot Instance Request ID.
    capacityReservationResourceGroupArn : str, default is Undefined, optional
        capacity reservation resource group arn
    """


    capacityReservationId?: str

    capacityReservationResourceGroupArn?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderCreditSpecification:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider credit specification

    Attributes
    ----------
    cpuCredits : str, default is Undefined, optional
        cpu credits
    """


    cpuCredits?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceName : str, default is Undefined, optional
        device name
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        iops
    kmsKeyId : str, default is Undefined, optional
        The Spot Instance Request ID.
    snapshotId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        throughput
    volumeId : str, default is Undefined, optional
        The Spot Instance Request ID.
    volumeSize : float, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    snapshotId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeId?: str

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEnclaveOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider enclave options

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        enabled
    """


    enabled?: bool


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        device name
    noDevice : bool, default is Undefined, optional
        no device
    virtualName : str, default is Undefined, optional
        virtual name
    """


    deviceName?: str

    noDevice?: bool

    virtualName?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderLaunchTemplate:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider launch template

    Attributes
    ----------
    id : str, default is Undefined, optional
        The Spot Instance Request ID.
    name : str, default is Undefined, optional
        name
    version : str, default is Undefined, optional
        version
    """


    id?: str

    name?: str

    version?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderMaintenanceOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider maintenance options

    Attributes
    ----------
    autoRecovery : str, default is Undefined, optional
        auto recovery
    """


    autoRecovery?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderMetadataOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider metadata options

    Attributes
    ----------
    httpEndpoint : str, default is Undefined, optional
        http endpoint
    httpProtocolIpv6 : str, default is Undefined, optional
        http protocol Ipv6
    httpPutResponseHopLimit : float, default is Undefined, optional
        http put response hop limit
    httpTokens : str, default is Undefined, optional
        http tokens
    instanceMetadataTags : str, default is Undefined, optional
        Key-value map of resource tags.
    """


    httpEndpoint?: str

    httpProtocolIpv6?: str

    httpPutResponseHopLimit?: float

    httpTokens?: str

    instanceMetadataTags?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderNetworkInterfaceItems0:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider network interface items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceIndex : float, default is Undefined, optional
        device index
    networkCardIndex : float, default is Undefined, optional
        network card index
    networkInterfaceId : str, default is Undefined, optional
        The Spot Instance Request ID.
    """


    deleteOnTermination?: bool

    deviceIndex?: float

    networkCardIndex?: float

    networkInterfaceId?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderPrivateDNSNameOptions:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider private DNS name options

    Attributes
    ----------
    enableResourceNameDnsARecord : bool, default is Undefined, optional
        enable resource name Dns a record
    enableResourceNameDnsAaaaRecord : bool, default is Undefined, optional
        enable resource name Dns aaaa record
    hostnameType : str, default is Undefined, optional
        hostname type
    """


    enableResourceNameDnsARecord?: bool

    enableResourceNameDnsAaaaRecord?: bool

    hostnameType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusAtProviderRootBlockDevice:
    r"""
    ec2 aws upbound io v1beta2 spot instance request status at provider root block device

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        delete on termination
    deviceName : str, default is Undefined, optional
        device name
    encrypted : bool, default is Undefined, optional
        encrypted
    iops : float, default is Undefined, optional
        iops
    kmsKeyId : str, default is Undefined, optional
        The Spot Instance Request ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throughput : float, default is Undefined, optional
        throughput
    volumeId : str, default is Undefined, optional
        The Spot Instance Request ID.
    volumeSize : float, default is Undefined, optional
        volume size
    volumeType : str, default is Undefined, optional
        volume type
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    kmsKeyId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    throughput?: float

    volumeId?: str

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta2SpotInstanceRequestStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


