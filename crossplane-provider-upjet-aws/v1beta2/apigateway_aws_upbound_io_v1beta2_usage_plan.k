"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UsagePlan:
    r"""
    UsagePlan is the Schema for the UsagePlans API. Provides an API Gateway Usage Plan.

    Attributes
    ----------
    apiVersion : str, default is "apigateway.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UsagePlan", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApigatewayAwsUpboundIoV1beta2UsagePlanSpec, default is Undefined, required
        spec
    status : ApigatewayAwsUpboundIoV1beta2UsagePlanStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigateway.aws.upbound.io/v1beta2" = "apigateway.aws.upbound.io/v1beta2"

    kind: "UsagePlan" = "UsagePlan"

    metadata?: v1.ObjectMeta

    spec: ApigatewayAwsUpboundIoV1beta2UsagePlanSpec

    status?: ApigatewayAwsUpboundIoV1beta2UsagePlanStatus


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpec:
    r"""
    UsagePlanSpec defines the desired state of UsagePlan

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProvider

    initProvider?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecProviderConfigRef

    publishConnectionDetailsTo?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecWriteConnectionSecretToRef


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProvider:
    r"""
    apigateway aws upbound io v1beta2 usage plan spec for provider

    Attributes
    ----------
    apiStages : [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0], default is Undefined, optional
        Associated API stages of the usage plan.
    description : str, default is Undefined, optional
        Description of a usage plan.
    name : str, default is Undefined, optional
        Name of the usage plan.
    productCode : str, default is Undefined, optional
        AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
    quotaSettings : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderQuotaSettings, default is Undefined, optional
        quota settings
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    throttleSettings : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderThrottleSettings, default is Undefined, optional
        throttle settings
    """


    apiStages?: [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0]

    description?: str

    name?: str

    productCode?: str

    quotaSettings?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderQuotaSettings

    region: str

    tags?: {str:str}

    throttleSettings?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderThrottleSettings


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0:
    r"""
    apigateway aws upbound io v1beta2 usage plan spec for provider API stages items0

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API Id of the associated API stage in a usage plan.
    apiIdRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDSelector, default is Undefined, optional
        api Id selector
    stage : str, default is Undefined, optional
        API stage name of the associated API stage in a usage plan.
    stageRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageRef, default is Undefined, optional
        stage ref
    stageSelector : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageSelector, default is Undefined, optional
        stage selector
    throttle : [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0ThrottleItems0], default is Undefined, optional
        The throttling limits of the usage plan.
    """


    apiId?: str

    apiIdRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDRef

    apiIdSelector?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDSelector

    stage?: str

    stageRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageRef

    stageSelector?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageSelector

    throttle?: [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0ThrottleItems0]


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0APIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageRef:
    r"""
    Reference to a Stage in apigateway to populate stage.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageRefPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageSelector:
    r"""
    Selector for a Stage in apigateway to populate stage.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0StageSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderAPIStagesItems0ThrottleItems0:
    r"""
    apigateway aws upbound io v1beta2 usage plan spec for provider API stages items0 throttle items0

    Attributes
    ----------
    burstLimit : float, default is Undefined, optional
        The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    path : str, default is Undefined, optional
        Method to apply the throttle settings for. Specfiy the path and method, for example /test/GET.
    rateLimit : float, default is Undefined, optional
        The API request steady-state rate limit.
    """


    burstLimit?: float

    path?: str

    rateLimit?: float


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderQuotaSettings:
    r"""
    The quota settings of the usage plan.

    Attributes
    ----------
    limit : float, default is Undefined, optional
        Maximum number of requests that can be made in a given time period.
    offset : float, default is Undefined, optional
        Number of requests subtracted from the given limit in the initial time period.
    period : str, default is Undefined, optional
        Time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
    """


    limit?: float

    offset?: float

    period?: str


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecForProviderThrottleSettings:
    r"""
    The throttling limits of the usage plan.

    Attributes
    ----------
    burstLimit : float, default is Undefined, optional
        The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    rateLimit : float, default is Undefined, optional
        The API request steady-state rate limit.
    """


    burstLimit?: float

    rateLimit?: float


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    apiStages : [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0], default is Undefined, optional
        Associated API stages of the usage plan.
    description : str, default is Undefined, optional
        Description of a usage plan.
    name : str, default is Undefined, optional
        Name of the usage plan.
    productCode : str, default is Undefined, optional
        AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
    quotaSettings : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderQuotaSettings, default is Undefined, optional
        quota settings
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    throttleSettings : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderThrottleSettings, default is Undefined, optional
        throttle settings
    """


    apiStages?: [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0]

    description?: str

    name?: str

    productCode?: str

    quotaSettings?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderQuotaSettings

    tags?: {str:str}

    throttleSettings?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderThrottleSettings


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0:
    r"""
    apigateway aws upbound io v1beta2 usage plan spec init provider API stages items0

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API Id of the associated API stage in a usage plan.
    apiIdRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDSelector, default is Undefined, optional
        api Id selector
    stage : str, default is Undefined, optional
        API stage name of the associated API stage in a usage plan.
    stageRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageRef, default is Undefined, optional
        stage ref
    stageSelector : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageSelector, default is Undefined, optional
        stage selector
    throttle : [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0ThrottleItems0], default is Undefined, optional
        The throttling limits of the usage plan.
    """


    apiId?: str

    apiIdRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDRef

    apiIdSelector?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDSelector

    stage?: str

    stageRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageRef

    stageSelector?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageSelector

    throttle?: [ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0ThrottleItems0]


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0APIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageRef:
    r"""
    Reference to a Stage in apigateway to populate stage.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageRefPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageSelector:
    r"""
    Selector for a Stage in apigateway to populate stage.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0StageSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderAPIStagesItems0ThrottleItems0:
    r"""
    apigateway aws upbound io v1beta2 usage plan spec init provider API stages items0 throttle items0

    Attributes
    ----------
    burstLimit : float, default is Undefined, optional
        The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    path : str, default is Undefined, optional
        Method to apply the throttle settings for. Specfiy the path and method, for example /test/GET.
    rateLimit : float, default is Undefined, optional
        The API request steady-state rate limit.
    """


    burstLimit?: float

    path?: str

    rateLimit?: float


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderQuotaSettings:
    r"""
    The quota settings of the usage plan.

    Attributes
    ----------
    limit : float, default is Undefined, optional
        Maximum number of requests that can be made in a given time period.
    offset : float, default is Undefined, optional
        Number of requests subtracted from the given limit in the initial time period.
    period : str, default is Undefined, optional
        Time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
    """


    limit?: float

    offset?: float

    period?: str


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecInitProviderThrottleSettings:
    r"""
    The throttling limits of the usage plan.

    Attributes
    ----------
    burstLimit : float, default is Undefined, optional
        The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    rateLimit : float, default is Undefined, optional
        The API request steady-state rate limit.
    """


    burstLimit?: float

    rateLimit?: float


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecProviderConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToConfigRef

    metadata?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToMetadata

    name: str


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApigatewayAwsUpboundIoV1beta2UsagePlanSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatus:
    r"""
    UsagePlanStatus defines the observed state of UsagePlan.

    Attributes
    ----------
    atProvider : ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApigatewayAwsUpboundIoV1beta2UsagePlanStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProvider

    conditions?: [ApigatewayAwsUpboundIoV1beta2UsagePlanStatusConditionsItems0]

    observedGeneration?: int


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProvider:
    r"""
    apigateway aws upbound io v1beta2 usage plan status at provider

    Attributes
    ----------
    apiStages : [ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderAPIStagesItems0], default is Undefined, optional
        Associated API stages of the usage plan.
    arn : str, default is Undefined, optional
        ARN
    description : str, default is Undefined, optional
        Description of a usage plan.
    id : str, default is Undefined, optional
        ID of the API resource
    name : str, default is Undefined, optional
        Name of the usage plan.
    productCode : str, default is Undefined, optional
        AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
    quotaSettings : ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderQuotaSettings, default is Undefined, optional
        quota settings
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    throttleSettings : ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderThrottleSettings, default is Undefined, optional
        throttle settings
    """


    apiStages?: [ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderAPIStagesItems0]

    arn?: str

    description?: str

    id?: str

    name?: str

    productCode?: str

    quotaSettings?: ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderQuotaSettings

    tags?: {str:str}

    tagsAll?: {str:str}

    throttleSettings?: ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderThrottleSettings


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderAPIStagesItems0:
    r"""
    apigateway aws upbound io v1beta2 usage plan status at provider API stages items0

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API Id of the associated API stage in a usage plan.
    stage : str, default is Undefined, optional
        API stage name of the associated API stage in a usage plan.
    throttle : [ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderAPIStagesItems0ThrottleItems0], default is Undefined, optional
        The throttling limits of the usage plan.
    """


    apiId?: str

    stage?: str

    throttle?: [ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderAPIStagesItems0ThrottleItems0]


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderAPIStagesItems0ThrottleItems0:
    r"""
    apigateway aws upbound io v1beta2 usage plan status at provider API stages items0 throttle items0

    Attributes
    ----------
    burstLimit : float, default is Undefined, optional
        The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    path : str, default is Undefined, optional
        Method to apply the throttle settings for. Specfiy the path and method, for example /test/GET.
    rateLimit : float, default is Undefined, optional
        The API request steady-state rate limit.
    """


    burstLimit?: float

    path?: str

    rateLimit?: float


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderQuotaSettings:
    r"""
    The quota settings of the usage plan.

    Attributes
    ----------
    limit : float, default is Undefined, optional
        Maximum number of requests that can be made in a given time period.
    offset : float, default is Undefined, optional
        Number of requests subtracted from the given limit in the initial time period.
    period : str, default is Undefined, optional
        Time period in which the limit applies. Valid values are "DAY", "WEEK" or "MONTH".
    """


    limit?: float

    offset?: float

    period?: str


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatusAtProviderThrottleSettings:
    r"""
    The throttling limits of the usage plan.

    Attributes
    ----------
    burstLimit : float, default is Undefined, optional
        The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.
    rateLimit : float, default is Undefined, optional
        The API request steady-state rate limit.
    """


    burstLimit?: float

    rateLimit?: float


schema ApigatewayAwsUpboundIoV1beta2UsagePlanStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


