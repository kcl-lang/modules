"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Distribution:
    r"""
    Distribution is the Schema for the Distributions API. Provides a CloudFront web distribution resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudfront.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Distribution", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudfrontAwsUpboundIoV1beta2DistributionSpec, default is Undefined, required
        spec
    status : CloudfrontAwsUpboundIoV1beta2DistributionStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudfront.aws.upbound.io/v1beta2" = "cloudfront.aws.upbound.io/v1beta2"

    kind: "Distribution" = "Distribution"

    metadata?: v1.ObjectMeta

    spec: CloudfrontAwsUpboundIoV1beta2DistributionSpec

    status?: CloudfrontAwsUpboundIoV1beta2DistributionStatus


schema CloudfrontAwsUpboundIoV1beta2DistributionSpec:
    r"""
    DistributionSpec defines the desired state of Distribution

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProvider

    initProvider?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecWriteConnectionSecretToRef


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProvider:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider

    Attributes
    ----------
    aliases : [str], default is Undefined, optional
        Extra CNAMEs (alternate domain names), if any, for this distribution.
    comment : str, default is Undefined, optional
        Any comments you want to include about the distribution.
    continuousDeploymentPolicyId : str, default is Undefined, optional
        Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the aws_cloudfront_continuous_deployment_policy resource for additional details.
    customErrorResponse : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderCustomErrorResponseItems0], default is Undefined, optional
        One or more custom error response elements (multiples allowed).
    defaultCacheBehavior : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehavior, default is Undefined, optional
        default cache behavior
    defaultRootObject : str, default is Undefined, optional
        Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    httpVersion : str, default is Undefined, optional
        Maximum HTTP version to support on the distribution. Allowed values are http1.1, http2, http2and3 and http3. The default is http2.
    isIpv6Enabled : bool, default is Undefined, optional
        Whether the IPv6 is enabled for the distribution.
    loggingConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderLoggingConfig, default is Undefined, optional
        logging config
    orderedCacheBehavior : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0], default is Undefined, optional
        Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
    origin : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0], default is Undefined, optional
        One or more origins for this distribution (multiples allowed).
    originGroup : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0], default is Undefined, optional
        One or more origin_group for this distribution (multiples allowed).
    priceClass : str, default is Undefined, optional
        Price class for this distribution. One of PriceClass_All, PriceClass_200, PriceClass_100.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    restrictions : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderRestrictions, default is Undefined, optional
        restrictions
    retainOnDelete : bool, default is Undefined, optional
        If this is set, the distribution needs to be deleted manually afterwards. Default: false.
    staging : bool, default is Undefined, optional
        A Boolean that indicates whether this is a staging distribution. Defaults to false.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    viewerCertificate : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderViewerCertificate, default is Undefined, optional
        viewer certificate
    waitForDeployment : bool, default is Undefined, optional
        If enabled, the resource will wait for the distribution status to change from InProgress to Deployed. Setting this tofalse will skip the process. Default: true.
    webAclId : str, default is Undefined, optional
        Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example aws_wafv2_web_acl.example.arn. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example aws_waf_web_acl.example.id. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have waf:GetWebACL permissions assigned.
    """


    aliases?: [str]

    comment?: str

    continuousDeploymentPolicyId?: str

    customErrorResponse?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderCustomErrorResponseItems0]

    defaultCacheBehavior?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehavior

    defaultRootObject?: str

    enabled?: bool

    httpVersion?: str

    isIpv6Enabled?: bool

    loggingConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderLoggingConfig

    orderedCacheBehavior?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0]

    origin?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0]

    originGroup?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0]

    priceClass?: str

    region: str

    restrictions?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderRestrictions

    retainOnDelete?: bool

    staging?: bool

    tags?: {str:str}

    viewerCertificate?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderViewerCertificate

    waitForDeployment?: bool

    webAclId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderCustomErrorResponseItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider custom error response items0

    Attributes
    ----------
    errorCachingMinTtl : float, default is Undefined, optional
        Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
    errorCode : float, default is Undefined, optional
        4xx or 5xx HTTP status code that you want to customize.
    responseCode : float, default is Undefined, optional
        HTTP status code that you want CloudFront to return with the custom error page to the viewer.
    responsePagePath : str, default is Undefined, optional
        Path of the custom error page (for example, /custom_404.html).
    """


    errorCachingMinTtl?: float

    errorCode?: float

    responseCode?: float

    responsePagePath?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehavior:
    r"""
    Default cache behavior for this distribution (maximum one). Requires either cache_policy_id (preferred) or forwarded_values (deprecated) be set.

    Attributes
    ----------
    allowedMethods : [str], default is Undefined, optional
        Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    cachePolicyId : str, default is Undefined, optional
        Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
    cachedMethods : [str], default is Undefined, optional
        Controls whether CloudFront caches the response to requests using the specified HTTP methods.
    compress : bool, default is Undefined, optional
        Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
    defaultTtl : float, default is Undefined, optional
        Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
    fieldLevelEncryptionId : str, default is Undefined, optional
        Field level encryption configuration ID.
    forwardedValues : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorForwardedValues, default is Undefined, optional
        forwarded values
    functionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a cloudfront function with specific actions (maximum 2).
    lambdaFunctionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a lambda function with specific actions (maximum 4).
    maxTtl : float, default is Undefined, optional
        Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
    minTtl : float, default is Undefined, optional
        Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
    originRequestPolicyId : str, default is Undefined, optional
        Unique identifier of the origin request policy that is attached to the behavior.
    realtimeLogConfigArn : str, default is Undefined, optional
        ARN of the real-time log configuration that is attached to this cache behavior.
    responseHeadersPolicyId : str, default is Undefined, optional
        Identifier for a response headers policy.
    smoothStreaming : bool, default is Undefined, optional
        Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
    targetOriginId : str, default is Undefined, optional
        Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
    trustedKeyGroups : [str], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [str], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerProtocolPolicy : str, default is Undefined, optional
        Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
    """


    allowedMethods?: [str]

    cachePolicyId?: str

    cachedMethods?: [str]

    compress?: bool

    defaultTtl?: float

    fieldLevelEncryptionId?: str

    forwardedValues?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorForwardedValues

    functionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorFunctionAssociationItems0]

    lambdaFunctionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0]

    maxTtl?: float

    minTtl?: float

    originRequestPolicyId?: str

    realtimeLogConfigArn?: str

    responseHeadersPolicyId?: str

    smoothStreaming?: bool

    targetOriginId?: str

    trustedKeyGroups?: [str]

    trustedSigners?: [str]

    viewerProtocolPolicy?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorForwardedValues:
    r"""
    The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).

    Attributes
    ----------
    cookies : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorForwardedValuesCookies, default is Undefined, optional
        cookies
    headers : [str], default is Undefined, optional
        Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
    queryString : bool, default is Undefined, optional
        Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    queryStringCacheKeys : [str], default is Undefined, optional
        When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
    """


    cookies?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorForwardedValuesCookies

    headers?: [str]

    queryString?: bool

    queryStringCacheKeys?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorForwardedValuesCookies:
    r"""
    The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).

    Attributes
    ----------
    forward : str, default is Undefined, optional
        Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
    whitelistedNames : [str], default is Undefined, optional
        If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
    """


    forward?: str

    whitelistedNames?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider default cache behavior function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    functionArn : str, default is Undefined, optional
        ARN of the CloudFront function.
    """


    eventType?: str

    functionArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider default cache behavior lambda function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    includeBody : bool, default is Undefined, optional
        When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
    lambdaArn : str, default is Undefined, optional
        ARN of the Lambda function.
    """


    eventType?: str

    includeBody?: bool

    lambdaArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderLoggingConfig:
    r"""
    The logging configuration that controls how logs are written to your distribution (maximum one).

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.
    includeCookies : bool, default is Undefined, optional
        Whether to include cookies in access logs (default: false).
    prefix : str, default is Undefined, optional
        Prefix to the access log filenames for this distribution, for example, myprefix/.
    """


    bucket?: str

    includeCookies?: bool

    prefix?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider ordered cache behavior items0

    Attributes
    ----------
    allowedMethods : [str], default is Undefined, optional
        Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    cachePolicyId : str, default is Undefined, optional
        Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
    cachedMethods : [str], default is Undefined, optional
        Controls whether CloudFront caches the response to requests using the specified HTTP methods.
    compress : bool, default is Undefined, optional
        Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
    defaultTtl : float, default is Undefined, optional
        Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
    fieldLevelEncryptionId : str, default is Undefined, optional
        Field level encryption configuration ID.
    forwardedValues : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0ForwardedValues, default is Undefined, optional
        forwarded values
    functionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a cloudfront function with specific actions (maximum 2).
    lambdaFunctionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a lambda function with specific actions (maximum 4).
    maxTtl : float, default is Undefined, optional
        Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
    minTtl : float, default is Undefined, optional
        Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
    originRequestPolicyId : str, default is Undefined, optional
        Unique identifier of the origin request policy that is attached to the behavior.
    pathPattern : str, default is Undefined, optional
        Pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to.
    realtimeLogConfigArn : str, default is Undefined, optional
        ARN of the real-time log configuration that is attached to this cache behavior.
    responseHeadersPolicyId : str, default is Undefined, optional
        Identifier for a response headers policy.
    smoothStreaming : bool, default is Undefined, optional
        Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
    targetOriginId : str, default is Undefined, optional
        Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
    trustedKeyGroups : [str], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [str], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerProtocolPolicy : str, default is Undefined, optional
        Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
    """


    allowedMethods?: [str]

    cachePolicyId?: str

    cachedMethods?: [str]

    compress?: bool

    defaultTtl?: float

    fieldLevelEncryptionId?: str

    forwardedValues?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0ForwardedValues

    functionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0]

    lambdaFunctionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0]

    maxTtl?: float

    minTtl?: float

    originRequestPolicyId?: str

    pathPattern?: str

    realtimeLogConfigArn?: str

    responseHeadersPolicyId?: str

    smoothStreaming?: bool

    targetOriginId?: str

    trustedKeyGroups?: [str]

    trustedSigners?: [str]

    viewerProtocolPolicy?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0ForwardedValues:
    r"""
    The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).

    Attributes
    ----------
    cookies : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0ForwardedValuesCookies, default is Undefined, optional
        cookies
    headers : [str], default is Undefined, optional
        Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
    queryString : bool, default is Undefined, optional
        Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    queryStringCacheKeys : [str], default is Undefined, optional
        When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
    """


    cookies?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0ForwardedValuesCookies

    headers?: [str]

    queryString?: bool

    queryStringCacheKeys?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0ForwardedValuesCookies:
    r"""
    The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).

    Attributes
    ----------
    forward : str, default is Undefined, optional
        Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
    whitelistedNames : [str], default is Undefined, optional
        If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
    """


    forward?: str

    whitelistedNames?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider ordered cache behavior items0 function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    functionArn : str, default is Undefined, optional
        ARN of the CloudFront function.
    functionArnRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRef, default is Undefined, optional
        function arn ref
    functionArnSelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelector, default is Undefined, optional
        function arn selector
    """


    eventType?: str

    functionArn?: str

    functionArnRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRef

    functionArnSelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelector


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRef:
    r"""
    Reference to a Function in cloudfront to populate functionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelector:
    r"""
    Selector for a Function in cloudfront to populate functionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider ordered cache behavior items0 lambda function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    includeBody : bool, default is Undefined, optional
        When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
    lambdaArn : str, default is Undefined, optional
        ARN of the Lambda function.
    lambdaArnRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRef, default is Undefined, optional
        lambda arn ref
    lambdaArnSelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelector, default is Undefined, optional
        lambda arn selector
    """


    eventType?: str

    includeBody?: bool

    lambdaArn?: str

    lambdaArnRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRef

    lambdaArnSelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelector


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRef:
    r"""
    Reference to a Function in lambda to populate lambdaArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelector:
    r"""
    Selector for a Function in lambda to populate lambdaArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider origin group items0

    Attributes
    ----------
    failoverCriteria : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0FailoverCriteria, default is Undefined, optional
        failover criteria
    member : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0MemberItems0], default is Undefined, optional
        Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    """


    failoverCriteria?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0FailoverCriteria

    member?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0MemberItems0]

    originId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0FailoverCriteria:
    r"""
    The failover criteria for when to failover to the secondary origin.

    Attributes
    ----------
    statusCodes : [float], default is Undefined, optional
        List of HTTP status codes for the origin group.
    """


    statusCodes?: [float]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginGroupItems0MemberItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider origin group items0 member items0

    Attributes
    ----------
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    """


    originId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider origin items0

    Attributes
    ----------
    connectionAttempts : float, default is Undefined, optional
        Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
    connectionTimeout : float, default is Undefined, optional
        Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
    customHeader : [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0CustomHeaderItems0], default is Undefined, optional
        One or more sub-resources with name and value parameters that specify header data that will be sent to the origin (multiples allowed).
    customOriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0CustomOriginConfig, default is Undefined, optional
        custom origin config
    domainName : str, default is Undefined, optional
        DNS domain name of either the S3 bucket, or web site of your custom origin.
    originAccessControlId : str, default is Undefined, optional
        Unique identifier of a CloudFront origin access control for this origin.
    originAccessControlIdRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDRef, default is Undefined, optional
        origin access control Id ref
    originAccessControlIdSelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDSelector, default is Undefined, optional
        origin access control Id selector
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    originPath : str, default is Undefined, optional
        Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
    originShield : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginShield, default is Undefined, optional
        origin shield
    s3OriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfig, default is Undefined, optional
        s3 origin config
    vpcOriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0VpcOriginConfig, default is Undefined, optional
        vpc origin config
    """


    connectionAttempts?: float

    connectionTimeout?: float

    customHeader?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0CustomHeaderItems0]

    customOriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0CustomOriginConfig

    domainName?: str

    originAccessControlId?: str

    originAccessControlIdRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDRef

    originAccessControlIdSelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDSelector

    originId?: str

    originPath?: str

    originShield?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginShield

    s3OriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfig

    vpcOriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0VpcOriginConfig


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0CustomHeaderItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider origin items0 custom header items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0CustomOriginConfig:
    r"""
    The CloudFront custom origin configuration information. If an S3 origin is required, use origin_access_control_id or s3_origin_config instead.

    Attributes
    ----------
    httpPort : float, default is Undefined, optional
        HTTP port the custom origin listens on.
    httpsPort : float, default is Undefined, optional
        HTTPS port the custom origin listens on.
    originKeepaliveTimeout : float, default is Undefined, optional
        The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 5.
    originProtocolPolicy : str, default is Undefined, optional
        Origin protocol policy to apply to your origin. One of http-only, https-only, or match-viewer.
    originReadTimeout : float, default is Undefined, optional
        The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 30.
    originSslProtocols : [str], default is Undefined, optional
        List of SSL/TLS protocols that CloudFront can use when connecting to your origin over HTTPS. Valid values: SSLv3, TLSv1, TLSv1.1, TLSv1.2. For more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide.
    """


    httpPort?: float

    httpsPort?: float

    originKeepaliveTimeout?: float

    originProtocolPolicy?: str

    originReadTimeout?: float

    originSslProtocols?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDRef:
    r"""
    Reference to a OriginAccessControl in cloudfront to populate originAccessControlId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDSelector:
    r"""
    Selector for a OriginAccessControl in cloudfront to populate originAccessControlId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginAccessControlIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0OriginShield:
    r"""
    CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see Using Origin Shield in the Amazon CloudFront Developer Guide.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    originShieldRegion : str, default is Undefined, optional
        AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
    """


    enabled?: bool

    originShieldRegion?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfig:
    r"""
    CloudFront S3 origin configuration information. If a custom origin is required, use custom_origin_config instead.

    Attributes
    ----------
    originAccessIdentity : str, default is Undefined, optional
        The CloudFront origin access identity to associate with the origin.
    originAccessIdentityRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentityRef, default is Undefined, optional
        origin access identity ref
    originAccessIdentitySelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentitySelector, default is Undefined, optional
        origin access identity selector
    """


    originAccessIdentity?: str

    originAccessIdentityRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentityRef

    originAccessIdentitySelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentitySelector


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentityRef:
    r"""
    Reference to a OriginAccessIdentity in cloudfront to populate originAccessIdentity.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentityRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentityRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentitySelector:
    r"""
    Selector for a OriginAccessIdentity in cloudfront to populate originAccessIdentity.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentitySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentitySelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0S3OriginConfigOriginAccessIdentitySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderOriginItems0VpcOriginConfig:
    r"""
    The VPC origin configuration.

    Attributes
    ----------
    originKeepaliveTimeout : float, default is Undefined, optional
        The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 5.
    originReadTimeout : float, default is Undefined, optional
        The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 30.
    vpcOriginId : str, default is Undefined, optional
        The VPC origin ID.
    """


    originKeepaliveTimeout?: float

    originReadTimeout?: float

    vpcOriginId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderRestrictions:
    r"""
    The restriction configuration for this distribution (maximum one).

    Attributes
    ----------
    geoRestriction : CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderRestrictionsGeoRestriction, default is Undefined, optional
        geo restriction
    """


    geoRestriction?: CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderRestrictionsGeoRestriction


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderRestrictionsGeoRestriction:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec for provider restrictions geo restriction

    Attributes
    ----------
    locations : [str], default is Undefined, optional
        ISO 3166-1-alpha-2 codes for which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). If the type is specified as none an empty array can be used.
    restrictionType : str, default is Undefined, optional
        Method that you want to use to restrict distribution of your content by country: none, whitelist, or blacklist.
    """


    locations?: [str]

    restrictionType?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecForProviderViewerCertificate:
    r"""
    The SSL configuration for this distribution (maximum one).

    Attributes
    ----------
    acmCertificateArn : str, default is Undefined, optional
        ARN of the AWS Certificate Manager certificate that you wish to use with this distribution. Specify this, cloudfront_default_certificate, or iam_certificate_id.  The ACM certificate must be in  US-EAST-1.
    cloudfrontDefaultCertificate : bool, default is Undefined, optional
        true if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, acm_certificate_arn, or iam_certificate_id.
    iamCertificateId : str, default is Undefined, optional
        IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, acm_certificate_arn, or cloudfront_default_certificate.
    minimumProtocolVersion : str, default is Undefined, optional
        Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if cloudfront_default_certificate = false. See all possible values in this table under "Security policy." Some examples include: TLSv1.2_2019 and TLSv1.2_2021. Default: TLSv1. NOTE: If you are using a custom certificate (specified with acm_certificate_arn or iam_certificate_id), and have specified sni-only in ssl_support_method, TLSv1 or later must be specified. If you have specified vip in ssl_support_method, only SSLv3 or TLSv1 can be specified. If you have specified cloudfront_default_certificate, TLSv1 must be specified.
    sslSupportMethod : str, default is Undefined, optional
        How you want CloudFront to serve HTTPS requests. One of vip, sni-only, or static-ip. Required if you specify acm_certificate_arn or iam_certificate_id. NOTE: vip causes CloudFront to use a dedicated IP address and may incur extra charges.
    """


    acmCertificateArn?: str

    cloudfrontDefaultCertificate?: bool

    iamCertificateId?: str

    minimumProtocolVersion?: str

    sslSupportMethod?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    aliases : [str], default is Undefined, optional
        Extra CNAMEs (alternate domain names), if any, for this distribution.
    comment : str, default is Undefined, optional
        Any comments you want to include about the distribution.
    continuousDeploymentPolicyId : str, default is Undefined, optional
        Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the aws_cloudfront_continuous_deployment_policy resource for additional details.
    customErrorResponse : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderCustomErrorResponseItems0], default is Undefined, optional
        One or more custom error response elements (multiples allowed).
    defaultCacheBehavior : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehavior, default is Undefined, optional
        default cache behavior
    defaultRootObject : str, default is Undefined, optional
        Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    httpVersion : str, default is Undefined, optional
        Maximum HTTP version to support on the distribution. Allowed values are http1.1, http2, http2and3 and http3. The default is http2.
    isIpv6Enabled : bool, default is Undefined, optional
        Whether the IPv6 is enabled for the distribution.
    loggingConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderLoggingConfig, default is Undefined, optional
        logging config
    orderedCacheBehavior : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0], default is Undefined, optional
        Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
    origin : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0], default is Undefined, optional
        One or more origins for this distribution (multiples allowed).
    originGroup : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0], default is Undefined, optional
        One or more origin_group for this distribution (multiples allowed).
    priceClass : str, default is Undefined, optional
        Price class for this distribution. One of PriceClass_All, PriceClass_200, PriceClass_100.
    restrictions : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderRestrictions, default is Undefined, optional
        restrictions
    retainOnDelete : bool, default is Undefined, optional
        If this is set, the distribution needs to be deleted manually afterwards. Default: false.
    staging : bool, default is Undefined, optional
        A Boolean that indicates whether this is a staging distribution. Defaults to false.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    viewerCertificate : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderViewerCertificate, default is Undefined, optional
        viewer certificate
    waitForDeployment : bool, default is Undefined, optional
        If enabled, the resource will wait for the distribution status to change from InProgress to Deployed. Setting this tofalse will skip the process. Default: true.
    webAclId : str, default is Undefined, optional
        Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example aws_wafv2_web_acl.example.arn. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example aws_waf_web_acl.example.id. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have waf:GetWebACL permissions assigned.
    """


    aliases?: [str]

    comment?: str

    continuousDeploymentPolicyId?: str

    customErrorResponse?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderCustomErrorResponseItems0]

    defaultCacheBehavior?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehavior

    defaultRootObject?: str

    enabled?: bool

    httpVersion?: str

    isIpv6Enabled?: bool

    loggingConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderLoggingConfig

    orderedCacheBehavior?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0]

    origin?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0]

    originGroup?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0]

    priceClass?: str

    restrictions?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderRestrictions

    retainOnDelete?: bool

    staging?: bool

    tags?: {str:str}

    viewerCertificate?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderViewerCertificate

    waitForDeployment?: bool

    webAclId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderCustomErrorResponseItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider custom error response items0

    Attributes
    ----------
    errorCachingMinTtl : float, default is Undefined, optional
        Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
    errorCode : float, default is Undefined, optional
        4xx or 5xx HTTP status code that you want to customize.
    responseCode : float, default is Undefined, optional
        HTTP status code that you want CloudFront to return with the custom error page to the viewer.
    responsePagePath : str, default is Undefined, optional
        Path of the custom error page (for example, /custom_404.html).
    """


    errorCachingMinTtl?: float

    errorCode?: float

    responseCode?: float

    responsePagePath?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehavior:
    r"""
    Default cache behavior for this distribution (maximum one). Requires either cache_policy_id (preferred) or forwarded_values (deprecated) be set.

    Attributes
    ----------
    allowedMethods : [str], default is Undefined, optional
        Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    cachePolicyId : str, default is Undefined, optional
        Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
    cachedMethods : [str], default is Undefined, optional
        Controls whether CloudFront caches the response to requests using the specified HTTP methods.
    compress : bool, default is Undefined, optional
        Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
    defaultTtl : float, default is Undefined, optional
        Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
    fieldLevelEncryptionId : str, default is Undefined, optional
        Field level encryption configuration ID.
    forwardedValues : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorForwardedValues, default is Undefined, optional
        forwarded values
    functionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a cloudfront function with specific actions (maximum 2).
    lambdaFunctionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a lambda function with specific actions (maximum 4).
    maxTtl : float, default is Undefined, optional
        Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
    minTtl : float, default is Undefined, optional
        Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
    originRequestPolicyId : str, default is Undefined, optional
        Unique identifier of the origin request policy that is attached to the behavior.
    realtimeLogConfigArn : str, default is Undefined, optional
        ARN of the real-time log configuration that is attached to this cache behavior.
    responseHeadersPolicyId : str, default is Undefined, optional
        Identifier for a response headers policy.
    smoothStreaming : bool, default is Undefined, optional
        Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
    targetOriginId : str, default is Undefined, optional
        Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
    trustedKeyGroups : [str], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [str], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerProtocolPolicy : str, default is Undefined, optional
        Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
    """


    allowedMethods?: [str]

    cachePolicyId?: str

    cachedMethods?: [str]

    compress?: bool

    defaultTtl?: float

    fieldLevelEncryptionId?: str

    forwardedValues?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorForwardedValues

    functionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorFunctionAssociationItems0]

    lambdaFunctionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0]

    maxTtl?: float

    minTtl?: float

    originRequestPolicyId?: str

    realtimeLogConfigArn?: str

    responseHeadersPolicyId?: str

    smoothStreaming?: bool

    targetOriginId?: str

    trustedKeyGroups?: [str]

    trustedSigners?: [str]

    viewerProtocolPolicy?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorForwardedValues:
    r"""
    The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).

    Attributes
    ----------
    cookies : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorForwardedValuesCookies, default is Undefined, optional
        cookies
    headers : [str], default is Undefined, optional
        Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
    queryString : bool, default is Undefined, optional
        Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    queryStringCacheKeys : [str], default is Undefined, optional
        When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
    """


    cookies?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorForwardedValuesCookies

    headers?: [str]

    queryString?: bool

    queryStringCacheKeys?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorForwardedValuesCookies:
    r"""
    The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).

    Attributes
    ----------
    forward : str, default is Undefined, optional
        Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
    whitelistedNames : [str], default is Undefined, optional
        If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
    """


    forward?: str

    whitelistedNames?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider default cache behavior function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    functionArn : str, default is Undefined, optional
        ARN of the CloudFront function.
    """


    eventType?: str

    functionArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider default cache behavior lambda function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    includeBody : bool, default is Undefined, optional
        When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
    lambdaArn : str, default is Undefined, optional
        ARN of the Lambda function.
    """


    eventType?: str

    includeBody?: bool

    lambdaArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderLoggingConfig:
    r"""
    The logging configuration that controls how logs are written to your distribution (maximum one).

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.
    includeCookies : bool, default is Undefined, optional
        Whether to include cookies in access logs (default: false).
    prefix : str, default is Undefined, optional
        Prefix to the access log filenames for this distribution, for example, myprefix/.
    """


    bucket?: str

    includeCookies?: bool

    prefix?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider ordered cache behavior items0

    Attributes
    ----------
    allowedMethods : [str], default is Undefined, optional
        Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    cachePolicyId : str, default is Undefined, optional
        Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
    cachedMethods : [str], default is Undefined, optional
        Controls whether CloudFront caches the response to requests using the specified HTTP methods.
    compress : bool, default is Undefined, optional
        Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
    defaultTtl : float, default is Undefined, optional
        Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
    fieldLevelEncryptionId : str, default is Undefined, optional
        Field level encryption configuration ID.
    forwardedValues : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0ForwardedValues, default is Undefined, optional
        forwarded values
    functionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a cloudfront function with specific actions (maximum 2).
    lambdaFunctionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a lambda function with specific actions (maximum 4).
    maxTtl : float, default is Undefined, optional
        Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
    minTtl : float, default is Undefined, optional
        Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
    originRequestPolicyId : str, default is Undefined, optional
        Unique identifier of the origin request policy that is attached to the behavior.
    pathPattern : str, default is Undefined, optional
        Pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to.
    realtimeLogConfigArn : str, default is Undefined, optional
        ARN of the real-time log configuration that is attached to this cache behavior.
    responseHeadersPolicyId : str, default is Undefined, optional
        Identifier for a response headers policy.
    smoothStreaming : bool, default is Undefined, optional
        Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
    targetOriginId : str, default is Undefined, optional
        Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
    trustedKeyGroups : [str], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [str], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerProtocolPolicy : str, default is Undefined, optional
        Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
    """


    allowedMethods?: [str]

    cachePolicyId?: str

    cachedMethods?: [str]

    compress?: bool

    defaultTtl?: float

    fieldLevelEncryptionId?: str

    forwardedValues?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0ForwardedValues

    functionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0]

    lambdaFunctionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0]

    maxTtl?: float

    minTtl?: float

    originRequestPolicyId?: str

    pathPattern?: str

    realtimeLogConfigArn?: str

    responseHeadersPolicyId?: str

    smoothStreaming?: bool

    targetOriginId?: str

    trustedKeyGroups?: [str]

    trustedSigners?: [str]

    viewerProtocolPolicy?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0ForwardedValues:
    r"""
    The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).

    Attributes
    ----------
    cookies : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0ForwardedValuesCookies, default is Undefined, optional
        cookies
    headers : [str], default is Undefined, optional
        Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
    queryString : bool, default is Undefined, optional
        Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    queryStringCacheKeys : [str], default is Undefined, optional
        When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
    """


    cookies?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0ForwardedValuesCookies

    headers?: [str]

    queryString?: bool

    queryStringCacheKeys?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0ForwardedValuesCookies:
    r"""
    The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).

    Attributes
    ----------
    forward : str, default is Undefined, optional
        Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
    whitelistedNames : [str], default is Undefined, optional
        If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
    """


    forward?: str

    whitelistedNames?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider ordered cache behavior items0 function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    functionArn : str, default is Undefined, optional
        ARN of the CloudFront function.
    functionArnRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRef, default is Undefined, optional
        function arn ref
    functionArnSelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelector, default is Undefined, optional
        function arn selector
    """


    eventType?: str

    functionArn?: str

    functionArnRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRef

    functionArnSelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelector


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRef:
    r"""
    Reference to a Function in cloudfront to populate functionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelector:
    r"""
    Selector for a Function in cloudfront to populate functionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0FunctionAssociationItems0FunctionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider ordered cache behavior items0 lambda function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    includeBody : bool, default is Undefined, optional
        When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
    lambdaArn : str, default is Undefined, optional
        ARN of the Lambda function.
    lambdaArnRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRef, default is Undefined, optional
        lambda arn ref
    lambdaArnSelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelector, default is Undefined, optional
        lambda arn selector
    """


    eventType?: str

    includeBody?: bool

    lambdaArn?: str

    lambdaArnRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRef

    lambdaArnSelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelector


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRef:
    r"""
    Reference to a Function in lambda to populate lambdaArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelector:
    r"""
    Selector for a Function in lambda to populate lambdaArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0LambdaArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider origin group items0

    Attributes
    ----------
    failoverCriteria : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0FailoverCriteria, default is Undefined, optional
        failover criteria
    member : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0MemberItems0], default is Undefined, optional
        Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    """


    failoverCriteria?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0FailoverCriteria

    member?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0MemberItems0]

    originId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0FailoverCriteria:
    r"""
    The failover criteria for when to failover to the secondary origin.

    Attributes
    ----------
    statusCodes : [float], default is Undefined, optional
        List of HTTP status codes for the origin group.
    """


    statusCodes?: [float]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginGroupItems0MemberItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider origin group items0 member items0

    Attributes
    ----------
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    """


    originId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider origin items0

    Attributes
    ----------
    connectionAttempts : float, default is Undefined, optional
        Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
    connectionTimeout : float, default is Undefined, optional
        Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
    customHeader : [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0CustomHeaderItems0], default is Undefined, optional
        One or more sub-resources with name and value parameters that specify header data that will be sent to the origin (multiples allowed).
    customOriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0CustomOriginConfig, default is Undefined, optional
        custom origin config
    domainName : str, default is Undefined, optional
        DNS domain name of either the S3 bucket, or web site of your custom origin.
    originAccessControlId : str, default is Undefined, optional
        Unique identifier of a CloudFront origin access control for this origin.
    originAccessControlIdRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDRef, default is Undefined, optional
        origin access control Id ref
    originAccessControlIdSelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDSelector, default is Undefined, optional
        origin access control Id selector
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    originPath : str, default is Undefined, optional
        Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
    originShield : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginShield, default is Undefined, optional
        origin shield
    s3OriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfig, default is Undefined, optional
        s3 origin config
    vpcOriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0VpcOriginConfig, default is Undefined, optional
        vpc origin config
    """


    connectionAttempts?: float

    connectionTimeout?: float

    customHeader?: [CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0CustomHeaderItems0]

    customOriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0CustomOriginConfig

    domainName?: str

    originAccessControlId?: str

    originAccessControlIdRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDRef

    originAccessControlIdSelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDSelector

    originId?: str

    originPath?: str

    originShield?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginShield

    s3OriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfig

    vpcOriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0VpcOriginConfig


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0CustomHeaderItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider origin items0 custom header items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0CustomOriginConfig:
    r"""
    The CloudFront custom origin configuration information. If an S3 origin is required, use origin_access_control_id or s3_origin_config instead.

    Attributes
    ----------
    httpPort : float, default is Undefined, optional
        HTTP port the custom origin listens on.
    httpsPort : float, default is Undefined, optional
        HTTPS port the custom origin listens on.
    originKeepaliveTimeout : float, default is Undefined, optional
        The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 5.
    originProtocolPolicy : str, default is Undefined, optional
        Origin protocol policy to apply to your origin. One of http-only, https-only, or match-viewer.
    originReadTimeout : float, default is Undefined, optional
        The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 30.
    originSslProtocols : [str], default is Undefined, optional
        List of SSL/TLS protocols that CloudFront can use when connecting to your origin over HTTPS. Valid values: SSLv3, TLSv1, TLSv1.1, TLSv1.2. For more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide.
    """


    httpPort?: float

    httpsPort?: float

    originKeepaliveTimeout?: float

    originProtocolPolicy?: str

    originReadTimeout?: float

    originSslProtocols?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDRef:
    r"""
    Reference to a OriginAccessControl in cloudfront to populate originAccessControlId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDSelector:
    r"""
    Selector for a OriginAccessControl in cloudfront to populate originAccessControlId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginAccessControlIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0OriginShield:
    r"""
    CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see Using Origin Shield in the Amazon CloudFront Developer Guide.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    originShieldRegion : str, default is Undefined, optional
        AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
    """


    enabled?: bool

    originShieldRegion?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfig:
    r"""
    CloudFront S3 origin configuration information. If a custom origin is required, use custom_origin_config instead.

    Attributes
    ----------
    originAccessIdentity : str, default is Undefined, optional
        The CloudFront origin access identity to associate with the origin.
    originAccessIdentityRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentityRef, default is Undefined, optional
        origin access identity ref
    originAccessIdentitySelector : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentitySelector, default is Undefined, optional
        origin access identity selector
    """


    originAccessIdentity?: str

    originAccessIdentityRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentityRef

    originAccessIdentitySelector?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentitySelector


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentityRef:
    r"""
    Reference to a OriginAccessIdentity in cloudfront to populate originAccessIdentity.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentityRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentityRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentityRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentitySelector:
    r"""
    Selector for a OriginAccessIdentity in cloudfront to populate originAccessIdentity.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentitySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentitySelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0S3OriginConfigOriginAccessIdentitySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderOriginItems0VpcOriginConfig:
    r"""
    The VPC origin configuration.

    Attributes
    ----------
    originKeepaliveTimeout : float, default is Undefined, optional
        The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 5.
    originReadTimeout : float, default is Undefined, optional
        The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 30.
    vpcOriginId : str, default is Undefined, optional
        The VPC origin ID.
    """


    originKeepaliveTimeout?: float

    originReadTimeout?: float

    vpcOriginId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderRestrictions:
    r"""
    The restriction configuration for this distribution (maximum one).

    Attributes
    ----------
    geoRestriction : CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderRestrictionsGeoRestriction, default is Undefined, optional
        geo restriction
    """


    geoRestriction?: CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderRestrictionsGeoRestriction


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderRestrictionsGeoRestriction:
    r"""
    cloudfront aws upbound io v1beta2 distribution spec init provider restrictions geo restriction

    Attributes
    ----------
    locations : [str], default is Undefined, optional
        ISO 3166-1-alpha-2 codes for which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). If the type is specified as none an empty array can be used.
    restrictionType : str, default is Undefined, optional
        Method that you want to use to restrict distribution of your content by country: none, whitelist, or blacklist.
    """


    locations?: [str]

    restrictionType?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecInitProviderViewerCertificate:
    r"""
    The SSL configuration for this distribution (maximum one).

    Attributes
    ----------
    acmCertificateArn : str, default is Undefined, optional
        ARN of the AWS Certificate Manager certificate that you wish to use with this distribution. Specify this, cloudfront_default_certificate, or iam_certificate_id.  The ACM certificate must be in  US-EAST-1.
    cloudfrontDefaultCertificate : bool, default is Undefined, optional
        true if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, acm_certificate_arn, or iam_certificate_id.
    iamCertificateId : str, default is Undefined, optional
        IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, acm_certificate_arn, or cloudfront_default_certificate.
    minimumProtocolVersion : str, default is Undefined, optional
        Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if cloudfront_default_certificate = false. See all possible values in this table under "Security policy." Some examples include: TLSv1.2_2019 and TLSv1.2_2021. Default: TLSv1. NOTE: If you are using a custom certificate (specified with acm_certificate_arn or iam_certificate_id), and have specified sni-only in ssl_support_method, TLSv1 or later must be specified. If you have specified vip in ssl_support_method, only SSLv3 or TLSv1 can be specified. If you have specified cloudfront_default_certificate, TLSv1 must be specified.
    sslSupportMethod : str, default is Undefined, optional
        How you want CloudFront to serve HTTPS requests. One of vip, sni-only, or static-ip. Required if you specify acm_certificate_arn or iam_certificate_id. NOTE: vip causes CloudFront to use a dedicated IP address and may incur extra charges.
    """


    acmCertificateArn?: str

    cloudfrontDefaultCertificate?: bool

    iamCertificateId?: str

    minimumProtocolVersion?: str

    sslSupportMethod?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecProviderConfigRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatus:
    r"""
    DistributionStatus defines the observed state of Distribution.

    Attributes
    ----------
    atProvider : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudfrontAwsUpboundIoV1beta2DistributionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProvider

    conditions?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusConditionsItems0]

    observedGeneration?: int


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProvider:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider

    Attributes
    ----------
    aliases : [str], default is Undefined, optional
        Extra CNAMEs (alternate domain names), if any, for this distribution.
    arn : str, default is Undefined, optional
        ARN for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account ID.
    callerReference : str, default is Undefined, optional
        Internal value used by CloudFront to allow future updates to the distribution configuration.
    comment : str, default is Undefined, optional
        Any comments you want to include about the distribution.
    continuousDeploymentPolicyId : str, default is Undefined, optional
        Identifier of a continuous deployment policy. This argument should only be set on a production distribution. See the aws_cloudfront_continuous_deployment_policy resource for additional details.
    customErrorResponse : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderCustomErrorResponseItems0], default is Undefined, optional
        One or more custom error response elements (multiples allowed).
    defaultCacheBehavior : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehavior, default is Undefined, optional
        default cache behavior
    defaultRootObject : str, default is Undefined, optional
        Object that you want CloudFront to return (for example, index.html) when an end user requests the root URL.
    domainName : str, default is Undefined, optional
        DNS domain name of either the S3 bucket, or web site of your custom origin.
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    etag : str, default is Undefined, optional
        Current version of the distribution's information. For example: E2QWRUHAPOMQZL.
    hostedZoneId : str, default is Undefined, optional
        CloudFront Route 53 zone ID that can be used to route an Alias Resource Record Set to. This attribute is simply an alias for the zone ID Z2FDTNDATAQYW2.
    httpVersion : str, default is Undefined, optional
        Maximum HTTP version to support on the distribution. Allowed values are http1.1, http2, http2and3 and http3. The default is http2.
    id : str, default is Undefined, optional
        Identifier for the distribution. For example: EDFDVBD632BHDS5.
    inProgressValidationBatches : float, default is Undefined, optional
        Number of invalidation batches currently in progress.
    isIpv6Enabled : bool, default is Undefined, optional
        Whether the IPv6 is enabled for the distribution.
    lastModifiedTime : str, default is Undefined, optional
        Date and time the distribution was last modified.
    loggingConfig : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderLoggingConfig, default is Undefined, optional
        logging config
    orderedCacheBehavior : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0], default is Undefined, optional
        Ordered list of cache behaviors resource for this distribution. List from top to bottom in order of precedence. The topmost cache behavior will have precedence 0.
    origin : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0], default is Undefined, optional
        One or more origins for this distribution (multiples allowed).
    originGroup : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0], default is Undefined, optional
        One or more origin_group for this distribution (multiples allowed).
    priceClass : str, default is Undefined, optional
        Price class for this distribution. One of PriceClass_All, PriceClass_200, PriceClass_100.
    restrictions : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderRestrictions, default is Undefined, optional
        restrictions
    retainOnDelete : bool, default is Undefined, optional
        If this is set, the distribution needs to be deleted manually afterwards. Default: false.
    staging : bool, default is Undefined, optional
        A Boolean that indicates whether this is a staging distribution. Defaults to false.
    status : str, default is Undefined, optional
        Current status of the distribution. Deployed if the distribution's information is fully propagated throughout the Amazon CloudFront system.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    trustedKeyGroups : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedKeyGroupsItems0], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedSignersItems0], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerCertificate : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderViewerCertificate, default is Undefined, optional
        viewer certificate
    waitForDeployment : bool, default is Undefined, optional
        If enabled, the resource will wait for the distribution status to change from InProgress to Deployed. Setting this tofalse will skip the process. Default: true.
    webAclId : str, default is Undefined, optional
        Unique identifier that specifies the AWS WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of AWS WAF (WAFv2), use the ACL ARN, for example aws_wafv2_web_acl.example.arn. To specify a web ACL created using AWS WAF Classic, use the ACL ID, for example aws_waf_web_acl.example.id. The WAF Web ACL must exist in the WAF Global (CloudFront) region and the credentials configuring this argument must have waf:GetWebACL permissions assigned.
    """


    aliases?: [str]

    arn?: str

    callerReference?: str

    comment?: str

    continuousDeploymentPolicyId?: str

    customErrorResponse?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderCustomErrorResponseItems0]

    defaultCacheBehavior?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehavior

    defaultRootObject?: str

    domainName?: str

    enabled?: bool

    etag?: str

    hostedZoneId?: str

    httpVersion?: str

    id?: str

    inProgressValidationBatches?: float

    isIpv6Enabled?: bool

    lastModifiedTime?: str

    loggingConfig?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderLoggingConfig

    orderedCacheBehavior?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0]

    origin?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0]

    originGroup?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0]

    priceClass?: str

    restrictions?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderRestrictions

    retainOnDelete?: bool

    staging?: bool

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    trustedKeyGroups?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedKeyGroupsItems0]

    trustedSigners?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedSignersItems0]

    viewerCertificate?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderViewerCertificate

    waitForDeployment?: bool

    webAclId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderCustomErrorResponseItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider custom error response items0

    Attributes
    ----------
    errorCachingMinTtl : float, default is Undefined, optional
        Minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.
    errorCode : float, default is Undefined, optional
        4xx or 5xx HTTP status code that you want to customize.
    responseCode : float, default is Undefined, optional
        HTTP status code that you want CloudFront to return with the custom error page to the viewer.
    responsePagePath : str, default is Undefined, optional
        Path of the custom error page (for example, /custom_404.html).
    """


    errorCachingMinTtl?: float

    errorCode?: float

    responseCode?: float

    responsePagePath?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehavior:
    r"""
    Default cache behavior for this distribution (maximum one). Requires either cache_policy_id (preferred) or forwarded_values (deprecated) be set.

    Attributes
    ----------
    allowedMethods : [str], default is Undefined, optional
        Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    cachePolicyId : str, default is Undefined, optional
        Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
    cachedMethods : [str], default is Undefined, optional
        Controls whether CloudFront caches the response to requests using the specified HTTP methods.
    compress : bool, default is Undefined, optional
        Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
    defaultTtl : float, default is Undefined, optional
        Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
    fieldLevelEncryptionId : str, default is Undefined, optional
        Field level encryption configuration ID.
    forwardedValues : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorForwardedValues, default is Undefined, optional
        forwarded values
    functionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a cloudfront function with specific actions (maximum 2).
    lambdaFunctionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a lambda function with specific actions (maximum 4).
    maxTtl : float, default is Undefined, optional
        Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
    minTtl : float, default is Undefined, optional
        Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
    originRequestPolicyId : str, default is Undefined, optional
        Unique identifier of the origin request policy that is attached to the behavior.
    realtimeLogConfigArn : str, default is Undefined, optional
        ARN of the real-time log configuration that is attached to this cache behavior.
    responseHeadersPolicyId : str, default is Undefined, optional
        Identifier for a response headers policy.
    smoothStreaming : bool, default is Undefined, optional
        Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
    targetOriginId : str, default is Undefined, optional
        Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
    trustedKeyGroups : [str], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [str], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerProtocolPolicy : str, default is Undefined, optional
        Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
    """


    allowedMethods?: [str]

    cachePolicyId?: str

    cachedMethods?: [str]

    compress?: bool

    defaultTtl?: float

    fieldLevelEncryptionId?: str

    forwardedValues?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorForwardedValues

    functionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorFunctionAssociationItems0]

    lambdaFunctionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0]

    maxTtl?: float

    minTtl?: float

    originRequestPolicyId?: str

    realtimeLogConfigArn?: str

    responseHeadersPolicyId?: str

    smoothStreaming?: bool

    targetOriginId?: str

    trustedKeyGroups?: [str]

    trustedSigners?: [str]

    viewerProtocolPolicy?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorForwardedValues:
    r"""
    The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).

    Attributes
    ----------
    cookies : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorForwardedValuesCookies, default is Undefined, optional
        cookies
    headers : [str], default is Undefined, optional
        Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
    queryString : bool, default is Undefined, optional
        Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    queryStringCacheKeys : [str], default is Undefined, optional
        When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
    """


    cookies?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorForwardedValuesCookies

    headers?: [str]

    queryString?: bool

    queryStringCacheKeys?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorForwardedValuesCookies:
    r"""
    The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).

    Attributes
    ----------
    forward : str, default is Undefined, optional
        Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
    whitelistedNames : [str], default is Undefined, optional
        If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
    """


    forward?: str

    whitelistedNames?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider default cache behavior function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    functionArn : str, default is Undefined, optional
        ARN of the CloudFront function.
    """


    eventType?: str

    functionArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderDefaultCacheBehaviorLambdaFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider default cache behavior lambda function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    includeBody : bool, default is Undefined, optional
        When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
    lambdaArn : str, default is Undefined, optional
        ARN of the Lambda function.
    """


    eventType?: str

    includeBody?: bool

    lambdaArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderLoggingConfig:
    r"""
    The logging configuration that controls how logs are written to your distribution (maximum one).

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.
    includeCookies : bool, default is Undefined, optional
        Whether to include cookies in access logs (default: false).
    prefix : str, default is Undefined, optional
        Prefix to the access log filenames for this distribution, for example, myprefix/.
    """


    bucket?: str

    includeCookies?: bool

    prefix?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider ordered cache behavior items0

    Attributes
    ----------
    allowedMethods : [str], default is Undefined, optional
        Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
    cachePolicyId : str, default is Undefined, optional
        Unique identifier of the cache policy that is attached to the cache behavior. If configuring the default_cache_behavior either cache_policy_id or forwarded_values must be set.
    cachedMethods : [str], default is Undefined, optional
        Controls whether CloudFront caches the response to requests using the specified HTTP methods.
    compress : bool, default is Undefined, optional
        Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false).
    defaultTtl : float, default is Undefined, optional
        Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an Cache-Control max-age or Expires header.
    fieldLevelEncryptionId : str, default is Undefined, optional
        Field level encryption configuration ID.
    forwardedValues : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0ForwardedValues, default is Undefined, optional
        forwarded values
    functionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0FunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a cloudfront function with specific actions (maximum 2).
    lambdaFunctionAssociation : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0], default is Undefined, optional
        A config block that triggers a lambda function with specific actions (maximum 4).
    maxTtl : float, default is Undefined, optional
        Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of Cache-Control max-age, Cache-Control s-maxage, and Expires headers.
    minTtl : float, default is Undefined, optional
        Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds.
    originRequestPolicyId : str, default is Undefined, optional
        Unique identifier of the origin request policy that is attached to the behavior.
    pathPattern : str, default is Undefined, optional
        Pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to.
    realtimeLogConfigArn : str, default is Undefined, optional
        ARN of the real-time log configuration that is attached to this cache behavior.
    responseHeadersPolicyId : str, default is Undefined, optional
        Identifier for a response headers policy.
    smoothStreaming : bool, default is Undefined, optional
        Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
    targetOriginId : str, default is Undefined, optional
        Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
    trustedKeyGroups : [str], default is Undefined, optional
        List of key group IDs that CloudFront can use to validate signed URLs or signed cookies. See the CloudFront User Guide for more information about this feature.
    trustedSigners : [str], default is Undefined, optional
        List of AWS account IDs (or self) that you want to allow to create signed URLs for private content. See the CloudFront User Guide for more information about this feature.
    viewerProtocolPolicy : str, default is Undefined, optional
        Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of allow-all, https-only, or redirect-to-https.
    """


    allowedMethods?: [str]

    cachePolicyId?: str

    cachedMethods?: [str]

    compress?: bool

    defaultTtl?: float

    fieldLevelEncryptionId?: str

    forwardedValues?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0ForwardedValues

    functionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0FunctionAssociationItems0]

    lambdaFunctionAssociation?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0]

    maxTtl?: float

    minTtl?: float

    originRequestPolicyId?: str

    pathPattern?: str

    realtimeLogConfigArn?: str

    responseHeadersPolicyId?: str

    smoothStreaming?: bool

    targetOriginId?: str

    trustedKeyGroups?: [str]

    trustedSigners?: [str]

    viewerProtocolPolicy?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0ForwardedValues:
    r"""
    The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).

    Attributes
    ----------
    cookies : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0ForwardedValuesCookies, default is Undefined, optional
        cookies
    headers : [str], default is Undefined, optional
        Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify * to include all headers.
    queryString : bool, default is Undefined, optional
        Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
    queryStringCacheKeys : [str], default is Undefined, optional
        When specified, along with a value of true for query_string, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of true for query_string, all query string keys are cached.
    """


    cookies?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0ForwardedValuesCookies

    headers?: [str]

    queryString?: bool

    queryStringCacheKeys?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0ForwardedValuesCookies:
    r"""
    The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).

    Attributes
    ----------
    forward : str, default is Undefined, optional
        Whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If whitelist, you must include the subsequent whitelisted_names.
    whitelistedNames : [str], default is Undefined, optional
        If you have specified whitelist to forward, the whitelisted cookies that you want CloudFront to forward to your origin.
    """


    forward?: str

    whitelistedNames?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0FunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider ordered cache behavior items0 function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    functionArn : str, default is Undefined, optional
        ARN of the CloudFront function.
    """


    eventType?: str

    functionArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOrderedCacheBehaviorItems0LambdaFunctionAssociationItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider ordered cache behavior items0 lambda function association items0

    Attributes
    ----------
    eventType : str, default is Undefined, optional
        Specific event to trigger this function. Valid values: viewer-request, origin-request, viewer-response, origin-response.
    includeBody : bool, default is Undefined, optional
        When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: true, false.
    lambdaArn : str, default is Undefined, optional
        ARN of the Lambda function.
    """


    eventType?: str

    includeBody?: bool

    lambdaArn?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider origin group items0

    Attributes
    ----------
    failoverCriteria : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0FailoverCriteria, default is Undefined, optional
        failover criteria
    member : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0MemberItems0], default is Undefined, optional
        Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    """


    failoverCriteria?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0FailoverCriteria

    member?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0MemberItems0]

    originId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0FailoverCriteria:
    r"""
    The failover criteria for when to failover to the secondary origin.

    Attributes
    ----------
    statusCodes : [float], default is Undefined, optional
        List of HTTP status codes for the origin group.
    """


    statusCodes?: [float]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginGroupItems0MemberItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider origin group items0 member items0

    Attributes
    ----------
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    """


    originId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider origin items0

    Attributes
    ----------
    connectionAttempts : float, default is Undefined, optional
        Number of times that CloudFront attempts to connect to the origin. Must be between 1-3. Defaults to 3.
    connectionTimeout : float, default is Undefined, optional
        Number of seconds that CloudFront waits when trying to establish a connection to the origin. Must be between 1-10. Defaults to 10.
    customHeader : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0CustomHeaderItems0], default is Undefined, optional
        One or more sub-resources with name and value parameters that specify header data that will be sent to the origin (multiples allowed).
    customOriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0CustomOriginConfig, default is Undefined, optional
        custom origin config
    domainName : str, default is Undefined, optional
        DNS domain name of either the S3 bucket, or web site of your custom origin.
    originAccessControlId : str, default is Undefined, optional
        Unique identifier of a CloudFront origin access control for this origin.
    originId : str, default is Undefined, optional
        Unique identifier for the origin.
    originPath : str, default is Undefined, optional
        Optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
    originShield : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0OriginShield, default is Undefined, optional
        origin shield
    s3OriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0S3OriginConfig, default is Undefined, optional
        s3 origin config
    vpcOriginConfig : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0VpcOriginConfig, default is Undefined, optional
        vpc origin config
    """


    connectionAttempts?: float

    connectionTimeout?: float

    customHeader?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0CustomHeaderItems0]

    customOriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0CustomOriginConfig

    domainName?: str

    originAccessControlId?: str

    originId?: str

    originPath?: str

    originShield?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0OriginShield

    s3OriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0S3OriginConfig

    vpcOriginConfig?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0VpcOriginConfig


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0CustomHeaderItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider origin items0 custom header items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0CustomOriginConfig:
    r"""
    The CloudFront custom origin configuration information. If an S3 origin is required, use origin_access_control_id or s3_origin_config instead.

    Attributes
    ----------
    httpPort : float, default is Undefined, optional
        HTTP port the custom origin listens on.
    httpsPort : float, default is Undefined, optional
        HTTPS port the custom origin listens on.
    originKeepaliveTimeout : float, default is Undefined, optional
        The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 5.
    originProtocolPolicy : str, default is Undefined, optional
        Origin protocol policy to apply to your origin. One of http-only, https-only, or match-viewer.
    originReadTimeout : float, default is Undefined, optional
        The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 30.
    originSslProtocols : [str], default is Undefined, optional
        List of SSL/TLS protocols that CloudFront can use when connecting to your origin over HTTPS. Valid values: SSLv3, TLSv1, TLSv1.1, TLSv1.2. For more information, see Minimum Origin SSL Protocol in the Amazon CloudFront Developer Guide.
    """


    httpPort?: float

    httpsPort?: float

    originKeepaliveTimeout?: float

    originProtocolPolicy?: str

    originReadTimeout?: float

    originSslProtocols?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0OriginShield:
    r"""
    CloudFront Origin Shield configuration information. Using Origin Shield can help reduce the load on your origin. For more information, see Using Origin Shield in the Amazon CloudFront Developer Guide.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    originShieldRegion : str, default is Undefined, optional
        AWS Region for Origin Shield. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as us-east-2.
    """


    enabled?: bool

    originShieldRegion?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0S3OriginConfig:
    r"""
    CloudFront S3 origin configuration information. If a custom origin is required, use custom_origin_config instead.

    Attributes
    ----------
    originAccessIdentity : str, default is Undefined, optional
        The CloudFront origin access identity to associate with the origin.
    """


    originAccessIdentity?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderOriginItems0VpcOriginConfig:
    r"""
    The VPC origin configuration.

    Attributes
    ----------
    originKeepaliveTimeout : float, default is Undefined, optional
        The Custom KeepAlive timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 5.
    originReadTimeout : float, default is Undefined, optional
        The Custom Read timeout, in seconds. By default, AWS enforces an upper limit of 60. But you can request an increase. Defaults to 30.
    vpcOriginId : str, default is Undefined, optional
        The VPC origin ID.
    """


    originKeepaliveTimeout?: float

    originReadTimeout?: float

    vpcOriginId?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderRestrictions:
    r"""
    The restriction configuration for this distribution (maximum one).

    Attributes
    ----------
    geoRestriction : CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderRestrictionsGeoRestriction, default is Undefined, optional
        geo restriction
    """


    geoRestriction?: CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderRestrictionsGeoRestriction


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderRestrictionsGeoRestriction:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider restrictions geo restriction

    Attributes
    ----------
    locations : [str], default is Undefined, optional
        ISO 3166-1-alpha-2 codes for which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). If the type is specified as none an empty array can be used.
    restrictionType : str, default is Undefined, optional
        Method that you want to use to restrict distribution of your content by country: none, whitelist, or blacklist.
    """


    locations?: [str]

    restrictionType?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedKeyGroupsItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider trusted key groups items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    items : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedKeyGroupsItems0ItemsItems0], default is Undefined, optional
        List of nested attributes for each key group.
    """


    enabled?: bool

    items?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedKeyGroupsItems0ItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedKeyGroupsItems0ItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider trusted key groups items0 items items0

    Attributes
    ----------
    keyGroupId : str, default is Undefined, optional
        ID of the key group that contains the public keys.
    keyPairIds : [str], default is Undefined, optional
        Set of CloudFront key pair IDs.
    """


    keyGroupId?: str

    keyPairIds?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedSignersItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider trusted signers items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether the distribution is enabled to accept end user requests for content.
    items : [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedSignersItems0ItemsItems0], default is Undefined, optional
        List of nested attributes for each key group.
    """


    enabled?: bool

    items?: [CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedSignersItems0ItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderTrustedSignersItems0ItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 distribution status at provider trusted signers items0 items items0

    Attributes
    ----------
    awsAccountNumber : str, default is Undefined, optional
        AWS account ID or self
    keyPairIds : [str], default is Undefined, optional
        Set of CloudFront key pair IDs.
    """


    awsAccountNumber?: str

    keyPairIds?: [str]


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusAtProviderViewerCertificate:
    r"""
    The SSL configuration for this distribution (maximum one).

    Attributes
    ----------
    acmCertificateArn : str, default is Undefined, optional
        ARN of the AWS Certificate Manager certificate that you wish to use with this distribution. Specify this, cloudfront_default_certificate, or iam_certificate_id.  The ACM certificate must be in  US-EAST-1.
    cloudfrontDefaultCertificate : bool, default is Undefined, optional
        true if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, acm_certificate_arn, or iam_certificate_id.
    iamCertificateId : str, default is Undefined, optional
        IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, acm_certificate_arn, or cloudfront_default_certificate.
    minimumProtocolVersion : str, default is Undefined, optional
        Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if cloudfront_default_certificate = false. See all possible values in this table under "Security policy." Some examples include: TLSv1.2_2019 and TLSv1.2_2021. Default: TLSv1. NOTE: If you are using a custom certificate (specified with acm_certificate_arn or iam_certificate_id), and have specified sni-only in ssl_support_method, TLSv1 or later must be specified. If you have specified vip in ssl_support_method, only SSLv3 or TLSv1 can be specified. If you have specified cloudfront_default_certificate, TLSv1 must be specified.
    sslSupportMethod : str, default is Undefined, optional
        How you want CloudFront to serve HTTPS requests. One of vip, sni-only, or static-ip. Required if you specify acm_certificate_arn or iam_certificate_id. NOTE: vip causes CloudFront to use a dedicated IP address and may incur extra charges.
    """


    acmCertificateArn?: str

    cloudfrontDefaultCertificate?: bool

    iamCertificateId?: str

    minimumProtocolVersion?: str

    sslSupportMethod?: str


schema CloudfrontAwsUpboundIoV1beta2DistributionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


