"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Application:
    r"""
    Application is the Schema for the Applications API. Manages an EMR Serverless Application

    Attributes
    ----------
    apiVersion : str, default is "emrserverless.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EmrserverlessAwsUpboundIoV1beta1ApplicationSpec, default is Undefined, required
        spec
    status : EmrserverlessAwsUpboundIoV1beta1ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "emrserverless.aws.upbound.io/v1beta1" = "emrserverless.aws.upbound.io/v1beta1"

    kind: "Application" = "Application"

    metadata?: v1.ObjectMeta

    spec: EmrserverlessAwsUpboundIoV1beta1ApplicationSpec

    status?: EmrserverlessAwsUpboundIoV1beta1ApplicationStatus


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpec:
    r"""
    ApplicationSpec defines the desired state of Application

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProvider, default is Undefined, required
        for provider
    initProvider : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProvider

    initProvider?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecProviderConfigRef

    publishConnectionDetailsTo?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProvider:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        –  The CPU architecture of an application. Valid values are ARM64 or X86_64. Default value is X86_64.
    autoStartConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderAutoStartConfigurationItems0], default is Undefined, optional
        –  The configuration for an application to automatically start on job submission.
    autoStopConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderAutoStopConfigurationItems0], default is Undefined, optional
        –  The configuration for an application to automatically stop after a certain amount of time being idle.
    imageConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderImageConfigurationItems0], default is Undefined, optional
        –  The image configuration applied to all worker types.
    initialCapacity : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0], default is Undefined, optional
        –  The capacity to initialize when the application is created.
    interactiveConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInteractiveConfigurationItems0], default is Undefined, optional
        –  Enables the interactive use cases to use when running an application.
    maximumCapacity : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderMaximumCapacityItems0], default is Undefined, optional
        –  The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
    name : str, default is Undefined, optional
        –  The name of the application.
    networkConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderNetworkConfigurationItems0], default is Undefined, optional
        –  The network configuration for customer VPC connectivity.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    releaseLabel : str, default is Undefined, optional
        –  The EMR release version associated with the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        –  The type of application you want to start, such as spark or hive.
    """


    architecture?: str

    autoStartConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderAutoStartConfigurationItems0]

    autoStopConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderAutoStopConfigurationItems0]

    imageConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderImageConfigurationItems0]

    initialCapacity?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0]

    interactiveConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInteractiveConfigurationItems0]

    maximumCapacity?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderMaximumCapacityItems0]

    name?: str

    networkConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderNetworkConfigurationItems0]

    region: str

    releaseLabel?: str

    tags?: {str:str}

    $type?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderAutoStartConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider auto start configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables the application to automatically start on job submission. Defaults to true.
    """


    enabled?: bool


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderAutoStopConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider auto stop configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables the application to automatically start on job submission. Defaults to true.
    idleTimeoutMinutes : float, default is Undefined, optional
        The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.
    """


    enabled?: bool

    idleTimeoutMinutes?: float


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderImageConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider image configuration items0

    Attributes
    ----------
    imageUri : str, default is Undefined, optional
        The image URI.
    """


    imageUri?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider initial capacity items0

    Attributes
    ----------
    initialCapacityConfig : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0InitialCapacityConfigItems0], default is Undefined, optional
        The initial capacity configuration per worker.
    initialCapacityType : str, default is Undefined, optional
        The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.
    """


    initialCapacityConfig?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0InitialCapacityConfigItems0]

    initialCapacityType?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0InitialCapacityConfigItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider initial capacity items0 initial capacity config items0

    Attributes
    ----------
    workerConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0], default is Undefined, optional
        The resource configuration of the initial capacity configuration.
    workerCount : float, default is Undefined, optional
        The number of workers in the initial capacity configuration.
    """


    workerConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0]

    workerCount?: float


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider initial capacity items0 initial capacity config items0 worker configuration items0

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        The maximum allowed CPU for an application.
    disk : str, default is Undefined, optional
        The maximum allowed disk for an application.
    memory : str, default is Undefined, optional
        The maximum allowed resources for an application.
    """


    cpu?: str

    disk?: str

    memory?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderInteractiveConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider interactive configuration items0

    Attributes
    ----------
    livyEndpointEnabled : bool, default is Undefined, optional
        Enables an Apache Livy endpoint that you can connect to and run interactive jobs.
    studioEnabled : bool, default is Undefined, optional
        Enables you to connect an application to Amazon EMR Studio to run interactive workloads in a notebook.
    """


    livyEndpointEnabled?: bool

    studioEnabled?: bool


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderMaximumCapacityItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider maximum capacity items0

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        The maximum allowed CPU for an application.
    disk : str, default is Undefined, optional
        The maximum allowed disk for an application.
    memory : str, default is Undefined, optional
        The maximum allowed resources for an application.
    """


    cpu?: str

    disk?: str

    memory?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecForProviderNetworkConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec for provider network configuration items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The array of security group Ids for customer VPC connectivity.
    subnetIds : [str], default is Undefined, optional
        The array of subnet Ids for customer VPC connectivity.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        –  The CPU architecture of an application. Valid values are ARM64 or X86_64. Default value is X86_64.
    autoStartConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderAutoStartConfigurationItems0], default is Undefined, optional
        –  The configuration for an application to automatically start on job submission.
    autoStopConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderAutoStopConfigurationItems0], default is Undefined, optional
        –  The configuration for an application to automatically stop after a certain amount of time being idle.
    imageConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderImageConfigurationItems0], default is Undefined, optional
        –  The image configuration applied to all worker types.
    initialCapacity : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0], default is Undefined, optional
        –  The capacity to initialize when the application is created.
    interactiveConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInteractiveConfigurationItems0], default is Undefined, optional
        –  Enables the interactive use cases to use when running an application.
    maximumCapacity : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderMaximumCapacityItems0], default is Undefined, optional
        –  The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
    name : str, default is Undefined, optional
        –  The name of the application.
    networkConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderNetworkConfigurationItems0], default is Undefined, optional
        –  The network configuration for customer VPC connectivity.
    releaseLabel : str, default is Undefined, optional
        –  The EMR release version associated with the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        –  The type of application you want to start, such as spark or hive.
    """


    architecture?: str

    autoStartConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderAutoStartConfigurationItems0]

    autoStopConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderAutoStopConfigurationItems0]

    imageConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderImageConfigurationItems0]

    initialCapacity?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0]

    interactiveConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInteractiveConfigurationItems0]

    maximumCapacity?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderMaximumCapacityItems0]

    name?: str

    networkConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderNetworkConfigurationItems0]

    releaseLabel?: str

    tags?: {str:str}

    $type?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderAutoStartConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider auto start configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables the application to automatically start on job submission. Defaults to true.
    """


    enabled?: bool


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderAutoStopConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider auto stop configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables the application to automatically start on job submission. Defaults to true.
    idleTimeoutMinutes : float, default is Undefined, optional
        The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.
    """


    enabled?: bool

    idleTimeoutMinutes?: float


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderImageConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider image configuration items0

    Attributes
    ----------
    imageUri : str, default is Undefined, optional
        The image URI.
    """


    imageUri?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider initial capacity items0

    Attributes
    ----------
    initialCapacityConfig : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0InitialCapacityConfigItems0], default is Undefined, optional
        The initial capacity configuration per worker.
    initialCapacityType : str, default is Undefined, optional
        The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.
    """


    initialCapacityConfig?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0InitialCapacityConfigItems0]

    initialCapacityType?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0InitialCapacityConfigItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider initial capacity items0 initial capacity config items0

    Attributes
    ----------
    workerConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0], default is Undefined, optional
        The resource configuration of the initial capacity configuration.
    workerCount : float, default is Undefined, optional
        The number of workers in the initial capacity configuration.
    """


    workerConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0]

    workerCount?: float


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider initial capacity items0 initial capacity config items0 worker configuration items0

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        The maximum allowed CPU for an application.
    disk : str, default is Undefined, optional
        The maximum allowed disk for an application.
    memory : str, default is Undefined, optional
        The maximum allowed resources for an application.
    """


    cpu?: str

    disk?: str

    memory?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderInteractiveConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider interactive configuration items0

    Attributes
    ----------
    livyEndpointEnabled : bool, default is Undefined, optional
        Enables an Apache Livy endpoint that you can connect to and run interactive jobs.
    studioEnabled : bool, default is Undefined, optional
        Enables you to connect an application to Amazon EMR Studio to run interactive workloads in a notebook.
    """


    livyEndpointEnabled?: bool

    studioEnabled?: bool


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderMaximumCapacityItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider maximum capacity items0

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        The maximum allowed CPU for an application.
    disk : str, default is Undefined, optional
        The maximum allowed disk for an application.
    memory : str, default is Undefined, optional
        The maximum allowed resources for an application.
    """


    cpu?: str

    disk?: str

    memory?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecInitProviderNetworkConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application spec init provider network configuration items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The array of security group Ids for customer VPC connectivity.
    subnetIds : [str], default is Undefined, optional
        The array of subnet Ids for customer VPC connectivity.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef

    metadata?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata

    name: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatus:
    r"""
    ApplicationStatus defines the observed state of Application.

    Attributes
    ----------
    atProvider : EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProvider

    conditions?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusConditionsItems0]

    observedGeneration?: int


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProvider:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        –  The CPU architecture of an application. Valid values are ARM64 or X86_64. Default value is X86_64.
    arn : str, default is Undefined, optional
        ARN of the cluster.
    autoStartConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderAutoStartConfigurationItems0], default is Undefined, optional
        –  The configuration for an application to automatically start on job submission.
    autoStopConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderAutoStopConfigurationItems0], default is Undefined, optional
        –  The configuration for an application to automatically stop after a certain amount of time being idle.
    id : str, default is Undefined, optional
        The ID of the cluster.
    imageConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderImageConfigurationItems0], default is Undefined, optional
        –  The image configuration applied to all worker types.
    initialCapacity : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0], default is Undefined, optional
        –  The capacity to initialize when the application is created.
    interactiveConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInteractiveConfigurationItems0], default is Undefined, optional
        –  Enables the interactive use cases to use when running an application.
    maximumCapacity : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderMaximumCapacityItems0], default is Undefined, optional
        –  The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
    name : str, default is Undefined, optional
        –  The name of the application.
    networkConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderNetworkConfigurationItems0], default is Undefined, optional
        –  The network configuration for customer VPC connectivity.
    releaseLabel : str, default is Undefined, optional
        –  The EMR release version associated with the application.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        –  The type of application you want to start, such as spark or hive.
    """


    architecture?: str

    arn?: str

    autoStartConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderAutoStartConfigurationItems0]

    autoStopConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderAutoStopConfigurationItems0]

    id?: str

    imageConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderImageConfigurationItems0]

    initialCapacity?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0]

    interactiveConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInteractiveConfigurationItems0]

    maximumCapacity?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderMaximumCapacityItems0]

    name?: str

    networkConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderNetworkConfigurationItems0]

    releaseLabel?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderAutoStartConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider auto start configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables the application to automatically start on job submission. Defaults to true.
    """


    enabled?: bool


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderAutoStopConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider auto stop configuration items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables the application to automatically start on job submission. Defaults to true.
    idleTimeoutMinutes : float, default is Undefined, optional
        The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.
    """


    enabled?: bool

    idleTimeoutMinutes?: float


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderImageConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider image configuration items0

    Attributes
    ----------
    imageUri : str, default is Undefined, optional
        The image URI.
    """


    imageUri?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider initial capacity items0

    Attributes
    ----------
    initialCapacityConfig : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0InitialCapacityConfigItems0], default is Undefined, optional
        The initial capacity configuration per worker.
    initialCapacityType : str, default is Undefined, optional
        The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.
    """


    initialCapacityConfig?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0InitialCapacityConfigItems0]

    initialCapacityType?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0InitialCapacityConfigItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider initial capacity items0 initial capacity config items0

    Attributes
    ----------
    workerConfiguration : [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0], default is Undefined, optional
        The resource configuration of the initial capacity configuration.
    workerCount : float, default is Undefined, optional
        The number of workers in the initial capacity configuration.
    """


    workerConfiguration?: [EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0]

    workerCount?: float


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInitialCapacityItems0InitialCapacityConfigItems0WorkerConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider initial capacity items0 initial capacity config items0 worker configuration items0

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        The maximum allowed CPU for an application.
    disk : str, default is Undefined, optional
        The maximum allowed disk for an application.
    memory : str, default is Undefined, optional
        The maximum allowed resources for an application.
    """


    cpu?: str

    disk?: str

    memory?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderInteractiveConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider interactive configuration items0

    Attributes
    ----------
    livyEndpointEnabled : bool, default is Undefined, optional
        Enables an Apache Livy endpoint that you can connect to and run interactive jobs.
    studioEnabled : bool, default is Undefined, optional
        Enables you to connect an application to Amazon EMR Studio to run interactive workloads in a notebook.
    """


    livyEndpointEnabled?: bool

    studioEnabled?: bool


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderMaximumCapacityItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider maximum capacity items0

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        The maximum allowed CPU for an application.
    disk : str, default is Undefined, optional
        The maximum allowed disk for an application.
    memory : str, default is Undefined, optional
        The maximum allowed resources for an application.
    """


    cpu?: str

    disk?: str

    memory?: str


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusAtProviderNetworkConfigurationItems0:
    r"""
    emrserverless aws upbound io v1beta1 application status at provider network configuration items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        The array of security group Ids for customer VPC connectivity.
    subnetIds : [str], default is Undefined, optional
        The array of subnet Ids for customer VPC connectivity.
    """


    securityGroupIds?: [str]

    subnetIds?: [str]


schema EmrserverlessAwsUpboundIoV1beta1ApplicationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


