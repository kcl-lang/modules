"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Record:
    r"""
    Record is the Schema for the Records API. Provides a Route53 record resource.

    Attributes
    ----------
    apiVersion : str, default is "route53.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Record", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53AwsUpboundIoV1beta2RecordSpec, default is Undefined, required
        spec
    status : Route53AwsUpboundIoV1beta2RecordStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53.aws.upbound.io/v1beta2" = "route53.aws.upbound.io/v1beta2"

    kind: "Record" = "Record"

    metadata?: v1.ObjectMeta

    spec: Route53AwsUpboundIoV1beta2RecordSpec

    status?: Route53AwsUpboundIoV1beta2RecordStatus


schema Route53AwsUpboundIoV1beta2RecordSpec:
    r"""
    RecordSpec defines the desired state of Record

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Route53AwsUpboundIoV1beta2RecordSpecForProvider, default is Undefined, required
        for provider
    initProvider : Route53AwsUpboundIoV1beta2RecordSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Route53AwsUpboundIoV1beta2RecordSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53AwsUpboundIoV1beta2RecordSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53AwsUpboundIoV1beta2RecordSpecForProvider

    initProvider?: Route53AwsUpboundIoV1beta2RecordSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Route53AwsUpboundIoV1beta2RecordSpecProviderConfigRef

    publishConnectionDetailsTo?: Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53AwsUpboundIoV1beta2RecordSpecWriteConnectionSecretToRef


schema Route53AwsUpboundIoV1beta2RecordSpecForProvider:
    r"""
    route53 aws upbound io v1beta2 record spec for provider

    Attributes
    ----------
    alias : Route53AwsUpboundIoV1beta2RecordSpecForProviderAlias, default is Undefined, optional
        alias
    allowOverwrite : bool, default is Undefined, optional
        false by default. This configuration is not recommended for most environments.
    cidrRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecForProviderCidrRoutingPolicy, default is Undefined, optional
        cidr routing policy
    failoverRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecForProviderFailoverRoutingPolicy, default is Undefined, optional
        failover routing policy
    geolocationRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecForProviderGeolocationRoutingPolicy, default is Undefined, optional
        geolocation routing policy
    geoproximityRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecForProviderGeoproximityRoutingPolicy, default is Undefined, optional
        geoproximity routing policy
    healthCheckId : str, default is Undefined, optional
        The health check the record should be associated with.
    healthCheckIdRef : Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDRef, default is Undefined, optional
        health check Id ref
    healthCheckIdSelector : Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDSelector, default is Undefined, optional
        health check Id selector
    latencyRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecForProviderLatencyRoutingPolicy, default is Undefined, optional
        latency routing policy
    multivalueAnswerRoutingPolicy : bool, default is Undefined, optional
        Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
    name : str, default is Undefined, optional
        The name of the record.
    records : [str], default is Undefined, optional
        A string list of records.g., "first255characters\"\"morecharacters").
    recordsRefs : [Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsRefsItems0], default is Undefined, optional
        References to EIP in ec2 to populate records.
    recordsSelector : Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsSelector, default is Undefined, optional
        records selector
    region : str, default is Undefined, required
        An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
        Region is the region you'd like your resource to be created in.
    setIdentifier : str, default is Undefined, optional
        Unique identifier to differentiate records with routing policies from one another. Required if using cidr_routing_policy, failover_routing_policy, geolocation_routing_policy,geoproximity_routing_policy, latency_routing_policy, multivalue_answer_routing_policy, or weighted_routing_policy.
    ttl : float, default is Undefined, optional
        The TTL of the record.
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    weightedRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecForProviderWeightedRoutingPolicy, default is Undefined, optional
        weighted routing policy
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    zoneIdRef : Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDRef, default is Undefined, optional
        zone Id ref
    zoneIdSelector : Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDSelector, default is Undefined, optional
        zone Id selector
    """


    alias?: Route53AwsUpboundIoV1beta2RecordSpecForProviderAlias

    allowOverwrite?: bool

    cidrRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderCidrRoutingPolicy

    failoverRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderFailoverRoutingPolicy

    geolocationRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderGeolocationRoutingPolicy

    geoproximityRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderGeoproximityRoutingPolicy

    healthCheckId?: str

    healthCheckIdRef?: Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDRef

    healthCheckIdSelector?: Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDSelector

    latencyRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderLatencyRoutingPolicy

    multivalueAnswerRoutingPolicy?: bool

    name?: str

    records?: [str]

    recordsRefs?: [Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsRefsItems0]

    recordsSelector?: Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsSelector

    region: str

    setIdentifier?: str

    ttl?: float

    $type?: str

    weightedRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderWeightedRoutingPolicy

    zoneId?: str

    zoneIdRef?: Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDRef

    zoneIdSelector?: Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDSelector


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderAlias:
    r"""
    An alias block. Conflicts with ttl & records.
    Documented below.

    Attributes
    ----------
    evaluateTargetHealth : bool, default is Undefined, optional
        Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
    name : str, default is Undefined, optional
        The name of the record.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    evaluateTargetHealth?: bool

    name?: str

    zoneId?: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderCidrRoutingPolicy:
    r"""
    A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    collectionId : str, default is Undefined, optional
        The CIDR collection ID. See the aws_route53_cidr_collection resource for more details.
    locationName : str, default is Undefined, optional
        The CIDR collection location name. See the aws_route53_cidr_location resource for more details. A location_name with an asterisk "*" can be used to create a default CIDR record. collection_id is still required for default record.
    """


    collectionId?: str

    locationName?: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderFailoverRoutingPolicy:
    r"""
    A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    """


    $type?: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderGeolocationRoutingPolicy:
    r"""
    A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    continent : str, default is Undefined, optional
        A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
    country : str, default is Undefined, optional
        A two-character country code or * to indicate a default resource record set.
    subdivision : str, default is Undefined, optional
        A subdivision code for a country.
    """


    continent?: str

    country?: str

    subdivision?: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderGeoproximityRoutingPolicy:
    r"""
    A block indicating a routing policy based on the geoproximity of the requestor. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    awsRegion : str, default is Undefined, optional
        A AWS region where the resource is present.
    bias : float, default is Undefined, optional
        Route more traffic or less traffic to the resource by specifying a value ranges between -90 to 90. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html for bias details.
    coordinates : [Route53AwsUpboundIoV1beta2RecordSpecForProviderGeoproximityRoutingPolicyCoordinatesItems0], default is Undefined, optional
        Specify latitude and longitude for routing traffic to non-AWS resources.
    localZoneGroup : str, default is Undefined, optional
        A AWS local zone group where the resource is present. See https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html for local zone group list.
    """


    awsRegion?: str

    bias?: float

    coordinates?: [Route53AwsUpboundIoV1beta2RecordSpecForProviderGeoproximityRoutingPolicyCoordinatesItems0]

    localZoneGroup?: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderGeoproximityRoutingPolicyCoordinatesItems0:
    r"""
    route53 aws upbound io v1beta2 record spec for provider geoproximity routing policy coordinates items0

    Attributes
    ----------
    latitude : str, default is Undefined, optional
        latitude
    longitude : str, default is Undefined, optional
        longitude
    """


    latitude?: str

    longitude?: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDRef:
    r"""
    Reference to a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDRefPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDSelector:
    r"""
    Selector for a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDSelectorPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderHealthCheckIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderLatencyRoutingPolicy:
    r"""
    A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    region : str, default is Undefined, required
        An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
    """


    region: str


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsRefsItems0Policy


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsSelector:
    r"""
    Selector for a list of EIP in ec2 to populate records.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsSelectorPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderRecordsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderWeightedRoutingPolicy:
    r"""
    A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    weight : float, default is Undefined, optional
        A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """


    weight?: float


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDRef:
    r"""
    Reference to a Zone in route53 to populate zoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDRefPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDSelector:
    r"""
    Selector for a Zone in route53 to populate zoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDSelectorPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecForProviderZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    alias : Route53AwsUpboundIoV1beta2RecordSpecInitProviderAlias, default is Undefined, optional
        alias
    allowOverwrite : bool, default is Undefined, optional
        false by default. This configuration is not recommended for most environments.
    cidrRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderCidrRoutingPolicy, default is Undefined, optional
        cidr routing policy
    failoverRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderFailoverRoutingPolicy, default is Undefined, optional
        failover routing policy
    geolocationRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeolocationRoutingPolicy, default is Undefined, optional
        geolocation routing policy
    geoproximityRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeoproximityRoutingPolicy, default is Undefined, optional
        geoproximity routing policy
    healthCheckId : str, default is Undefined, optional
        The health check the record should be associated with.
    healthCheckIdRef : Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDRef, default is Undefined, optional
        health check Id ref
    healthCheckIdSelector : Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDSelector, default is Undefined, optional
        health check Id selector
    latencyRoutingPolicy : any, default is Undefined, optional
        A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
    multivalueAnswerRoutingPolicy : bool, default is Undefined, optional
        Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
    name : str, default is Undefined, optional
        The name of the record.
    records : [str], default is Undefined, optional
        A string list of records.g., "first255characters\"\"morecharacters").
    recordsRefs : [Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsRefsItems0], default is Undefined, optional
        References to EIP in ec2 to populate records.
    recordsSelector : Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsSelector, default is Undefined, optional
        records selector
    setIdentifier : str, default is Undefined, optional
        Unique identifier to differentiate records with routing policies from one another. Required if using cidr_routing_policy, failover_routing_policy, geolocation_routing_policy,geoproximity_routing_policy, latency_routing_policy, multivalue_answer_routing_policy, or weighted_routing_policy.
    ttl : float, default is Undefined, optional
        The TTL of the record.
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    weightedRoutingPolicy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderWeightedRoutingPolicy, default is Undefined, optional
        weighted routing policy
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    zoneIdRef : Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDRef, default is Undefined, optional
        zone Id ref
    zoneIdSelector : Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDSelector, default is Undefined, optional
        zone Id selector
    """


    alias?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderAlias

    allowOverwrite?: bool

    cidrRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderCidrRoutingPolicy

    failoverRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderFailoverRoutingPolicy

    geolocationRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeolocationRoutingPolicy

    geoproximityRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeoproximityRoutingPolicy

    healthCheckId?: str

    healthCheckIdRef?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDRef

    healthCheckIdSelector?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDSelector

    latencyRoutingPolicy?: any

    multivalueAnswerRoutingPolicy?: bool

    name?: str

    records?: [str]

    recordsRefs?: [Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsRefsItems0]

    recordsSelector?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsSelector

    setIdentifier?: str

    ttl?: float

    $type?: str

    weightedRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderWeightedRoutingPolicy

    zoneId?: str

    zoneIdRef?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDRef

    zoneIdSelector?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDSelector


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderAlias:
    r"""
    An alias block. Conflicts with ttl & records.
    Documented below.

    Attributes
    ----------
    evaluateTargetHealth : bool, default is Undefined, optional
        Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
    name : str, default is Undefined, optional
        The name of the record.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    evaluateTargetHealth?: bool

    name?: str

    zoneId?: str


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderCidrRoutingPolicy:
    r"""
    A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    collectionId : str, default is Undefined, optional
        The CIDR collection ID. See the aws_route53_cidr_collection resource for more details.
    locationName : str, default is Undefined, optional
        The CIDR collection location name. See the aws_route53_cidr_location resource for more details. A location_name with an asterisk "*" can be used to create a default CIDR record. collection_id is still required for default record.
    """


    collectionId?: str

    locationName?: str


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderFailoverRoutingPolicy:
    r"""
    A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    """


    $type?: str


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeolocationRoutingPolicy:
    r"""
    A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    continent : str, default is Undefined, optional
        A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
    country : str, default is Undefined, optional
        A two-character country code or * to indicate a default resource record set.
    subdivision : str, default is Undefined, optional
        A subdivision code for a country.
    """


    continent?: str

    country?: str

    subdivision?: str


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeoproximityRoutingPolicy:
    r"""
    A block indicating a routing policy based on the geoproximity of the requestor. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    awsRegion : str, default is Undefined, optional
        A AWS region where the resource is present.
    bias : float, default is Undefined, optional
        Route more traffic or less traffic to the resource by specifying a value ranges between -90 to 90. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html for bias details.
    coordinates : [Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeoproximityRoutingPolicyCoordinatesItems0], default is Undefined, optional
        Specify latitude and longitude for routing traffic to non-AWS resources.
    localZoneGroup : str, default is Undefined, optional
        A AWS local zone group where the resource is present. See https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html for local zone group list.
    """


    awsRegion?: str

    bias?: float

    coordinates?: [Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeoproximityRoutingPolicyCoordinatesItems0]

    localZoneGroup?: str


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderGeoproximityRoutingPolicyCoordinatesItems0:
    r"""
    route53 aws upbound io v1beta2 record spec init provider geoproximity routing policy coordinates items0

    Attributes
    ----------
    latitude : str, default is Undefined, optional
        latitude
    longitude : str, default is Undefined, optional
        longitude
    """


    latitude?: str

    longitude?: str


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDRef:
    r"""
    Reference to a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDRefPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDSelector:
    r"""
    Selector for a HealthCheck in route53 to populate healthCheckId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDSelectorPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderHealthCheckIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsRefsItems0Policy


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsSelector:
    r"""
    Selector for a list of EIP in ec2 to populate records.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsSelectorPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderRecordsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderWeightedRoutingPolicy:
    r"""
    A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    weight : float, default is Undefined, optional
        A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """


    weight?: float


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDRef:
    r"""
    Reference to a Zone in route53 to populate zoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDRefPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDSelector:
    r"""
    Selector for a Zone in route53 to populate zoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDSelectorPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecInitProviderZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecProviderConfigRefPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53AwsUpboundIoV1beta2RecordSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53AwsUpboundIoV1beta2RecordSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53AwsUpboundIoV1beta2RecordStatus:
    r"""
    RecordStatus defines the observed state of Record.

    Attributes
    ----------
    atProvider : Route53AwsUpboundIoV1beta2RecordStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53AwsUpboundIoV1beta2RecordStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Route53AwsUpboundIoV1beta2RecordStatusAtProvider

    conditions?: [Route53AwsUpboundIoV1beta2RecordStatusConditionsItems0]

    observedGeneration?: int


schema Route53AwsUpboundIoV1beta2RecordStatusAtProvider:
    r"""
    route53 aws upbound io v1beta2 record status at provider

    Attributes
    ----------
    alias : Route53AwsUpboundIoV1beta2RecordStatusAtProviderAlias, default is Undefined, optional
        alias
    allowOverwrite : bool, default is Undefined, optional
        false by default. This configuration is not recommended for most environments.
    cidrRoutingPolicy : Route53AwsUpboundIoV1beta2RecordStatusAtProviderCidrRoutingPolicy, default is Undefined, optional
        cidr routing policy
    failoverRoutingPolicy : Route53AwsUpboundIoV1beta2RecordStatusAtProviderFailoverRoutingPolicy, default is Undefined, optional
        failover routing policy
    fqdn : str, default is Undefined, optional
        FQDN built using the zone domain and name.
    geolocationRoutingPolicy : Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeolocationRoutingPolicy, default is Undefined, optional
        geolocation routing policy
    geoproximityRoutingPolicy : Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeoproximityRoutingPolicy, default is Undefined, optional
        geoproximity routing policy
    healthCheckId : str, default is Undefined, optional
        The health check the record should be associated with.
    id : str, default is Undefined, optional
        id
    latencyRoutingPolicy : Route53AwsUpboundIoV1beta2RecordStatusAtProviderLatencyRoutingPolicy, default is Undefined, optional
        latency routing policy
    multivalueAnswerRoutingPolicy : bool, default is Undefined, optional
        Set to true to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
    name : str, default is Undefined, optional
        The name of the record.
    records : [str], default is Undefined, optional
        A string list of records.g., "first255characters\"\"morecharacters").
    setIdentifier : str, default is Undefined, optional
        Unique identifier to differentiate records with routing policies from one another. Required if using cidr_routing_policy, failover_routing_policy, geolocation_routing_policy,geoproximity_routing_policy, latency_routing_policy, multivalue_answer_routing_policy, or weighted_routing_policy.
    ttl : float, default is Undefined, optional
        The TTL of the record.
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    weightedRoutingPolicy : Route53AwsUpboundIoV1beta2RecordStatusAtProviderWeightedRoutingPolicy, default is Undefined, optional
        weighted routing policy
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    alias?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderAlias

    allowOverwrite?: bool

    cidrRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderCidrRoutingPolicy

    failoverRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderFailoverRoutingPolicy

    fqdn?: str

    geolocationRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeolocationRoutingPolicy

    geoproximityRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeoproximityRoutingPolicy

    healthCheckId?: str

    id?: str

    latencyRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderLatencyRoutingPolicy

    multivalueAnswerRoutingPolicy?: bool

    name?: str

    records?: [str]

    setIdentifier?: str

    ttl?: float

    $type?: str

    weightedRoutingPolicy?: Route53AwsUpboundIoV1beta2RecordStatusAtProviderWeightedRoutingPolicy

    zoneId?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderAlias:
    r"""
    An alias block. Conflicts with ttl & records.
    Documented below.

    Attributes
    ----------
    evaluateTargetHealth : bool, default is Undefined, optional
        Set to true if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see related part of documentation.
    name : str, default is Undefined, optional
        The name of the record.
    zoneId : str, default is Undefined, optional
        The ID of the hosted zone to contain this record.
    """


    evaluateTargetHealth?: bool

    name?: str

    zoneId?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderCidrRoutingPolicy:
    r"""
    A block indicating a routing policy based on the IP network ranges of requestors. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    collectionId : str, default is Undefined, optional
        The CIDR collection ID. See the aws_route53_cidr_collection resource for more details.
    locationName : str, default is Undefined, optional
        The CIDR collection location name. See the aws_route53_cidr_location resource for more details. A location_name with an asterisk "*" can be used to create a default CIDR record. collection_id is still required for default record.
    """


    collectionId?: str

    locationName?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderFailoverRoutingPolicy:
    r"""
    A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        The record type. Valid values are A, AAAA, CAA, CNAME, DS, MX, NAPTR, NS, PTR, SOA, SPF, SRV and TXT.
    """


    $type?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeolocationRoutingPolicy:
    r"""
    A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    continent : str, default is Undefined, optional
        A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either continent or country must be specified.
    country : str, default is Undefined, optional
        A two-character country code or * to indicate a default resource record set.
    subdivision : str, default is Undefined, optional
        A subdivision code for a country.
    """


    continent?: str

    country?: str

    subdivision?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeoproximityRoutingPolicy:
    r"""
    A block indicating a routing policy based on the geoproximity of the requestor. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    awsRegion : str, default is Undefined, optional
        A AWS region where the resource is present.
    bias : float, default is Undefined, optional
        Route more traffic or less traffic to the resource by specifying a value ranges between -90 to 90. See https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html for bias details.
    coordinates : [Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeoproximityRoutingPolicyCoordinatesItems0], default is Undefined, optional
        Specify latitude and longitude for routing traffic to non-AWS resources.
    localZoneGroup : str, default is Undefined, optional
        A AWS local zone group where the resource is present. See https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html for local zone group list.
    """


    awsRegion?: str

    bias?: float

    coordinates?: [Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeoproximityRoutingPolicyCoordinatesItems0]

    localZoneGroup?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderGeoproximityRoutingPolicyCoordinatesItems0:
    r"""
    route53 aws upbound io v1beta2 record status at provider geoproximity routing policy coordinates items0

    Attributes
    ----------
    latitude : str, default is Undefined, optional
        latitude
    longitude : str, default is Undefined, optional
        longitude
    """


    latitude?: str

    longitude?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderLatencyRoutingPolicy:
    r"""
    A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    region : str, default is Undefined, optional
        An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
    """


    region?: str


schema Route53AwsUpboundIoV1beta2RecordStatusAtProviderWeightedRoutingPolicy:
    r"""
    A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.

    Attributes
    ----------
    weight : float, default is Undefined, optional
        A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
    """


    weight?: float


schema Route53AwsUpboundIoV1beta2RecordStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


