"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema VirtualNode:
    r"""
    VirtualNode is the Schema for the VirtualNodes API. Provides an AWS App Mesh virtual node resource.

    Attributes
    ----------
    apiVersion : str, default is "appmesh.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "VirtualNode", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppmeshAwsUpboundIoV1beta2VirtualNodeSpec, default is Undefined, required
        spec
    status : AppmeshAwsUpboundIoV1beta2VirtualNodeStatus, default is Undefined, optional
        status
    """


    apiVersion: "appmesh.aws.upbound.io/v1beta2" = "appmesh.aws.upbound.io/v1beta2"

    kind: "VirtualNode" = "VirtualNode"

    metadata?: v1.ObjectMeta

    spec: AppmeshAwsUpboundIoV1beta2VirtualNodeSpec

    status?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatus


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpec:
    r"""
    VirtualNodeSpec defines the desired state of VirtualNode

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProvider

    initProvider?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecProviderConfigRef

    publishConnectionDetailsTo?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecWriteConnectionSecretToRef


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProvider:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    spec : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameSelector

    meshOwner?: str

    name?: str

    region: str

    spec?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpec

    tags?: {str:str}


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpec:
    r"""
    Virtual node specification to apply.

    Attributes
    ----------
    backend : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0], default is Undefined, optional
        Backends to which the virtual node is expected to send outbound traffic.
    backendDefaults : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaults, default is Undefined, optional
        backend defaults
    listener : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0], default is Undefined, optional
        Listeners from which the virtual node is expected to receive inbound traffic.
    logging : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLogging, default is Undefined, optional
        logging
    serviceDiscovery : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscovery, default is Undefined, optional
        service discovery
    """


    backend?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0]

    backendDefaults?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaults

    listener?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0]

    logging?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLogging

    serviceDiscovery?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscovery


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaults:
    r"""
    Defaults for backends.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicy, default is Undefined, optional
        client policy
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicy:
    r"""
    Client policy for the backend.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider spec backend items0

    Attributes
    ----------
    virtualService : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualService, default is Undefined, optional
        virtual service
    """


    virtualService?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualService


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualService:
    r"""
    Virtual service to use as a backend for a virtual node.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicy, default is Undefined, optional
        client policy
    virtualServiceName : str, default is Undefined, optional
        Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicy

    virtualServiceName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicy:
    r"""
    Client policy for the backend.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider spec listener items0

    Attributes
    ----------
    connectionPool : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPool, default is Undefined, optional
        connection pool
    healthCheck : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0HealthCheck, default is Undefined, optional
        health check
    outlierDetection : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetection, default is Undefined, optional
        outlier detection
    portMapping : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0PortMapping, default is Undefined, optional
        port mapping
    timeout : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0Timeout, default is Undefined, optional
        timeout
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLS, default is Undefined, optional
        tls
    """


    connectionPool?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPool

    healthCheck?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0HealthCheck

    outlierDetection?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetection

    portMapping?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0PortMapping

    timeout?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0Timeout

    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPool:
    r"""
    Connection pool information for the listener.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolGrpc, default is Undefined, optional
        grpc
    http : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolHTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolHttp2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolTCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolGrpc

    http?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolHTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolHttp2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolTCPItems0]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolHTTPItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider spec listener items0 connection pool HTTP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolHttp2Items0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider spec listener items0 connection pool http2 items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0ConnectionPoolTCPItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider spec listener items0 connection pool TCP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    """


    maxConnections?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0HealthCheck:
    r"""
    Health check information for the listener.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetection:
    r"""
    Outlier detection information for the listener.

    Attributes
    ----------
    baseEjectionDuration : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration, default is Undefined, optional
        base ejection duration
    interval : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetectionInterval, default is Undefined, optional
        interval
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
        Minimum value of 0. Maximum value of 100.
    maxServerErrors : float, default is Undefined, optional
        Number of consecutive 5xx errors required for ejection. Minimum value of 1.
    """


    baseEjectionDuration?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration

    interval?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetectionInterval

    maxEjectionPercent?: float

    maxServerErrors?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration:
    r"""
    Base amount of time for which a host is ejected.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0OutlierDetectionInterval:
    r"""
    Time interval between ejection sweep analysis.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0PortMapping:
    r"""
    Port mapping information for the listener.

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificate, default is Undefined, optional
        certificate
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificate

    mode?: str

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrustSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0Timeout:
    r"""
    Timeouts for different protocols.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpc, default is Undefined, optional
        grpc
    http : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTP, default is Undefined, optional
        http
    http2 : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2, default is Undefined, optional
        http2
    tcp : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutTCP, default is Undefined, optional
        tcp
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpc

    http?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTP

    http2?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2

    tcp?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutTCP


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpcIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpcPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpcIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpcPerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpcIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutGrpcPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTP:
    r"""
    Connection pool information for HTTP listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTPIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTPPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTPIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTPPerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTPIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHTTPPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2:
    r"""
    Connection pool information for HTTP2 listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2Idle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2PerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2Idle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2PerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2Idle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutHttp2PerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutTCP:
    r"""
    Connection pool information for TCP listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutTCPIdle, default is Undefined, optional
        idle
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutTCPIdle


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecListenerItems0TimeoutTCPIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLogging:
    r"""
    Inbound and outbound access logging information for the virtual node.

    Attributes
    ----------
    accessLog : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLog, default is Undefined, optional
        access log
    """


    accessLog?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLog


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLog:
    r"""
    Access log configuration for a virtual node.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFile, default is Undefined, optional
        file
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFile


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    format : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFileFormat, default is Undefined, optional
        format
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFileFormat

    path?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFileFormat:
    r"""
    The specified format for the logs.

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFileFormatJSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFileFormatJSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecLoggingAccessLogFileFormatJSONItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec for provider spec logging access log file format JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscovery:
    r"""
    Service discovery information for the virtual node.

    Attributes
    ----------
    awsCloudMap : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMap, default is Undefined, optional
        aws cloud map
    dns : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryDNS, default is Undefined, optional
        dns
    """


    awsCloudMap?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMap

    dns?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryDNS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMap:
    r"""
    Any AWS Cloud Map information for the virtual node.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
    namespaceName : str, default is Undefined, optional
        Name of the AWS Cloud Map namespace to use.
        Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
    namespaceNameRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRef, default is Undefined, optional
        namespace name ref
    namespaceNameSelector : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelector, default is Undefined, optional
        namespace name selector
    serviceName : str, default is Undefined, optional
        attribute of the dns object to hostname.
    """


    attributes?: {str:str}

    namespaceName?: str

    namespaceNameRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRef

    namespaceNameSelector?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelector

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRef:
    r"""
    Reference to a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelector:
    r"""
    Selector for a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecForProviderSpecServiceDiscoveryDNS:
    r"""
    DNS service name for the virtual node.

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        DNS host name for your virtual node.
    ipPreference : str, default is Undefined, optional
        The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.
    responseType : str, default is Undefined, optional
        The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.
    """


    hostname?: str

    ipPreference?: str

    responseType?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    meshNameRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameRef, default is Undefined, optional
        mesh name ref
    meshNameSelector : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameSelector, default is Undefined, optional
        mesh name selector
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
    spec : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    meshName?: str

    meshNameRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameRef

    meshNameSelector?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameSelector

    meshOwner?: str

    name?: str

    spec?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpec

    tags?: {str:str}


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameRef:
    r"""
    Reference to a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameSelector:
    r"""
    Selector for a Mesh in appmesh to populate meshName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderMeshNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpec:
    r"""
    Virtual node specification to apply.

    Attributes
    ----------
    backend : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0], default is Undefined, optional
        Backends to which the virtual node is expected to send outbound traffic.
    backendDefaults : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaults, default is Undefined, optional
        backend defaults
    listener : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0], default is Undefined, optional
        Listeners from which the virtual node is expected to receive inbound traffic.
    logging : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLogging, default is Undefined, optional
        logging
    serviceDiscovery : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscovery, default is Undefined, optional
        service discovery
    """


    backend?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0]

    backendDefaults?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaults

    listener?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0]

    logging?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLogging

    serviceDiscovery?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscovery


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaults:
    r"""
    Defaults for backends.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicy, default is Undefined, optional
        client policy
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicy:
    r"""
    Client policy for the backend.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec init provider spec backend items0

    Attributes
    ----------
    virtualService : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualService, default is Undefined, optional
        virtual service
    """


    virtualService?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualService


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualService:
    r"""
    Virtual service to use as a backend for a virtual node.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicy, default is Undefined, optional
        client policy
    virtualServiceName : str, default is Undefined, optional
        Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicy

    virtualServiceName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicy:
    r"""
    Client policy for the backend.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec init provider spec listener items0

    Attributes
    ----------
    connectionPool : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPool, default is Undefined, optional
        connection pool
    healthCheck : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0HealthCheck, default is Undefined, optional
        health check
    outlierDetection : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetection, default is Undefined, optional
        outlier detection
    portMapping : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0PortMapping, default is Undefined, optional
        port mapping
    timeout : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0Timeout, default is Undefined, optional
        timeout
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLS, default is Undefined, optional
        tls
    """


    connectionPool?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPool

    healthCheck?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0HealthCheck

    outlierDetection?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetection

    portMapping?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0PortMapping

    timeout?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0Timeout

    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPool:
    r"""
    Connection pool information for the listener.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolGrpc, default is Undefined, optional
        grpc
    http : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolHTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolHttp2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolTCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolGrpc

    http?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolHTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolHttp2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolTCPItems0]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolHTTPItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec init provider spec listener items0 connection pool HTTP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolHttp2Items0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec init provider spec listener items0 connection pool http2 items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0ConnectionPoolTCPItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec init provider spec listener items0 connection pool TCP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    """


    maxConnections?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0HealthCheck:
    r"""
    Health check information for the listener.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetection:
    r"""
    Outlier detection information for the listener.

    Attributes
    ----------
    baseEjectionDuration : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration, default is Undefined, optional
        base ejection duration
    interval : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetectionInterval, default is Undefined, optional
        interval
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
        Minimum value of 0. Maximum value of 100.
    maxServerErrors : float, default is Undefined, optional
        Number of consecutive 5xx errors required for ejection. Minimum value of 1.
    """


    baseEjectionDuration?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration

    interval?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetectionInterval

    maxEjectionPercent?: float

    maxServerErrors?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration:
    r"""
    Base amount of time for which a host is ejected.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0OutlierDetectionInterval:
    r"""
    Time interval between ejection sweep analysis.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0PortMapping:
    r"""
    Port mapping information for the listener.

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificate, default is Undefined, optional
        certificate
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificate

    mode?: str

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrustSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0Timeout:
    r"""
    Timeouts for different protocols.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpc, default is Undefined, optional
        grpc
    http : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTP, default is Undefined, optional
        http
    http2 : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2, default is Undefined, optional
        http2
    tcp : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutTCP, default is Undefined, optional
        tcp
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpc

    http?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTP

    http2?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2

    tcp?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutTCP


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpcIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpcPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpcIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpcPerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpcIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutGrpcPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTP:
    r"""
    Connection pool information for HTTP listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTPIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTPPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTPIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTPPerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTPIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHTTPPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2:
    r"""
    Connection pool information for HTTP2 listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2Idle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2PerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2Idle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2PerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2Idle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutHttp2PerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutTCP:
    r"""
    Connection pool information for TCP listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutTCPIdle, default is Undefined, optional
        idle
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutTCPIdle


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecListenerItems0TimeoutTCPIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLogging:
    r"""
    Inbound and outbound access logging information for the virtual node.

    Attributes
    ----------
    accessLog : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLog, default is Undefined, optional
        access log
    """


    accessLog?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLog


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLog:
    r"""
    Access log configuration for a virtual node.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFile, default is Undefined, optional
        file
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFile


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    format : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFileFormat, default is Undefined, optional
        format
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFileFormat

    path?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFileFormat:
    r"""
    The specified format for the logs.

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFileFormatJSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFileFormatJSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecLoggingAccessLogFileFormatJSONItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node spec init provider spec logging access log file format JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscovery:
    r"""
    Service discovery information for the virtual node.

    Attributes
    ----------
    awsCloudMap : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMap, default is Undefined, optional
        aws cloud map
    dns : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryDNS, default is Undefined, optional
        dns
    """


    awsCloudMap?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMap

    dns?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryDNS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMap:
    r"""
    Any AWS Cloud Map information for the virtual node.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
    namespaceName : str, default is Undefined, optional
        Name of the AWS Cloud Map namespace to use.
        Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
    namespaceNameRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRef, default is Undefined, optional
        namespace name ref
    namespaceNameSelector : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelector, default is Undefined, optional
        namespace name selector
    serviceName : str, default is Undefined, optional
        attribute of the dns object to hostname.
    """


    attributes?: {str:str}

    namespaceName?: str

    namespaceNameRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRef

    namespaceNameSelector?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelector

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRef:
    r"""
    Reference to a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelector:
    r"""
    Selector for a HTTPNamespace in servicediscovery to populate namespaceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelectorPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryAwsCloudMapNamespaceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecInitProviderSpecServiceDiscoveryDNS:
    r"""
    DNS service name for the virtual node.

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        DNS host name for your virtual node.
    ipPreference : str, default is Undefined, optional
        The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.
    responseType : str, default is Undefined, optional
        The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.
    """


    hostname?: str

    ipPreference?: str

    responseType?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecProviderConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToConfigRef

    metadata?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToMetadata

    name: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToConfigRefPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatus:
    r"""
    VirtualNodeStatus defines the observed state of VirtualNode.

    Attributes
    ----------
    atProvider : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProvider

    conditions?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusConditionsItems0]

    observedGeneration?: int


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProvider:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the virtual node.
    createdDate : str, default is Undefined, optional
        Creation date of the virtual node.
    id : str, default is Undefined, optional
        ID of the virtual node.
    lastUpdatedDate : str, default is Undefined, optional
        Last update date of the virtual node.
    meshName : str, default is Undefined, optional
        Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.
    meshOwner : str, default is Undefined, optional
        AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.
    name : str, default is Undefined, optional
        Name to use for the virtual node. Must be between 1 and 255 characters in length.
    resourceOwner : str, default is Undefined, optional
        Resource owner's AWS account ID.
    spec : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpec, default is Undefined, optional
        spec
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    createdDate?: str

    id?: str

    lastUpdatedDate?: str

    meshName?: str

    meshOwner?: str

    name?: str

    resourceOwner?: str

    spec?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpec

    tags?: {str:str}

    tagsAll?: {str:str}


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpec:
    r"""
    Virtual node specification to apply.

    Attributes
    ----------
    backend : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0], default is Undefined, optional
        Backends to which the virtual node is expected to send outbound traffic.
    backendDefaults : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaults, default is Undefined, optional
        backend defaults
    listener : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0], default is Undefined, optional
        Listeners from which the virtual node is expected to receive inbound traffic.
    logging : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLogging, default is Undefined, optional
        logging
    serviceDiscovery : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscovery, default is Undefined, optional
        service discovery
    """


    backend?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0]

    backendDefaults?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaults

    listener?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0]

    logging?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLogging

    serviceDiscovery?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscovery


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaults:
    r"""
    Defaults for backends.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicy, default is Undefined, optional
        client policy
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicy


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicy:
    r"""
    Client policy for the backend.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendDefaultsClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider spec backend items0

    Attributes
    ----------
    virtualService : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualService, default is Undefined, optional
        virtual service
    """


    virtualService?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualService


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualService:
    r"""
    Virtual service to use as a backend for a virtual node.

    Attributes
    ----------
    clientPolicy : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicy, default is Undefined, optional
        client policy
    virtualServiceName : str, default is Undefined, optional
        Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.
    """


    clientPolicy?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicy

    virtualServiceName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicy:
    r"""
    Client policy for the backend.

    Attributes
    ----------
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLS, default is Undefined, optional
        tls
    """


    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate, default is Undefined, optional
        certificate
    enforce : bool, default is Undefined, optional
        Whether the policy is enforced. Default is true.
    ports : [float], default is Undefined, optional
        One or more ports that the policy is enforced for.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate

    enforce?: bool

    ports?: [float]

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        One or more ACM ARNs.
    """


    certificateAuthorityArns?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecBackendItems0VirtualServiceClientPolicyTLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider spec listener items0

    Attributes
    ----------
    connectionPool : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPool, default is Undefined, optional
        connection pool
    healthCheck : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0HealthCheck, default is Undefined, optional
        health check
    outlierDetection : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetection, default is Undefined, optional
        outlier detection
    portMapping : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0PortMapping, default is Undefined, optional
        port mapping
    timeout : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0Timeout, default is Undefined, optional
        timeout
    tls : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLS, default is Undefined, optional
        tls
    """


    connectionPool?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPool

    healthCheck?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0HealthCheck

    outlierDetection?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetection

    portMapping?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0PortMapping

    timeout?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0Timeout

    tls?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPool:
    r"""
    Connection pool information for the listener.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolGrpc, default is Undefined, optional
        grpc
    http : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolHTTPItems0], default is Undefined, optional
        Connection pool information for HTTP listeners.
    http2 : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolHttp2Items0], default is Undefined, optional
        Connection pool information for HTTP2 listeners.
    tcp : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolTCPItems0], default is Undefined, optional
        Connection pool information for TCP listeners.
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolGrpc

    http?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolHTTPItems0]

    http2?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolHttp2Items0]

    tcp?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolTCPItems0]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolHTTPItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider spec listener items0 connection pool HTTP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    maxPendingRequests : float, default is Undefined, optional
        Number of overflowing requests after max_connections Envoy will queue to upstream cluster. Minimum value of 1.
    """


    maxConnections?: float

    maxPendingRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolHttp2Items0:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider spec listener items0 connection pool http2 items0

    Attributes
    ----------
    maxRequests : float, default is Undefined, optional
        Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of 1.
    """


    maxRequests?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0ConnectionPoolTCPItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider spec listener items0 connection pool TCP items0

    Attributes
    ----------
    maxConnections : float, default is Undefined, optional
        Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of 1.
    """


    maxConnections?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0HealthCheck:
    r"""
    Health check information for the listener.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive successful health checks that must occur before declaring listener healthy.
    intervalMillis : float, default is Undefined, optional
        Time period in milliseconds between each health check execution.
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    timeoutMillis : float, default is Undefined, optional
        Amount of time to wait when receiving a response from the health check, in milliseconds.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.
    """


    healthyThreshold?: float

    intervalMillis?: float

    path?: str

    port?: float

    $protocol?: str

    timeoutMillis?: float

    unhealthyThreshold?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetection:
    r"""
    Outlier detection information for the listener.

    Attributes
    ----------
    baseEjectionDuration : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration, default is Undefined, optional
        base ejection duration
    interval : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetectionInterval, default is Undefined, optional
        interval
    maxEjectionPercent : float, default is Undefined, optional
        Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
        Minimum value of 0. Maximum value of 100.
    maxServerErrors : float, default is Undefined, optional
        Number of consecutive 5xx errors required for ejection. Minimum value of 1.
    """


    baseEjectionDuration?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration

    interval?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetectionInterval

    maxEjectionPercent?: float

    maxServerErrors?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetectionBaseEjectionDuration:
    r"""
    Base amount of time for which a host is ejected.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0OutlierDetectionInterval:
    r"""
    Time interval between ejection sweep analysis.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0PortMapping:
    r"""
    Port mapping information for the listener.

    Attributes
    ----------
    port : float, default is Undefined, optional
        Port used for the port mapping.
    $protocol : str, default is Undefined, optional
        Protocol used for the port mapping. Valid values are http, http2, tcp and grpc.
    """


    port?: float

    $protocol?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLS:
    r"""
    Transport Layer Security (TLS) client policy.

    Attributes
    ----------
    certificate : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificate, default is Undefined, optional
        certificate
    mode : str, default is Undefined, optional
        Listener's TLS mode. Valid values: DISABLED, PERMISSIVE, STRICT.
    validation : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidation, default is Undefined, optional
        validation
    """


    certificate?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificate

    mode?: str

    validation?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidation


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificate:
    r"""
    Virtual node's client's Transport Layer Security (TLS) certificate.

    Attributes
    ----------
    acm : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateAcm, default is Undefined, optional
        acm
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateSds, default is Undefined, optional
        sds
    """


    acm?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateAcm

    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateAcm:
    r"""
    TLS validation context trust for an AWS Certificate Manager (ACM) certificate.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN for the certificate.
    """


    certificateArn?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    privateKey : str, default is Undefined, optional
        Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on.
    """


    certificateChain?: str

    privateKey?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSCertificateSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidation:
    r"""
    TLS validation context.

    Attributes
    ----------
    subjectAlternativeNames : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNames, default is Undefined, optional
        subject alternative names
    trust : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrust, default is Undefined, optional
        trust
    """


    subjectAlternativeNames?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNames

    trust?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrust


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNames:
    r"""
    SANs for a TLS validation context.

    Attributes
    ----------
    match : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch, default is Undefined, optional
        match
    """


    match?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationSubjectAlternativeNamesMatch:
    r"""
    Criteria for determining a SAN's match.

    Attributes
    ----------
    exact : [str], default is Undefined, optional
        Values sent must match the specified values exactly.
    """


    exact?: [str]


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrust:
    r"""
    TLS validation context trust.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrustFile, default is Undefined, optional
        file
    sds : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrustSds, default is Undefined, optional
        sds
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrustFile

    sds?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrustSds


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrustFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    certificateChain : str, default is Undefined, optional
        Certificate chain for the certificate.
    """


    certificateChain?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TLSValidationTrustSds:
    r"""
    A Secret Discovery Service certificate.

    Attributes
    ----------
    secretName : str, default is Undefined, optional
        Name of the secret secret requested from the Secret Discovery Service provider representing Transport Layer Security (TLS) materials like a certificate or certificate chain.
    """


    secretName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0Timeout:
    r"""
    Timeouts for different protocols.

    Attributes
    ----------
    grpc : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpc, default is Undefined, optional
        grpc
    http : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTP, default is Undefined, optional
        http
    http2 : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2, default is Undefined, optional
        http2
    tcp : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutTCP, default is Undefined, optional
        tcp
    """


    grpc?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpc

    http?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTP

    http2?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2

    tcp?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutTCP


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpc:
    r"""
    Connection pool information for gRPC listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpcIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpcPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpcIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpcPerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpcIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutGrpcPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTP:
    r"""
    Connection pool information for HTTP listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTPIdle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTPPerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTPIdle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTPPerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTPIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHTTPPerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2:
    r"""
    Connection pool information for HTTP2 listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2Idle, default is Undefined, optional
        idle
    perRequest : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2PerRequest, default is Undefined, optional
        per request
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2Idle

    perRequest?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2PerRequest


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2Idle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutHttp2PerRequest:
    r"""
    Per request timeout.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutTCP:
    r"""
    Connection pool information for TCP listeners.

    Attributes
    ----------
    idle : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutTCPIdle, default is Undefined, optional
        idle
    """


    idle?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutTCPIdle


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecListenerItems0TimeoutTCPIdle:
    r"""
    Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.

    Attributes
    ----------
    unit : str, default is Undefined, optional
        Unit of time. Valid values: ms, s.
    value : float, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    unit?: str

    value?: float


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLogging:
    r"""
    Inbound and outbound access logging information for the virtual node.

    Attributes
    ----------
    accessLog : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLog, default is Undefined, optional
        access log
    """


    accessLog?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLog


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLog:
    r"""
    Access log configuration for a virtual node.

    Attributes
    ----------
    file : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFile, default is Undefined, optional
        file
    """


    file?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFile


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFile:
    r"""
    Local file certificate.

    Attributes
    ----------
    format : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFileFormat, default is Undefined, optional
        format
    path : str, default is Undefined, optional
        File path to write access logs to. You can use /dev/stdout to send access logs to standard out. Must be between 1 and 255 characters in length.
    """


    format?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFileFormat

    path?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFileFormat:
    r"""
    The specified format for the logs.

    Attributes
    ----------
    json : [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFileFormatJSONItems0], default is Undefined, optional
        The logging format for JSON.
    text : str, default is Undefined, optional
        The logging format for text. Must be between 1 and 1000 characters in length.
    """


    json?: [AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFileFormatJSONItems0]

    text?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecLoggingAccessLogFileFormatJSONItems0:
    r"""
    appmesh aws upbound io v1beta2 virtual node status at provider spec logging access log file format JSON items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        The specified key for the JSON. Must be between 1 and 100 characters in length.
    value : str, default is Undefined, optional
        The specified value for the JSON. Must be between 1 and 100 characters in length.
    """


    key?: str

    value?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscovery:
    r"""
    Service discovery information for the virtual node.

    Attributes
    ----------
    awsCloudMap : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscoveryAwsCloudMap, default is Undefined, optional
        aws cloud map
    dns : AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscoveryDNS, default is Undefined, optional
        dns
    """


    awsCloudMap?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscoveryAwsCloudMap

    dns?: AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscoveryDNS


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscoveryAwsCloudMap:
    r"""
    Any AWS Cloud Map information for the virtual node.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        String map that contains attributes with values that you can use to filter instances by any custom attribute that you specified when you registered the instance. Only instances that match all of the specified key/value pairs will be returned.
    namespaceName : str, default is Undefined, optional
        Name of the AWS Cloud Map namespace to use.
        Use the aws_service_discovery_http_namespace resource to configure a Cloud Map namespace. Must be between 1 and 1024 characters in length.
    serviceName : str, default is Undefined, optional
        attribute of the dns object to hostname.
    """


    attributes?: {str:str}

    namespaceName?: str

    serviceName?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusAtProviderSpecServiceDiscoveryDNS:
    r"""
    DNS service name for the virtual node.

    Attributes
    ----------
    hostname : str, default is Undefined, optional
        DNS host name for your virtual node.
    ipPreference : str, default is Undefined, optional
        The preferred IP version that this virtual node uses. Valid values: IPv6_PREFERRED, IPv4_PREFERRED, IPv4_ONLY, IPv6_ONLY.
    responseType : str, default is Undefined, optional
        The DNS response type for the virtual node. Valid values: LOADBALANCER, ENDPOINTS.
    """


    hostname?: str

    ipPreference?: str

    responseType?: str


schema AppmeshAwsUpboundIoV1beta2VirtualNodeStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


