"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ProxyEndpoint:
    r"""
    ProxyEndpoint is the Schema for the ProxyEndpoints API. Provides an RDS DB proxy endpoint resource.

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ProxyEndpoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1ProxyEndpointSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1ProxyEndpointStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"

    kind: "ProxyEndpoint" = "ProxyEndpoint"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta1ProxyEndpointSpec

    status?: RdsAwsUpboundIoV1beta1ProxyEndpointStatus


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpec:
    r"""
    ProxyEndpointSpec defines the desired state of ProxyEndpoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1ProxyEndpointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1ProxyEndpointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProvider:
    r"""
    rds aws upbound io v1beta1 proxy endpoint spec for provider

    Attributes
    ----------
    dbProxyName : str, default is Undefined, optional
        The name of the DB proxy associated with the DB proxy endpoint that you create.
    dbProxyNameRef : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameRef, default is Undefined, optional
        db proxy name ref
    dbProxyNameSelector : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameSelector, default is Undefined, optional
        db proxy name selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targetRole : str, default is Undefined, optional
        Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is READ_WRITE. Valid values are READ_WRITE and READ_ONLY.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIds : [str], default is Undefined, optional
        One or more VPC subnet IDs to associate with the new proxy.
    """


    dbProxyName?: str

    dbProxyNameRef?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameRef

    dbProxyNameSelector?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameSelector

    region: str

    tags?: {str:str}

    targetRole?: str

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]

    vpcSubnetIds?: [str]


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameRef:
    r"""
    Reference to a Proxy in rds to populate dbProxyName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameRefPolicy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameSelector:
    r"""
    Selector for a Proxy in rds to populate dbProxyName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderDbProxyNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targetRole : str, default is Undefined, optional
        Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is READ_WRITE. Valid values are READ_WRITE and READ_ONLY.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIds : [str], default is Undefined, optional
        One or more VPC subnet IDs to associate with the new proxy.
    """


    tags?: {str:str}

    targetRole?: str

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]

    vpcSubnetIds?: [str]


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta1ProxyEndpointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ProxyEndpointStatus:
    r"""
    ProxyEndpointStatus defines the observed state of ProxyEndpoint.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1ProxyEndpointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1ProxyEndpointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta1ProxyEndpointStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta1ProxyEndpointStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta1ProxyEndpointStatusAtProvider:
    r"""
    rds aws upbound io v1beta1 proxy endpoint status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) for the proxy endpoint.
    dbProxyName : str, default is Undefined, optional
        The name of the DB proxy associated with the DB proxy endpoint that you create.
    endpoint : str, default is Undefined, optional
        The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
    id : str, default is Undefined, optional
        The name of the proxy and proxy endpoint separated by /, DB-PROXY-NAME/DB-PROXY-ENDPOINT-NAME.
    isDefault : bool, default is Undefined, optional
        Indicates whether this endpoint is the default endpoint for the associated DB proxy.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        tags all
    targetRole : str, default is Undefined, optional
        Indicates whether the DB proxy endpoint can be used for read/write or read-only operations. The default is READ_WRITE. Valid values are READ_WRITE and READ_ONLY.
    vpcId : str, default is Undefined, optional
        The VPC ID of the DB proxy endpoint.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        One or more VPC security group IDs to associate with the new proxy.
    vpcSubnetIds : [str], default is Undefined, optional
        One or more VPC subnet IDs to associate with the new proxy.
    """


    arn?: str

    dbProxyName?: str

    endpoint?: str

    id?: str

    isDefault?: bool

    tags?: {str:str}

    tagsAll?: {str:str}

    targetRole?: str

    vpcId?: str

    vpcSecurityGroupIds?: [str]

    vpcSubnetIds?: [str]


schema RdsAwsUpboundIoV1beta1ProxyEndpointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


