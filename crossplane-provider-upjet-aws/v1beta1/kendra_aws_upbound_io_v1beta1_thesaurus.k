"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Thesaurus:
    r"""
    Thesaurus is the Schema for the Thesauruss API.

    Attributes
    ----------
    apiVersion : str, default is "kendra.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Thesaurus", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KendraAwsUpboundIoV1beta1ThesaurusSpec, default is Undefined, required
        spec
    status : KendraAwsUpboundIoV1beta1ThesaurusStatus, default is Undefined, optional
        status
    """


    apiVersion: "kendra.aws.upbound.io/v1beta1" = "kendra.aws.upbound.io/v1beta1"

    kind: "Thesaurus" = "Thesaurus"

    metadata?: v1.ObjectMeta

    spec: KendraAwsUpboundIoV1beta1ThesaurusSpec

    status?: KendraAwsUpboundIoV1beta1ThesaurusStatus


schema KendraAwsUpboundIoV1beta1ThesaurusSpec:
    r"""
    ThesaurusSpec defines the desired state of Thesaurus

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KendraAwsUpboundIoV1beta1ThesaurusSpecForProvider, default is Undefined, required
        for provider
    initProvider : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KendraAwsUpboundIoV1beta1ThesaurusSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KendraAwsUpboundIoV1beta1ThesaurusSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KendraAwsUpboundIoV1beta1ThesaurusSpecForProvider

    initProvider?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecProviderConfigRef

    publishConnectionDetailsTo?: KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecWriteConnectionSecretToRef


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProvider:
    r"""
    kendra aws upbound io v1beta1 thesaurus spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description for a thesaurus.
    indexId : str, default is Undefined, optional
        The identifier of the index for a thesaurus.
    indexIdRef : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDRef, default is Undefined, optional
        index Id ref
    indexIdSelector : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDSelector, default is Undefined, optional
        index Id selector
    name : str, default is Undefined, optional
        The name for the thesaurus.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        The IAM (Identity and Access Management) role used to access the thesaurus file in S3.
    roleArnRef : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    sourceS3Path : [KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0], default is Undefined, optional
        The S3 path where your thesaurus file sits in S3. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    """


    description?: str

    indexId?: str

    indexIdRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDRef

    indexIdSelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDSelector

    name?: str

    region: str

    roleArn?: str

    roleArnRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnRef

    roleArnSelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnSelector

    sourceS3Path?: [KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0]

    tags?: {str:str}


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDRef:
    r"""
    Reference to a Index in kendra to populate indexId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDSelector:
    r"""
    Selector for a Index in kendra to populate indexId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDSelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderIndexIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnSelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0:
    r"""
    kendra aws upbound io v1beta1 thesaurus spec for provider source s3 path items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the S3 bucket that contains the file.
    bucketRef : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketSelector, default is Undefined, optional
        bucket selector
    key : str, default is Undefined, optional
        The name of the file.
    keyRef : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeyRef, default is Undefined, optional
        key ref
    keySelector : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeySelector, default is Undefined, optional
        key selector
    """


    bucket?: str

    bucketRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketRef

    bucketSelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketSelector

    key?: str

    keyRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeyRef

    keySelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeySelector


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketSelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeyRef:
    r"""
    Reference to a Object in s3 to populate key.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeyRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeySelector:
    r"""
    Selector for a Object in s3 to populate key.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeySelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecForProviderSourceS3PathItems0KeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description for a thesaurus.
    indexId : str, default is Undefined, optional
        The identifier of the index for a thesaurus.
    indexIdRef : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDRef, default is Undefined, optional
        index Id ref
    indexIdSelector : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDSelector, default is Undefined, optional
        index Id selector
    name : str, default is Undefined, optional
        The name for the thesaurus.
    roleArn : str, default is Undefined, optional
        The IAM (Identity and Access Management) role used to access the thesaurus file in S3.
    roleArnRef : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    sourceS3Path : [KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0], default is Undefined, optional
        The S3 path where your thesaurus file sits in S3. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    """


    description?: str

    indexId?: str

    indexIdRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDRef

    indexIdSelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDSelector

    name?: str

    roleArn?: str

    roleArnRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnRef

    roleArnSelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnSelector

    sourceS3Path?: [KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0]

    tags?: {str:str}


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDRef:
    r"""
    Reference to a Index in kendra to populate indexId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDSelector:
    r"""
    Selector for a Index in kendra to populate indexId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDSelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderIndexIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnSelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0:
    r"""
    kendra aws upbound io v1beta1 thesaurus spec init provider source s3 path items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the S3 bucket that contains the file.
    bucketRef : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketSelector, default is Undefined, optional
        bucket selector
    key : str, default is Undefined, optional
        The name of the file.
    keyRef : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeyRef, default is Undefined, optional
        key ref
    keySelector : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeySelector, default is Undefined, optional
        key selector
    """


    bucket?: str

    bucketRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketRef

    bucketSelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketSelector

    key?: str

    keyRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeyRef

    keySelector?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeySelector


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketSelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeyRef:
    r"""
    Reference to a Object in s3 to populate key.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeyRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeySelector:
    r"""
    Selector for a Object in s3 to populate key.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeySelectorPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecInitProviderSourceS3PathItems0KeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecProviderConfigRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToConfigRef

    metadata?: KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToMetadata

    name: str


schema KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToConfigRefPolicy


schema KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta1ThesaurusSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KendraAwsUpboundIoV1beta1ThesaurusSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KendraAwsUpboundIoV1beta1ThesaurusStatus:
    r"""
    ThesaurusStatus defines the observed state of Thesaurus.

    Attributes
    ----------
    atProvider : KendraAwsUpboundIoV1beta1ThesaurusStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KendraAwsUpboundIoV1beta1ThesaurusStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KendraAwsUpboundIoV1beta1ThesaurusStatusAtProvider

    conditions?: [KendraAwsUpboundIoV1beta1ThesaurusStatusConditionsItems0]

    observedGeneration?: int


schema KendraAwsUpboundIoV1beta1ThesaurusStatusAtProvider:
    r"""
    kendra aws upbound io v1beta1 thesaurus status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the thesaurus.
    description : str, default is Undefined, optional
        The description for a thesaurus.
    id : str, default is Undefined, optional
        The unique identifiers of the thesaurus and index separated by a slash (/).
    indexId : str, default is Undefined, optional
        The identifier of the index for a thesaurus.
    name : str, default is Undefined, optional
        The name for the thesaurus.
    roleArn : str, default is Undefined, optional
        The IAM (Identity and Access Management) role used to access the thesaurus file in S3.
    sourceS3Path : [KendraAwsUpboundIoV1beta1ThesaurusStatusAtProviderSourceS3PathItems0], default is Undefined, optional
        The S3 path where your thesaurus file sits in S3. Detailed below.
    status : str, default is Undefined, optional
        The current status of the thesaurus.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    thesaurusId : str, default is Undefined, optional
        The unique identifiers of the thesaurus and index separated by a slash (/).
    """


    arn?: str

    description?: str

    id?: str

    indexId?: str

    name?: str

    roleArn?: str

    sourceS3Path?: [KendraAwsUpboundIoV1beta1ThesaurusStatusAtProviderSourceS3PathItems0]

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    thesaurusId?: str


schema KendraAwsUpboundIoV1beta1ThesaurusStatusAtProviderSourceS3PathItems0:
    r"""
    kendra aws upbound io v1beta1 thesaurus status at provider source s3 path items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The name of the S3 bucket that contains the file.
    key : str, default is Undefined, optional
        The name of the file.
    """


    bucket?: str

    key?: str


schema KendraAwsUpboundIoV1beta1ThesaurusStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


