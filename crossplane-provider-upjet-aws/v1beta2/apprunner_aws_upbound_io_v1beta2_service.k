"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Service:
    r"""
    Service is the Schema for the Services API. Manages an App Runner Service.

    Attributes
    ----------
    apiVersion : str, default is "apprunner.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Service", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApprunnerAwsUpboundIoV1beta2ServiceSpec, default is Undefined, required
        spec
    status : ApprunnerAwsUpboundIoV1beta2ServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "apprunner.aws.upbound.io/v1beta2" = "apprunner.aws.upbound.io/v1beta2"

    kind: "Service" = "Service"

    metadata?: v1.ObjectMeta

    spec: ApprunnerAwsUpboundIoV1beta2ServiceSpec

    status?: ApprunnerAwsUpboundIoV1beta2ServiceStatus


schema ApprunnerAwsUpboundIoV1beta2ServiceSpec:
    r"""
    ServiceSpec defines the desired state of Service

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProvider

    initProvider?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecProviderConfigRef

    publishConnectionDetailsTo?: ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecWriteConnectionSecretToRef


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProvider:
    r"""
    apprunner aws upbound io v1beta2 service spec for provider

    Attributes
    ----------
    autoScalingConfigurationArn : str, default is Undefined, optional
        ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
    encryptionConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    healthCheckConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckConfiguration, default is Undefined, optional
        health check configuration
    instanceConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderInstanceConfiguration, default is Undefined, optional
        instance configuration
    networkConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    observabilityConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfiguration, default is Undefined, optional
        observability configuration
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serviceName : str, default is Undefined, optional
        (Forces new resource) Name of the service.
    sourceConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfiguration, default is Undefined, optional
        source configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    autoScalingConfigurationArn?: str

    encryptionConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderEncryptionConfiguration

    healthCheckConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckConfiguration

    instanceConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderInstanceConfiguration

    networkConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfiguration

    observabilityConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfiguration

    region: str

    serviceName?: str

    sourceConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfiguration

    tags?: {str:str}


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderEncryptionConfiguration:
    r"""
    (Forces new resource) An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        ARN of the KMS key used for encryption.
    """


    kmsKey?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckConfiguration:
    r"""
    Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
    interval : float, default is Undefined, optional
        Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
    path : str, default is Undefined, optional
        URL to send requests to for health checks. Defaults to /. Minimum length of 0. Maximum length of 51200.
    $protocol : str, default is Undefined, optional
        IP protocol that App Runner uses to perform health checks for your service. Valid values: TCP, HTTP. Defaults to TCP. If you set protocol to HTTP, App Runner sends health check requests to the HTTP path specified by path.
    timeout : float, default is Undefined, optional
        Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
    """


    healthyThreshold?: float

    interval?: float

    path?: str

    $protocol?: str

    timeout?: float

    unhealthyThreshold?: float


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderInstanceConfiguration:
    r"""
    The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to 1024. Valid values: 256|512|1024|2048|4096|(0.25|0.5|1|2|4) vCPU.
    instanceRoleArn : str, default is Undefined, optional
        ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
    memory : str, default is Undefined, optional
        Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to 2048. Valid values: 512|1024|2048|3072|4096|6144|8192|10240|12288|(0.5|1|2|3|4|6|8|10|12) GB.
    """


    cpu?: str

    instanceRoleArn?: str

    memory?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfiguration:
    r"""
    Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.

    Attributes
    ----------
    egressConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfiguration, default is Undefined, optional
        egress configuration
    ingressConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationIngressConfiguration, default is Undefined, optional
        ingress configuration
    ipAddressType : str, default is Undefined, optional
        App Runner provides you with the option to choose between Internet Protocol version 4 (IPv4) and dual stack (IPv4 and IPv6) for your incoming public network configuration. Valid values: IPV4, DUAL_STACK. Default: IPV4.
    """


    egressConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfiguration

    ingressConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationIngressConfiguration

    ipAddressType?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfiguration:
    r"""
    Network configuration settings for outbound message traffic. See Egress Configuration below for more details.

    Attributes
    ----------
    egressType : str, default is Undefined, optional
        The type of egress configuration. Valid values are: DEFAULT and VPC.
    vpcConnectorArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when EgressType = VPC.
    vpcConnectorArnRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRef, default is Undefined, optional
        vpc connector arn ref
    vpcConnectorArnSelector : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelector, default is Undefined, optional
        vpc connector arn selector
    """


    egressType?: str

    vpcConnectorArn?: str

    vpcConnectorArnRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRef

    vpcConnectorArnSelector?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelector


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRef:
    r"""
    Reference to a VPCConnector in apprunner to populate vpcConnectorArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelector:
    r"""
    Selector for a VPCConnector in apprunner to populate vpcConnectorArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderNetworkConfigurationIngressConfiguration:
    r"""
    Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.

    Attributes
    ----------
    isPubliclyAccessible : bool, default is Undefined, optional
        Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
    """


    isPubliclyAccessible?: bool


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfiguration:
    r"""
    The observability configuration of your service. See Observability Configuration below for more details.

    Attributes
    ----------
    observabilityConfigurationArn : str, default is Undefined, optional
        ARN of the observability configuration that is associated with the service. Specified only when observability_enabled is true.
    observabilityConfigurationArnRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnRef, default is Undefined, optional
        observability configuration arn ref
    observabilityConfigurationArnSelector : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnSelector, default is Undefined, optional
        observability configuration arn selector
    observabilityEnabled : bool, default is Undefined, optional
        When true, an observability configuration resource is associated with the service.
    """


    observabilityConfigurationArn?: str

    observabilityConfigurationArnRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnRef

    observabilityConfigurationArnSelector?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnSelector

    observabilityEnabled?: bool


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnRef:
    r"""
    Reference to a ObservabilityConfiguration in apprunner to populate observabilityConfigurationArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnSelector:
    r"""
    Selector for a ObservabilityConfiguration in apprunner to populate observabilityConfigurationArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderObservabilityConfigurationObservabilityConfigurationArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfiguration:
    r"""
    The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.

    Attributes
    ----------
    authenticationConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfiguration, default is Undefined, optional
        authentication configuration
    autoDeploymentsEnabled : bool, default is Undefined, optional
        Whether continuous integration from the source repository is enabled for the App Runner service. If set to true, each repository change (source code commit or new image version) starts a deployment. Defaults to true.
    codeRepository : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepository, default is Undefined, optional
        code repository
    imageRepository : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationImageRepository, default is Undefined, optional
        image repository
    """


    authenticationConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfiguration

    autoDeploymentsEnabled?: bool

    codeRepository?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepository

    imageRepository?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationImageRepository


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfiguration:
    r"""
    Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.

    Attributes
    ----------
    accessRoleArn : str, default is Undefined, optional
        ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
    connectionArn : str, default is Undefined, optional
        ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
    connectionArnRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnRef, default is Undefined, optional
        connection arn ref
    connectionArnSelector : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelector, default is Undefined, optional
        connection arn selector
    """


    accessRoleArn?: str

    connectionArn?: str

    connectionArnRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnRef

    connectionArnSelector?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelector


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnRef:
    r"""
    Reference to a Connection in apprunner to populate connectionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelector:
    r"""
    Selector for a Connection in apprunner to populate connectionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepository:
    r"""
    Description of a source code repository. See Code Repository below for more details.

    Attributes
    ----------
    codeConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositoryCodeConfiguration, default is Undefined, optional
        code configuration
    repositoryUrl : str, default is Undefined, optional
        Location of the repository that contains the source code.
    sourceCodeVersion : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositorySourceCodeVersion, default is Undefined, optional
        source code version
    sourceDirectory : str, default is Undefined, optional
        The path of the directory that stores source code and configuration files. The build and start commands also execute from here. The path is absolute from root and, if not specified, defaults to the repository root.
    """


    codeConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositoryCodeConfiguration

    repositoryUrl?: str

    sourceCodeVersion?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositorySourceCodeVersion

    sourceDirectory?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositoryCodeConfiguration:
    r"""
    Configuration for building and running the service from a source code repository. See Code Configuration below for more details.

    Attributes
    ----------
    codeConfigurationValues : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues, default is Undefined, optional
        code configuration values
    configurationSource : str, default is Undefined, optional
        Source of the App Runner configuration. Valid values: REPOSITORY, API. Values are interpreted as follows:
    """


    codeConfigurationValues?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues

    configurationSource?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues:
    r"""
    Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.

    Attributes
    ----------
    buildCommand : str, default is Undefined, optional
        Command App Runner runs to build your application.
    port : str, default is Undefined, optional
        Port that your application listens to in the container. Defaults to "8080".
    runtime : str, default is Undefined, optional
        Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: PYTHON_3, NODEJS_12, NODEJS_14, NODEJS_16, CORRETTO_8, CORRETTO_11, GO_1, DOTNET_6, PHP_81, RUBY_31.
    runtimeEnvironmentSecrets : {str:str}, default is Undefined, optional
        Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
    runtimeEnvironmentVariables : {str:str}, default is Undefined, optional
        Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren't valid.
    startCommand : str, default is Undefined, optional
        Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
    """


    buildCommand?: str

    port?: str

    runtime?: str

    runtimeEnvironmentSecrets?: {str:str}

    runtimeEnvironmentVariables?: {str:str}

    startCommand?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationCodeRepositorySourceCodeVersion:
    r"""
    Version that should be used within the source code repository. See Source Code Version below for more details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of version identifier. For a git-based repository, branches represent versions. Valid values: BRANCH.
    value : str, default is Undefined, optional
        Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
    """


    $type?: str

    value?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationImageRepository:
    r"""
    Description of a source image repository. See Image Repository below for more details.

    Attributes
    ----------
    imageConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationImageRepositoryImageConfiguration, default is Undefined, optional
        image configuration
    imageIdentifier : str, default is Undefined, optional
        Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
        image name format, see Pulling an image in the Amazon ECR User Guide.
    imageRepositoryType : str, default is Undefined, optional
        Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: ECR , ECR_PUBLIC.
    """


    imageConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationImageRepositoryImageConfiguration

    imageIdentifier?: str

    imageRepositoryType?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecForProviderSourceConfigurationImageRepositoryImageConfiguration:
    r"""
    Configuration for running the identified image. See Image Configuration below for more details.

    Attributes
    ----------
    port : str, default is Undefined, optional
        Port that your application listens to in the container. Defaults to "8080".
    runtimeEnvironmentSecrets : {str:str}, default is Undefined, optional
        Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
    runtimeEnvironmentVariables : {str:str}, default is Undefined, optional
        Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren't valid.
    startCommand : str, default is Undefined, optional
        Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
    """


    port?: str

    runtimeEnvironmentSecrets?: {str:str}

    runtimeEnvironmentVariables?: {str:str}

    startCommand?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    autoScalingConfigurationArn : str, default is Undefined, optional
        ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
    encryptionConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    healthCheckConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckConfiguration, default is Undefined, optional
        health check configuration
    instanceConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderInstanceConfiguration, default is Undefined, optional
        instance configuration
    networkConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    observabilityConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfiguration, default is Undefined, optional
        observability configuration
    serviceName : str, default is Undefined, optional
        (Forces new resource) Name of the service.
    sourceConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfiguration, default is Undefined, optional
        source configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    autoScalingConfigurationArn?: str

    encryptionConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderEncryptionConfiguration

    healthCheckConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckConfiguration

    instanceConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderInstanceConfiguration

    networkConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfiguration

    observabilityConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfiguration

    serviceName?: str

    sourceConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfiguration

    tags?: {str:str}


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderEncryptionConfiguration:
    r"""
    (Forces new resource) An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        ARN of the KMS key used for encryption.
    """


    kmsKey?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckConfiguration:
    r"""
    Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
    interval : float, default is Undefined, optional
        Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
    path : str, default is Undefined, optional
        URL to send requests to for health checks. Defaults to /. Minimum length of 0. Maximum length of 51200.
    $protocol : str, default is Undefined, optional
        IP protocol that App Runner uses to perform health checks for your service. Valid values: TCP, HTTP. Defaults to TCP. If you set protocol to HTTP, App Runner sends health check requests to the HTTP path specified by path.
    timeout : float, default is Undefined, optional
        Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
    """


    healthyThreshold?: float

    interval?: float

    path?: str

    $protocol?: str

    timeout?: float

    unhealthyThreshold?: float


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderInstanceConfiguration:
    r"""
    The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to 1024. Valid values: 256|512|1024|2048|4096|(0.25|0.5|1|2|4) vCPU.
    instanceRoleArn : str, default is Undefined, optional
        ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
    memory : str, default is Undefined, optional
        Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to 2048. Valid values: 512|1024|2048|3072|4096|6144|8192|10240|12288|(0.5|1|2|3|4|6|8|10|12) GB.
    """


    cpu?: str

    instanceRoleArn?: str

    memory?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfiguration:
    r"""
    Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.

    Attributes
    ----------
    egressConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfiguration, default is Undefined, optional
        egress configuration
    ingressConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationIngressConfiguration, default is Undefined, optional
        ingress configuration
    ipAddressType : str, default is Undefined, optional
        App Runner provides you with the option to choose between Internet Protocol version 4 (IPv4) and dual stack (IPv4 and IPv6) for your incoming public network configuration. Valid values: IPV4, DUAL_STACK. Default: IPV4.
    """


    egressConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfiguration

    ingressConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationIngressConfiguration

    ipAddressType?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfiguration:
    r"""
    Network configuration settings for outbound message traffic. See Egress Configuration below for more details.

    Attributes
    ----------
    egressType : str, default is Undefined, optional
        The type of egress configuration. Valid values are: DEFAULT and VPC.
    vpcConnectorArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when EgressType = VPC.
    vpcConnectorArnRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRef, default is Undefined, optional
        vpc connector arn ref
    vpcConnectorArnSelector : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelector, default is Undefined, optional
        vpc connector arn selector
    """


    egressType?: str

    vpcConnectorArn?: str

    vpcConnectorArnRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRef

    vpcConnectorArnSelector?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelector


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRef:
    r"""
    Reference to a VPCConnector in apprunner to populate vpcConnectorArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelector:
    r"""
    Selector for a VPCConnector in apprunner to populate vpcConnectorArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationEgressConfigurationVpcConnectorArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderNetworkConfigurationIngressConfiguration:
    r"""
    Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.

    Attributes
    ----------
    isPubliclyAccessible : bool, default is Undefined, optional
        Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
    """


    isPubliclyAccessible?: bool


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfiguration:
    r"""
    The observability configuration of your service. See Observability Configuration below for more details.

    Attributes
    ----------
    observabilityConfigurationArn : str, default is Undefined, optional
        ARN of the observability configuration that is associated with the service. Specified only when observability_enabled is true.
    observabilityConfigurationArnRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnRef, default is Undefined, optional
        observability configuration arn ref
    observabilityConfigurationArnSelector : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnSelector, default is Undefined, optional
        observability configuration arn selector
    observabilityEnabled : bool, default is Undefined, optional
        When true, an observability configuration resource is associated with the service.
    """


    observabilityConfigurationArn?: str

    observabilityConfigurationArnRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnRef

    observabilityConfigurationArnSelector?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnSelector

    observabilityEnabled?: bool


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnRef:
    r"""
    Reference to a ObservabilityConfiguration in apprunner to populate observabilityConfigurationArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnSelector:
    r"""
    Selector for a ObservabilityConfiguration in apprunner to populate observabilityConfigurationArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderObservabilityConfigurationObservabilityConfigurationArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfiguration:
    r"""
    The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.

    Attributes
    ----------
    authenticationConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfiguration, default is Undefined, optional
        authentication configuration
    autoDeploymentsEnabled : bool, default is Undefined, optional
        Whether continuous integration from the source repository is enabled for the App Runner service. If set to true, each repository change (source code commit or new image version) starts a deployment. Defaults to true.
    codeRepository : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepository, default is Undefined, optional
        code repository
    imageRepository : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationImageRepository, default is Undefined, optional
        image repository
    """


    authenticationConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfiguration

    autoDeploymentsEnabled?: bool

    codeRepository?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepository

    imageRepository?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationImageRepository


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfiguration:
    r"""
    Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.

    Attributes
    ----------
    accessRoleArn : str, default is Undefined, optional
        ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
    connectionArn : str, default is Undefined, optional
        ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
    connectionArnRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnRef, default is Undefined, optional
        connection arn ref
    connectionArnSelector : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelector, default is Undefined, optional
        connection arn selector
    """


    accessRoleArn?: str

    connectionArn?: str

    connectionArnRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnRef

    connectionArnSelector?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelector


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnRef:
    r"""
    Reference to a Connection in apprunner to populate connectionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelector:
    r"""
    Selector for a Connection in apprunner to populate connectionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelectorPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationAuthenticationConfigurationConnectionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepository:
    r"""
    Description of a source code repository. See Code Repository below for more details.

    Attributes
    ----------
    codeConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositoryCodeConfiguration, default is Undefined, optional
        code configuration
    repositoryUrl : str, default is Undefined, optional
        Location of the repository that contains the source code.
    sourceCodeVersion : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositorySourceCodeVersion, default is Undefined, optional
        source code version
    sourceDirectory : str, default is Undefined, optional
        The path of the directory that stores source code and configuration files. The build and start commands also execute from here. The path is absolute from root and, if not specified, defaults to the repository root.
    """


    codeConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositoryCodeConfiguration

    repositoryUrl?: str

    sourceCodeVersion?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositorySourceCodeVersion

    sourceDirectory?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositoryCodeConfiguration:
    r"""
    Configuration for building and running the service from a source code repository. See Code Configuration below for more details.

    Attributes
    ----------
    codeConfigurationValues : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues, default is Undefined, optional
        code configuration values
    configurationSource : str, default is Undefined, optional
        Source of the App Runner configuration. Valid values: REPOSITORY, API. Values are interpreted as follows:
    """


    codeConfigurationValues?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues

    configurationSource?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues:
    r"""
    Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.

    Attributes
    ----------
    buildCommand : str, default is Undefined, optional
        Command App Runner runs to build your application.
    port : str, default is Undefined, optional
        Port that your application listens to in the container. Defaults to "8080".
    runtime : str, default is Undefined, optional
        Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: PYTHON_3, NODEJS_12, NODEJS_14, NODEJS_16, CORRETTO_8, CORRETTO_11, GO_1, DOTNET_6, PHP_81, RUBY_31.
    runtimeEnvironmentSecrets : {str:str}, default is Undefined, optional
        Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
    runtimeEnvironmentVariables : {str:str}, default is Undefined, optional
        Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren't valid.
    startCommand : str, default is Undefined, optional
        Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
    """


    buildCommand?: str

    port?: str

    runtime?: str

    runtimeEnvironmentSecrets?: {str:str}

    runtimeEnvironmentVariables?: {str:str}

    startCommand?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationCodeRepositorySourceCodeVersion:
    r"""
    Version that should be used within the source code repository. See Source Code Version below for more details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of version identifier. For a git-based repository, branches represent versions. Valid values: BRANCH.
    value : str, default is Undefined, optional
        Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
    """


    $type?: str

    value?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationImageRepository:
    r"""
    Description of a source image repository. See Image Repository below for more details.

    Attributes
    ----------
    imageConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationImageRepositoryImageConfiguration, default is Undefined, optional
        image configuration
    imageIdentifier : str, default is Undefined, optional
        Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
        image name format, see Pulling an image in the Amazon ECR User Guide.
    imageRepositoryType : str, default is Undefined, optional
        Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: ECR , ECR_PUBLIC.
    """


    imageConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationImageRepositoryImageConfiguration

    imageIdentifier?: str

    imageRepositoryType?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecInitProviderSourceConfigurationImageRepositoryImageConfiguration:
    r"""
    Configuration for running the identified image. See Image Configuration below for more details.

    Attributes
    ----------
    port : str, default is Undefined, optional
        Port that your application listens to in the container. Defaults to "8080".
    runtimeEnvironmentSecrets : {str:str}, default is Undefined, optional
        Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
    runtimeEnvironmentVariables : {str:str}, default is Undefined, optional
        Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren't valid.
    startCommand : str, default is Undefined, optional
        Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
    """


    port?: str

    runtimeEnvironmentSecrets?: {str:str}

    runtimeEnvironmentVariables?: {str:str}

    startCommand?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecProviderConfigRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRef

    metadata?: ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToMetadata

    name: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRefPolicy


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatus:
    r"""
    ServiceStatus defines the observed state of Service.

    Attributes
    ----------
    atProvider : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApprunnerAwsUpboundIoV1beta2ServiceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProvider

    conditions?: [ApprunnerAwsUpboundIoV1beta2ServiceStatusConditionsItems0]

    observedGeneration?: int


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProvider:
    r"""
    apprunner aws upbound io v1beta2 service status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the App Runner service.
    autoScalingConfigurationArn : str, default is Undefined, optional
        ARN of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.
    encryptionConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    healthCheckConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckConfiguration, default is Undefined, optional
        health check configuration
    id : str, default is Undefined, optional
        id
    instanceConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderInstanceConfiguration, default is Undefined, optional
        instance configuration
    networkConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfiguration, default is Undefined, optional
        network configuration
    observabilityConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderObservabilityConfiguration, default is Undefined, optional
        observability configuration
    serviceId : str, default is Undefined, optional
        An alphanumeric ID that App Runner generated for this service. Unique within the AWS Region.
    serviceName : str, default is Undefined, optional
        (Forces new resource) Name of the service.
    serviceUrl : str, default is Undefined, optional
        Subdomain URL that App Runner generated for this service. You can use this URL to access your service web application.
    sourceConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfiguration, default is Undefined, optional
        source configuration
    status : str, default is Undefined, optional
        Current state of the App Runner service.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    autoScalingConfigurationArn?: str

    encryptionConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderEncryptionConfiguration

    healthCheckConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckConfiguration

    id?: str

    instanceConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderInstanceConfiguration

    networkConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfiguration

    observabilityConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderObservabilityConfiguration

    serviceId?: str

    serviceName?: str

    serviceUrl?: str

    sourceConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfiguration

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderEncryptionConfiguration:
    r"""
    (Forces new resource) An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an AWS managed CMK. See Encryption Configuration below for more details.

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        ARN of the KMS key used for encryption.
    """


    kmsKey?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckConfiguration:
    r"""
    Settings of the health check that AWS App Runner performs to monitor the health of your service. See Health Check Configuration below for more details.

    Attributes
    ----------
    healthyThreshold : float, default is Undefined, optional
        Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
    interval : float, default is Undefined, optional
        Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
    path : str, default is Undefined, optional
        URL to send requests to for health checks. Defaults to /. Minimum length of 0. Maximum length of 51200.
    $protocol : str, default is Undefined, optional
        IP protocol that App Runner uses to perform health checks for your service. Valid values: TCP, HTTP. Defaults to TCP. If you set protocol to HTTP, App Runner sends health check requests to the HTTP path specified by path.
    timeout : float, default is Undefined, optional
        Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
    unhealthyThreshold : float, default is Undefined, optional
        Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
    """


    healthyThreshold?: float

    interval?: float

    path?: str

    $protocol?: str

    timeout?: float

    unhealthyThreshold?: float


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderInstanceConfiguration:
    r"""
    The runtime configuration of instances (scaling units) of the App Runner service. See Instance Configuration below for more details.

    Attributes
    ----------
    cpu : str, default is Undefined, optional
        Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to 1024. Valid values: 256|512|1024|2048|4096|(0.25|0.5|1|2|4) vCPU.
    instanceRoleArn : str, default is Undefined, optional
        ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
    memory : str, default is Undefined, optional
        Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to 2048. Valid values: 512|1024|2048|3072|4096|6144|8192|10240|12288|(0.5|1|2|3|4|6|8|10|12) GB.
    """


    cpu?: str

    instanceRoleArn?: str

    memory?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfiguration:
    r"""
    Configuration settings related to network traffic of the web application that the App Runner service runs. See Network Configuration below for more details.

    Attributes
    ----------
    egressConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfigurationEgressConfiguration, default is Undefined, optional
        egress configuration
    ingressConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfigurationIngressConfiguration, default is Undefined, optional
        ingress configuration
    ipAddressType : str, default is Undefined, optional
        App Runner provides you with the option to choose between Internet Protocol version 4 (IPv4) and dual stack (IPv4 and IPv6) for your incoming public network configuration. Valid values: IPV4, DUAL_STACK. Default: IPV4.
    """


    egressConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfigurationEgressConfiguration

    ingressConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfigurationIngressConfiguration

    ipAddressType?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfigurationEgressConfiguration:
    r"""
    Network configuration settings for outbound message traffic. See Egress Configuration below for more details.

    Attributes
    ----------
    egressType : str, default is Undefined, optional
        The type of egress configuration. Valid values are: DEFAULT and VPC.
    vpcConnectorArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when EgressType = VPC.
    """


    egressType?: str

    vpcConnectorArn?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderNetworkConfigurationIngressConfiguration:
    r"""
    Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.

    Attributes
    ----------
    isPubliclyAccessible : bool, default is Undefined, optional
        Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
    """


    isPubliclyAccessible?: bool


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderObservabilityConfiguration:
    r"""
    The observability configuration of your service. See Observability Configuration below for more details.

    Attributes
    ----------
    observabilityConfigurationArn : str, default is Undefined, optional
        ARN of the observability configuration that is associated with the service. Specified only when observability_enabled is true.
    observabilityEnabled : bool, default is Undefined, optional
        When true, an observability configuration resource is associated with the service.
    """


    observabilityConfigurationArn?: str

    observabilityEnabled?: bool


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfiguration:
    r"""
    The source to deploy to the App Runner service. Can be a code or an image repository. See Source Configuration below for more details.

    Attributes
    ----------
    authenticationConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationAuthenticationConfiguration, default is Undefined, optional
        authentication configuration
    autoDeploymentsEnabled : bool, default is Undefined, optional
        Whether continuous integration from the source repository is enabled for the App Runner service. If set to true, each repository change (source code commit or new image version) starts a deployment. Defaults to true.
    codeRepository : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepository, default is Undefined, optional
        code repository
    imageRepository : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationImageRepository, default is Undefined, optional
        image repository
    """


    authenticationConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationAuthenticationConfiguration

    autoDeploymentsEnabled?: bool

    codeRepository?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepository

    imageRepository?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationImageRepository


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationAuthenticationConfiguration:
    r"""
    Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.

    Attributes
    ----------
    accessRoleArn : str, default is Undefined, optional
        ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
    connectionArn : str, default is Undefined, optional
        ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
    """


    accessRoleArn?: str

    connectionArn?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepository:
    r"""
    Description of a source code repository. See Code Repository below for more details.

    Attributes
    ----------
    codeConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositoryCodeConfiguration, default is Undefined, optional
        code configuration
    repositoryUrl : str, default is Undefined, optional
        Location of the repository that contains the source code.
    sourceCodeVersion : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositorySourceCodeVersion, default is Undefined, optional
        source code version
    sourceDirectory : str, default is Undefined, optional
        The path of the directory that stores source code and configuration files. The build and start commands also execute from here. The path is absolute from root and, if not specified, defaults to the repository root.
    """


    codeConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositoryCodeConfiguration

    repositoryUrl?: str

    sourceCodeVersion?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositorySourceCodeVersion

    sourceDirectory?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositoryCodeConfiguration:
    r"""
    Configuration for building and running the service from a source code repository. See Code Configuration below for more details.

    Attributes
    ----------
    codeConfigurationValues : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues, default is Undefined, optional
        code configuration values
    configurationSource : str, default is Undefined, optional
        Source of the App Runner configuration. Valid values: REPOSITORY, API. Values are interpreted as follows:
    """


    codeConfigurationValues?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues

    configurationSource?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues:
    r"""
    Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.

    Attributes
    ----------
    buildCommand : str, default is Undefined, optional
        Command App Runner runs to build your application.
    port : str, default is Undefined, optional
        Port that your application listens to in the container. Defaults to "8080".
    runtime : str, default is Undefined, optional
        Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: PYTHON_3, NODEJS_12, NODEJS_14, NODEJS_16, CORRETTO_8, CORRETTO_11, GO_1, DOTNET_6, PHP_81, RUBY_31.
    runtimeEnvironmentSecrets : {str:str}, default is Undefined, optional
        Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
    runtimeEnvironmentVariables : {str:str}, default is Undefined, optional
        Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren't valid.
    startCommand : str, default is Undefined, optional
        Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
    """


    buildCommand?: str

    port?: str

    runtime?: str

    runtimeEnvironmentSecrets?: {str:str}

    runtimeEnvironmentVariables?: {str:str}

    startCommand?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationCodeRepositorySourceCodeVersion:
    r"""
    Version that should be used within the source code repository. See Source Code Version below for more details.

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of version identifier. For a git-based repository, branches represent versions. Valid values: BRANCH.
    value : str, default is Undefined, optional
        Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
    """


    $type?: str

    value?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationImageRepository:
    r"""
    Description of a source image repository. See Image Repository below for more details.

    Attributes
    ----------
    imageConfiguration : ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationImageRepositoryImageConfiguration, default is Undefined, optional
        image configuration
    imageIdentifier : str, default is Undefined, optional
        Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
        image name format, see Pulling an image in the Amazon ECR User Guide.
    imageRepositoryType : str, default is Undefined, optional
        Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: ECR , ECR_PUBLIC.
    """


    imageConfiguration?: ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationImageRepositoryImageConfiguration

    imageIdentifier?: str

    imageRepositoryType?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusAtProviderSourceConfigurationImageRepositoryImageConfiguration:
    r"""
    Configuration for running the identified image. See Image Configuration below for more details.

    Attributes
    ----------
    port : str, default is Undefined, optional
        Port that your application listens to in the container. Defaults to "8080".
    runtimeEnvironmentSecrets : {str:str}, default is Undefined, optional
        Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
    runtimeEnvironmentVariables : {str:str}, default is Undefined, optional
        Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of AWSAPPRUNNER are reserved for system use and aren't valid.
    startCommand : str, default is Undefined, optional
        Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
    """


    port?: str

    runtimeEnvironmentSecrets?: {str:str}

    runtimeEnvironmentVariables?: {str:str}

    startCommand?: str


schema ApprunnerAwsUpboundIoV1beta2ServiceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


