"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ObjectLambdaAccessPoint:
    r"""
    ObjectLambdaAccessPoint is the Schema for the ObjectLambdaAccessPoints API. Provides a resource to manage an S3 Object Lambda Access Point.

    Attributes
    ----------
    apiVersion : str, default is "s3control.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ObjectLambdaAccessPoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpec, default is Undefined, required
        spec
    status : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3control.aws.upbound.io/v1beta1" = "s3control.aws.upbound.io/v1beta1"

    kind: "ObjectLambdaAccessPoint" = "ObjectLambdaAccessPoint"

    metadata?: v1.ObjectMeta

    spec: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpec

    status?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatus


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpec:
    r"""
    ObjectLambdaAccessPointSpec defines the desired state of ObjectLambdaAccessPoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProvider, default is Undefined, required
        for provider
    initProvider : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProvider

    initProvider?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecProviderConfigRef

    publishConnectionDetailsTo?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecWriteConnectionSecretToRef


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProvider:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec for provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The AWS account ID for the owner of the bucket for which you want to create an Object Lambda Access Point.
    configuration : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0], default is Undefined, optional
        A configuration block containing details about the Object Lambda Access Point. See Configuration below for more details.
    name : str, default is Undefined, optional
        The name for this Object Lambda Access Point.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    accountId?: str

    configuration?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0]

    name?: str

    region: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec for provider configuration items0

    Attributes
    ----------
    allowedFeatures : [str], default is Undefined, optional
        Allowed features. Valid values: GetObject-Range, GetObject-PartNumber.
    cloudWatchMetricsEnabled : bool, default is Undefined, optional
        Whether or not the CloudWatch metrics configuration is enabled.
    supportingAccessPoint : str, default is Undefined, optional
        Standard access point associated with the Object Lambda Access Point.
    supportingAccessPointRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointRef, default is Undefined, optional
        supporting access point ref
    supportingAccessPointSelector : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointSelector, default is Undefined, optional
        supporting access point selector
    transformationConfiguration : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0], default is Undefined, optional
        List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
    """


    allowedFeatures?: [str]

    cloudWatchMetricsEnabled?: bool

    supportingAccessPoint?: str

    supportingAccessPointRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointRef

    supportingAccessPointSelector?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointSelector

    transformationConfiguration?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointRef:
    r"""
    Reference to a AccessPoint in s3control to populate supportingAccessPoint.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointRefPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointSelector:
    r"""
    Selector for a AccessPoint in s3control to populate supportingAccessPoint.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointSelectorPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0SupportingAccessPointSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec for provider configuration items0 transformation configuration items0

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        The actions of an Object Lambda Access Point configuration. Valid values: GetObject.
    contentTransformation : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0], default is Undefined, optional
        The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
    """


    actions?: [str]

    contentTransformation?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec for provider configuration items0 transformation configuration items0 content transformation items0

    Attributes
    ----------
    awsLambda : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0], default is Undefined, optional
        Configuration for an AWS Lambda function. See AWS Lambda below for more details.
    """


    awsLambda?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec for provider configuration items0 transformation configuration items0 content transformation items0 aws lambda items0

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS Lambda function.
    functionArnRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRef, default is Undefined, optional
        function arn ref
    functionArnSelector : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelector, default is Undefined, optional
        function arn selector
    functionPayload : str, default is Undefined, optional
        Additional JSON that provides supplemental data to the Lambda function used to transform objects.
    """


    functionArn?: str

    functionArnRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRef

    functionArnSelector?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelector

    functionPayload?: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRef:
    r"""
    Reference to a Function in lambda to populate functionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRefPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelector:
    r"""
    Selector for a Function in lambda to populate functionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelectorPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecForProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The AWS account ID for the owner of the bucket for which you want to create an Object Lambda Access Point.
    configuration : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0], default is Undefined, optional
        A configuration block containing details about the Object Lambda Access Point. See Configuration below for more details.
    name : str, default is Undefined, optional
        The name for this Object Lambda Access Point.
    """


    accountId?: str

    configuration?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0]

    name?: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec init provider configuration items0

    Attributes
    ----------
    allowedFeatures : [str], default is Undefined, optional
        Allowed features. Valid values: GetObject-Range, GetObject-PartNumber.
    cloudWatchMetricsEnabled : bool, default is Undefined, optional
        Whether or not the CloudWatch metrics configuration is enabled.
    supportingAccessPoint : str, default is Undefined, optional
        Standard access point associated with the Object Lambda Access Point.
    supportingAccessPointRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointRef, default is Undefined, optional
        supporting access point ref
    supportingAccessPointSelector : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointSelector, default is Undefined, optional
        supporting access point selector
    transformationConfiguration : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0], default is Undefined, optional
        List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
    """


    allowedFeatures?: [str]

    cloudWatchMetricsEnabled?: bool

    supportingAccessPoint?: str

    supportingAccessPointRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointRef

    supportingAccessPointSelector?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointSelector

    transformationConfiguration?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointRef:
    r"""
    Reference to a AccessPoint in s3control to populate supportingAccessPoint.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointRefPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointSelector:
    r"""
    Selector for a AccessPoint in s3control to populate supportingAccessPoint.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointSelectorPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0SupportingAccessPointSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec init provider configuration items0 transformation configuration items0

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        The actions of an Object Lambda Access Point configuration. Valid values: GetObject.
    contentTransformation : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0], default is Undefined, optional
        The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
    """


    actions?: [str]

    contentTransformation?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec init provider configuration items0 transformation configuration items0 content transformation items0

    Attributes
    ----------
    awsLambda : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0], default is Undefined, optional
        Configuration for an AWS Lambda function. See AWS Lambda below for more details.
    """


    awsLambda?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point spec init provider configuration items0 transformation configuration items0 content transformation items0 aws lambda items0

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS Lambda function.
    functionArnRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRef, default is Undefined, optional
        function arn ref
    functionArnSelector : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelector, default is Undefined, optional
        function arn selector
    functionPayload : str, default is Undefined, optional
        Additional JSON that provides supplemental data to the Lambda function used to transform objects.
    """


    functionArn?: str

    functionArnRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRef

    functionArnSelector?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelector

    functionPayload?: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRef:
    r"""
    Reference to a Function in lambda to populate functionArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRefPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelector:
    r"""
    Selector for a Function in lambda to populate functionArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelectorPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecInitProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0FunctionArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecProviderConfigRefPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToConfigRef

    metadata?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToMetadata

    name: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToConfigRefPolicy


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatus:
    r"""
    ObjectLambdaAccessPointStatus defines the observed state of ObjectLambdaAccessPoint.

    Attributes
    ----------
    atProvider : S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProvider

    conditions?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusConditionsItems0]

    observedGeneration?: int


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProvider:
    r"""
    s3control aws upbound io v1beta1 object lambda access point status at provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The AWS account ID for the owner of the bucket for which you want to create an Object Lambda Access Point.
    alias : str, default is Undefined, optional
        Alias for the S3 Object Lambda Access Point.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Object Lambda Access Point.
    configuration : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0], default is Undefined, optional
        A configuration block containing details about the Object Lambda Access Point. See Configuration below for more details.
    id : str, default is Undefined, optional
        The AWS account ID and access point name separated by a colon (:).
    name : str, default is Undefined, optional
        The name for this Object Lambda Access Point.
    """


    accountId?: str

    alias?: str

    arn?: str

    configuration?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0]

    id?: str

    name?: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point status at provider configuration items0

    Attributes
    ----------
    allowedFeatures : [str], default is Undefined, optional
        Allowed features. Valid values: GetObject-Range, GetObject-PartNumber.
    cloudWatchMetricsEnabled : bool, default is Undefined, optional
        Whether or not the CloudWatch metrics configuration is enabled.
    supportingAccessPoint : str, default is Undefined, optional
        Standard access point associated with the Object Lambda Access Point.
    transformationConfiguration : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0], default is Undefined, optional
        List of transformation configurations for the Object Lambda Access Point. See Transformation Configuration below for more details.
    """


    allowedFeatures?: [str]

    cloudWatchMetricsEnabled?: bool

    supportingAccessPoint?: str

    transformationConfiguration?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point status at provider configuration items0 transformation configuration items0

    Attributes
    ----------
    actions : [str], default is Undefined, optional
        The actions of an Object Lambda Access Point configuration. Valid values: GetObject.
    contentTransformation : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0], default is Undefined, optional
        The content transformation of an Object Lambda Access Point configuration. See Content Transformation below for more details.
    """


    actions?: [str]

    contentTransformation?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point status at provider configuration items0 transformation configuration items0 content transformation items0

    Attributes
    ----------
    awsLambda : [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0], default is Undefined, optional
        Configuration for an AWS Lambda function. See AWS Lambda below for more details.
    """


    awsLambda?: [S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0]


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusAtProviderConfigurationItems0TransformationConfigurationItems0ContentTransformationItems0AwsLambdaItems0:
    r"""
    s3control aws upbound io v1beta1 object lambda access point status at provider configuration items0 transformation configuration items0 content transformation items0 aws lambda items0

    Attributes
    ----------
    functionArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the AWS Lambda function.
    functionPayload : str, default is Undefined, optional
        Additional JSON that provides supplemental data to the Lambda function used to transform objects.
    """


    functionArn?: str

    functionPayload?: str


schema S3controlAwsUpboundIoV1beta1ObjectLambdaAccessPointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


