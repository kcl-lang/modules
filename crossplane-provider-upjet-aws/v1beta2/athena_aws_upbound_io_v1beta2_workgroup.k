"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Workgroup:
    r"""
    Workgroup is the Schema for the Workgroups API. Manages an Athena Workgroup.

    Attributes
    ----------
    apiVersion : str, default is "athena.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Workgroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AthenaAwsUpboundIoV1beta2WorkgroupSpec, default is Undefined, required
        spec
    status : AthenaAwsUpboundIoV1beta2WorkgroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "athena.aws.upbound.io/v1beta2" = "athena.aws.upbound.io/v1beta2"

    kind: "Workgroup" = "Workgroup"

    metadata?: v1.ObjectMeta

    spec: AthenaAwsUpboundIoV1beta2WorkgroupSpec

    status?: AthenaAwsUpboundIoV1beta2WorkgroupStatus


schema AthenaAwsUpboundIoV1beta2WorkgroupSpec:
    r"""
    WorkgroupSpec defines the desired state of Workgroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AthenaAwsUpboundIoV1beta2WorkgroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AthenaAwsUpboundIoV1beta2WorkgroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProvider

    initProvider?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AthenaAwsUpboundIoV1beta2WorkgroupSpecProviderConfigRef

    publishConnectionDetailsTo?: AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AthenaAwsUpboundIoV1beta2WorkgroupSpecWriteConnectionSecretToRef


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProvider:
    r"""
    athena aws upbound io v1beta2 workgroup spec for provider

    Attributes
    ----------
    configuration : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfiguration, default is Undefined, optional
        configuration
    description : str, default is Undefined, optional
        Description of the workgroup.
    forceDestroy : bool, default is Undefined, optional
        Option to delete the workgroup and its contents even if the workgroup contains any named queries.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    state : str, default is Undefined, optional
        State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    configuration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfiguration

    description?: str

    forceDestroy?: bool

    region: str

    state?: str

    tags?: {str:str}


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfiguration:
    r"""
    Configuration block with various settings for the workgroup. Documented below.

    Attributes
    ----------
    bytesScannedCutoffPerQuery : float, default is Undefined, optional
        Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.
    enforceWorkgroupConfiguration : bool, default is Undefined, optional
        Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.
    engineVersion : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationEngineVersion, default is Undefined, optional
        engine version
    executionRole : str, default is Undefined, optional
        Role used in a notebook session for accessing the user's resources.
    publishCloudwatchMetricsEnabled : bool, default is Undefined, optional
        Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.
    requesterPaysEnabled : bool, default is Undefined, optional
        If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.
    resultConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfiguration, default is Undefined, optional
        result configuration
    """


    bytesScannedCutoffPerQuery?: float

    enforceWorkgroupConfiguration?: bool

    engineVersion?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationEngineVersion

    executionRole?: str

    publishCloudwatchMetricsEnabled?: bool

    requesterPaysEnabled?: bool

    resultConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfiguration


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationEngineVersion:
    r"""
    Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.

    Attributes
    ----------
    selectedEngineVersion : str, default is Undefined, optional
        Requested engine version. Defaults to AUTO.
    """


    selectedEngineVersion?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfiguration:
    r"""
    Configuration block with result settings. See Result Configuration below.

    Attributes
    ----------
    aclConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationACLConfiguration, default is Undefined, optional
        acl configuration
    encryptionConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    expectedBucketOwner : str, default is Undefined, optional
        AWS account ID that you expect to be the owner of the Amazon S3 bucket.
    outputLocation : str, default is Undefined, optional
        Location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.
    """


    aclConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationACLConfiguration

    encryptionConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfiguration

    expectedBucketOwner?: str

    outputLocation?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationACLConfiguration:
    r"""
    That an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.

    Attributes
    ----------
    s3AclOption : str, default is Undefined, optional
        Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.
    """


    s3AclOption?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfiguration:
    r"""
    Configuration block with encryption settings. See Encryption Configuration below.

    Attributes
    ----------
    encryptionOption : str, default is Undefined, optional
        Whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
    kmsKeyArn : str, default is Undefined, optional
        For SSE_KMS and CSE_KMS, this is the KMS key ARN.
    kmsKeyArnRef : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    """


    encryptionOption?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRef

    kmsKeyArnSelector?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelector


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRefPolicy


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelectorPolicy


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecForProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    configuration : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfiguration, default is Undefined, optional
        configuration
    description : str, default is Undefined, optional
        Description of the workgroup.
    forceDestroy : bool, default is Undefined, optional
        Option to delete the workgroup and its contents even if the workgroup contains any named queries.
    state : str, default is Undefined, optional
        State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    configuration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfiguration

    description?: str

    forceDestroy?: bool

    state?: str

    tags?: {str:str}


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfiguration:
    r"""
    Configuration block with various settings for the workgroup. Documented below.

    Attributes
    ----------
    bytesScannedCutoffPerQuery : float, default is Undefined, optional
        Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.
    enforceWorkgroupConfiguration : bool, default is Undefined, optional
        Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.
    engineVersion : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationEngineVersion, default is Undefined, optional
        engine version
    executionRole : str, default is Undefined, optional
        Role used in a notebook session for accessing the user's resources.
    publishCloudwatchMetricsEnabled : bool, default is Undefined, optional
        Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.
    requesterPaysEnabled : bool, default is Undefined, optional
        If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.
    resultConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfiguration, default is Undefined, optional
        result configuration
    """


    bytesScannedCutoffPerQuery?: float

    enforceWorkgroupConfiguration?: bool

    engineVersion?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationEngineVersion

    executionRole?: str

    publishCloudwatchMetricsEnabled?: bool

    requesterPaysEnabled?: bool

    resultConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfiguration


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationEngineVersion:
    r"""
    Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.

    Attributes
    ----------
    selectedEngineVersion : str, default is Undefined, optional
        Requested engine version. Defaults to AUTO.
    """


    selectedEngineVersion?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfiguration:
    r"""
    Configuration block with result settings. See Result Configuration below.

    Attributes
    ----------
    aclConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationACLConfiguration, default is Undefined, optional
        acl configuration
    encryptionConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    expectedBucketOwner : str, default is Undefined, optional
        AWS account ID that you expect to be the owner of the Amazon S3 bucket.
    outputLocation : str, default is Undefined, optional
        Location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.
    """


    aclConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationACLConfiguration

    encryptionConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfiguration

    expectedBucketOwner?: str

    outputLocation?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationACLConfiguration:
    r"""
    That an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.

    Attributes
    ----------
    s3AclOption : str, default is Undefined, optional
        Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.
    """


    s3AclOption?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfiguration:
    r"""
    Configuration block with encryption settings. See Encryption Configuration below.

    Attributes
    ----------
    encryptionOption : str, default is Undefined, optional
        Whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
    kmsKeyArn : str, default is Undefined, optional
        For SSE_KMS and CSE_KMS, this is the KMS key ARN.
    kmsKeyArnRef : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    """


    encryptionOption?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRef

    kmsKeyArnSelector?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelector


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRefPolicy


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelectorPolicy


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecInitProviderConfigurationResultConfigurationEncryptionConfigurationKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AthenaAwsUpboundIoV1beta2WorkgroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AthenaAwsUpboundIoV1beta2WorkgroupSpecProviderConfigRefPolicy


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToConfigRef

    metadata?: AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToMetadata

    name: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToConfigRefPolicy


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AthenaAwsUpboundIoV1beta2WorkgroupStatus:
    r"""
    WorkgroupStatus defines the observed state of Workgroup.

    Attributes
    ----------
    atProvider : AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AthenaAwsUpboundIoV1beta2WorkgroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProvider

    conditions?: [AthenaAwsUpboundIoV1beta2WorkgroupStatusConditionsItems0]

    observedGeneration?: int


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProvider:
    r"""
    athena aws upbound io v1beta2 workgroup status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the workgroup
    configuration : AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfiguration, default is Undefined, optional
        configuration
    description : str, default is Undefined, optional
        Description of the workgroup.
    forceDestroy : bool, default is Undefined, optional
        Option to delete the workgroup and its contents even if the workgroup contains any named queries.
    id : str, default is Undefined, optional
        Workgroup name
    state : str, default is Undefined, optional
        State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    configuration?: AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfiguration

    description?: str

    forceDestroy?: bool

    id?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfiguration:
    r"""
    Configuration block with various settings for the workgroup. Documented below.

    Attributes
    ----------
    bytesScannedCutoffPerQuery : float, default is Undefined, optional
        Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.
    enforceWorkgroupConfiguration : bool, default is Undefined, optional
        Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.
    engineVersion : AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationEngineVersion, default is Undefined, optional
        engine version
    executionRole : str, default is Undefined, optional
        Role used in a notebook session for accessing the user's resources.
    publishCloudwatchMetricsEnabled : bool, default is Undefined, optional
        Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.
    requesterPaysEnabled : bool, default is Undefined, optional
        If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.
    resultConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfiguration, default is Undefined, optional
        result configuration
    """


    bytesScannedCutoffPerQuery?: float

    enforceWorkgroupConfiguration?: bool

    engineVersion?: AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationEngineVersion

    executionRole?: str

    publishCloudwatchMetricsEnabled?: bool

    requesterPaysEnabled?: bool

    resultConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfiguration


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationEngineVersion:
    r"""
    Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.

    Attributes
    ----------
    effectiveEngineVersion : str, default is Undefined, optional
        The engine version on which the query runs. If selected_engine_version is set to AUTO, the effective engine version is chosen by Athena.
    selectedEngineVersion : str, default is Undefined, optional
        Requested engine version. Defaults to AUTO.
    """


    effectiveEngineVersion?: str

    selectedEngineVersion?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfiguration:
    r"""
    Configuration block with result settings. See Result Configuration below.

    Attributes
    ----------
    aclConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfigurationACLConfiguration, default is Undefined, optional
        acl configuration
    encryptionConfiguration : AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfigurationEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    expectedBucketOwner : str, default is Undefined, optional
        AWS account ID that you expect to be the owner of the Amazon S3 bucket.
    outputLocation : str, default is Undefined, optional
        Location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.
    """


    aclConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfigurationACLConfiguration

    encryptionConfiguration?: AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfigurationEncryptionConfiguration

    expectedBucketOwner?: str

    outputLocation?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfigurationACLConfiguration:
    r"""
    That an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.

    Attributes
    ----------
    s3AclOption : str, default is Undefined, optional
        Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.
    """


    s3AclOption?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusAtProviderConfigurationResultConfigurationEncryptionConfiguration:
    r"""
    Configuration block with encryption settings. See Encryption Configuration below.

    Attributes
    ----------
    encryptionOption : str, default is Undefined, optional
        Whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.
    kmsKeyArn : str, default is Undefined, optional
        For SSE_KMS and CSE_KMS, this is the KMS key ARN.
    """


    encryptionOption?: str

    kmsKeyArn?: str


schema AthenaAwsUpboundIoV1beta2WorkgroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


