"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AMI:
    r"""
    AMI is the Schema for the AMIs API. Creates and manages a custom Amazon Machine Image (AMI).

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AMI", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1AMISpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1AMIStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"

    kind: "AMI" = "AMI"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta1AMISpec

    status?: Ec2AwsUpboundIoV1beta1AMIStatus


schema Ec2AwsUpboundIoV1beta1AMISpec:
    r"""
    AMISpec defines the desired state of AMI

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1AMISpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1AMISpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1AMISpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1AMISpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta1AMISpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta1AMISpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta1AMISpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1AMISpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta1AMISpecForProvider:
    r"""
    ec2 aws upbound io v1beta1 a m i spec for provider

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        Machine architecture for created instances. Defaults to "x86_64".
    bootMode : str, default is Undefined, optional
        Boot mode of the AMI. For more information, see Boot modes in the Amazon Elastic Compute Cloud User Guide.
    deprecationTime : str, default is Undefined, optional
        Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)
    description : str, default is Undefined, optional
        Longer, human-readable description for the AMI.
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0], default is Undefined, optional
        Nested block describing an EBS block device that should be
        attached to created instances. The structure of this block is described below.
    enaSupport : bool, default is Undefined, optional
        Whether enhanced networking with ENA is enabled. Defaults to false.
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta1AMISpecForProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Nested block describing an ephemeral block device that
        should be attached to created instances. The structure of this block is described below.
    imageLocation : str, default is Undefined, optional
        Path to an S3 object containing an image manifest, e.g., created
        by the ec2-upload-bundle command in the EC2 command line tools.
    imdsSupport : str, default is Undefined, optional
        If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to v2.0. For more information, see Configure instance metadata options for new instances.
    kernelId : str, default is Undefined, optional
        ID of the kernel image (AKI) that will be used as the paravirtual
        kernel in created instances.
    name : str, default is Undefined, optional
        Region-unique name for the AMI.
    ramdiskId : str, default is Undefined, optional
        ID of an initrd image (ARI) that will be used when booting the
        created instances.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rootDeviceName : str, default is Undefined, optional
        Name of the root device (for example, /dev/sda1, or /dev/xvda).
    sriovNetSupport : str, default is Undefined, optional
        When set to "simple" (the default), enables enhanced networking
        for created instances. No other value is supported at this time.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tpmSupport : str, default is Undefined, optional
        If the image is configured for NitroTPM support, the value is v2.0. For more information, see NitroTPM in the Amazon Elastic Compute Cloud User Guide.
    virtualizationType : str, default is Undefined, optional
        Keyword to choose what virtualization mode created instances
        will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
        changes the set of further arguments that are required, as described below.
    """


    architecture?: str

    bootMode?: str

    deprecationTime?: str

    description?: str

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0]

    enaSupport?: bool

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta1AMISpecForProviderEphemeralBlockDeviceItems0]

    imageLocation?: str

    imdsSupport?: str

    kernelId?: str

    name?: str

    ramdiskId?: str

    region: str

    rootDeviceName?: str

    sriovNetSupport?: str

    tags?: {str:str}

    tpmSupport?: str

    virtualizationType?: str


schema Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 a m i spec for provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Boolean controlling whether the EBS volumes created to
        support each created instance will be deleted once that instance is terminated.
    deviceName : str, default is Undefined, optional
        Path at which the device is exposed to created instances.
    encrypted : bool, default is Undefined, optional
        Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with snapshot_id.
    iops : float, default is Undefined, optional
        Number of I/O operations per second the
        created volumes will support.
    outpostArn : str, default is Undefined, optional
        ARN of the Outpost on which the snapshot is stored.
    snapshotId : str, default is Undefined, optional
        ID of an EBS snapshot that will be used to initialize the created
        EBS volumes. If set, the volume_size attribute must be at least as large as the referenced
        snapshot.
    snapshotIdRef : Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDRef, default is Undefined, optional
        snapshot Id ref
    snapshotIdSelector : Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDSelector, default is Undefined, optional
        snapshot Id selector
    throughput : float, default is Undefined, optional
        Throughput that the EBS volume supports, in MiB/s. Only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of created volumes in GiB.
        If snapshot_id is set and volume_size is omitted then the volume will have the same size
        as the selected snapshot.
    volumeType : str, default is Undefined, optional
        Type of EBS volume to create. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: standard).
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    outpostArn?: str

    snapshotId?: str

    snapshotIdRef?: Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDRef

    snapshotIdSelector?: Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDSelector

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDRef:
    r"""
    Reference to a EBSSnapshot in ec2 to populate snapshotId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDRefPolicy


schema Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDSelector:
    r"""
    Selector for a EBSSnapshot in ec2 to populate snapshotId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1AMISpecForProviderEbsBlockDeviceItems0SnapshotIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1AMISpecForProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 a m i spec for provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Path at which the device is exposed to created instances.
    virtualName : str, default is Undefined, optional
        Name for the ephemeral device, of the form "ephemeralN" where
        N is a volume number starting from zero.
    """


    deviceName?: str

    virtualName?: str


schema Ec2AwsUpboundIoV1beta1AMISpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        Machine architecture for created instances. Defaults to "x86_64".
    bootMode : str, default is Undefined, optional
        Boot mode of the AMI. For more information, see Boot modes in the Amazon Elastic Compute Cloud User Guide.
    deprecationTime : str, default is Undefined, optional
        Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)
    description : str, default is Undefined, optional
        Longer, human-readable description for the AMI.
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0], default is Undefined, optional
        Nested block describing an EBS block device that should be
        attached to created instances. The structure of this block is described below.
    enaSupport : bool, default is Undefined, optional
        Whether enhanced networking with ENA is enabled. Defaults to false.
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta1AMISpecInitProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Nested block describing an ephemeral block device that
        should be attached to created instances. The structure of this block is described below.
    imageLocation : str, default is Undefined, optional
        Path to an S3 object containing an image manifest, e.g., created
        by the ec2-upload-bundle command in the EC2 command line tools.
    imdsSupport : str, default is Undefined, optional
        If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to v2.0. For more information, see Configure instance metadata options for new instances.
    kernelId : str, default is Undefined, optional
        ID of the kernel image (AKI) that will be used as the paravirtual
        kernel in created instances.
    name : str, default is Undefined, optional
        Region-unique name for the AMI.
    ramdiskId : str, default is Undefined, optional
        ID of an initrd image (ARI) that will be used when booting the
        created instances.
    rootDeviceName : str, default is Undefined, optional
        Name of the root device (for example, /dev/sda1, or /dev/xvda).
    sriovNetSupport : str, default is Undefined, optional
        When set to "simple" (the default), enables enhanced networking
        for created instances. No other value is supported at this time.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tpmSupport : str, default is Undefined, optional
        If the image is configured for NitroTPM support, the value is v2.0. For more information, see NitroTPM in the Amazon Elastic Compute Cloud User Guide.
    virtualizationType : str, default is Undefined, optional
        Keyword to choose what virtualization mode created instances
        will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
        changes the set of further arguments that are required, as described below.
    """


    architecture?: str

    bootMode?: str

    deprecationTime?: str

    description?: str

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0]

    enaSupport?: bool

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta1AMISpecInitProviderEphemeralBlockDeviceItems0]

    imageLocation?: str

    imdsSupport?: str

    kernelId?: str

    name?: str

    ramdiskId?: str

    rootDeviceName?: str

    sriovNetSupport?: str

    tags?: {str:str}

    tpmSupport?: str

    virtualizationType?: str


schema Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 a m i spec init provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Boolean controlling whether the EBS volumes created to
        support each created instance will be deleted once that instance is terminated.
    deviceName : str, default is Undefined, optional
        Path at which the device is exposed to created instances.
    encrypted : bool, default is Undefined, optional
        Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with snapshot_id.
    iops : float, default is Undefined, optional
        Number of I/O operations per second the
        created volumes will support.
    outpostArn : str, default is Undefined, optional
        ARN of the Outpost on which the snapshot is stored.
    snapshotId : str, default is Undefined, optional
        ID of an EBS snapshot that will be used to initialize the created
        EBS volumes. If set, the volume_size attribute must be at least as large as the referenced
        snapshot.
    snapshotIdRef : Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDRef, default is Undefined, optional
        snapshot Id ref
    snapshotIdSelector : Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDSelector, default is Undefined, optional
        snapshot Id selector
    throughput : float, default is Undefined, optional
        Throughput that the EBS volume supports, in MiB/s. Only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of created volumes in GiB.
        If snapshot_id is set and volume_size is omitted then the volume will have the same size
        as the selected snapshot.
    volumeType : str, default is Undefined, optional
        Type of EBS volume to create. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: standard).
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    outpostArn?: str

    snapshotId?: str

    snapshotIdRef?: Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDRef

    snapshotIdSelector?: Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDSelector

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDRef:
    r"""
    Reference to a EBSSnapshot in ec2 to populate snapshotId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDRefPolicy


schema Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDSelector:
    r"""
    Selector for a EBSSnapshot in ec2 to populate snapshotId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1AMISpecInitProviderEbsBlockDeviceItems0SnapshotIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1AMISpecInitProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 a m i spec init provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Path at which the device is exposed to created instances.
    virtualName : str, default is Undefined, optional
        Name for the ephemeral device, of the form "ephemeralN" where
        N is a volume number starting from zero.
    """


    deviceName?: str

    virtualName?: str


schema Ec2AwsUpboundIoV1beta1AMISpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1AMISpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1AMISpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1AMISpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1AMISpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta1AMISpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta1AMIStatus:
    r"""
    AMIStatus defines the observed state of AMI.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1AMIStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1AMIStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta1AMIStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta1AMIStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta1AMIStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta1 a m i status at provider

    Attributes
    ----------
    architecture : str, default is Undefined, optional
        Machine architecture for created instances. Defaults to "x86_64".
    arn : str, default is Undefined, optional
        ARN of the AMI.
    bootMode : str, default is Undefined, optional
        Boot mode of the AMI. For more information, see Boot modes in the Amazon Elastic Compute Cloud User Guide.
    deprecationTime : str, default is Undefined, optional
        Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)
    description : str, default is Undefined, optional
        Longer, human-readable description for the AMI.
    ebsBlockDevice : [Ec2AwsUpboundIoV1beta1AMIStatusAtProviderEbsBlockDeviceItems0], default is Undefined, optional
        Nested block describing an EBS block device that should be
        attached to created instances. The structure of this block is described below.
    enaSupport : bool, default is Undefined, optional
        Whether enhanced networking with ENA is enabled. Defaults to false.
    ephemeralBlockDevice : [Ec2AwsUpboundIoV1beta1AMIStatusAtProviderEphemeralBlockDeviceItems0], default is Undefined, optional
        Nested block describing an ephemeral block device that
        should be attached to created instances. The structure of this block is described below.
    hypervisor : str, default is Undefined, optional
        Hypervisor type of the image.
    id : str, default is Undefined, optional
        ID of the created AMI.
    imageLocation : str, default is Undefined, optional
        Path to an S3 object containing an image manifest, e.g., created
        by the ec2-upload-bundle command in the EC2 command line tools.
    imageOwnerAlias : str, default is Undefined, optional
        AWS account alias (for example, amazon, self) or the AWS account ID of the AMI owner.
    imageType : str, default is Undefined, optional
        Type of image.
    imdsSupport : str, default is Undefined, optional
        If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to v2.0. For more information, see Configure instance metadata options for new instances.
    kernelId : str, default is Undefined, optional
        ID of the kernel image (AKI) that will be used as the paravirtual
        kernel in created instances.
    manageEbsSnapshots : bool, default is Undefined, optional
        manage ebs snapshots
    name : str, default is Undefined, optional
        Region-unique name for the AMI.
    ownerId : str, default is Undefined, optional
        AWS account ID of the image owner.
    platform : str, default is Undefined, optional
        This value is set to windows for Windows AMIs; otherwise, it is blank.
    platformDetails : str, default is Undefined, optional
        Platform details associated with the billing code of the AMI.
    public : bool, default is Undefined, optional
        Whether the image has public launch permissions.
    ramdiskId : str, default is Undefined, optional
        ID of an initrd image (ARI) that will be used when booting the
        created instances.
    rootDeviceName : str, default is Undefined, optional
        Name of the root device (for example, /dev/sda1, or /dev/xvda).
    rootSnapshotId : str, default is Undefined, optional
        Snapshot ID for the root volume (for EBS-backed AMIs)
    sriovNetSupport : str, default is Undefined, optional
        When set to "simple" (the default), enables enhanced networking
        for created instances. No other value is supported at this time.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tpmSupport : str, default is Undefined, optional
        If the image is configured for NitroTPM support, the value is v2.0. For more information, see NitroTPM in the Amazon Elastic Compute Cloud User Guide.
    usageOperation : str, default is Undefined, optional
        Operation of the Amazon EC2 instance and the billing code that is associated with the AMI.
    virtualizationType : str, default is Undefined, optional
        Keyword to choose what virtualization mode created instances
        will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
        changes the set of further arguments that are required, as described below.
    """


    architecture?: str

    arn?: str

    bootMode?: str

    deprecationTime?: str

    description?: str

    ebsBlockDevice?: [Ec2AwsUpboundIoV1beta1AMIStatusAtProviderEbsBlockDeviceItems0]

    enaSupport?: bool

    ephemeralBlockDevice?: [Ec2AwsUpboundIoV1beta1AMIStatusAtProviderEphemeralBlockDeviceItems0]

    hypervisor?: str

    id?: str

    imageLocation?: str

    imageOwnerAlias?: str

    imageType?: str

    imdsSupport?: str

    kernelId?: str

    manageEbsSnapshots?: bool

    name?: str

    ownerId?: str

    platform?: str

    platformDetails?: str

    public?: bool

    ramdiskId?: str

    rootDeviceName?: str

    rootSnapshotId?: str

    sriovNetSupport?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    tpmSupport?: str

    usageOperation?: str

    virtualizationType?: str


schema Ec2AwsUpboundIoV1beta1AMIStatusAtProviderEbsBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 a m i status at provider ebs block device items0

    Attributes
    ----------
    deleteOnTermination : bool, default is Undefined, optional
        Boolean controlling whether the EBS volumes created to
        support each created instance will be deleted once that instance is terminated.
    deviceName : str, default is Undefined, optional
        Path at which the device is exposed to created instances.
    encrypted : bool, default is Undefined, optional
        Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with snapshot_id.
    iops : float, default is Undefined, optional
        Number of I/O operations per second the
        created volumes will support.
    outpostArn : str, default is Undefined, optional
        ARN of the Outpost on which the snapshot is stored.
    snapshotId : str, default is Undefined, optional
        ID of an EBS snapshot that will be used to initialize the created
        EBS volumes. If set, the volume_size attribute must be at least as large as the referenced
        snapshot.
    throughput : float, default is Undefined, optional
        Throughput that the EBS volume supports, in MiB/s. Only valid for volume_type of gp3.
    volumeSize : float, default is Undefined, optional
        Size of created volumes in GiB.
        If snapshot_id is set and volume_size is omitted then the volume will have the same size
        as the selected snapshot.
    volumeType : str, default is Undefined, optional
        Type of EBS volume to create. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: standard).
    """


    deleteOnTermination?: bool

    deviceName?: str

    encrypted?: bool

    iops?: float

    outpostArn?: str

    snapshotId?: str

    throughput?: float

    volumeSize?: float

    volumeType?: str


schema Ec2AwsUpboundIoV1beta1AMIStatusAtProviderEphemeralBlockDeviceItems0:
    r"""
    ec2 aws upbound io v1beta1 a m i status at provider ephemeral block device items0

    Attributes
    ----------
    deviceName : str, default is Undefined, optional
        Path at which the device is exposed to created instances.
    virtualName : str, default is Undefined, optional
        Name for the ephemeral device, of the form "ephemeralN" where
        N is a volume number starting from zero.
    """


    deviceName?: str

    virtualName?: str


schema Ec2AwsUpboundIoV1beta1AMIStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


