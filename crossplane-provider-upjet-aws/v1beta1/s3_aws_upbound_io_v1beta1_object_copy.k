"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ObjectCopy:
    r"""
    ObjectCopy is the Schema for the ObjectCopys API. Provides a resource for copying an S3 object.

    Attributes
    ----------
    apiVersion : str, default is "s3.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ObjectCopy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : S3AwsUpboundIoV1beta1ObjectCopySpec, default is Undefined, required
        spec
    status : S3AwsUpboundIoV1beta1ObjectCopyStatus, default is Undefined, optional
        status
    """


    apiVersion: "s3.aws.upbound.io/v1beta1" = "s3.aws.upbound.io/v1beta1"

    kind: "ObjectCopy" = "ObjectCopy"

    metadata?: v1.ObjectMeta

    spec: S3AwsUpboundIoV1beta1ObjectCopySpec

    status?: S3AwsUpboundIoV1beta1ObjectCopyStatus


schema S3AwsUpboundIoV1beta1ObjectCopySpec:
    r"""
    ObjectCopySpec defines the desired state of ObjectCopy

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : S3AwsUpboundIoV1beta1ObjectCopySpecForProvider, default is Undefined, required
        for provider
    initProvider : S3AwsUpboundIoV1beta1ObjectCopySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : S3AwsUpboundIoV1beta1ObjectCopySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : S3AwsUpboundIoV1beta1ObjectCopySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: S3AwsUpboundIoV1beta1ObjectCopySpecForProvider

    initProvider?: S3AwsUpboundIoV1beta1ObjectCopySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: S3AwsUpboundIoV1beta1ObjectCopySpecProviderConfigRef

    publishConnectionDetailsTo?: S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: S3AwsUpboundIoV1beta1ObjectCopySpecWriteConnectionSecretToRef


schema S3AwsUpboundIoV1beta1ObjectCopySpecForProvider:
    r"""
    s3 aws upbound io v1beta1 object copy spec for provider

    Attributes
    ----------
    acl : str, default is Undefined, optional
        Canned ACL to apply. Valid values are private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Conflicts with grant.
    bucket : str, default is Undefined, optional
        Name of the bucket to put the file in.
    bucketKeyEnabled : bool, default is Undefined, optional
        bucket key enabled
    cacheControl : str, default is Undefined, optional
        Specifies caching behavior along the request/reply chain Read w3c cache_control for further details.
    checksumAlgorithm : str, default is Undefined, optional
        Indicates the algorithm used to create the checksum for the object. If a value is specified and the object is encrypted with KMS, you must have permission to use the kms:Decrypt action. Valid values: CRC32, CRC32C, SHA1, SHA256.
    contentDisposition : str, default is Undefined, optional
        Specifies presentational information for the object. Read w3c content_disposition for further information.
    contentEncoding : str, default is Undefined, optional
        Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    contentLanguage : str, default is Undefined, optional
        Language the content is in e.g., en-US or en-GB.
    contentType : str, default is Undefined, optional
        Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    copyIfMatch : str, default is Undefined, optional
        Copies the object if its entity tag (ETag) matches the specified tag.
    copyIfModifiedSince : str, default is Undefined, optional
        Copies the object if it has been modified since the specified time, in RFC3339 format.
    copyIfNoneMatch : str, default is Undefined, optional
        Copies the object if its entity tag (ETag) is different than the specified ETag.
    copyIfUnmodifiedSince : str, default is Undefined, optional
        Copies the object if it hasn't been modified since the specified time, in RFC3339 format.
    customerAlgorithm : str, default is Undefined, optional
        Specifies the algorithm to use to when encrypting the object (for example, AES256).
    customerKeyMd5 : str, default is Undefined, optional
        Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
    customerKeySecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecForProviderCustomerKeySecretRef, default is Undefined, optional
        customer key secret ref
    expectedBucketOwner : str, default is Undefined, optional
        Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    expectedSourceBucketOwner : str, default is Undefined, optional
        Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    expires : str, default is Undefined, optional
        Date and time at which the object is no longer cacheable, in RFC3339 format.
    forceDestroy : bool, default is Undefined, optional
        Allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    grant : [S3AwsUpboundIoV1beta1ObjectCopySpecForProviderGrantItems0], default is Undefined, optional
        Configuration block for header grants. Documented below. Conflicts with acl.
    key : str, default is Undefined, optional
        Name of the object once it is in the bucket.
    kmsEncryptionContextSecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecForProviderKmsEncryptionContextSecretRef, default is Undefined, optional
        kms encryption context secret ref
    kmsKeyIdSecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecForProviderKmsKeyIDSecretRef, default is Undefined, optional
        kms key Id secret ref
    metadata : {str:str}, default is Undefined, optional
        Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    metadataDirective : str, default is Undefined, optional
        Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are COPY and REPLACE.
    objectLockLegalHoldStatus : str, default is Undefined, optional
        The legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    objectLockMode : str, default is Undefined, optional
        Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    objectLockRetainUntilDate : str, default is Undefined, optional
        Date and time, in RFC3339 format, when this object's object lock will expire.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requestPayer : str, default is Undefined, optional
        Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is requester.
    serverSideEncryption : str, default is Undefined, optional
        Specifies server-side encryption of the object in S3. Valid values are AES256 and aws:kms.
    source : str, default is Undefined, optional
        Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, testbucket/test1.json. For objects accessed through access points, specify the ARN of the object as accessed through the access point, in the format arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>. For example, arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json.
    sourceCustomerAlgorithm : str, default is Undefined, optional
        Specifies the algorithm to use when decrypting the source object (for example, AES256).
    sourceCustomerKeyMd5 : str, default is Undefined, optional
        Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
    sourceCustomerKeySecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecForProviderSourceCustomerKeySecretRef, default is Undefined, optional
        source customer key secret ref
    storageClass : str, default is Undefined, optional
        Specifies the desired storage class for the object. Defaults to STANDARD.
    taggingDirective : str, default is Undefined, optional
        Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are COPY and REPLACE.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    websiteRedirect : str, default is Undefined, optional
        Specifies a target URL for website redirect.
    """


    acl?: str

    bucket?: str

    bucketKeyEnabled?: bool

    cacheControl?: str

    checksumAlgorithm?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLanguage?: str

    contentType?: str

    copyIfMatch?: str

    copyIfModifiedSince?: str

    copyIfNoneMatch?: str

    copyIfUnmodifiedSince?: str

    customerAlgorithm?: str

    customerKeyMd5?: str

    customerKeySecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecForProviderCustomerKeySecretRef

    expectedBucketOwner?: str

    expectedSourceBucketOwner?: str

    expires?: str

    forceDestroy?: bool

    grant?: [S3AwsUpboundIoV1beta1ObjectCopySpecForProviderGrantItems0]

    key?: str

    kmsEncryptionContextSecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecForProviderKmsEncryptionContextSecretRef

    kmsKeyIdSecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecForProviderKmsKeyIDSecretRef

    metadata?: {str:str}

    metadataDirective?: str

    objectLockLegalHoldStatus?: str

    objectLockMode?: str

    objectLockRetainUntilDate?: str

    region: str

    requestPayer?: str

    serverSideEncryption?: str

    source?: str

    sourceCustomerAlgorithm?: str

    sourceCustomerKeyMd5?: str

    sourceCustomerKeySecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecForProviderSourceCustomerKeySecretRef

    storageClass?: str

    taggingDirective?: str

    tags?: {str:str}

    websiteRedirect?: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecForProviderCustomerKeySecretRef:
    r"""
    Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecForProviderGrantItems0:
    r"""
    s3 aws upbound io v1beta1 object copy spec for provider grant items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        Email address of the grantee. Used only when type is AmazonCustomerByEmail.
    id : str, default is Undefined, optional
        Canonical user ID of the grantee. Used only when type is CanonicalUser.
    permissions : [str], default is Undefined, optional
        List of permissions to grant to grantee. Valid values are READ, READ_ACP, WRITE_ACP, FULL_CONTROL.
    $type : str, default is Undefined, optional
        - Type of grantee. Valid values are CanonicalUser, Group, and AmazonCustomerByEmail.
    uri : str, default is Undefined, optional
        URI of the grantee group. Used only when type is Group.
    """


    email?: str

    id?: str

    permissions?: [str]

    $type?: str

    uri?: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecForProviderKmsEncryptionContextSecretRef:
    r"""
    Specifies the AWS KMS Encryption Context to use for object encryption. The value is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecForProviderKmsKeyIDSecretRef:
    r"""
    Specifies the AWS KMS Key ARN to use for object encryption. This value is a fully qualified ARN of the KMS Key. If using aws_kms_key, use the exported arn attribute: kms_key_id = aws_kms_key.foo.arn

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecForProviderSourceCustomerKeySecretRef:
    r"""
    Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    acl : str, default is Undefined, optional
        Canned ACL to apply. Valid values are private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Conflicts with grant.
    bucket : str, default is Undefined, optional
        Name of the bucket to put the file in.
    bucketKeyEnabled : bool, default is Undefined, optional
        bucket key enabled
    cacheControl : str, default is Undefined, optional
        Specifies caching behavior along the request/reply chain Read w3c cache_control for further details.
    checksumAlgorithm : str, default is Undefined, optional
        Indicates the algorithm used to create the checksum for the object. If a value is specified and the object is encrypted with KMS, you must have permission to use the kms:Decrypt action. Valid values: CRC32, CRC32C, SHA1, SHA256.
    contentDisposition : str, default is Undefined, optional
        Specifies presentational information for the object. Read w3c content_disposition for further information.
    contentEncoding : str, default is Undefined, optional
        Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    contentLanguage : str, default is Undefined, optional
        Language the content is in e.g., en-US or en-GB.
    contentType : str, default is Undefined, optional
        Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    copyIfMatch : str, default is Undefined, optional
        Copies the object if its entity tag (ETag) matches the specified tag.
    copyIfModifiedSince : str, default is Undefined, optional
        Copies the object if it has been modified since the specified time, in RFC3339 format.
    copyIfNoneMatch : str, default is Undefined, optional
        Copies the object if its entity tag (ETag) is different than the specified ETag.
    copyIfUnmodifiedSince : str, default is Undefined, optional
        Copies the object if it hasn't been modified since the specified time, in RFC3339 format.
    customerAlgorithm : str, default is Undefined, optional
        Specifies the algorithm to use to when encrypting the object (for example, AES256).
    customerKeyMd5 : str, default is Undefined, optional
        Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
    customerKeySecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderCustomerKeySecretRef, default is Undefined, optional
        customer key secret ref
    expectedBucketOwner : str, default is Undefined, optional
        Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    expectedSourceBucketOwner : str, default is Undefined, optional
        Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    expires : str, default is Undefined, optional
        Date and time at which the object is no longer cacheable, in RFC3339 format.
    forceDestroy : bool, default is Undefined, optional
        Allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    grant : [S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderGrantItems0], default is Undefined, optional
        Configuration block for header grants. Documented below. Conflicts with acl.
    key : str, default is Undefined, optional
        Name of the object once it is in the bucket.
    kmsEncryptionContextSecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderKmsEncryptionContextSecretRef, default is Undefined, optional
        kms encryption context secret ref
    kmsKeyIdSecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderKmsKeyIDSecretRef, default is Undefined, optional
        kms key Id secret ref
    metadata : {str:str}, default is Undefined, optional
        Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    metadataDirective : str, default is Undefined, optional
        Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are COPY and REPLACE.
    objectLockLegalHoldStatus : str, default is Undefined, optional
        The legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    objectLockMode : str, default is Undefined, optional
        Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    objectLockRetainUntilDate : str, default is Undefined, optional
        Date and time, in RFC3339 format, when this object's object lock will expire.
    requestPayer : str, default is Undefined, optional
        Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is requester.
    serverSideEncryption : str, default is Undefined, optional
        Specifies server-side encryption of the object in S3. Valid values are AES256 and aws:kms.
    source : str, default is Undefined, optional
        Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, testbucket/test1.json. For objects accessed through access points, specify the ARN of the object as accessed through the access point, in the format arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>. For example, arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json.
    sourceCustomerAlgorithm : str, default is Undefined, optional
        Specifies the algorithm to use when decrypting the source object (for example, AES256).
    sourceCustomerKeyMd5 : str, default is Undefined, optional
        Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
    sourceCustomerKeySecretRef : S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderSourceCustomerKeySecretRef, default is Undefined, optional
        source customer key secret ref
    storageClass : str, default is Undefined, optional
        Specifies the desired storage class for the object. Defaults to STANDARD.
    taggingDirective : str, default is Undefined, optional
        Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are COPY and REPLACE.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    websiteRedirect : str, default is Undefined, optional
        Specifies a target URL for website redirect.
    """


    acl?: str

    bucket?: str

    bucketKeyEnabled?: bool

    cacheControl?: str

    checksumAlgorithm?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLanguage?: str

    contentType?: str

    copyIfMatch?: str

    copyIfModifiedSince?: str

    copyIfNoneMatch?: str

    copyIfUnmodifiedSince?: str

    customerAlgorithm?: str

    customerKeyMd5?: str

    customerKeySecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderCustomerKeySecretRef

    expectedBucketOwner?: str

    expectedSourceBucketOwner?: str

    expires?: str

    forceDestroy?: bool

    grant?: [S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderGrantItems0]

    key?: str

    kmsEncryptionContextSecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderKmsEncryptionContextSecretRef

    kmsKeyIdSecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderKmsKeyIDSecretRef

    metadata?: {str:str}

    metadataDirective?: str

    objectLockLegalHoldStatus?: str

    objectLockMode?: str

    objectLockRetainUntilDate?: str

    requestPayer?: str

    serverSideEncryption?: str

    source?: str

    sourceCustomerAlgorithm?: str

    sourceCustomerKeyMd5?: str

    sourceCustomerKeySecretRef?: S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderSourceCustomerKeySecretRef

    storageClass?: str

    taggingDirective?: str

    tags?: {str:str}

    websiteRedirect?: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderCustomerKeySecretRef:
    r"""
    Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderGrantItems0:
    r"""
    s3 aws upbound io v1beta1 object copy spec init provider grant items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        Email address of the grantee. Used only when type is AmazonCustomerByEmail.
    id : str, default is Undefined, optional
        Canonical user ID of the grantee. Used only when type is CanonicalUser.
    permissions : [str], default is Undefined, optional
        List of permissions to grant to grantee. Valid values are READ, READ_ACP, WRITE_ACP, FULL_CONTROL.
    $type : str, default is Undefined, optional
        - Type of grantee. Valid values are CanonicalUser, Group, and AmazonCustomerByEmail.
    uri : str, default is Undefined, optional
        URI of the grantee group. Used only when type is Group.
    """


    email?: str

    id?: str

    permissions?: [str]

    $type?: str

    uri?: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderKmsEncryptionContextSecretRef:
    r"""
    Specifies the AWS KMS Encryption Context to use for object encryption. The value is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderKmsKeyIDSecretRef:
    r"""
    Specifies the AWS KMS Key ARN to use for object encryption. This value is a fully qualified ARN of the KMS Key. If using aws_kms_key, use the exported arn attribute: kms_key_id = aws_kms_key.foo.arn

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecInitProviderSourceCustomerKeySecretRef:
    r"""
    Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectCopySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectCopySpecProviderConfigRefPolicy


schema S3AwsUpboundIoV1beta1ObjectCopySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToConfigRef

    metadata?: S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToMetadata

    name: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToConfigRefPolicy


schema S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema S3AwsUpboundIoV1beta1ObjectCopySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema S3AwsUpboundIoV1beta1ObjectCopySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema S3AwsUpboundIoV1beta1ObjectCopyStatus:
    r"""
    ObjectCopyStatus defines the observed state of ObjectCopy.

    Attributes
    ----------
    atProvider : S3AwsUpboundIoV1beta1ObjectCopyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [S3AwsUpboundIoV1beta1ObjectCopyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: S3AwsUpboundIoV1beta1ObjectCopyStatusAtProvider

    conditions?: [S3AwsUpboundIoV1beta1ObjectCopyStatusConditionsItems0]

    observedGeneration?: int


schema S3AwsUpboundIoV1beta1ObjectCopyStatusAtProvider:
    r"""
    s3 aws upbound io v1beta1 object copy status at provider

    Attributes
    ----------
    acl : str, default is Undefined, optional
        Canned ACL to apply. Valid values are private, public-read, public-read-write, authenticated-read, aws-exec-read, bucket-owner-read, and bucket-owner-full-control. Conflicts with grant.
    arn : str, default is Undefined, optional
        ARN of the object.
    bucket : str, default is Undefined, optional
        Name of the bucket to put the file in.
    bucketKeyEnabled : bool, default is Undefined, optional
        bucket key enabled
    cacheControl : str, default is Undefined, optional
        Specifies caching behavior along the request/reply chain Read w3c cache_control for further details.
    checksumAlgorithm : str, default is Undefined, optional
        Indicates the algorithm used to create the checksum for the object. If a value is specified and the object is encrypted with KMS, you must have permission to use the kms:Decrypt action. Valid values: CRC32, CRC32C, SHA1, SHA256.
    checksumCrc32 : str, default is Undefined, optional
        The base64-encoded, 32-bit CRC32 checksum of the object.
    checksumCrc32C : str, default is Undefined, optional
        The base64-encoded, 32-bit CRC32C checksum of the object.
    checksumSha1 : str, default is Undefined, optional
        The base64-encoded, 160-bit SHA-1 digest of the object.
    checksumSha256 : str, default is Undefined, optional
        The base64-encoded, 256-bit SHA-256 digest of the object.
    contentDisposition : str, default is Undefined, optional
        Specifies presentational information for the object. Read w3c content_disposition for further information.
    contentEncoding : str, default is Undefined, optional
        Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read w3c content encoding for further information.
    contentLanguage : str, default is Undefined, optional
        Language the content is in e.g., en-US or en-GB.
    contentType : str, default is Undefined, optional
        Standard MIME type describing the format of the object data, e.g., application/octet-stream. All Valid MIME Types are valid for this input.
    copyIfMatch : str, default is Undefined, optional
        Copies the object if its entity tag (ETag) matches the specified tag.
    copyIfModifiedSince : str, default is Undefined, optional
        Copies the object if it has been modified since the specified time, in RFC3339 format.
    copyIfNoneMatch : str, default is Undefined, optional
        Copies the object if its entity tag (ETag) is different than the specified ETag.
    copyIfUnmodifiedSince : str, default is Undefined, optional
        Copies the object if it hasn't been modified since the specified time, in RFC3339 format.
    customerAlgorithm : str, default is Undefined, optional
        Specifies the algorithm to use to when encrypting the object (for example, AES256).
    customerKeyMd5 : str, default is Undefined, optional
        Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
    etag : str, default is Undefined, optional
        ETag generated for the object (an MD5 sum of the object content). For plaintext objects or objects encrypted with an AWS-managed key, the hash is an MD5 digest of the object data. For objects encrypted with a KMS key or objects created by either the Multipart Upload or Part Copy operation, the hash is not an MD5 digest, regardless of the method of encryption. More information on possible values can be found on Common Response Headers.
    expectedBucketOwner : str, default is Undefined, optional
        Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    expectedSourceBucketOwner : str, default is Undefined, optional
        Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
    expiration : str, default is Undefined, optional
        If the object expiration is configured, this attribute will be set.
    expires : str, default is Undefined, optional
        Date and time at which the object is no longer cacheable, in RFC3339 format.
    forceDestroy : bool, default is Undefined, optional
        Allow the object to be deleted by removing any legal hold on any object version. Default is false. This value should be set to true only if the bucket has S3 object lock enabled.
    grant : [S3AwsUpboundIoV1beta1ObjectCopyStatusAtProviderGrantItems0], default is Undefined, optional
        Configuration block for header grants. Documented below. Conflicts with acl.
    id : str, default is Undefined, optional
        Canonical user ID of the grantee. Used only when type is CanonicalUser.
    key : str, default is Undefined, optional
        Name of the object once it is in the bucket.
    lastModified : str, default is Undefined, optional
        Returns the date that the object was last modified, in RFC3339 format.
    metadata : {str:str}, default is Undefined, optional
        Map of keys/values to provision metadata (will be automatically prefixed by x-amz-meta-, note that only lowercase label are currently supported by the AWS Go API).
    metadataDirective : str, default is Undefined, optional
        Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are COPY and REPLACE.
    objectLockLegalHoldStatus : str, default is Undefined, optional
        The legal hold status that you want to apply to the specified object. Valid values are ON and OFF.
    objectLockMode : str, default is Undefined, optional
        Object lock retention mode that you want to apply to this object. Valid values are GOVERNANCE and COMPLIANCE.
    objectLockRetainUntilDate : str, default is Undefined, optional
        Date and time, in RFC3339 format, when this object's object lock will expire.
    requestCharged : bool, default is Undefined, optional
        If present, indicates that the requester was successfully charged for the request.
    requestPayer : str, default is Undefined, optional
        Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is requester.
    serverSideEncryption : str, default is Undefined, optional
        Specifies server-side encryption of the object in S3. Valid values are AES256 and aws:kms.
    source : str, default is Undefined, optional
        Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, testbucket/test1.json. For objects accessed through access points, specify the ARN of the object as accessed through the access point, in the format arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>. For example, arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json.
    sourceCustomerAlgorithm : str, default is Undefined, optional
        Specifies the algorithm to use when decrypting the source object (for example, AES256).
    sourceCustomerKeyMd5 : str, default is Undefined, optional
        Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
    sourceVersionId : str, default is Undefined, optional
        Version of the copied object in the source bucket.
    storageClass : str, default is Undefined, optional
        Specifies the desired storage class for the object. Defaults to STANDARD.
    taggingDirective : str, default is Undefined, optional
        Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are COPY and REPLACE.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    versionId : str, default is Undefined, optional
        Version ID of the newly created copy.
    websiteRedirect : str, default is Undefined, optional
        Specifies a target URL for website redirect.
    """


    acl?: str

    arn?: str

    bucket?: str

    bucketKeyEnabled?: bool

    cacheControl?: str

    checksumAlgorithm?: str

    checksumCrc32?: str

    checksumCrc32C?: str

    checksumSha1?: str

    checksumSha256?: str

    contentDisposition?: str

    contentEncoding?: str

    contentLanguage?: str

    contentType?: str

    copyIfMatch?: str

    copyIfModifiedSince?: str

    copyIfNoneMatch?: str

    copyIfUnmodifiedSince?: str

    customerAlgorithm?: str

    customerKeyMd5?: str

    etag?: str

    expectedBucketOwner?: str

    expectedSourceBucketOwner?: str

    expiration?: str

    expires?: str

    forceDestroy?: bool

    grant?: [S3AwsUpboundIoV1beta1ObjectCopyStatusAtProviderGrantItems0]

    id?: str

    key?: str

    lastModified?: str

    metadata?: {str:str}

    metadataDirective?: str

    objectLockLegalHoldStatus?: str

    objectLockMode?: str

    objectLockRetainUntilDate?: str

    requestCharged?: bool

    requestPayer?: str

    serverSideEncryption?: str

    source?: str

    sourceCustomerAlgorithm?: str

    sourceCustomerKeyMd5?: str

    sourceVersionId?: str

    storageClass?: str

    taggingDirective?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    versionId?: str

    websiteRedirect?: str


schema S3AwsUpboundIoV1beta1ObjectCopyStatusAtProviderGrantItems0:
    r"""
    s3 aws upbound io v1beta1 object copy status at provider grant items0

    Attributes
    ----------
    email : str, default is Undefined, optional
        Email address of the grantee. Used only when type is AmazonCustomerByEmail.
    id : str, default is Undefined, optional
        Canonical user ID of the grantee. Used only when type is CanonicalUser.
    permissions : [str], default is Undefined, optional
        List of permissions to grant to grantee. Valid values are READ, READ_ACP, WRITE_ACP, FULL_CONTROL.
    $type : str, default is Undefined, optional
        - Type of grantee. Valid values are CanonicalUser, Group, and AmazonCustomerByEmail.
    uri : str, default is Undefined, optional
        URI of the grantee group. Used only when type is Group.
    """


    email?: str

    id?: str

    permissions?: [str]

    $type?: str

    uri?: str


schema S3AwsUpboundIoV1beta1ObjectCopyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


