"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Application:
    r"""
    Application is the Schema for the Applications API. Provides an OpsWorks application resource.

    Attributes
    ----------
    apiVersion : str, default is "opsworks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Application", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : OpsworksAwsUpboundIoV1beta1ApplicationSpec, default is Undefined, required
        spec
    status : OpsworksAwsUpboundIoV1beta1ApplicationStatus, default is Undefined, optional
        status
    """


    apiVersion: "opsworks.aws.upbound.io/v1beta1" = "opsworks.aws.upbound.io/v1beta1"

    kind: "Application" = "Application"

    metadata?: v1.ObjectMeta

    spec: OpsworksAwsUpboundIoV1beta1ApplicationSpec

    status?: OpsworksAwsUpboundIoV1beta1ApplicationStatus


schema OpsworksAwsUpboundIoV1beta1ApplicationSpec:
    r"""
    ApplicationSpec defines the desired state of Application

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProvider, default is Undefined, required
        for provider
    initProvider : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProvider

    initProvider?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecProviderConfigRef

    publishConnectionDetailsTo?: OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProvider:
    r"""
    opsworks aws upbound io v1beta1 application spec for provider

    Attributes
    ----------
    appSource : [OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0], default is Undefined, optional
        SCM configuration of the app as described below.
    autoBundleOnDeploy : str, default is Undefined, optional
        Run bundle install when deploying for application of type rails.
    awsFlowRubySettings : str, default is Undefined, optional
        Specify activity and workflow workers for your app using the aws-flow gem.
    dataSourceArn : str, default is Undefined, optional
        The data source's ARN.
    dataSourceDatabaseName : str, default is Undefined, optional
        The database name.
    dataSourceType : str, default is Undefined, optional
        The data source's type one of AutoSelectOpsworksMysqlInstance, OpsworksMysqlInstance, or RdsDbInstance.
    description : str, default is Undefined, optional
        A description of the app.
    documentRoot : str, default is Undefined, optional
        Subfolder for the document root for application of type rails.
    domains : [str], default is Undefined, optional
        A list of virtual host alias.
    enableSsl : bool, default is Undefined, optional
        Whether to enable SSL for the app. This must be set in order to let ssl_configuration.private_key, ssl_configuration.certificate and ssl_configuration.chain take effect.
    environment : [OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderEnvironmentItems0], default is Undefined, optional
        Object to define environment variables.  Object is described below.
    name : str, default is Undefined, optional
        A human-readable name for the application.
    railsEnv : str, default is Undefined, optional
        The name of the Rails environment for application of type rails.
    shortName : str, default is Undefined, optional
        A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
    sslConfiguration : [OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderSslConfigurationItems0], default is Undefined, optional
        The SSL configuration of the app. Object is described below.
    stackId : str, default is Undefined, optional
        ID of the stack the application will belong to.
    stackIdRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDRef, default is Undefined, optional
        stack Id ref
    stackIdSelector : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDSelector, default is Undefined, optional
        stack Id selector
    $type : str, default is Undefined, optional
        Opsworks application type. One of aws-flow-ruby, java, rails, php, nodejs, static or other.
    """


    appSource?: [OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0]

    autoBundleOnDeploy?: str

    awsFlowRubySettings?: str

    dataSourceArn?: str

    dataSourceDatabaseName?: str

    dataSourceType?: str

    description?: str

    documentRoot?: str

    domains?: [str]

    enableSsl?: bool

    environment?: [OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderEnvironmentItems0]

    name?: str

    railsEnv?: str

    shortName?: str

    sslConfiguration?: [OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderSslConfigurationItems0]

    stackId?: str

    stackIdRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDRef

    stackIdSelector?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDSelector

    $type?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0:
    r"""
    opsworks aws upbound io v1beta1 application spec for provider app source items0

    Attributes
    ----------
    passwordSecretRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    revision : str, default is Undefined, optional
        For sources that are version-aware, the revision to use.
    sshKeySecretRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0SSHKeySecretRef, default is Undefined, optional
        ssh key secret ref
    $type : str, default is Undefined, optional
        The type of source to use. For example, "archive".
    url : str, default is Undefined, optional
        The URL where the app resource can be found.
    username : str, default is Undefined, optional
        Username to use when authenticating to the source.
    """


    passwordSecretRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0PasswordSecretRef

    revision?: str

    sshKeySecretRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0SSHKeySecretRef

    $type?: str

    url?: str

    username?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0PasswordSecretRef:
    r"""
    Password to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderAppSourceItems0SSHKeySecretRef:
    r"""
    SSH key to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderEnvironmentItems0:
    r"""
    opsworks aws upbound io v1beta1 application spec for provider environment items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Variable name.
    secure : bool, default is Undefined, optional
        Set visibility of the variable value to true or false.
    value : str, default is Undefined, optional
        Variable value.
    """


    key?: str

    secure?: bool

    value?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderSslConfigurationItems0:
    r"""
    opsworks aws upbound io v1beta1 application spec for provider ssl configuration items0

    Attributes
    ----------
    certificate : str, default is Undefined, optional
        The contents of the certificate's domain.crt file.
    chain : str, default is Undefined, optional
        Can be used to specify an intermediate certificate authority key or client authentication.
    privateKeySecretRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderSslConfigurationItems0PrivateKeySecretRef, default is Undefined, optional
        private key secret ref
    """


    certificate?: str

    chain?: str

    privateKeySecretRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderSslConfigurationItems0PrivateKeySecretRef


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderSslConfigurationItems0PrivateKeySecretRef:
    r"""
    The private key; the contents of the certificate's domain.key file.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDRef:
    r"""
    Reference to a Stack in opsworks to populate stackId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDRefPolicy


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDSelector:
    r"""
    Selector for a Stack in opsworks to populate stackId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecForProviderStackIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    appSource : [OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0], default is Undefined, optional
        SCM configuration of the app as described below.
    autoBundleOnDeploy : str, default is Undefined, optional
        Run bundle install when deploying for application of type rails.
    awsFlowRubySettings : str, default is Undefined, optional
        Specify activity and workflow workers for your app using the aws-flow gem.
    dataSourceArn : str, default is Undefined, optional
        The data source's ARN.
    dataSourceDatabaseName : str, default is Undefined, optional
        The database name.
    dataSourceType : str, default is Undefined, optional
        The data source's type one of AutoSelectOpsworksMysqlInstance, OpsworksMysqlInstance, or RdsDbInstance.
    description : str, default is Undefined, optional
        A description of the app.
    documentRoot : str, default is Undefined, optional
        Subfolder for the document root for application of type rails.
    domains : [str], default is Undefined, optional
        A list of virtual host alias.
    enableSsl : bool, default is Undefined, optional
        Whether to enable SSL for the app. This must be set in order to let ssl_configuration.private_key, ssl_configuration.certificate and ssl_configuration.chain take effect.
    environment : [OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderEnvironmentItems0], default is Undefined, optional
        Object to define environment variables.  Object is described below.
    name : str, default is Undefined, optional
        A human-readable name for the application.
    railsEnv : str, default is Undefined, optional
        The name of the Rails environment for application of type rails.
    shortName : str, default is Undefined, optional
        A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
    sslConfiguration : [OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderSslConfigurationItems0], default is Undefined, optional
        The SSL configuration of the app. Object is described below.
    stackId : str, default is Undefined, optional
        ID of the stack the application will belong to.
    stackIdRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDRef, default is Undefined, optional
        stack Id ref
    stackIdSelector : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDSelector, default is Undefined, optional
        stack Id selector
    $type : str, default is Undefined, optional
        Opsworks application type. One of aws-flow-ruby, java, rails, php, nodejs, static or other.
    """


    appSource?: [OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0]

    autoBundleOnDeploy?: str

    awsFlowRubySettings?: str

    dataSourceArn?: str

    dataSourceDatabaseName?: str

    dataSourceType?: str

    description?: str

    documentRoot?: str

    domains?: [str]

    enableSsl?: bool

    environment?: [OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderEnvironmentItems0]

    name?: str

    railsEnv?: str

    shortName?: str

    sslConfiguration?: [OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderSslConfigurationItems0]

    stackId?: str

    stackIdRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDRef

    stackIdSelector?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDSelector

    $type?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0:
    r"""
    opsworks aws upbound io v1beta1 application spec init provider app source items0

    Attributes
    ----------
    passwordSecretRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    revision : str, default is Undefined, optional
        For sources that are version-aware, the revision to use.
    sshKeySecretRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0SSHKeySecretRef, default is Undefined, optional
        ssh key secret ref
    $type : str, default is Undefined, optional
        The type of source to use. For example, "archive".
    url : str, default is Undefined, optional
        The URL where the app resource can be found.
    username : str, default is Undefined, optional
        Username to use when authenticating to the source.
    """


    passwordSecretRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0PasswordSecretRef

    revision?: str

    sshKeySecretRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0SSHKeySecretRef

    $type?: str

    url?: str

    username?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0PasswordSecretRef:
    r"""
    Password to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderAppSourceItems0SSHKeySecretRef:
    r"""
    SSH key to use when authenticating to the source.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderEnvironmentItems0:
    r"""
    opsworks aws upbound io v1beta1 application spec init provider environment items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Variable name.
    secure : bool, default is Undefined, optional
        Set visibility of the variable value to true or false.
    value : str, default is Undefined, optional
        Variable value.
    """


    key?: str

    secure?: bool

    value?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderSslConfigurationItems0:
    r"""
    opsworks aws upbound io v1beta1 application spec init provider ssl configuration items0

    Attributes
    ----------
    certificate : str, default is Undefined, optional
        The contents of the certificate's domain.crt file.
    chain : str, default is Undefined, optional
        Can be used to specify an intermediate certificate authority key or client authentication.
    privateKeySecretRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderSslConfigurationItems0PrivateKeySecretRef, default is Undefined, required
        private key secret ref
    """


    certificate?: str

    chain?: str

    privateKeySecretRef: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderSslConfigurationItems0PrivateKeySecretRef


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderSslConfigurationItems0PrivateKeySecretRef:
    r"""
    The private key; the contents of the certificate's domain.key file.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDRef:
    r"""
    Reference to a Stack in opsworks to populate stackId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDRefPolicy


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDSelector:
    r"""
    Selector for a Stack in opsworks to populate stackId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDSelectorPolicy


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecInitProviderStackIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef

    metadata?: OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata

    name: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema OpsworksAwsUpboundIoV1beta1ApplicationStatus:
    r"""
    ApplicationStatus defines the observed state of Application.

    Attributes
    ----------
    atProvider : OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [OpsworksAwsUpboundIoV1beta1ApplicationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProvider

    conditions?: [OpsworksAwsUpboundIoV1beta1ApplicationStatusConditionsItems0]

    observedGeneration?: int


schema OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProvider:
    r"""
    opsworks aws upbound io v1beta1 application status at provider

    Attributes
    ----------
    appSource : [OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderAppSourceItems0], default is Undefined, optional
        SCM configuration of the app as described below.
    autoBundleOnDeploy : str, default is Undefined, optional
        Run bundle install when deploying for application of type rails.
    awsFlowRubySettings : str, default is Undefined, optional
        Specify activity and workflow workers for your app using the aws-flow gem.
    dataSourceArn : str, default is Undefined, optional
        The data source's ARN.
    dataSourceDatabaseName : str, default is Undefined, optional
        The database name.
    dataSourceType : str, default is Undefined, optional
        The data source's type one of AutoSelectOpsworksMysqlInstance, OpsworksMysqlInstance, or RdsDbInstance.
    description : str, default is Undefined, optional
        A description of the app.
    documentRoot : str, default is Undefined, optional
        Subfolder for the document root for application of type rails.
    domains : [str], default is Undefined, optional
        A list of virtual host alias.
    enableSsl : bool, default is Undefined, optional
        Whether to enable SSL for the app. This must be set in order to let ssl_configuration.private_key, ssl_configuration.certificate and ssl_configuration.chain take effect.
    environment : [OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderEnvironmentItems0], default is Undefined, optional
        Object to define environment variables.  Object is described below.
    id : str, default is Undefined, optional
        The id of the application.
    name : str, default is Undefined, optional
        A human-readable name for the application.
    railsEnv : str, default is Undefined, optional
        The name of the Rails environment for application of type rails.
    shortName : str, default is Undefined, optional
        A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.
    sslConfiguration : [OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderSslConfigurationItems0], default is Undefined, optional
        The SSL configuration of the app. Object is described below.
    stackId : str, default is Undefined, optional
        ID of the stack the application will belong to.
    $type : str, default is Undefined, optional
        Opsworks application type. One of aws-flow-ruby, java, rails, php, nodejs, static or other.
    """


    appSource?: [OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderAppSourceItems0]

    autoBundleOnDeploy?: str

    awsFlowRubySettings?: str

    dataSourceArn?: str

    dataSourceDatabaseName?: str

    dataSourceType?: str

    description?: str

    documentRoot?: str

    domains?: [str]

    enableSsl?: bool

    environment?: [OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderEnvironmentItems0]

    id?: str

    name?: str

    railsEnv?: str

    shortName?: str

    sslConfiguration?: [OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderSslConfigurationItems0]

    stackId?: str

    $type?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderAppSourceItems0:
    r"""
    opsworks aws upbound io v1beta1 application status at provider app source items0

    Attributes
    ----------
    revision : str, default is Undefined, optional
        For sources that are version-aware, the revision to use.
    $type : str, default is Undefined, optional
        The type of source to use. For example, "archive".
    url : str, default is Undefined, optional
        The URL where the app resource can be found.
    username : str, default is Undefined, optional
        Username to use when authenticating to the source.
    """


    revision?: str

    $type?: str

    url?: str

    username?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderEnvironmentItems0:
    r"""
    opsworks aws upbound io v1beta1 application status at provider environment items0

    Attributes
    ----------
    key : str, default is Undefined, optional
        Variable name.
    secure : bool, default is Undefined, optional
        Set visibility of the variable value to true or false.
    value : str, default is Undefined, optional
        Variable value.
    """


    key?: str

    secure?: bool

    value?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationStatusAtProviderSslConfigurationItems0:
    r"""
    opsworks aws upbound io v1beta1 application status at provider ssl configuration items0

    Attributes
    ----------
    certificate : str, default is Undefined, optional
        The contents of the certificate's domain.crt file.
    chain : str, default is Undefined, optional
        Can be used to specify an intermediate certificate authority key or client authentication.
    """


    certificate?: str

    chain?: str


schema OpsworksAwsUpboundIoV1beta1ApplicationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


