"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Model:
    r"""
    Model is the Schema for the Models API. Provides a SageMaker model resource.

    Attributes
    ----------
    apiVersion : str, default is "sagemaker.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Model", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SagemakerAwsUpboundIoV1beta1ModelSpec, default is Undefined, required
        spec
    status : SagemakerAwsUpboundIoV1beta1ModelStatus, default is Undefined, optional
        status
    """


    apiVersion: "sagemaker.aws.upbound.io/v1beta1" = "sagemaker.aws.upbound.io/v1beta1"

    kind: "Model" = "Model"

    metadata?: v1.ObjectMeta

    spec: SagemakerAwsUpboundIoV1beta1ModelSpec

    status?: SagemakerAwsUpboundIoV1beta1ModelStatus


schema SagemakerAwsUpboundIoV1beta1ModelSpec:
    r"""
    ModelSpec defines the desired state of Model

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SagemakerAwsUpboundIoV1beta1ModelSpecForProvider, default is Undefined, required
        for provider
    initProvider : SagemakerAwsUpboundIoV1beta1ModelSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SagemakerAwsUpboundIoV1beta1ModelSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SagemakerAwsUpboundIoV1beta1ModelSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SagemakerAwsUpboundIoV1beta1ModelSpecForProvider

    initProvider?: SagemakerAwsUpboundIoV1beta1ModelSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SagemakerAwsUpboundIoV1beta1ModelSpecProviderConfigRef

    publishConnectionDetailsTo?: SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SagemakerAwsUpboundIoV1beta1ModelSpecWriteConnectionSecretToRef


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProvider:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider

    Attributes
    ----------
    container : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0], default is Undefined, optional
        Specifies containers in the inference pipeline. If not specified, the primary_container argument is required. Fields are documented below.
    enableNetworkIsolation : bool, default is Undefined, optional
        Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
    executionRoleArn : str, default is Undefined, optional
        A role that SageMaker can assume to access model artifacts and docker images for deployment.
    executionRoleArnRef : SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    inferenceExecutionConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderInferenceExecutionConfigItems0], default is Undefined, optional
        Specifies details of how containers in a multi-container endpoint are called. see Inference Execution Config.
    primaryContainer : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0], default is Undefined, optional
        The primary docker image containing inference code that is used when the model is deployed for predictions.  If not specified, the container argument is required. Fields are documented below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderVpcConfigItems0], default is Undefined, optional
        Specifies the VPC that you want your model to connect to. VpcConfig is used in hosting services and in batch transform.
    """


    container?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0]

    enableNetworkIsolation?: bool

    executionRoleArn?: str

    executionRoleArnRef?: SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnRef

    executionRoleArnSelector?: SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnSelector

    inferenceExecutionConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderInferenceExecutionConfigItems0]

    primaryContainer?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0]

    region: str

    tags?: {str:str}

    vpcConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderVpcConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0

    Attributes
    ----------
    containerHostname : str, default is Undefined, optional
        The DNS host name for the container.
    environment : {str:str}, default is Undefined, optional
        Environment variables for the Docker container.
        A list of key value pairs.
    image : str, default is Undefined, optional
        The registry path where the inference code image is stored in Amazon ECR.
    imageConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ImageConfigItems0], default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.
    inferenceSpecificationName : str, default is Undefined, optional
        The inference specification name in the model package version.
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    modelDataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0], default is Undefined, optional
        The location of model data to deploy. Use this for uncompressed model deployment. For information about how to deploy an uncompressed model, see Deploying uncompressed models in the AWS SageMaker Developer Guide.
    modelDataUrl : str, default is Undefined, optional
        The URL for the S3 location where model artifacts are stored.
    modelPackageName : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the model package to use to create the model.
    multiModelConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0MultiModelConfigItems0], default is Undefined, optional
        Specifies additional configuration for multi-model endpoints. see Multi Model Config.
    """


    containerHostname?: str

    environment?: {str:str}

    image?: str

    imageConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ImageConfigItems0]

    inferenceSpecificationName?: str

    mode?: str

    modelDataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0]

    modelDataUrl?: str

    modelPackageName?: str

    multiModelConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0MultiModelConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ImageConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0 image config items0

    Attributes
    ----------
    repositoryAccessMode : str, default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.
    repositoryAuthConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0], default is Undefined, optional
        Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
    """


    repositoryAccessMode?: str

    repositoryAuthConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0 image config items0 repository auth config items0

    Attributes
    ----------
    repositoryCredentialsProviderArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.
    """


    repositoryCredentialsProviderArn?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0 model data source items0

    Attributes
    ----------
    s3DataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0], default is Undefined, optional
        The S3 location of model data to deploy.
    """


    s3DataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0 model data source items0 s3 data source items0

    Attributes
    ----------
    compressionType : str, default is Undefined, optional
        How the model data is prepared. Allowed values are: None and Gzip.
    modelAccessConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0], default is Undefined, optional
        Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [model_access_config configuration block]. see Model Access Config.
    s3DataType : str, default is Undefined, optional
        The type of model data to deploy. Allowed values are: S3Object and S3Prefix.
    s3Uri : str, default is Undefined, optional
        The S3 path of model data to deploy.
    """


    compressionType?: str

    modelAccessConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0]

    s3DataType?: str

    s3Uri?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0 model data source items0 s3 data source items0 model access config items0

    Attributes
    ----------
    acceptEula : bool, default is Undefined, optional
        Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as true in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
    """


    acceptEula?: bool


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderContainerItems0MultiModelConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider container items0 multi model config items0

    Attributes
    ----------
    modelCacheSetting : str, default is Undefined, optional
        Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled. Allowed values are: Enabled and Disabled.
    """


    modelCacheSetting?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnRefPolicy


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderInferenceExecutionConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider inference execution config items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    """


    mode?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0

    Attributes
    ----------
    containerHostname : str, default is Undefined, optional
        The DNS host name for the container.
    environment : {str:str}, default is Undefined, optional
        Environment variables for the Docker container.
        A list of key value pairs.
    image : str, default is Undefined, optional
        The registry path where the inference code image is stored in Amazon ECR.
    imageConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ImageConfigItems0], default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.
    inferenceSpecificationName : str, default is Undefined, optional
        The inference specification name in the model package version.
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    modelDataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0], default is Undefined, optional
        The location of model data to deploy. Use this for uncompressed model deployment. For information about how to deploy an uncompressed model, see Deploying uncompressed models in the AWS SageMaker Developer Guide.
    modelDataUrl : str, default is Undefined, optional
        The URL for the S3 location where model artifacts are stored.
    modelPackageName : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the model package to use to create the model.
    multiModelConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0MultiModelConfigItems0], default is Undefined, optional
        Specifies additional configuration for multi-model endpoints. see Multi Model Config.
    """


    containerHostname?: str

    environment?: {str:str}

    image?: str

    imageConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ImageConfigItems0]

    inferenceSpecificationName?: str

    mode?: str

    modelDataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0]

    modelDataUrl?: str

    modelPackageName?: str

    multiModelConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0MultiModelConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ImageConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0 image config items0

    Attributes
    ----------
    repositoryAccessMode : str, default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.
    repositoryAuthConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0], default is Undefined, optional
        Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
    """


    repositoryAccessMode?: str

    repositoryAuthConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0 image config items0 repository auth config items0

    Attributes
    ----------
    repositoryCredentialsProviderArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.
    """


    repositoryCredentialsProviderArn?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0 model data source items0

    Attributes
    ----------
    s3DataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0], default is Undefined, optional
        The S3 location of model data to deploy.
    """


    s3DataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0 model data source items0 s3 data source items0

    Attributes
    ----------
    compressionType : str, default is Undefined, optional
        How the model data is prepared. Allowed values are: None and Gzip.
    modelAccessConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0], default is Undefined, optional
        Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [model_access_config configuration block]. see Model Access Config.
    s3DataType : str, default is Undefined, optional
        The type of model data to deploy. Allowed values are: S3Object and S3Prefix.
    s3Uri : str, default is Undefined, optional
        The S3 path of model data to deploy.
    """


    compressionType?: str

    modelAccessConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0]

    s3DataType?: str

    s3Uri?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0 model data source items0 s3 data source items0 model access config items0

    Attributes
    ----------
    acceptEula : bool, default is Undefined, optional
        Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as true in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
    """


    acceptEula?: bool


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderPrimaryContainerItems0MultiModelConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider primary container items0 multi model config items0

    Attributes
    ----------
    modelCacheSetting : str, default is Undefined, optional
        Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled. Allowed values are: Enabled and Disabled.
    """


    modelCacheSetting?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecForProviderVpcConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec for provider vpc config items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        security group ids
    subnets : [str], default is Undefined, optional
        subnets
    """


    securityGroupIds?: [str]

    subnets?: [str]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    container : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0], default is Undefined, optional
        Specifies containers in the inference pipeline. If not specified, the primary_container argument is required. Fields are documented below.
    enableNetworkIsolation : bool, default is Undefined, optional
        Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
    executionRoleArn : str, default is Undefined, optional
        A role that SageMaker can assume to access model artifacts and docker images for deployment.
    executionRoleArnRef : SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnRef, default is Undefined, optional
        execution role arn ref
    executionRoleArnSelector : SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnSelector, default is Undefined, optional
        execution role arn selector
    inferenceExecutionConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderInferenceExecutionConfigItems0], default is Undefined, optional
        Specifies details of how containers in a multi-container endpoint are called. see Inference Execution Config.
    primaryContainer : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0], default is Undefined, optional
        The primary docker image containing inference code that is used when the model is deployed for predictions.  If not specified, the container argument is required. Fields are documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderVpcConfigItems0], default is Undefined, optional
        Specifies the VPC that you want your model to connect to. VpcConfig is used in hosting services and in batch transform.
    """


    container?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0]

    enableNetworkIsolation?: bool

    executionRoleArn?: str

    executionRoleArnRef?: SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnRef

    executionRoleArnSelector?: SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnSelector

    inferenceExecutionConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderInferenceExecutionConfigItems0]

    primaryContainer?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0]

    tags?: {str:str}

    vpcConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderVpcConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0

    Attributes
    ----------
    containerHostname : str, default is Undefined, optional
        The DNS host name for the container.
    environment : {str:str}, default is Undefined, optional
        Environment variables for the Docker container.
        A list of key value pairs.
    image : str, default is Undefined, optional
        The registry path where the inference code image is stored in Amazon ECR.
    imageConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ImageConfigItems0], default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.
    inferenceSpecificationName : str, default is Undefined, optional
        The inference specification name in the model package version.
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    modelDataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0], default is Undefined, optional
        The location of model data to deploy. Use this for uncompressed model deployment. For information about how to deploy an uncompressed model, see Deploying uncompressed models in the AWS SageMaker Developer Guide.
    modelDataUrl : str, default is Undefined, optional
        The URL for the S3 location where model artifacts are stored.
    modelPackageName : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the model package to use to create the model.
    multiModelConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0MultiModelConfigItems0], default is Undefined, optional
        Specifies additional configuration for multi-model endpoints. see Multi Model Config.
    """


    containerHostname?: str

    environment?: {str:str}

    image?: str

    imageConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ImageConfigItems0]

    inferenceSpecificationName?: str

    mode?: str

    modelDataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0]

    modelDataUrl?: str

    modelPackageName?: str

    multiModelConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0MultiModelConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ImageConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0 image config items0

    Attributes
    ----------
    repositoryAccessMode : str, default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.
    repositoryAuthConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0], default is Undefined, optional
        Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
    """


    repositoryAccessMode?: str

    repositoryAuthConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0 image config items0 repository auth config items0

    Attributes
    ----------
    repositoryCredentialsProviderArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.
    """


    repositoryCredentialsProviderArn?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0 model data source items0

    Attributes
    ----------
    s3DataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0], default is Undefined, optional
        The S3 location of model data to deploy.
    """


    s3DataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0 model data source items0 s3 data source items0

    Attributes
    ----------
    compressionType : str, default is Undefined, optional
        How the model data is prepared. Allowed values are: None and Gzip.
    modelAccessConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0], default is Undefined, optional
        Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [model_access_config configuration block]. see Model Access Config.
    s3DataType : str, default is Undefined, optional
        The type of model data to deploy. Allowed values are: S3Object and S3Prefix.
    s3Uri : str, default is Undefined, optional
        The S3 path of model data to deploy.
    """


    compressionType?: str

    modelAccessConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0]

    s3DataType?: str

    s3Uri?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0 model data source items0 s3 data source items0 model access config items0

    Attributes
    ----------
    acceptEula : bool, default is Undefined, optional
        Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as true in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
    """


    acceptEula?: bool


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderContainerItems0MultiModelConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider container items0 multi model config items0

    Attributes
    ----------
    modelCacheSetting : str, default is Undefined, optional
        Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled. Allowed values are: Enabled and Disabled.
    """


    modelCacheSetting?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnRefPolicy


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate executionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderInferenceExecutionConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider inference execution config items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    """


    mode?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0

    Attributes
    ----------
    containerHostname : str, default is Undefined, optional
        The DNS host name for the container.
    environment : {str:str}, default is Undefined, optional
        Environment variables for the Docker container.
        A list of key value pairs.
    image : str, default is Undefined, optional
        The registry path where the inference code image is stored in Amazon ECR.
    imageConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ImageConfigItems0], default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.
    inferenceSpecificationName : str, default is Undefined, optional
        The inference specification name in the model package version.
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    modelDataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0], default is Undefined, optional
        The location of model data to deploy. Use this for uncompressed model deployment. For information about how to deploy an uncompressed model, see Deploying uncompressed models in the AWS SageMaker Developer Guide.
    modelDataUrl : str, default is Undefined, optional
        The URL for the S3 location where model artifacts are stored.
    modelPackageName : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the model package to use to create the model.
    multiModelConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0MultiModelConfigItems0], default is Undefined, optional
        Specifies additional configuration for multi-model endpoints. see Multi Model Config.
    """


    containerHostname?: str

    environment?: {str:str}

    image?: str

    imageConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ImageConfigItems0]

    inferenceSpecificationName?: str

    mode?: str

    modelDataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0]

    modelDataUrl?: str

    modelPackageName?: str

    multiModelConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0MultiModelConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ImageConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0 image config items0

    Attributes
    ----------
    repositoryAccessMode : str, default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.
    repositoryAuthConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0], default is Undefined, optional
        Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
    """


    repositoryAccessMode?: str

    repositoryAuthConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0 image config items0 repository auth config items0

    Attributes
    ----------
    repositoryCredentialsProviderArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.
    """


    repositoryCredentialsProviderArn?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0 model data source items0

    Attributes
    ----------
    s3DataSource : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0], default is Undefined, optional
        The S3 location of model data to deploy.
    """


    s3DataSource?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0]


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0 model data source items0 s3 data source items0

    Attributes
    ----------
    compressionType : str, default is Undefined, optional
        How the model data is prepared. Allowed values are: None and Gzip.
    modelAccessConfig : [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0], default is Undefined, optional
        Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [model_access_config configuration block]. see Model Access Config.
    s3DataType : str, default is Undefined, optional
        The type of model data to deploy. Allowed values are: S3Object and S3Prefix.
    s3Uri : str, default is Undefined, optional
        The S3 path of model data to deploy.
    """


    compressionType?: str

    modelAccessConfig?: [SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0]

    s3DataType?: str

    s3Uri?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0 model data source items0 s3 data source items0 model access config items0

    Attributes
    ----------
    acceptEula : bool, default is Undefined, optional
        Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as true in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
    """


    acceptEula?: bool


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderPrimaryContainerItems0MultiModelConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider primary container items0 multi model config items0

    Attributes
    ----------
    modelCacheSetting : str, default is Undefined, optional
        Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled. Allowed values are: Enabled and Disabled.
    """


    modelCacheSetting?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecInitProviderVpcConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model spec init provider vpc config items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        security group ids
    subnets : [str], default is Undefined, optional
        subnets
    """


    securityGroupIds?: [str]

    subnets?: [str]


schema SagemakerAwsUpboundIoV1beta1ModelSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1ModelSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1ModelSpecProviderConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1ModelSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToConfigRef

    metadata?: SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToMetadata

    name: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1ModelSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SagemakerAwsUpboundIoV1beta1ModelSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta1ModelStatus:
    r"""
    ModelStatus defines the observed state of Model.

    Attributes
    ----------
    atProvider : SagemakerAwsUpboundIoV1beta1ModelStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SagemakerAwsUpboundIoV1beta1ModelStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SagemakerAwsUpboundIoV1beta1ModelStatusAtProvider

    conditions?: [SagemakerAwsUpboundIoV1beta1ModelStatusConditionsItems0]

    observedGeneration?: int


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProvider:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) assigned by AWS to this model.
    container : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0], default is Undefined, optional
        Specifies containers in the inference pipeline. If not specified, the primary_container argument is required. Fields are documented below.
    enableNetworkIsolation : bool, default is Undefined, optional
        Isolates the model container. No inbound or outbound network calls can be made to or from the model container.
    executionRoleArn : str, default is Undefined, optional
        A role that SageMaker can assume to access model artifacts and docker images for deployment.
    id : str, default is Undefined, optional
        id
    inferenceExecutionConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderInferenceExecutionConfigItems0], default is Undefined, optional
        Specifies details of how containers in a multi-container endpoint are called. see Inference Execution Config.
    primaryContainer : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0], default is Undefined, optional
        The primary docker image containing inference code that is used when the model is deployed for predictions.  If not specified, the container argument is required. Fields are documented below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderVpcConfigItems0], default is Undefined, optional
        Specifies the VPC that you want your model to connect to. VpcConfig is used in hosting services and in batch transform.
    """


    arn?: str

    container?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0]

    enableNetworkIsolation?: bool

    executionRoleArn?: str

    id?: str

    inferenceExecutionConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderInferenceExecutionConfigItems0]

    primaryContainer?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderVpcConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0

    Attributes
    ----------
    containerHostname : str, default is Undefined, optional
        The DNS host name for the container.
    environment : {str:str}, default is Undefined, optional
        Environment variables for the Docker container.
        A list of key value pairs.
    image : str, default is Undefined, optional
        The registry path where the inference code image is stored in Amazon ECR.
    imageConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ImageConfigItems0], default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.
    inferenceSpecificationName : str, default is Undefined, optional
        The inference specification name in the model package version.
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    modelDataSource : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0], default is Undefined, optional
        The location of model data to deploy. Use this for uncompressed model deployment. For information about how to deploy an uncompressed model, see Deploying uncompressed models in the AWS SageMaker Developer Guide.
    modelDataUrl : str, default is Undefined, optional
        The URL for the S3 location where model artifacts are stored.
    modelPackageName : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the model package to use to create the model.
    multiModelConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0MultiModelConfigItems0], default is Undefined, optional
        Specifies additional configuration for multi-model endpoints. see Multi Model Config.
    """


    containerHostname?: str

    environment?: {str:str}

    image?: str

    imageConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ImageConfigItems0]

    inferenceSpecificationName?: str

    mode?: str

    modelDataSource?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0]

    modelDataUrl?: str

    modelPackageName?: str

    multiModelConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0MultiModelConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ImageConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0 image config items0

    Attributes
    ----------
    repositoryAccessMode : str, default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.
    repositoryAuthConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0], default is Undefined, optional
        Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
    """


    repositoryAccessMode?: str

    repositoryAuthConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ImageConfigItems0RepositoryAuthConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0 image config items0 repository auth config items0

    Attributes
    ----------
    repositoryCredentialsProviderArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.
    """


    repositoryCredentialsProviderArn?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0 model data source items0

    Attributes
    ----------
    s3DataSource : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0], default is Undefined, optional
        The S3 location of model data to deploy.
    """


    s3DataSource?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0 model data source items0 s3 data source items0

    Attributes
    ----------
    compressionType : str, default is Undefined, optional
        How the model data is prepared. Allowed values are: None and Gzip.
    modelAccessConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0], default is Undefined, optional
        Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [model_access_config configuration block]. see Model Access Config.
    s3DataType : str, default is Undefined, optional
        The type of model data to deploy. Allowed values are: S3Object and S3Prefix.
    s3Uri : str, default is Undefined, optional
        The S3 path of model data to deploy.
    """


    compressionType?: str

    modelAccessConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0]

    s3DataType?: str

    s3Uri?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0 model data source items0 s3 data source items0 model access config items0

    Attributes
    ----------
    acceptEula : bool, default is Undefined, optional
        Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as true in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
    """


    acceptEula?: bool


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderContainerItems0MultiModelConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider container items0 multi model config items0

    Attributes
    ----------
    modelCacheSetting : str, default is Undefined, optional
        Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled. Allowed values are: Enabled and Disabled.
    """


    modelCacheSetting?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderInferenceExecutionConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider inference execution config items0

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    """


    mode?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0

    Attributes
    ----------
    containerHostname : str, default is Undefined, optional
        The DNS host name for the container.
    environment : {str:str}, default is Undefined, optional
        Environment variables for the Docker container.
        A list of key value pairs.
    image : str, default is Undefined, optional
        The registry path where the inference code image is stored in Amazon ECR.
    imageConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ImageConfigItems0], default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). For more information see Using a Private Docker Registry for Real-Time Inference Containers. see Image Config.
    inferenceSpecificationName : str, default is Undefined, optional
        The inference specification name in the model package version.
    mode : str, default is Undefined, optional
        The container hosts value SingleModel/MultiModel. The default value is SingleModel.
    modelDataSource : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0], default is Undefined, optional
        The location of model data to deploy. Use this for uncompressed model deployment. For information about how to deploy an uncompressed model, see Deploying uncompressed models in the AWS SageMaker Developer Guide.
    modelDataUrl : str, default is Undefined, optional
        The URL for the S3 location where model artifacts are stored.
    modelPackageName : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the model package to use to create the model.
    multiModelConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0MultiModelConfigItems0], default is Undefined, optional
        Specifies additional configuration for multi-model endpoints. see Multi Model Config.
    """


    containerHostname?: str

    environment?: {str:str}

    image?: str

    imageConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ImageConfigItems0]

    inferenceSpecificationName?: str

    mode?: str

    modelDataSource?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0]

    modelDataUrl?: str

    modelPackageName?: str

    multiModelConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0MultiModelConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ImageConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0 image config items0

    Attributes
    ----------
    repositoryAccessMode : str, default is Undefined, optional
        Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: Platform and Vpc.
    repositoryAuthConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0], default is Undefined, optional
        Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified Vpc as the value for the RepositoryAccessMode field, and the private Docker registry where the model image is hosted requires authentication. see Repository Auth Config.
    """


    repositoryAccessMode?: str

    repositoryAuthConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ImageConfigItems0RepositoryAuthConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0 image config items0 repository auth config items0

    Attributes
    ----------
    repositoryCredentialsProviderArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see Create a Lambda function with the console in the AWS Lambda Developer Guide.
    """


    repositoryCredentialsProviderArn?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0 model data source items0

    Attributes
    ----------
    s3DataSource : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0], default is Undefined, optional
        The S3 location of model data to deploy.
    """


    s3DataSource?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0]


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0 model data source items0 s3 data source items0

    Attributes
    ----------
    compressionType : str, default is Undefined, optional
        How the model data is prepared. Allowed values are: None and Gzip.
    modelAccessConfig : [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0], default is Undefined, optional
        Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [model_access_config configuration block]. see Model Access Config.
    s3DataType : str, default is Undefined, optional
        The type of model data to deploy. Allowed values are: S3Object and S3Prefix.
    s3Uri : str, default is Undefined, optional
        The S3 path of model data to deploy.
    """


    compressionType?: str

    modelAccessConfig?: [SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0]

    s3DataType?: str

    s3Uri?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0ModelDataSourceItems0S3DataSourceItems0ModelAccessConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0 model data source items0 s3 data source items0 model access config items0

    Attributes
    ----------
    acceptEula : bool, default is Undefined, optional
        Specifies agreement to the model end-user license agreement (EULA). The AcceptEula value must be explicitly defined as true in order to accept the EULA that this model requires. You are responsible for reviewing and complying with any applicable license terms and making sure they are acceptable for your use case before downloading or using a model.
    """


    acceptEula?: bool


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderPrimaryContainerItems0MultiModelConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider primary container items0 multi model config items0

    Attributes
    ----------
    modelCacheSetting : str, default is Undefined, optional
        Whether to cache models for a multi-model endpoint. By default, multi-model endpoints cache models so that a model does not have to be loaded into memory each time it is invoked. Some use cases do not benefit from model caching. For example, if an endpoint hosts a large number of models that are each invoked infrequently, the endpoint might perform better if you disable model caching. To disable model caching, set the value of this parameter to Disabled. Allowed values are: Enabled and Disabled.
    """


    modelCacheSetting?: str


schema SagemakerAwsUpboundIoV1beta1ModelStatusAtProviderVpcConfigItems0:
    r"""
    sagemaker aws upbound io v1beta1 model status at provider vpc config items0

    Attributes
    ----------
    securityGroupIds : [str], default is Undefined, optional
        security group ids
    subnets : [str], default is Undefined, optional
        subnets
    """


    securityGroupIds?: [str]

    subnets?: [str]


schema SagemakerAwsUpboundIoV1beta1ModelStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


