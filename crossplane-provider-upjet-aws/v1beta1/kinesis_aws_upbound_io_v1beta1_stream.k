"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stream:
    r"""
    Stream is the Schema for the Streams API. Provides a AWS Kinesis Stream

    Attributes
    ----------
    apiVersion : str, default is "kinesis.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stream", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KinesisAwsUpboundIoV1beta1StreamSpec, default is Undefined, required
        spec
    status : KinesisAwsUpboundIoV1beta1StreamStatus, default is Undefined, optional
        status
    """


    apiVersion: "kinesis.aws.upbound.io/v1beta1" = "kinesis.aws.upbound.io/v1beta1"

    kind: "Stream" = "Stream"

    metadata?: v1.ObjectMeta

    spec: KinesisAwsUpboundIoV1beta1StreamSpec

    status?: KinesisAwsUpboundIoV1beta1StreamStatus


schema KinesisAwsUpboundIoV1beta1StreamSpec:
    r"""
    StreamSpec defines the desired state of Stream

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KinesisAwsUpboundIoV1beta1StreamSpecForProvider, default is Undefined, required
        for provider
    initProvider : KinesisAwsUpboundIoV1beta1StreamSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KinesisAwsUpboundIoV1beta1StreamSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KinesisAwsUpboundIoV1beta1StreamSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KinesisAwsUpboundIoV1beta1StreamSpecForProvider

    initProvider?: KinesisAwsUpboundIoV1beta1StreamSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KinesisAwsUpboundIoV1beta1StreamSpecProviderConfigRef

    publishConnectionDetailsTo?: KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KinesisAwsUpboundIoV1beta1StreamSpecWriteConnectionSecretToRef


schema KinesisAwsUpboundIoV1beta1StreamSpecForProvider:
    r"""
    kinesis aws upbound io v1beta1 stream spec for provider

    Attributes
    ----------
    encryptionType : str, default is Undefined, optional
        The encryption type to use. The only acceptable values are NONE or KMS. The default value is NONE.
    enforceConsumerDeletion : bool, default is Undefined, optional
        A boolean that indicates all registered consumers should be deregistered from the stream so that the stream can be destroyed without error. The default value is false.
    kmsKeyId : str, default is Undefined, optional
        The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias alias/aws/kinesis.
    kmsKeyIdRef : KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    retentionPeriod : float, default is Undefined, optional
        Length of time data records are accessible after they are added to the stream. The maximum value of a stream's retention period is 8760 hours. Minimum value is 24. Default is 24.
    shardCount : float, default is Undefined, optional
        â€“  The number of shards that the stream will use. If the stream_mode is PROVISIONED, this field is required.
        Amazon has guidelines for specifying the Stream size that should be referenced when creating a Kinesis stream. See Amazon Kinesis Streams for more.
    shardLevelMetrics : [str], default is Undefined, optional
        A list of shard-level CloudWatch metrics which can be enabled for the stream. See Monitoring with CloudWatch for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.
    streamModeDetails : [KinesisAwsUpboundIoV1beta1StreamSpecForProviderStreamModeDetailsItems0], default is Undefined, optional
        Indicates the capacity mode of the data stream. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    encryptionType?: str

    enforceConsumerDeletion?: bool

    kmsKeyId?: str

    kmsKeyIdRef?: KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDSelector

    region: str

    retentionPeriod?: float

    shardCount?: float

    shardLevelMetrics?: [str]

    streamModeDetails?: [KinesisAwsUpboundIoV1beta1StreamSpecForProviderStreamModeDetailsItems0]

    tags?: {str:str}


schema KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDRefPolicy


schema KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDSelectorPolicy


schema KinesisAwsUpboundIoV1beta1StreamSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsUpboundIoV1beta1StreamSpecForProviderStreamModeDetailsItems0:
    r"""
    kinesis aws upbound io v1beta1 stream spec for provider stream mode details items0

    Attributes
    ----------
    streamMode : str, default is Undefined, optional
        Specifies the capacity mode of the stream. Must be either PROVISIONED or ON_DEMAND.
    """


    streamMode?: str


schema KinesisAwsUpboundIoV1beta1StreamSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    encryptionType : str, default is Undefined, optional
        The encryption type to use. The only acceptable values are NONE or KMS. The default value is NONE.
    enforceConsumerDeletion : bool, default is Undefined, optional
        A boolean that indicates all registered consumers should be deregistered from the stream so that the stream can be destroyed without error. The default value is false.
    kmsKeyId : str, default is Undefined, optional
        The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias alias/aws/kinesis.
    kmsKeyIdRef : KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    retentionPeriod : float, default is Undefined, optional
        Length of time data records are accessible after they are added to the stream. The maximum value of a stream's retention period is 8760 hours. Minimum value is 24. Default is 24.
    shardCount : float, default is Undefined, optional
        â€“  The number of shards that the stream will use. If the stream_mode is PROVISIONED, this field is required.
        Amazon has guidelines for specifying the Stream size that should be referenced when creating a Kinesis stream. See Amazon Kinesis Streams for more.
    shardLevelMetrics : [str], default is Undefined, optional
        A list of shard-level CloudWatch metrics which can be enabled for the stream. See Monitoring with CloudWatch for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.
    streamModeDetails : [KinesisAwsUpboundIoV1beta1StreamSpecInitProviderStreamModeDetailsItems0], default is Undefined, optional
        Indicates the capacity mode of the data stream. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    encryptionType?: str

    enforceConsumerDeletion?: bool

    kmsKeyId?: str

    kmsKeyIdRef?: KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDSelector

    retentionPeriod?: float

    shardCount?: float

    shardLevelMetrics?: [str]

    streamModeDetails?: [KinesisAwsUpboundIoV1beta1StreamSpecInitProviderStreamModeDetailsItems0]

    tags?: {str:str}


schema KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDRefPolicy


schema KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDSelectorPolicy


schema KinesisAwsUpboundIoV1beta1StreamSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsUpboundIoV1beta1StreamSpecInitProviderStreamModeDetailsItems0:
    r"""
    kinesis aws upbound io v1beta1 stream spec init provider stream mode details items0

    Attributes
    ----------
    streamMode : str, default is Undefined, optional
        Specifies the capacity mode of the stream. Must be either PROVISIONED or ON_DEMAND.
    """


    streamMode?: str


schema KinesisAwsUpboundIoV1beta1StreamSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsUpboundIoV1beta1StreamSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsUpboundIoV1beta1StreamSpecProviderConfigRefPolicy


schema KinesisAwsUpboundIoV1beta1StreamSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRef

    metadata?: KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToMetadata

    name: str


schema KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRefPolicy


schema KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KinesisAwsUpboundIoV1beta1StreamSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KinesisAwsUpboundIoV1beta1StreamSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KinesisAwsUpboundIoV1beta1StreamStatus:
    r"""
    StreamStatus defines the observed state of Stream.

    Attributes
    ----------
    atProvider : KinesisAwsUpboundIoV1beta1StreamStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KinesisAwsUpboundIoV1beta1StreamStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KinesisAwsUpboundIoV1beta1StreamStatusAtProvider

    conditions?: [KinesisAwsUpboundIoV1beta1StreamStatusConditionsItems0]

    observedGeneration?: int


schema KinesisAwsUpboundIoV1beta1StreamStatusAtProvider:
    r"""
    kinesis aws upbound io v1beta1 stream status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) specifying the Stream (same as id)
    encryptionType : str, default is Undefined, optional
        The encryption type to use. The only acceptable values are NONE or KMS. The default value is NONE.
    enforceConsumerDeletion : bool, default is Undefined, optional
        A boolean that indicates all registered consumers should be deregistered from the stream so that the stream can be destroyed without error. The default value is false.
    id : str, default is Undefined, optional
        The unique Stream id
    kmsKeyId : str, default is Undefined, optional
        The GUID for the customer-managed KMS key to use for encryption. You can also use a Kinesis-owned master key by specifying the alias alias/aws/kinesis.
    retentionPeriod : float, default is Undefined, optional
        Length of time data records are accessible after they are added to the stream. The maximum value of a stream's retention period is 8760 hours. Minimum value is 24. Default is 24.
    shardCount : float, default is Undefined, optional
        â€“  The number of shards that the stream will use. If the stream_mode is PROVISIONED, this field is required.
        Amazon has guidelines for specifying the Stream size that should be referenced when creating a Kinesis stream. See Amazon Kinesis Streams for more.
    shardLevelMetrics : [str], default is Undefined, optional
        A list of shard-level CloudWatch metrics which can be enabled for the stream. See Monitoring with CloudWatch for more. Note that the value ALL should not be used; instead you should provide an explicit list of metrics you wish to enable.
    streamModeDetails : [KinesisAwsUpboundIoV1beta1StreamStatusAtProviderStreamModeDetailsItems0], default is Undefined, optional
        Indicates the capacity mode of the data stream. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    encryptionType?: str

    enforceConsumerDeletion?: bool

    id?: str

    kmsKeyId?: str

    retentionPeriod?: float

    shardCount?: float

    shardLevelMetrics?: [str]

    streamModeDetails?: [KinesisAwsUpboundIoV1beta1StreamStatusAtProviderStreamModeDetailsItems0]

    tags?: {str:str}

    tagsAll?: {str:str}


schema KinesisAwsUpboundIoV1beta1StreamStatusAtProviderStreamModeDetailsItems0:
    r"""
    kinesis aws upbound io v1beta1 stream status at provider stream mode details items0

    Attributes
    ----------
    streamMode : str, default is Undefined, optional
        Specifies the capacity mode of the stream. Must be either PROVISIONED or ON_DEMAND.
    """


    streamMode?: str


schema KinesisAwsUpboundIoV1beta1StreamStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


