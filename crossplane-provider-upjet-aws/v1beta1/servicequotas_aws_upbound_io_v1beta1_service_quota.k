"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ServiceQuota:
    r"""
    ServiceQuota is the Schema for the ServiceQuotas API. Manages an individual Service Quota

    Attributes
    ----------
    apiVersion : str, default is "servicequotas.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ServiceQuota", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpec, default is Undefined, required
        spec
    status : ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatus, default is Undefined, optional
        status
    """


    apiVersion: "servicequotas.aws.upbound.io/v1beta1" = "servicequotas.aws.upbound.io/v1beta1"

    kind: "ServiceQuota" = "ServiceQuota"

    metadata?: v1.ObjectMeta

    spec: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpec

    status?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatus


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpec:
    r"""
    ServiceQuotaSpec defines the desired state of ServiceQuota

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecForProvider, default is Undefined, required
        for provider
    initProvider : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecForProvider

    initProvider?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecProviderConfigRef

    publishConnectionDetailsTo?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecWriteConnectionSecretToRef


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecForProvider:
    r"""
    servicequotas aws upbound io v1beta1 service quota spec for provider

    Attributes
    ----------
    quotaCode : str, default is Undefined, optional
        Code of the service quota to track. For example: L-F678F1CE. Available values can be found with the AWS CLI service-quotas list-service-quotas command.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    serviceCode : str, default is Undefined, optional
        Code of the service to track. For example: vpc. Available values can be found with the AWS CLI service-quotas list-services command.
    value : float, default is Undefined, optional
        Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
    """


    quotaCode?: str

    region: str

    serviceCode?: str

    value?: float


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    quotaCode : str, default is Undefined, optional
        Code of the service quota to track. For example: L-F678F1CE. Available values can be found with the AWS CLI service-quotas list-service-quotas command.
    serviceCode : str, default is Undefined, optional
        Code of the service to track. For example: vpc. Available values can be found with the AWS CLI service-quotas list-services command.
    value : float, default is Undefined, optional
        Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
    """


    quotaCode?: str

    serviceCode?: str

    value?: float


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecProviderConfigRefPolicy


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToConfigRef

    metadata?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToMetadata

    name: str


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToConfigRefPolicy


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatus:
    r"""
    ServiceQuotaStatus defines the observed state of ServiceQuota.

    Attributes
    ----------
    atProvider : ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProvider

    conditions?: [ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusConditionsItems0]

    observedGeneration?: int


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProvider:
    r"""
    servicequotas aws upbound io v1beta1 service quota status at provider

    Attributes
    ----------
    adjustable : bool, default is Undefined, optional
        Whether the service quota can be increased.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the service quota.
    defaultValue : float, default is Undefined, optional
        Default value of the service quota.
    id : str, default is Undefined, optional
        Service code and quota code, separated by a front slash (/)
    quotaCode : str, default is Undefined, optional
        Code of the service quota to track. For example: L-F678F1CE. Available values can be found with the AWS CLI service-quotas list-service-quotas command.
    quotaName : str, default is Undefined, optional
        Name of the quota.
    requestId : str, default is Undefined, optional
        Service code and quota code, separated by a front slash (/)
    requestStatus : str, default is Undefined, optional
        request status
    serviceCode : str, default is Undefined, optional
        Code of the service to track. For example: vpc. Available values can be found with the AWS CLI service-quotas list-services command.
    serviceName : str, default is Undefined, optional
        Name of the service.
    usageMetric : [ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProviderUsageMetricItems0], default is Undefined, optional
        Information about the measurement.
    value : float, default is Undefined, optional
        Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request.
    """


    adjustable?: bool

    arn?: str

    defaultValue?: float

    id?: str

    quotaCode?: str

    quotaName?: str

    requestId?: str

    requestStatus?: str

    serviceCode?: str

    serviceName?: str

    usageMetric?: [ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProviderUsageMetricItems0]

    value?: float


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProviderUsageMetricItems0:
    r"""
    servicequotas aws upbound io v1beta1 service quota status at provider usage metric items0

    Attributes
    ----------
    metricDimensions : [ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProviderUsageMetricItems0MetricDimensionsItems0], default is Undefined, optional
        The metric dimensions.
    metricName : str, default is Undefined, optional
        The name of the metric.
    metricNamespace : str, default is Undefined, optional
        The namespace of the metric.
    metricStatisticRecommendation : str, default is Undefined, optional
        The metric statistic that AWS recommend you use when determining quota usage.
    """


    metricDimensions?: [ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProviderUsageMetricItems0MetricDimensionsItems0]

    metricName?: str

    metricNamespace?: str

    metricStatisticRecommendation?: str


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusAtProviderUsageMetricItems0MetricDimensionsItems0:
    r"""
    servicequotas aws upbound io v1beta1 service quota status at provider usage metric items0 metric dimensions items0

    Attributes
    ----------
    class : str, default is Undefined, optional
        class
    resource : str, default is Undefined, optional
        resource
    service : str, default is Undefined, optional
        service
    $type : str, default is Undefined, optional
        type
    """


    class?: str

    resource?: str

    service?: str

    $type?: str


schema ServicequotasAwsUpboundIoV1beta1ServiceQuotaStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


