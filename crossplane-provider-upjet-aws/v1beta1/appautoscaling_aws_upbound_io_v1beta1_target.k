"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Target:
    r"""
    Target is the Schema for the Targets API. Provides an Application AutoScaling ScalableTarget resource.

    Attributes
    ----------
    apiVersion : str, default is "appautoscaling.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Target", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppautoscalingAwsUpboundIoV1beta1TargetSpec, default is Undefined, required
        spec
    status : AppautoscalingAwsUpboundIoV1beta1TargetStatus, default is Undefined, optional
        status
    """


    apiVersion: "appautoscaling.aws.upbound.io/v1beta1" = "appautoscaling.aws.upbound.io/v1beta1"

    kind: "Target" = "Target"

    metadata?: v1.ObjectMeta

    spec: AppautoscalingAwsUpboundIoV1beta1TargetSpec

    status?: AppautoscalingAwsUpboundIoV1beta1TargetStatus


schema AppautoscalingAwsUpboundIoV1beta1TargetSpec:
    r"""
    TargetSpec defines the desired state of Target

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppautoscalingAwsUpboundIoV1beta1TargetSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppautoscalingAwsUpboundIoV1beta1TargetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppautoscalingAwsUpboundIoV1beta1TargetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppautoscalingAwsUpboundIoV1beta1TargetSpecForProvider

    initProvider?: AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppautoscalingAwsUpboundIoV1beta1TargetSpecProviderConfigRef

    publishConnectionDetailsTo?: AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppautoscalingAwsUpboundIoV1beta1TargetSpecWriteConnectionSecretToRef


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecForProvider:
    r"""
    appautoscaling aws upbound io v1beta1 target spec for provider

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        Max capacity of the scalable target.
    minCapacity : float, default is Undefined, optional
        Min capacity of the scalable target.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceId : str, default is Undefined, optional
        Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the AWS Application Auto Scaling documentation for more information about how this service interacts with IAM.
    roleArnRef : AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    scalableDimension : str, default is Undefined, optional
        Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference
    suspendedState : AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderSuspendedState, default is Undefined, optional
        suspended state
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    maxCapacity?: float

    minCapacity?: float

    region: str

    resourceId?: str

    roleArn?: str

    roleArnRef?: AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRef

    roleArnSelector?: AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelector

    scalableDimension?: str

    serviceNamespace?: str

    suspendedState?: AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderSuspendedState

    tags?: {str:str}


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecForProviderSuspendedState:
    r"""
    Specifies whether the scaling activities for a scalable target are in a suspended state.

    Attributes
    ----------
    dynamicScalingInSuspended : bool, default is Undefined, optional
        Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Default is false.
    dynamicScalingOutSuspended : bool, default is Undefined, optional
        Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Default is false.
    scheduledScalingSuspended : bool, default is Undefined, optional
        Whether scheduled scaling is suspended. Default is false.
    """


    dynamicScalingInSuspended?: bool

    dynamicScalingOutSuspended?: bool

    scheduledScalingSuspended?: bool


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        Max capacity of the scalable target.
    minCapacity : float, default is Undefined, optional
        Min capacity of the scalable target.
    resourceId : str, default is Undefined, optional
        Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the AWS Application Auto Scaling documentation for more information about how this service interacts with IAM.
    roleArnRef : AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    scalableDimension : str, default is Undefined, optional
        Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference
    suspendedState : AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderSuspendedState, default is Undefined, optional
        suspended state
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    maxCapacity?: float

    minCapacity?: float

    resourceId?: str

    roleArn?: str

    roleArnRef?: AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRef

    roleArnSelector?: AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelector

    scalableDimension?: str

    serviceNamespace?: str

    suspendedState?: AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderSuspendedState

    tags?: {str:str}


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelectorPolicy


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecInitProviderSuspendedState:
    r"""
    Specifies whether the scaling activities for a scalable target are in a suspended state.

    Attributes
    ----------
    dynamicScalingInSuspended : bool, default is Undefined, optional
        Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Default is false.
    dynamicScalingOutSuspended : bool, default is Undefined, optional
        Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Default is false.
    scheduledScalingSuspended : bool, default is Undefined, optional
        Whether scheduled scaling is suspended. Default is false.
    """


    dynamicScalingInSuspended?: bool

    dynamicScalingOutSuspended?: bool

    scheduledScalingSuspended?: bool


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1TargetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1TargetSpecProviderConfigRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRef

    metadata?: AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToMetadata

    name: str


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRefPolicy


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppautoscalingAwsUpboundIoV1beta1TargetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppautoscalingAwsUpboundIoV1beta1TargetStatus:
    r"""
    TargetStatus defines the observed state of Target.

    Attributes
    ----------
    atProvider : AppautoscalingAwsUpboundIoV1beta1TargetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppautoscalingAwsUpboundIoV1beta1TargetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppautoscalingAwsUpboundIoV1beta1TargetStatusAtProvider

    conditions?: [AppautoscalingAwsUpboundIoV1beta1TargetStatusConditionsItems0]

    observedGeneration?: int


schema AppautoscalingAwsUpboundIoV1beta1TargetStatusAtProvider:
    r"""
    appautoscaling aws upbound io v1beta1 target status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the scalable target.
    id : str, default is Undefined, optional
        id
    maxCapacity : float, default is Undefined, optional
        Max capacity of the scalable target.
    minCapacity : float, default is Undefined, optional
        Min capacity of the scalable target.
    resourceId : str, default is Undefined, optional
        Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that allows Application AutoScaling to modify your scalable target on your behalf. This defaults to an IAM Service-Linked Role for most services and custom IAM Roles are ignored by the API for those namespaces. See the AWS Application Auto Scaling documentation for more information about how this service interacts with IAM.
    scalableDimension : str, default is Undefined, optional
        Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference
    serviceNamespace : str, default is Undefined, optional
        AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference
    suspendedState : AppautoscalingAwsUpboundIoV1beta1TargetStatusAtProviderSuspendedState, default is Undefined, optional
        suspended state
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    id?: str

    maxCapacity?: float

    minCapacity?: float

    resourceId?: str

    roleArn?: str

    scalableDimension?: str

    serviceNamespace?: str

    suspendedState?: AppautoscalingAwsUpboundIoV1beta1TargetStatusAtProviderSuspendedState

    tags?: {str:str}

    tagsAll?: {str:str}


schema AppautoscalingAwsUpboundIoV1beta1TargetStatusAtProviderSuspendedState:
    r"""
    Specifies whether the scaling activities for a scalable target are in a suspended state.

    Attributes
    ----------
    dynamicScalingInSuspended : bool, default is Undefined, optional
        Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Default is false.
    dynamicScalingOutSuspended : bool, default is Undefined, optional
        Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Default is false.
    scheduledScalingSuspended : bool, default is Undefined, optional
        Whether scheduled scaling is suspended. Default is false.
    """


    dynamicScalingInSuspended?: bool

    dynamicScalingOutSuspended?: bool

    scheduledScalingSuspended?: bool


schema AppautoscalingAwsUpboundIoV1beta1TargetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


