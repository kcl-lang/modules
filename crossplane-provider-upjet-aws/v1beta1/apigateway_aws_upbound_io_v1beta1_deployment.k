"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Deployment:
    r"""
    Deployment is the Schema for the Deployments API. Manages an API Gateway REST Deployment.

    Attributes
    ----------
    apiVersion : str, default is "apigateway.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Deployment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApigatewayAwsUpboundIoV1beta1DeploymentSpec, default is Undefined, required
        spec
    status : ApigatewayAwsUpboundIoV1beta1DeploymentStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigateway.aws.upbound.io/v1beta1" = "apigateway.aws.upbound.io/v1beta1"

    kind: "Deployment" = "Deployment"

    metadata?: v1.ObjectMeta

    spec: ApigatewayAwsUpboundIoV1beta1DeploymentSpec

    status?: ApigatewayAwsUpboundIoV1beta1DeploymentStatus


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpec:
    r"""
    DeploymentSpec defines the desired state of Deployment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApigatewayAwsUpboundIoV1beta1DeploymentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApigatewayAwsUpboundIoV1beta1DeploymentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProvider

    initProvider?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecProviderConfigRef

    publishConnectionDetailsTo?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecWriteConnectionSecretToRef


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProvider:
    r"""
    apigateway aws upbound io v1beta1 deployment spec for provider

    Attributes
    ----------
    canarySettings : ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderCanarySettings, default is Undefined, optional
        canary settings
    description : str, default is Undefined, optional
        Description of the deployment
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    restApiId : str, default is Undefined, optional
        REST API identifier.
    restApiIdRef : ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDRef, default is Undefined, optional
        rest Api Id ref
    restApiIdSelector : ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDSelector, default is Undefined, optional
        rest Api Id selector
    stageDescription : str, default is Undefined, optional
        Description to set on the stage managed by the stage_name argument.
        Has no effect when stage_name is not set.
    stageName : str, default is Undefined, optional
        Name of the stage to create with this deployment.
        If the specified stage already exists, it will be updated to point to the new deployment.
        We recommend using the aws_api_gateway_stage resource instead to manage stages.
    triggers : {str:str}, default is Undefined, optional
        argument or explicit resource references using the resource . The triggers argument should be preferred over depends_on, since depends_on can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
    variables : {str:str}, default is Undefined, optional
        Map to set on the stage managed by the stage_name argument.
    """


    canarySettings?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderCanarySettings

    description?: str

    region: str

    restApiId?: str

    restApiIdRef?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDRef

    restApiIdSelector?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDSelector

    stageDescription?: str

    stageName?: str

    triggers?: {str:str}

    variables?: {str:str}


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderCanarySettings:
    r"""
    Input configuration for the canary deployment when the deployment is a canary release deployment.
    See [canary_settings](#canary_settings-argument-reference) below. Has no effect when stage_name` is not set.

    Attributes
    ----------
    percentTraffic : float, default is Undefined, optional
        Percentage (0.0-100.0) of traffic routed to the canary deployment.
    stageVariableOverrides : {str:str}, default is Undefined, optional
        Stage variable overrides used for the canary release deployment. They can override existing stage variables or add new stage variables for the canary release deployment. These stage variables are represented as a string-to-string map between stage variable names and their values.
    useStageCache : bool, default is Undefined, optional
        Boolean flag to indicate whether the canary release deployment uses the stage cache or not.
    """


    percentTraffic?: float

    stageVariableOverrides?: {str:str}

    useStageCache?: bool


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecForProviderRestAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    canarySettings : ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderCanarySettings, default is Undefined, optional
        canary settings
    description : str, default is Undefined, optional
        Description of the deployment
    restApiId : str, default is Undefined, optional
        REST API identifier.
    restApiIdRef : ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDRef, default is Undefined, optional
        rest Api Id ref
    restApiIdSelector : ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDSelector, default is Undefined, optional
        rest Api Id selector
    stageDescription : str, default is Undefined, optional
        Description to set on the stage managed by the stage_name argument.
        Has no effect when stage_name is not set.
    stageName : str, default is Undefined, optional
        Name of the stage to create with this deployment.
        If the specified stage already exists, it will be updated to point to the new deployment.
        We recommend using the aws_api_gateway_stage resource instead to manage stages.
    triggers : {str:str}, default is Undefined, optional
        argument or explicit resource references using the resource . The triggers argument should be preferred over depends_on, since depends_on can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
    variables : {str:str}, default is Undefined, optional
        Map to set on the stage managed by the stage_name argument.
    """


    canarySettings?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderCanarySettings

    description?: str

    restApiId?: str

    restApiIdRef?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDRef

    restApiIdSelector?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDSelector

    stageDescription?: str

    stageName?: str

    triggers?: {str:str}

    variables?: {str:str}


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderCanarySettings:
    r"""
    Input configuration for the canary deployment when the deployment is a canary release deployment.
    See [canary_settings](#canary_settings-argument-reference) below. Has no effect when stage_name` is not set.

    Attributes
    ----------
    percentTraffic : float, default is Undefined, optional
        Percentage (0.0-100.0) of traffic routed to the canary deployment.
    stageVariableOverrides : {str:str}, default is Undefined, optional
        Stage variable overrides used for the canary release deployment. They can override existing stage variables or add new stage variables for the canary release deployment. These stage variables are represented as a string-to-string map between stage variable names and their values.
    useStageCache : bool, default is Undefined, optional
        Boolean flag to indicate whether the canary release deployment uses the stage cache or not.
    """


    percentTraffic?: float

    stageVariableOverrides?: {str:str}

    useStageCache?: bool


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecInitProviderRestAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1DeploymentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecProviderConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRef

    metadata?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToMetadata

    name: str


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApigatewayAwsUpboundIoV1beta1DeploymentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta1DeploymentStatus:
    r"""
    DeploymentStatus defines the observed state of Deployment.

    Attributes
    ----------
    atProvider : ApigatewayAwsUpboundIoV1beta1DeploymentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApigatewayAwsUpboundIoV1beta1DeploymentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApigatewayAwsUpboundIoV1beta1DeploymentStatusAtProvider

    conditions?: [ApigatewayAwsUpboundIoV1beta1DeploymentStatusConditionsItems0]

    observedGeneration?: int


schema ApigatewayAwsUpboundIoV1beta1DeploymentStatusAtProvider:
    r"""
    apigateway aws upbound io v1beta1 deployment status at provider

    Attributes
    ----------
    canarySettings : ApigatewayAwsUpboundIoV1beta1DeploymentStatusAtProviderCanarySettings, default is Undefined, optional
        canary settings
    createdDate : str, default is Undefined, optional
        Creation date of the deployment
    description : str, default is Undefined, optional
        Description of the deployment
    executionArn : str, default is Undefined, optional
        Execution ARN to be used in lambda_permission's source_arn
        when allowing API Gateway to invoke a Lambda function,
        e.g., arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod
    id : str, default is Undefined, optional
        ID of the deployment
    invokeUrl : str, default is Undefined, optional
        URL to invoke the API pointing to the stage,
        e.g., https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod
    restApiId : str, default is Undefined, optional
        REST API identifier.
    stageDescription : str, default is Undefined, optional
        Description to set on the stage managed by the stage_name argument.
        Has no effect when stage_name is not set.
    stageName : str, default is Undefined, optional
        Name of the stage to create with this deployment.
        If the specified stage already exists, it will be updated to point to the new deployment.
        We recommend using the aws_api_gateway_stage resource instead to manage stages.
    triggers : {str:str}, default is Undefined, optional
        argument or explicit resource references using the resource . The triggers argument should be preferred over depends_on, since depends_on can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
    variables : {str:str}, default is Undefined, optional
        Map to set on the stage managed by the stage_name argument.
    """


    canarySettings?: ApigatewayAwsUpboundIoV1beta1DeploymentStatusAtProviderCanarySettings

    createdDate?: str

    description?: str

    executionArn?: str

    id?: str

    invokeUrl?: str

    restApiId?: str

    stageDescription?: str

    stageName?: str

    triggers?: {str:str}

    variables?: {str:str}


schema ApigatewayAwsUpboundIoV1beta1DeploymentStatusAtProviderCanarySettings:
    r"""
    Input configuration for the canary deployment when the deployment is a canary release deployment.
    See [canary_settings](#canary_settings-argument-reference) below. Has no effect when stage_name` is not set.

    Attributes
    ----------
    percentTraffic : float, default is Undefined, optional
        Percentage (0.0-100.0) of traffic routed to the canary deployment.
    stageVariableOverrides : {str:str}, default is Undefined, optional
        Stage variable overrides used for the canary release deployment. They can override existing stage variables or add new stage variables for the canary release deployment. These stage variables are represented as a string-to-string map between stage variable names and their values.
    useStageCache : bool, default is Undefined, optional
        Boolean flag to indicate whether the canary release deployment uses the stage cache or not.
    """


    percentTraffic?: float

    stageVariableOverrides?: {str:str}

    useStageCache?: bool


schema ApigatewayAwsUpboundIoV1beta1DeploymentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


