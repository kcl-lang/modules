"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GlobalReplicationGroup:
    r"""
    GlobalReplicationGroup is the Schema for the GlobalReplicationGroups API. Provides an ElastiCache Global Replication Group resource.

    Attributes
    ----------
    apiVersion : str, default is "elasticache.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GlobalReplicationGroup", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpec, default is Undefined, required
        spec
    status : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatus, default is Undefined, optional
        status
    """


    apiVersion: "elasticache.aws.upbound.io/v1beta1" = "elasticache.aws.upbound.io/v1beta1"

    kind: "GlobalReplicationGroup" = "GlobalReplicationGroup"

    metadata?: v1.ObjectMeta

    spec: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpec

    status?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatus


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpec:
    r"""
    GlobalReplicationGroupSpec defines the desired state of GlobalReplicationGroup

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProvider, default is Undefined, required
        for provider
    initProvider : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProvider

    initProvider?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecProviderConfigRef

    publishConnectionDetailsTo?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecWriteConnectionSecretToRef


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProvider:
    r"""
    elasticache aws upbound io v1beta1 global replication group spec for provider

    Attributes
    ----------
    automaticFailoverEnabled : bool, default is Undefined, optional
        Specifies whether read-only replicas will be automatically promoted to read/write primary if the existing primary fails.
        When creating, by default the Global Replication Group inherits the automatic failover setting of the primary replication group.
    cacheNodeType : str, default is Undefined, optional
        The instance class used.
        See AWS documentation for information on supported node types
        and guidance on selecting node types.
        When creating, by default the Global Replication Group inherits the node type of the primary replication group.
    engineVersion : str, default is Undefined, optional
        Redis version to use for the Global Replication Group.
        When creating, by default the Global Replication Group inherits the version of the primary replication group.
        If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
        Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
        When the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        When the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below.
    globalReplicationGroupDescription : str, default is Undefined, optional
        created description for the global replication group.
    globalReplicationGroupIdSuffix : str, default is Undefined, optional
        –  The suffix name of a Global Datastore. If global_replication_group_id_suffix is changed, creates a new resource.
    numNodeGroups : float, default is Undefined, optional
        The number of node groups (shards) on the global replication group.
    parameterGroupName : str, default is Undefined, optional
        An ElastiCache Parameter Group to use for the Global Replication Group.
        Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
        Specifying without a major version upgrade will fail.
        Note that ElastiCache creates a copy of this parameter group for each member replication group.
    primaryReplicationGroupId : str, default is Undefined, optional
        –  The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If primary_replication_group_id is changed, creates a new resource.
    primaryReplicationGroupIdRef : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDRef, default is Undefined, optional
        primary replication group Id ref
    primaryReplicationGroupIdSelector : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDSelector, default is Undefined, optional
        primary replication group Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    automaticFailoverEnabled?: bool

    cacheNodeType?: str

    engineVersion?: str

    globalReplicationGroupDescription?: str

    globalReplicationGroupIdSuffix?: str

    numNodeGroups?: float

    parameterGroupName?: str

    primaryReplicationGroupId?: str

    primaryReplicationGroupIdRef?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDRef

    primaryReplicationGroupIdSelector?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDSelector

    region: str


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDRef:
    r"""
    Reference to a ReplicationGroup in elasticache to populate primaryReplicationGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDSelector:
    r"""
    Selector for a ReplicationGroup in elasticache to populate primaryReplicationGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecForProviderPrimaryReplicationGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    automaticFailoverEnabled : bool, default is Undefined, optional
        Specifies whether read-only replicas will be automatically promoted to read/write primary if the existing primary fails.
        When creating, by default the Global Replication Group inherits the automatic failover setting of the primary replication group.
    cacheNodeType : str, default is Undefined, optional
        The instance class used.
        See AWS documentation for information on supported node types
        and guidance on selecting node types.
        When creating, by default the Global Replication Group inherits the node type of the primary replication group.
    engineVersion : str, default is Undefined, optional
        Redis version to use for the Global Replication Group.
        When creating, by default the Global Replication Group inherits the version of the primary replication group.
        If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
        Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
        When the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        When the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below.
    globalReplicationGroupDescription : str, default is Undefined, optional
        created description for the global replication group.
    globalReplicationGroupIdSuffix : str, default is Undefined, optional
        –  The suffix name of a Global Datastore. If global_replication_group_id_suffix is changed, creates a new resource.
    numNodeGroups : float, default is Undefined, optional
        The number of node groups (shards) on the global replication group.
    parameterGroupName : str, default is Undefined, optional
        An ElastiCache Parameter Group to use for the Global Replication Group.
        Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
        Specifying without a major version upgrade will fail.
        Note that ElastiCache creates a copy of this parameter group for each member replication group.
    primaryReplicationGroupId : str, default is Undefined, optional
        –  The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If primary_replication_group_id is changed, creates a new resource.
    primaryReplicationGroupIdRef : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDRef, default is Undefined, optional
        primary replication group Id ref
    primaryReplicationGroupIdSelector : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDSelector, default is Undefined, optional
        primary replication group Id selector
    """


    automaticFailoverEnabled?: bool

    cacheNodeType?: str

    engineVersion?: str

    globalReplicationGroupDescription?: str

    globalReplicationGroupIdSuffix?: str

    numNodeGroups?: float

    parameterGroupName?: str

    primaryReplicationGroupId?: str

    primaryReplicationGroupIdRef?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDRef

    primaryReplicationGroupIdSelector?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDSelector


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDRef:
    r"""
    Reference to a ReplicationGroup in elasticache to populate primaryReplicationGroupId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDRefPolicy


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDSelector:
    r"""
    Selector for a ReplicationGroup in elasticache to populate primaryReplicationGroupId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDSelectorPolicy


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecInitProviderPrimaryReplicationGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecProviderConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToConfigRef

    metadata?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToMetadata

    name: str


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatus:
    r"""
    GlobalReplicationGroupStatus defines the observed state of GlobalReplicationGroup.

    Attributes
    ----------
    atProvider : ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusAtProvider

    conditions?: [ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusConditionsItems0]

    observedGeneration?: int


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusAtProvider:
    r"""
    elasticache aws upbound io v1beta1 global replication group status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the ElastiCache Global Replication Group.
    atRestEncryptionEnabled : bool, default is Undefined, optional
        A flag that indicate whether the encryption at rest is enabled.
    authTokenEnabled : bool, default is Undefined, optional
        A flag that indicate whether AuthToken (password) is enabled.
    automaticFailoverEnabled : bool, default is Undefined, optional
        Specifies whether read-only replicas will be automatically promoted to read/write primary if the existing primary fails.
        When creating, by default the Global Replication Group inherits the automatic failover setting of the primary replication group.
    cacheNodeType : str, default is Undefined, optional
        The instance class used.
        See AWS documentation for information on supported node types
        and guidance on selecting node types.
        When creating, by default the Global Replication Group inherits the node type of the primary replication group.
    clusterEnabled : bool, default is Undefined, optional
        Indicates whether the Global Datastore is cluster enabled.
    engine : str, default is Undefined, optional
        The name of the cache engine to be used for the clusters in this global replication group.
    engineVersion : str, default is Undefined, optional
        Redis version to use for the Global Replication Group.
        When creating, by default the Global Replication Group inherits the version of the primary replication group.
        If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
        Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
        When the version is 7 or higher, the major and minor version should be set, e.g., 7.2.
        When the version is 6, the major and minor version can be set, e.g., 6.2,
        or the minor version can be unspecified which will use the latest version at creation time, e.g., 6.x.
        The actual engine version used is returned in the attribute engine_version_actual, see Attribute Reference below.
    engineVersionActual : str, default is Undefined, optional
        The full version number of the cache engine running on the members of this global replication group.
    globalNodeGroups : [ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusAtProviderGlobalNodeGroupsItems0], default is Undefined, optional
        Set of node groups (shards) on the global replication group.
        Has the values:
    globalReplicationGroupDescription : str, default is Undefined, optional
        created description for the global replication group.
    globalReplicationGroupId : str, default is Undefined, optional
        The full ID of the global replication group.
    globalReplicationGroupIdSuffix : str, default is Undefined, optional
        –  The suffix name of a Global Datastore. If global_replication_group_id_suffix is changed, creates a new resource.
    id : str, default is Undefined, optional
        The ID of the ElastiCache Global Replication Group.
    numNodeGroups : float, default is Undefined, optional
        The number of node groups (shards) on the global replication group.
    parameterGroupName : str, default is Undefined, optional
        An ElastiCache Parameter Group to use for the Global Replication Group.
        Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
        Specifying without a major version upgrade will fail.
        Note that ElastiCache creates a copy of this parameter group for each member replication group.
    primaryReplicationGroupId : str, default is Undefined, optional
        –  The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If primary_replication_group_id is changed, creates a new resource.
    transitEncryptionEnabled : bool, default is Undefined, optional
        A flag that indicates whether the encryption in transit is enabled.
    """


    arn?: str

    atRestEncryptionEnabled?: bool

    authTokenEnabled?: bool

    automaticFailoverEnabled?: bool

    cacheNodeType?: str

    clusterEnabled?: bool

    engine?: str

    engineVersion?: str

    engineVersionActual?: str

    globalNodeGroups?: [ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusAtProviderGlobalNodeGroupsItems0]

    globalReplicationGroupDescription?: str

    globalReplicationGroupId?: str

    globalReplicationGroupIdSuffix?: str

    id?: str

    numNodeGroups?: float

    parameterGroupName?: str

    primaryReplicationGroupId?: str

    transitEncryptionEnabled?: bool


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusAtProviderGlobalNodeGroupsItems0:
    r"""
    elasticache aws upbound io v1beta1 global replication group status at provider global node groups items0

    Attributes
    ----------
    globalNodeGroupId : str, default is Undefined, optional
        The ID of the global node group.
    slots : str, default is Undefined, optional
        The keyspace for this node group.
    """


    globalNodeGroupId?: str

    slots?: str


schema ElasticacheAwsUpboundIoV1beta1GlobalReplicationGroupStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


