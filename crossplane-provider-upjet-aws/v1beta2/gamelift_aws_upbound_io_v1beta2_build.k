"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Build:
    r"""
    Build is the Schema for the Builds API. Provides a GameLift Build resource.

    Attributes
    ----------
    apiVersion : str, default is "gamelift.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Build", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GameliftAwsUpboundIoV1beta2BuildSpec, default is Undefined, required
        spec
    status : GameliftAwsUpboundIoV1beta2BuildStatus, default is Undefined, optional
        status
    """


    apiVersion: "gamelift.aws.upbound.io/v1beta2" = "gamelift.aws.upbound.io/v1beta2"

    kind: "Build" = "Build"

    metadata?: v1.ObjectMeta

    spec: GameliftAwsUpboundIoV1beta2BuildSpec

    status?: GameliftAwsUpboundIoV1beta2BuildStatus


schema GameliftAwsUpboundIoV1beta2BuildSpec:
    r"""
    BuildSpec defines the desired state of Build

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GameliftAwsUpboundIoV1beta2BuildSpecForProvider, default is Undefined, required
        for provider
    initProvider : GameliftAwsUpboundIoV1beta2BuildSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GameliftAwsUpboundIoV1beta2BuildSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GameliftAwsUpboundIoV1beta2BuildSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GameliftAwsUpboundIoV1beta2BuildSpecForProvider

    initProvider?: GameliftAwsUpboundIoV1beta2BuildSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GameliftAwsUpboundIoV1beta2BuildSpecProviderConfigRef

    publishConnectionDetailsTo?: GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GameliftAwsUpboundIoV1beta2BuildSpecWriteConnectionSecretToRef


schema GameliftAwsUpboundIoV1beta2BuildSpecForProvider:
    r"""
    gamelift aws upbound io v1beta2 build spec for provider

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the build
    operatingSystem : str, default is Undefined, optional
        Operating system that the game server binaries are built to run on. Valid values: WINDOWS_2012, AMAZON_LINUX, AMAZON_LINUX_2, WINDOWS_2016, AMAZON_LINUX_2023.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    storageLocation : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocation, default is Undefined, optional
        storage location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    version : str, default is Undefined, optional
        Version that is associated with this build.
    """


    name?: str

    operatingSystem?: str

    region: str

    storageLocation?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocation

    tags?: {str:str}

    version?: str


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocation:
    r"""
    Information indicating where your game build files are stored. See below.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of your S3 bucket.
    bucketRef : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketSelector, default is Undefined, optional
        bucket selector
    key : str, default is Undefined, optional
        Name of the zip file containing your build files.
    keyRef : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeyRef, default is Undefined, optional
        key ref
    keySelector : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeySelector, default is Undefined, optional
        key selector
    objectVersion : str, default is Undefined, optional
        A specific version of the file. If not set, the latest version of the file is retrieved.
    roleArn : str, default is Undefined, optional
        ARN of the access role that allows Amazon GameLift to access your S3 bucket.
    roleArnRef : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucket?: str

    bucketRef?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketRef

    bucketSelector?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketSelector

    key?: str

    keyRef?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeyRef

    keySelector?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeySelector

    objectVersion?: str

    roleArn?: str

    roleArnRef?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnRef

    roleArnSelector?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnSelector


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketSelectorPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeyRef:
    r"""
    Reference to a Object in s3 to populate key.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeyRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeySelector:
    r"""
    Selector for a Object in s3 to populate key.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeySelectorPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnSelectorPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecForProviderStorageLocationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the build
    operatingSystem : str, default is Undefined, optional
        Operating system that the game server binaries are built to run on. Valid values: WINDOWS_2012, AMAZON_LINUX, AMAZON_LINUX_2, WINDOWS_2016, AMAZON_LINUX_2023.
    storageLocation : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocation, default is Undefined, optional
        storage location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    version : str, default is Undefined, optional
        Version that is associated with this build.
    """


    name?: str

    operatingSystem?: str

    storageLocation?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocation

    tags?: {str:str}

    version?: str


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocation:
    r"""
    Information indicating where your game build files are stored. See below.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of your S3 bucket.
    bucketRef : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketSelector, default is Undefined, optional
        bucket selector
    key : str, default is Undefined, optional
        Name of the zip file containing your build files.
    keyRef : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeyRef, default is Undefined, optional
        key ref
    keySelector : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeySelector, default is Undefined, optional
        key selector
    objectVersion : str, default is Undefined, optional
        A specific version of the file. If not set, the latest version of the file is retrieved.
    roleArn : str, default is Undefined, optional
        ARN of the access role that allows Amazon GameLift to access your S3 bucket.
    roleArnRef : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnSelector, default is Undefined, optional
        role arn selector
    """


    bucket?: str

    bucketRef?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketRef

    bucketSelector?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketSelector

    key?: str

    keyRef?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeyRef

    keySelector?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeySelector

    objectVersion?: str

    roleArn?: str

    roleArnRef?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnRef

    roleArnSelector?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnSelector


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketSelectorPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationBucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeyRef:
    r"""
    Reference to a Object in s3 to populate key.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeyRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeyRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeyRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeySelector:
    r"""
    Selector for a Object in s3 to populate key.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeySelectorPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationKeySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnSelectorPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecInitProviderStorageLocationRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecProviderConfigRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToConfigRef

    metadata?: GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToMetadata

    name: str


schema GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToConfigRefPolicy


schema GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GameliftAwsUpboundIoV1beta2BuildSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GameliftAwsUpboundIoV1beta2BuildSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GameliftAwsUpboundIoV1beta2BuildStatus:
    r"""
    BuildStatus defines the observed state of Build.

    Attributes
    ----------
    atProvider : GameliftAwsUpboundIoV1beta2BuildStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GameliftAwsUpboundIoV1beta2BuildStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GameliftAwsUpboundIoV1beta2BuildStatusAtProvider

    conditions?: [GameliftAwsUpboundIoV1beta2BuildStatusConditionsItems0]

    observedGeneration?: int


schema GameliftAwsUpboundIoV1beta2BuildStatusAtProvider:
    r"""
    gamelift aws upbound io v1beta2 build status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        GameLift Build ARN.
    id : str, default is Undefined, optional
        GameLift Build ID.
    name : str, default is Undefined, optional
        Name of the build
    operatingSystem : str, default is Undefined, optional
        Operating system that the game server binaries are built to run on. Valid values: WINDOWS_2012, AMAZON_LINUX, AMAZON_LINUX_2, WINDOWS_2016, AMAZON_LINUX_2023.
    storageLocation : GameliftAwsUpboundIoV1beta2BuildStatusAtProviderStorageLocation, default is Undefined, optional
        storage location
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    version : str, default is Undefined, optional
        Version that is associated with this build.
    """


    arn?: str

    id?: str

    name?: str

    operatingSystem?: str

    storageLocation?: GameliftAwsUpboundIoV1beta2BuildStatusAtProviderStorageLocation

    tags?: {str:str}

    tagsAll?: {str:str}

    version?: str


schema GameliftAwsUpboundIoV1beta2BuildStatusAtProviderStorageLocation:
    r"""
    Information indicating where your game build files are stored. See below.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of your S3 bucket.
    key : str, default is Undefined, optional
        Name of the zip file containing your build files.
    objectVersion : str, default is Undefined, optional
        A specific version of the file. If not set, the latest version of the file is retrieved.
    roleArn : str, default is Undefined, optional
        ARN of the access role that allows Amazon GameLift to access your S3 bucket.
    """


    bucket?: str

    key?: str

    objectVersion?: str

    roleArn?: str


schema GameliftAwsUpboundIoV1beta2BuildStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


