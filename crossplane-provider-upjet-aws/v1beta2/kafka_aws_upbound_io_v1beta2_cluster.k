"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API.

    Attributes
    ----------
    apiVersion : str, default is "kafka.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KafkaAwsUpboundIoV1beta2ClusterSpec, default is Undefined, required
        spec
    status : KafkaAwsUpboundIoV1beta2ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "kafka.aws.upbound.io/v1beta2" = "kafka.aws.upbound.io/v1beta2"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: KafkaAwsUpboundIoV1beta2ClusterSpec

    status?: KafkaAwsUpboundIoV1beta2ClusterStatus


schema KafkaAwsUpboundIoV1beta2ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KafkaAwsUpboundIoV1beta2ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : KafkaAwsUpboundIoV1beta2ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KafkaAwsUpboundIoV1beta2ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KafkaAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KafkaAwsUpboundIoV1beta2ClusterSpecForProvider

    initProvider?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KafkaAwsUpboundIoV1beta2ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KafkaAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProvider:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider

    Attributes
    ----------
    brokerNodeGroupInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0], default is Undefined, optional
        Configuration block for the broker nodes of the Kafka cluster.
    clientAuthentication : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0], default is Undefined, optional
        Configuration block for specifying a client authentication. See below.
    clusterName : str, default is Undefined, optional
        Name of the MSK cluster.
    configurationInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0], default is Undefined, optional
        Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.
    encryptionInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0], default is Undefined, optional
        Configuration block for specifying encryption. See below.
    enhancedMonitoring : str, default is Undefined, optional
        Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch
    kafkaVersion : str, default is Undefined, optional
        Specify the desired Kafka software version.
    loggingInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0], default is Undefined, optional
        Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.
    numberOfBrokerNodes : float, default is Undefined, optional
        The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.
    openMonitoring : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0], default is Undefined, optional
        Configuration block for JMX and Node monitoring for the MSK cluster. See below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    storageMode : str, default is Undefined, optional
        Controls storage mode for supported storage tiers. Valid values are: LOCAL or TIERED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    brokerNodeGroupInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0]

    clientAuthentication?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0]

    clusterName?: str

    configurationInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0]

    encryptionInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0]

    enhancedMonitoring?: str

    kafkaVersion?: str

    loggingInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0]

    numberOfBrokerNodes?: float

    openMonitoring?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0]

    region: str

    storageMode?: str

    tags?: {str:str}


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0

    Attributes
    ----------
    azDistribution : str, default is Undefined, optional
        The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.
    clientSubnets : [str], default is Undefined, optional
        A list of subnets to connect to in client VPC (documentation).
    clientSubnetsRefs : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate clientSubnets.
    clientSubnetsSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsSelector, default is Undefined, optional
        client subnets selector
    connectivityInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0], default is Undefined, optional
        Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).
    instanceType : str, default is Undefined, optional
        Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)
    securityGroups : [str], default is Undefined, optional
        A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    securityGroupsRefs : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupsSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsSelector, default is Undefined, optional
        security groups selector
    storageInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0], default is Undefined, optional
        A block that contains information about storage volumes attached to MSK broker nodes. See below.
    """


    azDistribution?: str

    clientSubnets?: [str]

    clientSubnetsRefs?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0]

    clientSubnetsSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsSelector

    connectivityInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0]

    instanceType?: str

    securityGroups?: [str]

    securityGroupsRefs?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0]

    securityGroupsSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsSelector

    storageInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate clientSubnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ClientSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 connectivity info items0

    Attributes
    ----------
    publicAccess : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0], default is Undefined, optional
        Access control settings for brokers. See below.
    vpcConnectivity : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0], default is Undefined, optional
        VPC connectivity access control for brokers. See below.
    """


    publicAccess?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0]

    vpcConnectivity?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 connectivity info items0 public access items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Public access type. Valid values: DISABLED, SERVICE_PROVIDED_EIPS.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 connectivity info items0 vpc connectivity items0

    Attributes
    ----------
    clientAuthentication : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0], default is Undefined, optional
        Configuration block for specifying a client authentication. See below.
    """


    clientAuthentication?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 connectivity info items0 vpc connectivity items0 client authentication items0

    Attributes
    ----------
    sasl : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0], default is Undefined, optional
        SASL authentication type details for VPC connectivity. See below.
    tls : bool, default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    """


    sasl?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0]

    tls?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 connectivity info items0 vpc connectivity items0 client authentication items0 sasl items0

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0SecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 storage info items0

    Attributes
    ----------
    ebsStorageInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0], default is Undefined, optional
        A block that contains EBS volume information. See below.
    """


    ebsStorageInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 storage info items0 ebs storage info items0

    Attributes
    ----------
    provisionedThroughput : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0], default is Undefined, optional
        A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
    volumeSize : float, default is Undefined, optional
        The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.
    """


    provisionedThroughput?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0]

    volumeSize?: float


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider broker node group info items0 storage info items0 ebs storage info items0 provisioned throughput items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    volumeThroughput : float, default is Undefined, optional
        Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks
    """


    enabled?: bool

    volumeThroughput?: float


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider client authentication items0

    Attributes
    ----------
    sasl : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0SaslItems0], default is Undefined, optional
        SASL authentication type details for VPC connectivity. See below.
    tls : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0TLSItems0], default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    unauthenticated : bool, default is Undefined, optional
        Enables unauthenticated access.
    """


    sasl?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0SaslItems0]

    tls?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0TLSItems0]

    unauthenticated?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0SaslItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider client authentication items0 sasl items0

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderClientAuthenticationItems0TLSItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider client authentication items0 TLS items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """


    certificateAuthorityArns?: [str]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider configuration info items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    arnRef : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        Revision of the MSK Configuration to use in the cluster.
    """


    arn?: str

    arnRef?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnRef

    arnSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnSelector

    revision?: float


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnRef:
    r"""
    Reference to a Configuration in kafka to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnSelector:
    r"""
    Selector for a Configuration in kafka to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderConfigurationInfoItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider encryption info items0

    Attributes
    ----------
    encryptionAtRestKmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used for encryption at rest of the broker data volumes.
    encryptionAtRestKmsKeyArnRef : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRef, default is Undefined, optional
        encryption at rest kms key arn ref
    encryptionAtRestKmsKeyArnSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelector, default is Undefined, optional
        encryption at rest kms key arn selector
    encryptionInTransit : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionInTransitItems0], default is Undefined, optional
        Configuration block to specify encryption in transit. See below.
    """


    encryptionAtRestKmsKeyArn?: str

    encryptionAtRestKmsKeyArnRef?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRef

    encryptionAtRestKmsKeyArnSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelector

    encryptionInTransit?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionInTransitItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderEncryptionInfoItems0EncryptionInTransitItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider encryption info items0 encryption in transit items0

    Attributes
    ----------
    clientBroker : str, default is Undefined, optional
        Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.
    inCluster : bool, default is Undefined, optional
        Whether data communication among broker nodes is encrypted. Default value: true.
    """


    clientBroker?: str

    inCluster?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider logging info items0

    Attributes
    ----------
    brokerLogs : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0], default is Undefined, optional
        Configuration block for Broker Logs settings for logging info. See below.
    """


    brokerLogs?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider logging info items0 broker logs items0

    Attributes
    ----------
    cloudwatchLogs : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0], default is Undefined, optional
        cloudwatch logs
    firehose : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0], default is Undefined, optional
        firehose
    s3 : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0], default is Undefined, optional
        s3
    """


    cloudwatchLogs?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0]

    firehose?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0]

    s3?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider logging info items0 broker logs items0 cloudwatch logs items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    logGroup : str, default is Undefined, optional
        Name of the Cloudwatch Log Group to deliver logs to.
    logGroupRef : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRef, default is Undefined, optional
        log group ref
    logGroupSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelector, default is Undefined, optional
        log group selector
    """


    enabled?: bool

    logGroup?: str

    logGroupRef?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRef

    logGroupSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelector


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider logging info items0 broker logs items0 firehose items0

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    deliveryStreamRef : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRef, default is Undefined, optional
        delivery stream ref
    deliveryStreamSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelector, default is Undefined, optional
        delivery stream selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    """


    deliveryStream?: str

    deliveryStreamRef?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRef

    deliveryStreamSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelector

    enabled?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRef:
    r"""
    Reference to a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider logging info items0 broker logs items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket to deliver logs to.
    bucketRef : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelector, default is Undefined, optional
        bucket selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    prefix : str, default is Undefined, optional
        Prefix to append to the folder name.
    """


    bucket?: str

    bucketRef?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRef

    bucketSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelector

    enabled?: bool

    prefix?: str


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider open monitoring items0

    Attributes
    ----------
    prometheus : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0], default is Undefined, optional
        Configuration block for Prometheus settings for open monitoring. See below.
    """


    prometheus?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider open monitoring items0 prometheus items0

    Attributes
    ----------
    jmxExporter : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0], default is Undefined, optional
        Configuration block for JMX Exporter. See below.
    nodeExporter : [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0], default is Undefined, optional
        Configuration block for Node Exporter. See below.
    """


    jmxExporter?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0]

    nodeExporter?: [KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider open monitoring items0 prometheus items0 jmx exporter items0

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecForProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec for provider open monitoring items0 prometheus items0 node exporter items0

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    brokerNodeGroupInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0], default is Undefined, optional
        Configuration block for the broker nodes of the Kafka cluster.
    clientAuthentication : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0], default is Undefined, optional
        Configuration block for specifying a client authentication. See below.
    clusterName : str, default is Undefined, optional
        Name of the MSK cluster.
    configurationInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0], default is Undefined, optional
        Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.
    encryptionInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0], default is Undefined, optional
        Configuration block for specifying encryption. See below.
    enhancedMonitoring : str, default is Undefined, optional
        Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch
    kafkaVersion : str, default is Undefined, optional
        Specify the desired Kafka software version.
    loggingInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0], default is Undefined, optional
        Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.
    numberOfBrokerNodes : float, default is Undefined, optional
        The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.
    openMonitoring : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0], default is Undefined, optional
        Configuration block for JMX and Node monitoring for the MSK cluster. See below.
    storageMode : str, default is Undefined, optional
        Controls storage mode for supported storage tiers. Valid values are: LOCAL or TIERED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    brokerNodeGroupInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0]

    clientAuthentication?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0]

    clusterName?: str

    configurationInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0]

    encryptionInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0]

    enhancedMonitoring?: str

    kafkaVersion?: str

    loggingInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0]

    numberOfBrokerNodes?: float

    openMonitoring?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0]

    storageMode?: str

    tags?: {str:str}


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0

    Attributes
    ----------
    azDistribution : str, default is Undefined, optional
        The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.
    clientSubnets : [str], default is Undefined, optional
        A list of subnets to connect to in client VPC (documentation).
    clientSubnetsRefs : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate clientSubnets.
    clientSubnetsSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsSelector, default is Undefined, optional
        client subnets selector
    connectivityInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0], default is Undefined, optional
        Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).
    instanceType : str, default is Undefined, optional
        Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)
    securityGroups : [str], default is Undefined, optional
        A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    securityGroupsRefs : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupsSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsSelector, default is Undefined, optional
        security groups selector
    storageInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0], default is Undefined, optional
        A block that contains information about storage volumes attached to MSK broker nodes. See below.
    """


    azDistribution?: str

    clientSubnets?: [str]

    clientSubnetsRefs?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0]

    clientSubnetsSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsSelector

    connectivityInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0]

    instanceType?: str

    securityGroups?: [str]

    securityGroupsRefs?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0]

    securityGroupsSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsSelector

    storageInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate clientSubnets.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ClientSubnetsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 connectivity info items0

    Attributes
    ----------
    publicAccess : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0], default is Undefined, optional
        Access control settings for brokers. See below.
    vpcConnectivity : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0], default is Undefined, optional
        VPC connectivity access control for brokers. See below.
    """


    publicAccess?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0]

    vpcConnectivity?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 connectivity info items0 public access items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Public access type. Valid values: DISABLED, SERVICE_PROVIDED_EIPS.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 connectivity info items0 vpc connectivity items0

    Attributes
    ----------
    clientAuthentication : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0], default is Undefined, optional
        Configuration block for specifying a client authentication. See below.
    """


    clientAuthentication?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 connectivity info items0 vpc connectivity items0 client authentication items0

    Attributes
    ----------
    sasl : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0], default is Undefined, optional
        SASL authentication type details for VPC connectivity. See below.
    tls : bool, default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    """


    sasl?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0]

    tls?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 connectivity info items0 vpc connectivity items0 client authentication items0 sasl items0

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0Policy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0SecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 storage info items0

    Attributes
    ----------
    ebsStorageInfo : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0], default is Undefined, optional
        A block that contains EBS volume information. See below.
    """


    ebsStorageInfo?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 storage info items0 ebs storage info items0

    Attributes
    ----------
    provisionedThroughput : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0], default is Undefined, optional
        A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
    volumeSize : float, default is Undefined, optional
        The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.
    """


    provisionedThroughput?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0]

    volumeSize?: float


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider broker node group info items0 storage info items0 ebs storage info items0 provisioned throughput items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    volumeThroughput : float, default is Undefined, optional
        Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks
    """


    enabled?: bool

    volumeThroughput?: float


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider client authentication items0

    Attributes
    ----------
    sasl : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0SaslItems0], default is Undefined, optional
        SASL authentication type details for VPC connectivity. See below.
    tls : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0TLSItems0], default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    unauthenticated : bool, default is Undefined, optional
        Enables unauthenticated access.
    """


    sasl?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0SaslItems0]

    tls?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0TLSItems0]

    unauthenticated?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0SaslItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider client authentication items0 sasl items0

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderClientAuthenticationItems0TLSItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider client authentication items0 TLS items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """


    certificateAuthorityArns?: [str]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider configuration info items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    arnRef : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnRef, default is Undefined, optional
        arn ref
    arnSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnSelector, default is Undefined, optional
        arn selector
    revision : float, default is Undefined, optional
        Revision of the MSK Configuration to use in the cluster.
    """


    arn?: str

    arnRef?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnRef

    arnSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnSelector

    revision?: float


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnRef:
    r"""
    Reference to a Configuration in kafka to populate arn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnSelector:
    r"""
    Selector for a Configuration in kafka to populate arn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderConfigurationInfoItems0ArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider encryption info items0

    Attributes
    ----------
    encryptionAtRestKmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used for encryption at rest of the broker data volumes.
    encryptionAtRestKmsKeyArnRef : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRef, default is Undefined, optional
        encryption at rest kms key arn ref
    encryptionAtRestKmsKeyArnSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelector, default is Undefined, optional
        encryption at rest kms key arn selector
    encryptionInTransit : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionInTransitItems0], default is Undefined, optional
        Configuration block to specify encryption in transit. See below.
    """


    encryptionAtRestKmsKeyArn?: str

    encryptionAtRestKmsKeyArnRef?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRef

    encryptionAtRestKmsKeyArnSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelector

    encryptionInTransit?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionInTransitItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate encryptionAtRestKmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionAtRestKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderEncryptionInfoItems0EncryptionInTransitItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider encryption info items0 encryption in transit items0

    Attributes
    ----------
    clientBroker : str, default is Undefined, optional
        Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.
    inCluster : bool, default is Undefined, optional
        Whether data communication among broker nodes is encrypted. Default value: true.
    """


    clientBroker?: str

    inCluster?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider logging info items0

    Attributes
    ----------
    brokerLogs : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0], default is Undefined, optional
        Configuration block for Broker Logs settings for logging info. See below.
    """


    brokerLogs?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider logging info items0 broker logs items0

    Attributes
    ----------
    cloudwatchLogs : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0], default is Undefined, optional
        cloudwatch logs
    firehose : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0], default is Undefined, optional
        firehose
    s3 : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0], default is Undefined, optional
        s3
    """


    cloudwatchLogs?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0]

    firehose?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0]

    s3?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider logging info items0 broker logs items0 cloudwatch logs items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    logGroup : str, default is Undefined, optional
        Name of the Cloudwatch Log Group to deliver logs to.
    logGroupRef : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRef, default is Undefined, optional
        log group ref
    logGroupSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelector, default is Undefined, optional
        log group selector
    """


    enabled?: bool

    logGroup?: str

    logGroupRef?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRef

    logGroupSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelector


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRef:
    r"""
    Reference to a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelector:
    r"""
    Selector for a Group in cloudwatchlogs to populate logGroup.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0LogGroupSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider logging info items0 broker logs items0 firehose items0

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    deliveryStreamRef : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRef, default is Undefined, optional
        delivery stream ref
    deliveryStreamSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelector, default is Undefined, optional
        delivery stream selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    """


    deliveryStream?: str

    deliveryStreamRef?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRef

    deliveryStreamSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelector

    enabled?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRef:
    r"""
    Reference to a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelector:
    r"""
    Selector for a DeliveryStream in firehose to populate deliveryStream.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0DeliveryStreamSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider logging info items0 broker logs items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket to deliver logs to.
    bucketRef : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRef, default is Undefined, optional
        bucket ref
    bucketSelector : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelector, default is Undefined, optional
        bucket selector
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    prefix : str, default is Undefined, optional
        Prefix to append to the folder name.
    """


    bucket?: str

    bucketRef?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRef

    bucketSelector?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelector

    enabled?: bool

    prefix?: str


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRef:
    r"""
    Reference to a Bucket in s3 to populate bucket.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelector:
    r"""
    Selector for a Bucket in s3 to populate bucket.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelectorPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderLoggingInfoItems0BrokerLogsItems0S3Items0BucketSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider open monitoring items0

    Attributes
    ----------
    prometheus : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0], default is Undefined, optional
        Configuration block for Prometheus settings for open monitoring. See below.
    """


    prometheus?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider open monitoring items0 prometheus items0

    Attributes
    ----------
    jmxExporter : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0], default is Undefined, optional
        Configuration block for JMX Exporter. See below.
    nodeExporter : [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0], default is Undefined, optional
        Configuration block for Node Exporter. See below.
    """


    jmxExporter?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0]

    nodeExporter?: [KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0]


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider open monitoring items0 prometheus items0 jmx exporter items0

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecInitProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0:
    r"""
    kafka aws upbound io v1beta2 cluster spec init provider open monitoring items0 prometheus items0 node exporter items0

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta2ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KafkaAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KafkaAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KafkaAwsUpboundIoV1beta2ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : KafkaAwsUpboundIoV1beta2ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KafkaAwsUpboundIoV1beta2ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KafkaAwsUpboundIoV1beta2ClusterStatusAtProvider

    conditions?: [KafkaAwsUpboundIoV1beta2ClusterStatusConditionsItems0]

    observedGeneration?: int


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProvider:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    bootstrapBrokers : str, default is Undefined, optional
        Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster. Contains a value if encryption_info.0.encryption_in_transit.0.client_broker is set to PLAINTEXT or TLS_PLAINTEXT. The resource sorts values alphabetically. AWS may not always return all endpoints so this value is not guaranteed to be stable across applies.
    bootstrapBrokersPublicSaslIam : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9198. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.iam is set to true and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersPublicSaslScram : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9196. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.scram is set to true and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersPublicTls : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and TLS port pairs. For example, b-1-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-2-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194,b-3-public.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9194. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and broker_node_group_info.0.connectivity_info.0.public_access.0.type is set to SERVICE_PROVIDED_EIPS and the cluster fulfill all other requirements for public access. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersSaslIam : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL IAM port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9098. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.iam is set to true. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersSaslScram : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and SASL SCRAM port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9096. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS and client_authentication.0.sasl.0.scram is set to true. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersTls : str, default is Undefined, optional
        One or more DNS names (or IP addresses) and TLS port pairs. For example, b-1.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-2.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094,b-3.exampleClusterName.abcde.c2.kafka.us-east-1.amazonaws.com:9094. This attribute will have a value if encryption_info.0.encryption_in_transit.0.client_broker is set to TLS_PLAINTEXT or TLS. The resource sorts the list alphabetically. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersVpcConnectivitySaslIam : str, default is Undefined, optional
        A string containing one or more DNS names (or IP addresses) and SASL IAM port pairs for VPC connectivity. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersVpcConnectivitySaslScram : str, default is Undefined, optional
        A string containing one or more DNS names (or IP addresses) and SASL SCRAM port pairs for VPC connectivity. AWS may not always return all endpoints so the values may not be stable across applies.
    bootstrapBrokersVpcConnectivityTls : str, default is Undefined, optional
        A string containing one or more DNS names (or IP addresses) and TLS port pairs for VPC connectivity. AWS may not always return all endpoints so the values may not be stable across applies.
    brokerNodeGroupInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0], default is Undefined, optional
        Configuration block for the broker nodes of the Kafka cluster.
    clientAuthentication : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0], default is Undefined, optional
        Configuration block for specifying a client authentication. See below.
    clusterName : str, default is Undefined, optional
        Name of the MSK cluster.
    clusterUuid : str, default is Undefined, optional
        UUID of the MSK cluster, for use in IAM policies.
    configurationInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderConfigurationInfoItems0], default is Undefined, optional
        Configuration block for specifying a MSK Configuration to attach to Kafka brokers. See below.
    currentVersion : str, default is Undefined, optional
        Current version of the MSK Cluster used for updates, e.g., K13V1IB3VIYZZH
    encryptionInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionInfoItems0], default is Undefined, optional
        Configuration block for specifying encryption. See below.
    enhancedMonitoring : str, default is Undefined, optional
        Specify the desired enhanced MSK CloudWatch monitoring level. See Monitoring Amazon MSK with Amazon CloudWatch
    id : str, default is Undefined, optional
        id
    kafkaVersion : str, default is Undefined, optional
        Specify the desired Kafka software version.
    loggingInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0], default is Undefined, optional
        Configuration block for streaming broker logs to Cloudwatch/S3/Kinesis Firehose. See below.
    numberOfBrokerNodes : float, default is Undefined, optional
        The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.
    openMonitoring : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0], default is Undefined, optional
        Configuration block for JMX and Node monitoring for the MSK cluster. See below.
    storageMode : str, default is Undefined, optional
        Controls storage mode for supported storage tiers. Valid values are: LOCAL or TIERED.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    zookeeperConnectString : str, default is Undefined, optional
        A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.
    zookeeperConnectStringTls : str, default is Undefined, optional
        A comma separated list of one or more hostname:port pairs to use to connect to the Apache Zookeeper cluster via TLS. The returned values are sorted alphabetically. The AWS API may not return all endpoints, so this value is not guaranteed to be stable across applies.
    """


    arn?: str

    bootstrapBrokers?: str

    bootstrapBrokersPublicSaslIam?: str

    bootstrapBrokersPublicSaslScram?: str

    bootstrapBrokersPublicTls?: str

    bootstrapBrokersSaslIam?: str

    bootstrapBrokersSaslScram?: str

    bootstrapBrokersTls?: str

    bootstrapBrokersVpcConnectivitySaslIam?: str

    bootstrapBrokersVpcConnectivitySaslScram?: str

    bootstrapBrokersVpcConnectivityTls?: str

    brokerNodeGroupInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0]

    clientAuthentication?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0]

    clusterName?: str

    clusterUuid?: str

    configurationInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderConfigurationInfoItems0]

    currentVersion?: str

    encryptionInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionInfoItems0]

    enhancedMonitoring?: str

    id?: str

    kafkaVersion?: str

    loggingInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0]

    numberOfBrokerNodes?: float

    openMonitoring?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0]

    storageMode?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    zookeeperConnectString?: str

    zookeeperConnectStringTls?: str


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0

    Attributes
    ----------
    azDistribution : str, default is Undefined, optional
        The distribution of broker nodes across availability zones (documentation). Currently the only valid value is DEFAULT.
    clientSubnets : [str], default is Undefined, optional
        A list of subnets to connect to in client VPC (documentation).
    connectivityInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0], default is Undefined, optional
        Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible (documentation).
    instanceType : str, default is Undefined, optional
        Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. (Pricing info)
    securityGroups : [str], default is Undefined, optional
        A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
    storageInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0], default is Undefined, optional
        A block that contains information about storage volumes attached to MSK broker nodes. See below.
    """


    azDistribution?: str

    clientSubnets?: [str]

    connectivityInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0]

    instanceType?: str

    securityGroups?: [str]

    storageInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 connectivity info items0

    Attributes
    ----------
    publicAccess : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0], default is Undefined, optional
        Access control settings for brokers. See below.
    vpcConnectivity : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0], default is Undefined, optional
        VPC connectivity access control for brokers. See below.
    """


    publicAccess?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0]

    vpcConnectivity?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0PublicAccessItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 connectivity info items0 public access items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Public access type. Valid values: DISABLED, SERVICE_PROVIDED_EIPS.
    """


    $type?: str


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 connectivity info items0 vpc connectivity items0

    Attributes
    ----------
    clientAuthentication : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0], default is Undefined, optional
        Configuration block for specifying a client authentication. See below.
    """


    clientAuthentication?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 connectivity info items0 vpc connectivity items0 client authentication items0

    Attributes
    ----------
    sasl : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0], default is Undefined, optional
        SASL authentication type details for VPC connectivity. See below.
    tls : bool, default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    """


    sasl?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0]

    tls?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0ConnectivityInfoItems0VpcConnectivityItems0ClientAuthenticationItems0SaslItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 connectivity info items0 vpc connectivity items0 client authentication items0 sasl items0

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 storage info items0

    Attributes
    ----------
    ebsStorageInfo : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0], default is Undefined, optional
        A block that contains EBS volume information. See below.
    """


    ebsStorageInfo?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 storage info items0 ebs storage info items0

    Attributes
    ----------
    provisionedThroughput : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0], default is Undefined, optional
        A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
    volumeSize : float, default is Undefined, optional
        The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of 1 and maximum value of 16384.
    """


    provisionedThroughput?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0]

    volumeSize?: float


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderBrokerNodeGroupInfoItems0StorageInfoItems0EbsStorageInfoItems0ProvisionedThroughputItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider broker node group info items0 storage info items0 ebs storage info items0 provisioned throughput items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    volumeThroughput : float, default is Undefined, optional
        Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is 250. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following documentation on throughput bottlenecks
    """


    enabled?: bool

    volumeThroughput?: float


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider client authentication items0

    Attributes
    ----------
    sasl : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0SaslItems0], default is Undefined, optional
        SASL authentication type details for VPC connectivity. See below.
    tls : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0TLSItems0], default is Undefined, optional
        Enables TLS authentication for VPC connectivity.
    unauthenticated : bool, default is Undefined, optional
        Enables unauthenticated access.
    """


    sasl?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0SaslItems0]

    tls?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0TLSItems0]

    unauthenticated?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0SaslItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider client authentication items0 sasl items0

    Attributes
    ----------
    iam : bool, default is Undefined, optional
        Enables SASL/IAM authentication for VPC connectivity.
    scram : bool, default is Undefined, optional
        Enables SASL/SCRAM authentication for VPC connectivity.
    """


    iam?: bool

    scram?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderClientAuthenticationItems0TLSItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider client authentication items0 TLS items0

    Attributes
    ----------
    certificateAuthorityArns : [str], default is Undefined, optional
        List of ACM Certificate Authority Amazon Resource Names (ARNs).
    """


    certificateAuthorityArns?: [str]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderConfigurationInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider configuration info items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
    revision : float, default is Undefined, optional
        Revision of the MSK Configuration to use in the cluster.
    """


    arn?: str

    revision?: float


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider encryption info items0

    Attributes
    ----------
    encryptionAtRestKmsKeyArn : str, default is Undefined, optional
        The ARN of the KMS key used for encryption at rest of the broker data volumes.
    encryptionInTransit : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionInfoItems0EncryptionInTransitItems0], default is Undefined, optional
        Configuration block to specify encryption in transit. See below.
    """


    encryptionAtRestKmsKeyArn?: str

    encryptionInTransit?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionInfoItems0EncryptionInTransitItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderEncryptionInfoItems0EncryptionInTransitItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider encryption info items0 encryption in transit items0

    Attributes
    ----------
    clientBroker : str, default is Undefined, optional
        Encryption setting for data in transit between clients and brokers. Valid values: TLS, TLS_PLAINTEXT, and PLAINTEXT. Default value is TLS.
    inCluster : bool, default is Undefined, optional
        Whether data communication among broker nodes is encrypted. Default value: true.
    """


    clientBroker?: str

    inCluster?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider logging info items0

    Attributes
    ----------
    brokerLogs : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0], default is Undefined, optional
        Configuration block for Broker Logs settings for logging info. See below.
    """


    brokerLogs?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider logging info items0 broker logs items0

    Attributes
    ----------
    cloudwatchLogs : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0], default is Undefined, optional
        cloudwatch logs
    firehose : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0], default is Undefined, optional
        firehose
    s3 : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0S3Items0], default is Undefined, optional
        s3
    """


    cloudwatchLogs?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0]

    firehose?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0]

    s3?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0S3Items0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0CloudwatchLogsItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider logging info items0 broker logs items0 cloudwatch logs items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    logGroup : str, default is Undefined, optional
        Name of the Cloudwatch Log Group to deliver logs to.
    """


    enabled?: bool

    logGroup?: str


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0FirehoseItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider logging info items0 broker logs items0 firehose items0

    Attributes
    ----------
    deliveryStream : str, default is Undefined, optional
        Name of the Kinesis Data Firehose delivery stream to deliver logs to.
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    """


    deliveryStream?: str

    enabled?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderLoggingInfoItems0BrokerLogsItems0S3Items0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider logging info items0 broker logs items0 s3 items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Name of the S3 bucket to deliver logs to.
    enabled : bool, default is Undefined, optional
        Controls whether provisioned throughput is enabled or not. Default value: false.
    prefix : str, default is Undefined, optional
        Prefix to append to the folder name.
    """


    bucket?: str

    enabled?: bool

    prefix?: str


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider open monitoring items0

    Attributes
    ----------
    prometheus : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0], default is Undefined, optional
        Configuration block for Prometheus settings for open monitoring. See below.
    """


    prometheus?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider open monitoring items0 prometheus items0

    Attributes
    ----------
    jmxExporter : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0], default is Undefined, optional
        Configuration block for JMX Exporter. See below.
    nodeExporter : [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0], default is Undefined, optional
        Configuration block for Node Exporter. See below.
    """


    jmxExporter?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0]

    nodeExporter?: [KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0]


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0JmxExporterItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider open monitoring items0 prometheus items0 jmx exporter items0

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusAtProviderOpenMonitoringItems0PrometheusItems0NodeExporterItems0:
    r"""
    kafka aws upbound io v1beta2 cluster status at provider open monitoring items0 prometheus items0 node exporter items0

    Attributes
    ----------
    enabledInBroker : bool, default is Undefined, optional
        Indicates whether you want to enable or disable the JMX Exporter.
    """


    enabledInBroker?: bool


schema KafkaAwsUpboundIoV1beta2ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


