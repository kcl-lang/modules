"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Activation:
    r"""
    Activation is the Schema for the Activations API. Registers an on-premises server or virtual machine with Amazon EC2 so that it can be managed using Run Command.

    Attributes
    ----------
    apiVersion : str, default is "ssm.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Activation", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SsmAwsUpboundIoV1beta1ActivationSpec, default is Undefined, required
        spec
    status : SsmAwsUpboundIoV1beta1ActivationStatus, default is Undefined, optional
        status
    """


    apiVersion: "ssm.aws.upbound.io/v1beta1" = "ssm.aws.upbound.io/v1beta1"

    kind: "Activation" = "Activation"

    metadata?: v1.ObjectMeta

    spec: SsmAwsUpboundIoV1beta1ActivationSpec

    status?: SsmAwsUpboundIoV1beta1ActivationStatus


schema SsmAwsUpboundIoV1beta1ActivationSpec:
    r"""
    ActivationSpec defines the desired state of Activation

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SsmAwsUpboundIoV1beta1ActivationSpecForProvider, default is Undefined, required
        for provider
    initProvider : SsmAwsUpboundIoV1beta1ActivationSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SsmAwsUpboundIoV1beta1ActivationSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SsmAwsUpboundIoV1beta1ActivationSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SsmAwsUpboundIoV1beta1ActivationSpecForProvider

    initProvider?: SsmAwsUpboundIoV1beta1ActivationSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SsmAwsUpboundIoV1beta1ActivationSpecProviderConfigRef

    publishConnectionDetailsTo?: SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SsmAwsUpboundIoV1beta1ActivationSpecWriteConnectionSecretToRef


schema SsmAwsUpboundIoV1beta1ActivationSpecForProvider:
    r"""
    ssm aws upbound io v1beta1 activation spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description of the resource that you want to register.
    expirationDate : str, default is Undefined, optional
        UTC timestamp in RFC3339 format by which this activation request should expire. The default value is 24 hours from resource creation time.
    iamRole : str, default is Undefined, optional
        The IAM Role to attach to the managed instance.
    iamRoleRef : SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleRef, default is Undefined, optional
        iam role ref
    iamRoleSelector : SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleSelector, default is Undefined, optional
        iam role selector
    name : str, default is Undefined, optional
        The default name of the registered managed instance.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    registrationLimit : float, default is Undefined, optional
        The maximum number of managed instances you want to register. The default value is 1 instance.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    expirationDate?: str

    iamRole?: str

    iamRoleRef?: SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleRef

    iamRoleSelector?: SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleSelector

    name?: str

    region: str

    registrationLimit?: float

    tags?: {str:str}


schema SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleRef:
    r"""
    Reference to a Role in iam to populate iamRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleRefPolicy


schema SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleSelector:
    r"""
    Selector for a Role in iam to populate iamRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleSelectorPolicy


schema SsmAwsUpboundIoV1beta1ActivationSpecForProviderIamRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1ActivationSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description of the resource that you want to register.
    expirationDate : str, default is Undefined, optional
        UTC timestamp in RFC3339 format by which this activation request should expire. The default value is 24 hours from resource creation time.
    iamRole : str, default is Undefined, optional
        The IAM Role to attach to the managed instance.
    iamRoleRef : SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleRef, default is Undefined, optional
        iam role ref
    iamRoleSelector : SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleSelector, default is Undefined, optional
        iam role selector
    name : str, default is Undefined, optional
        The default name of the registered managed instance.
    registrationLimit : float, default is Undefined, optional
        The maximum number of managed instances you want to register. The default value is 1 instance.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    description?: str

    expirationDate?: str

    iamRole?: str

    iamRoleRef?: SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleRef

    iamRoleSelector?: SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleSelector

    name?: str

    registrationLimit?: float

    tags?: {str:str}


schema SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleRef:
    r"""
    Reference to a Role in iam to populate iamRole.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleRefPolicy


schema SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleSelector:
    r"""
    Selector for a Role in iam to populate iamRole.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleSelectorPolicy


schema SsmAwsUpboundIoV1beta1ActivationSpecInitProviderIamRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1ActivationSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1ActivationSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1ActivationSpecProviderConfigRefPolicy


schema SsmAwsUpboundIoV1beta1ActivationSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToConfigRef

    metadata?: SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToMetadata

    name: str


schema SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToConfigRefPolicy


schema SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SsmAwsUpboundIoV1beta1ActivationSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SsmAwsUpboundIoV1beta1ActivationSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SsmAwsUpboundIoV1beta1ActivationStatus:
    r"""
    ActivationStatus defines the observed state of Activation.

    Attributes
    ----------
    atProvider : SsmAwsUpboundIoV1beta1ActivationStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SsmAwsUpboundIoV1beta1ActivationStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SsmAwsUpboundIoV1beta1ActivationStatusAtProvider

    conditions?: [SsmAwsUpboundIoV1beta1ActivationStatusConditionsItems0]

    observedGeneration?: int


schema SsmAwsUpboundIoV1beta1ActivationStatusAtProvider:
    r"""
    ssm aws upbound io v1beta1 activation status at provider

    Attributes
    ----------
    activationCode : str, default is Undefined, optional
        The code the system generates when it processes the activation.
    description : str, default is Undefined, optional
        The description of the resource that you want to register.
    expirationDate : str, default is Undefined, optional
        UTC timestamp in RFC3339 format by which this activation request should expire. The default value is 24 hours from resource creation time.
    expired : bool, default is Undefined, optional
        If the current activation has expired.
    iamRole : str, default is Undefined, optional
        The IAM Role to attach to the managed instance.
    id : str, default is Undefined, optional
        The activation ID.
    name : str, default is Undefined, optional
        The default name of the registered managed instance.
    registrationCount : float, default is Undefined, optional
        The number of managed instances that are currently registered using this activation.
    registrationLimit : float, default is Undefined, optional
        The maximum number of managed instances you want to register. The default value is 1 instance.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    activationCode?: str

    description?: str

    expirationDate?: str

    expired?: bool

    iamRole?: str

    id?: str

    name?: str

    registrationCount?: float

    registrationLimit?: float

    tags?: {str:str}

    tagsAll?: {str:str}


schema SsmAwsUpboundIoV1beta1ActivationStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


