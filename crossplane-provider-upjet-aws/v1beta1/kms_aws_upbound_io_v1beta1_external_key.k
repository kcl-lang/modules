"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ExternalKey:
    r"""
    ExternalKey is the Schema for the ExternalKeys API. Manages a single-Region or multi-Region primary KMS key that uses external key material.

    Attributes
    ----------
    apiVersion : str, default is "kms.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ExternalKey", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmsAwsUpboundIoV1beta1ExternalKeySpec, default is Undefined, required
        spec
    status : KmsAwsUpboundIoV1beta1ExternalKeyStatus, default is Undefined, optional
        status
    """


    apiVersion: "kms.aws.upbound.io/v1beta1" = "kms.aws.upbound.io/v1beta1"

    kind: "ExternalKey" = "ExternalKey"

    metadata?: v1.ObjectMeta

    spec: KmsAwsUpboundIoV1beta1ExternalKeySpec

    status?: KmsAwsUpboundIoV1beta1ExternalKeyStatus


schema KmsAwsUpboundIoV1beta1ExternalKeySpec:
    r"""
    ExternalKeySpec defines the desired state of ExternalKey

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KmsAwsUpboundIoV1beta1ExternalKeySpecForProvider, default is Undefined, required
        for provider
    initProvider : KmsAwsUpboundIoV1beta1ExternalKeySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KmsAwsUpboundIoV1beta1ExternalKeySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KmsAwsUpboundIoV1beta1ExternalKeySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KmsAwsUpboundIoV1beta1ExternalKeySpecForProvider

    initProvider?: KmsAwsUpboundIoV1beta1ExternalKeySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KmsAwsUpboundIoV1beta1ExternalKeySpecProviderConfigRef

    publishConnectionDetailsTo?: KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KmsAwsUpboundIoV1beta1ExternalKeySpecWriteConnectionSecretToRef


schema KmsAwsUpboundIoV1beta1ExternalKeySpecForProvider:
    r"""
    kms aws upbound io v1beta1 external key spec for provider

    Attributes
    ----------
    bypassPolicyLockoutSafetyCheck : bool, default is Undefined, optional
        Specifies whether to disable the policy lockout check performed when creating or updating the key's policy. Setting this value to true increases the risk that the key becomes unmanageable. For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide. Defaults to false.
    deletionWindowInDays : float, default is Undefined, optional
        Duration in days after which the key is deleted after destruction of the resource. Must be between 7 and 30 days. Defaults to 30.
    description : str, default is Undefined, optional
        Description of the key.
    enabled : bool, default is Undefined, optional
        Specifies whether the key is enabled. Keys pending import can only be false. Imported keys default to true unless expired.
    keyMaterialBase64SecretRef : KmsAwsUpboundIoV1beta1ExternalKeySpecForProviderKeyMaterialBase64SecretRef, default is Undefined, optional
        key material base64 secret ref
    multiRegion : bool, default is Undefined, optional
        Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.
    policy : str, default is Undefined, optional
        A key policy JSON document. If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    validTo : str, default is Undefined, optional
        Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)
    """


    bypassPolicyLockoutSafetyCheck?: bool

    deletionWindowInDays?: float

    description?: str

    enabled?: bool

    keyMaterialBase64SecretRef?: KmsAwsUpboundIoV1beta1ExternalKeySpecForProviderKeyMaterialBase64SecretRef

    multiRegion?: bool

    policy?: str

    region: str

    tags?: {str:str}

    validTo?: str


schema KmsAwsUpboundIoV1beta1ExternalKeySpecForProviderKeyMaterialBase64SecretRef:
    r"""
    Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. The same key material can be reimported, but you cannot import different key material.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KmsAwsUpboundIoV1beta1ExternalKeySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    bypassPolicyLockoutSafetyCheck : bool, default is Undefined, optional
        Specifies whether to disable the policy lockout check performed when creating or updating the key's policy. Setting this value to true increases the risk that the key becomes unmanageable. For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide. Defaults to false.
    deletionWindowInDays : float, default is Undefined, optional
        Duration in days after which the key is deleted after destruction of the resource. Must be between 7 and 30 days. Defaults to 30.
    description : str, default is Undefined, optional
        Description of the key.
    enabled : bool, default is Undefined, optional
        Specifies whether the key is enabled. Keys pending import can only be false. Imported keys default to true unless expired.
    keyMaterialBase64SecretRef : KmsAwsUpboundIoV1beta1ExternalKeySpecInitProviderKeyMaterialBase64SecretRef, default is Undefined, optional
        key material base64 secret ref
    multiRegion : bool, default is Undefined, optional
        Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.
    policy : str, default is Undefined, optional
        A key policy JSON document. If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    validTo : str, default is Undefined, optional
        Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)
    """


    bypassPolicyLockoutSafetyCheck?: bool

    deletionWindowInDays?: float

    description?: str

    enabled?: bool

    keyMaterialBase64SecretRef?: KmsAwsUpboundIoV1beta1ExternalKeySpecInitProviderKeyMaterialBase64SecretRef

    multiRegion?: bool

    policy?: str

    tags?: {str:str}

    validTo?: str


schema KmsAwsUpboundIoV1beta1ExternalKeySpecInitProviderKeyMaterialBase64SecretRef:
    r"""
    Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. The same key material can be reimported, but you cannot import different key material.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema KmsAwsUpboundIoV1beta1ExternalKeySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsAwsUpboundIoV1beta1ExternalKeySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsAwsUpboundIoV1beta1ExternalKeySpecProviderConfigRefPolicy


schema KmsAwsUpboundIoV1beta1ExternalKeySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToConfigRef

    metadata?: KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToMetadata

    name: str


schema KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToConfigRefPolicy


schema KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KmsAwsUpboundIoV1beta1ExternalKeySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KmsAwsUpboundIoV1beta1ExternalKeySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KmsAwsUpboundIoV1beta1ExternalKeyStatus:
    r"""
    ExternalKeyStatus defines the observed state of ExternalKey.

    Attributes
    ----------
    atProvider : KmsAwsUpboundIoV1beta1ExternalKeyStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KmsAwsUpboundIoV1beta1ExternalKeyStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KmsAwsUpboundIoV1beta1ExternalKeyStatusAtProvider

    conditions?: [KmsAwsUpboundIoV1beta1ExternalKeyStatusConditionsItems0]

    observedGeneration?: int


schema KmsAwsUpboundIoV1beta1ExternalKeyStatusAtProvider:
    r"""
    kms aws upbound io v1beta1 external key status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the key.
    bypassPolicyLockoutSafetyCheck : bool, default is Undefined, optional
        Specifies whether to disable the policy lockout check performed when creating or updating the key's policy. Setting this value to true increases the risk that the key becomes unmanageable. For more information, refer to the scenario in the Default Key Policy section in the AWS Key Management Service Developer Guide. Defaults to false.
    deletionWindowInDays : float, default is Undefined, optional
        Duration in days after which the key is deleted after destruction of the resource. Must be between 7 and 30 days. Defaults to 30.
    description : str, default is Undefined, optional
        Description of the key.
    enabled : bool, default is Undefined, optional
        Specifies whether the key is enabled. Keys pending import can only be false. Imported keys default to true unless expired.
    expirationModel : str, default is Undefined, optional
        Whether the key material expires. Empty when pending key material import, otherwise KEY_MATERIAL_EXPIRES or KEY_MATERIAL_DOES_NOT_EXPIRE.
    id : str, default is Undefined, optional
        The unique identifier for the key.
    keyState : str, default is Undefined, optional
        The state of the CMK.
    keyUsage : str, default is Undefined, optional
        The cryptographic operations for which you can use the CMK.
    multiRegion : bool, default is Undefined, optional
        Indicates whether the KMS key is a multi-Region (true) or regional (false) key. Defaults to false.
    policy : str, default is Undefined, optional
        A key policy JSON document. If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    validTo : str, default is Undefined, optional
        Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire. Valid values: RFC3339 time string (YYYY-MM-DDTHH:MM:SSZ)
    """


    arn?: str

    bypassPolicyLockoutSafetyCheck?: bool

    deletionWindowInDays?: float

    description?: str

    enabled?: bool

    expirationModel?: str

    id?: str

    keyState?: str

    keyUsage?: str

    multiRegion?: bool

    policy?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    validTo?: str


schema KmsAwsUpboundIoV1beta1ExternalKeyStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


