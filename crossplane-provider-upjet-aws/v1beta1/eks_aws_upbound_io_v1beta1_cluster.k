"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Manages an EKS Cluster

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : EksAwsUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.upbound.io/v1beta1" = "eks.aws.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: EksAwsUpboundIoV1beta1ClusterSpec

    status?: EksAwsUpboundIoV1beta1ClusterStatus


schema EksAwsUpboundIoV1beta1ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EksAwsUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : EksAwsUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EksAwsUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: EksAwsUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EksAwsUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema EksAwsUpboundIoV1beta1ClusterSpecForProvider:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    accessConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderAccessConfigItems0], default is Undefined, optional
        Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.
    bootstrapSelfManagedAddons : bool, default is Undefined, optional
        Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    computeConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderComputeConfigItems0], default is Undefined, optional
        Configuration block with compute configuration for EKS Auto Mode. Detailed below.
    enabledClusterLogTypes : [str], default is Undefined, optional
        List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    encryptionConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderEncryptionConfigItems0], default is Undefined, optional
        Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
    kubernetesNetworkConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderKubernetesNetworkConfigItems0], default is Undefined, optional
        Configuration block with kubernetes network configuration for the cluster. Detailed below.
    outpostConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderOutpostConfigItems0], default is Undefined, optional
        Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    remoteNetworkConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0], default is Undefined, optional
        Configuration block with remote network configuration for EKS Hybrid Nodes. Detailed below.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    roleArnRef : EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    storageConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderStorageConfigItems0], default is Undefined, optional
        Configuration block with storage configuration for EKS Auto Mode. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    upgradePolicy : [EksAwsUpboundIoV1beta1ClusterSpecForProviderUpgradePolicyItems0], default is Undefined, optional
        Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.
    version : str, default is Undefined, optional
        â€“  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    vpcConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0], default is Undefined, optional
        Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
    zonalShiftConfig : [EksAwsUpboundIoV1beta1ClusterSpecForProviderZonalShiftConfigItems0], default is Undefined, optional
        Configuration block with zonal shift configuration for the cluster. Detailed below.
    """


    accessConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderAccessConfigItems0]

    bootstrapSelfManagedAddons?: bool

    computeConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderComputeConfigItems0]

    enabledClusterLogTypes?: [str]

    encryptionConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderEncryptionConfigItems0]

    kubernetesNetworkConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderKubernetesNetworkConfigItems0]

    outpostConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderOutpostConfigItems0]

    region: str

    remoteNetworkConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0]

    roleArn?: str

    roleArnRef?: EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnRef

    roleArnSelector?: EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnSelector

    storageConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderStorageConfigItems0]

    tags?: {str:str}

    upgradePolicy?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderUpgradePolicyItems0]

    version?: str

    vpcConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0]

    zonalShiftConfig?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderZonalShiftConfigItems0]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderAccessConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider access config items0

    Attributes
    ----------
    authenticationMode : str, default is Undefined, optional
        The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    bootstrapClusterCreatorAdminPermissions : bool, default is Undefined, optional
        Whether or not to bootstrap the access config values to the cluster. Default is true.
    """


    authenticationMode?: str

    bootstrapClusterCreatorAdminPermissions?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderComputeConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider compute config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Request to enable or disable the compute capability on your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account.
    nodePools : [str], default is Undefined, optional
        Configuration for node pools that defines the compute resources for your EKS Auto Mode cluster. Valid options are general-purpose and system.
    nodeRoleArn : str, default is Undefined, optional
        The ARN of the IAM Role EKS will assign to EC2 Managed Instances in your EKS Auto Mode cluster. This value cannot be changed after the compute capability of EKS Auto Mode is enabled..
    """


    enabled?: bool

    nodePools?: [str]

    nodeRoleArn?: str


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderEncryptionConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider encryption config items0

    Attributes
    ----------
    provider : [EksAwsUpboundIoV1beta1ClusterSpecForProviderEncryptionConfigItems0ProviderItems0], default is Undefined, optional
        Configuration block with provider for encryption. Detailed below.
    resources : [str], default is Undefined, optional
        List of strings with resources to be encrypted. Valid values: secrets.
    """


    provider?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderEncryptionConfigItems0ProviderItems0]

    resources?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderEncryptionConfigItems0ProviderItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider encryption config items0 provider items0

    Attributes
    ----------
    keyArn : str, default is Undefined, optional
        ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


    keyArn?: str


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderKubernetesNetworkConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider kubernetes network config items0

    Attributes
    ----------
    elasticLoadBalancing : [EksAwsUpboundIoV1beta1ClusterSpecForProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0], default is Undefined, optional
        Configuration block with elastic load balancing configuration for the cluster. Detailed below.
    ipFamily : str, default is Undefined, optional
        The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    serviceIpv4Cidr : str, default is Undefined, optional
        The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    """


    elasticLoadBalancing?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0]

    ipFamily?: str

    serviceIpv4Cidr?: str


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider kubernetes network config items0 elastic load balancing items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderOutpostConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider outpost config items0

    Attributes
    ----------
    controlPlaneInstanceType : str, default is Undefined, optional
        The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    controlPlanePlacement : [EksAwsUpboundIoV1beta1ClusterSpecForProviderOutpostConfigItems0ControlPlanePlacementItems0], default is Undefined, optional
        An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
        The control_plane_placement configuration block supports the following arguments:
    outpostArns : [str], default is Undefined, optional
        The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


    controlPlaneInstanceType?: str

    controlPlanePlacement?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderOutpostConfigItems0ControlPlanePlacementItems0]

    outpostArns?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderOutpostConfigItems0ControlPlanePlacementItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider outpost config items0 control plane placement items0

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


    groupName?: str


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider remote network config items0

    Attributes
    ----------
    remoteNodeNetworks : [EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0], default is Undefined, optional
        Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
    remotePodNetworks : [EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0RemotePodNetworksItems0], default is Undefined, optional
        Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
    """


    remoteNodeNetworks?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0]

    remotePodNetworks?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0RemotePodNetworksItems0]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider remote network config items0 remote node networks items0

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRemoteNetworkConfigItems0RemotePodNetworksItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider remote network config items0 remote pod networks items0

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain pods that run Kubernetes webhooks on hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnRefPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderStorageConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider storage config items0

    Attributes
    ----------
    blockStorage : [EksAwsUpboundIoV1beta1ClusterSpecForProviderStorageConfigItems0BlockStorageItems0], default is Undefined, optional
        block storage
    """


    blockStorage?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderStorageConfigItems0BlockStorageItems0]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderStorageConfigItems0BlockStorageItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider storage config items0 block storage items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderUpgradePolicyItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider upgrade policy items0

    Attributes
    ----------
    supportType : str, default is Undefined, optional
        Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


    supportType?: str


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider vpc config items0

    Attributes
    ----------
    endpointPrivateAccess : bool, default is Undefined, optional
        Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    endpointPublicAccess : bool, default is Undefined, optional
        Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    index : str, default is "0", optional
        This is an injected field with a default value for being able to merge items of the parent object list.
    publicAccessCidrs : [str], default is Undefined, optional
        List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    securityGroupIdRefs : [EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    subnetIdRefs : [EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """


    endpointPrivateAccess?: bool

    endpointPublicAccess?: bool

    index?: str = "0"

    publicAccessCidrs?: [str]

    securityGroupIdRefs?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDRefsItems0]

    securityGroupIdSelector?: EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDSelector

    securityGroupIds?: [str]

    subnetIdRefs?: [EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDRefsItems0]

    subnetIdSelector?: EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDSelector

    subnetIds?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderVpcConfigItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecForProviderZonalShiftConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec for provider zonal shift config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderAccessConfigItems0], default is Undefined, optional
        Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.
    bootstrapSelfManagedAddons : bool, default is Undefined, optional
        Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    computeConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderComputeConfigItems0], default is Undefined, optional
        Configuration block with compute configuration for EKS Auto Mode. Detailed below.
    enabledClusterLogTypes : [str], default is Undefined, optional
        List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    encryptionConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderEncryptionConfigItems0], default is Undefined, optional
        Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
    kubernetesNetworkConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderKubernetesNetworkConfigItems0], default is Undefined, optional
        Configuration block with kubernetes network configuration for the cluster. Detailed below.
    outpostConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderOutpostConfigItems0], default is Undefined, optional
        Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.
    remoteNetworkConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0], default is Undefined, optional
        Configuration block with remote network configuration for EKS Hybrid Nodes. Detailed below.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    roleArnRef : EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    storageConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderStorageConfigItems0], default is Undefined, optional
        Configuration block with storage configuration for EKS Auto Mode. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    upgradePolicy : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderUpgradePolicyItems0], default is Undefined, optional
        Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.
    version : str, default is Undefined, optional
        â€“  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    vpcConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0], default is Undefined, optional
        Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
    zonalShiftConfig : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderZonalShiftConfigItems0], default is Undefined, optional
        Configuration block with zonal shift configuration for the cluster. Detailed below.
    """


    accessConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderAccessConfigItems0]

    bootstrapSelfManagedAddons?: bool

    computeConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderComputeConfigItems0]

    enabledClusterLogTypes?: [str]

    encryptionConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderEncryptionConfigItems0]

    kubernetesNetworkConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderKubernetesNetworkConfigItems0]

    outpostConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderOutpostConfigItems0]

    remoteNetworkConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0]

    roleArn?: str

    roleArnRef?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnRef

    roleArnSelector?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnSelector

    storageConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderStorageConfigItems0]

    tags?: {str:str}

    upgradePolicy?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderUpgradePolicyItems0]

    version?: str

    vpcConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0]

    zonalShiftConfig?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderZonalShiftConfigItems0]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderAccessConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider access config items0

    Attributes
    ----------
    authenticationMode : str, default is Undefined, optional
        The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    bootstrapClusterCreatorAdminPermissions : bool, default is Undefined, optional
        Whether or not to bootstrap the access config values to the cluster. Default is true.
    """


    authenticationMode?: str

    bootstrapClusterCreatorAdminPermissions?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderComputeConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider compute config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Request to enable or disable the compute capability on your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account.
    nodePools : [str], default is Undefined, optional
        Configuration for node pools that defines the compute resources for your EKS Auto Mode cluster. Valid options are general-purpose and system.
    nodeRoleArn : str, default is Undefined, optional
        The ARN of the IAM Role EKS will assign to EC2 Managed Instances in your EKS Auto Mode cluster. This value cannot be changed after the compute capability of EKS Auto Mode is enabled..
    """


    enabled?: bool

    nodePools?: [str]

    nodeRoleArn?: str


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderEncryptionConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider encryption config items0

    Attributes
    ----------
    provider : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderEncryptionConfigItems0ProviderItems0], default is Undefined, optional
        Configuration block with provider for encryption. Detailed below.
    resources : [str], default is Undefined, optional
        List of strings with resources to be encrypted. Valid values: secrets.
    """


    provider?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderEncryptionConfigItems0ProviderItems0]

    resources?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderEncryptionConfigItems0ProviderItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider encryption config items0 provider items0

    Attributes
    ----------
    keyArn : str, default is Undefined, optional
        ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


    keyArn?: str


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderKubernetesNetworkConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider kubernetes network config items0

    Attributes
    ----------
    elasticLoadBalancing : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0], default is Undefined, optional
        Configuration block with elastic load balancing configuration for the cluster. Detailed below.
    ipFamily : str, default is Undefined, optional
        The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    serviceIpv4Cidr : str, default is Undefined, optional
        The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    """


    elasticLoadBalancing?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0]

    ipFamily?: str

    serviceIpv4Cidr?: str


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider kubernetes network config items0 elastic load balancing items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderOutpostConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider outpost config items0

    Attributes
    ----------
    controlPlaneInstanceType : str, default is Undefined, optional
        The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    controlPlanePlacement : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderOutpostConfigItems0ControlPlanePlacementItems0], default is Undefined, optional
        An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
        The control_plane_placement configuration block supports the following arguments:
    outpostArns : [str], default is Undefined, optional
        The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


    controlPlaneInstanceType?: str

    controlPlanePlacement?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderOutpostConfigItems0ControlPlanePlacementItems0]

    outpostArns?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderOutpostConfigItems0ControlPlanePlacementItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider outpost config items0 control plane placement items0

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


    groupName?: str


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider remote network config items0

    Attributes
    ----------
    remoteNodeNetworks : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0], default is Undefined, optional
        Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
    remotePodNetworks : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0RemotePodNetworksItems0], default is Undefined, optional
        Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
    """


    remoteNodeNetworks?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0]

    remotePodNetworks?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0RemotePodNetworksItems0]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider remote network config items0 remote node networks items0

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRemoteNetworkConfigItems0RemotePodNetworksItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider remote network config items0 remote pod networks items0

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain pods that run Kubernetes webhooks on hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnRefPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderStorageConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider storage config items0

    Attributes
    ----------
    blockStorage : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderStorageConfigItems0BlockStorageItems0], default is Undefined, optional
        block storage
    """


    blockStorage?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderStorageConfigItems0BlockStorageItems0]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderStorageConfigItems0BlockStorageItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider storage config items0 block storage items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderUpgradePolicyItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider upgrade policy items0

    Attributes
    ----------
    supportType : str, default is Undefined, optional
        Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


    supportType?: str


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider vpc config items0

    Attributes
    ----------
    endpointPrivateAccess : bool, default is Undefined, optional
        Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    endpointPublicAccess : bool, default is Undefined, optional
        Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    index : str, default is "0", optional
        This is an injected field with a default value for being able to merge items of the parent object list.
    publicAccessCidrs : [str], default is Undefined, optional
        List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    securityGroupIdRefs : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    subnetIdRefs : [EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDRefsItems0], default is Undefined, optional
        References to Subnet in ec2 to populate subnetIds.
    subnetIdSelector : EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDSelector, default is Undefined, optional
        subnet Id selector
    subnetIds : [str], default is Undefined, optional
        account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    """


    endpointPrivateAccess?: bool

    endpointPublicAccess?: bool

    index?: str = "0"

    publicAccessCidrs?: [str]

    securityGroupIdRefs?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDRefsItems0]

    securityGroupIdSelector?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDSelector

    securityGroupIds?: [str]

    subnetIdRefs?: [EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDRefsItems0]

    subnetIdSelector?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDSelector

    subnetIds?: [str]


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDRefsItems0Policy


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDSelector:
    r"""
    Selector for a list of Subnet in ec2 to populate subnetIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDSelectorPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderVpcConfigItems0SubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecInitProviderZonalShiftConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster spec init provider zonal shift config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsUpboundIoV1beta1ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : EksAwsUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EksAwsUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [EksAwsUpboundIoV1beta1ClusterStatusConditionsItems0]

    observedGeneration?: int


schema EksAwsUpboundIoV1beta1ClusterStatusAtProvider:
    r"""
    eks aws upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    accessConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderAccessConfigItems0], default is Undefined, optional
        Configuration block for the access config associated with your cluster, see Amazon EKS Access Entries.
    arn : str, default is Undefined, optional
        ARN of the cluster.
    bootstrapSelfManagedAddons : bool, default is Undefined, optional
        Install default unmanaged add-ons, such as aws-cni, kube-proxy, and CoreDNS during cluster creation. If false, you must manually install desired add-ons. Changing this value will force a new cluster to be created. Defaults to true.
    certificateAuthority : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderCertificateAuthorityItems0], default is Undefined, optional
        Attribute block containing certificate-authority-data for your cluster. Detailed below.
    clusterId : str, default is Undefined, optional
        The ID of your local Amazon EKS cluster on the AWS Outpost. This attribute isn't available for an AWS EKS cluster on AWS cloud.
    computeConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderComputeConfigItems0], default is Undefined, optional
        Configuration block with compute configuration for EKS Auto Mode. Detailed below.
    createdAt : str, default is Undefined, optional
        Unix epoch timestamp in seconds for when the cluster was created.
    enabledClusterLogTypes : [str], default is Undefined, optional
        List of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging.
    encryptionConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderEncryptionConfigItems0], default is Undefined, optional
        Configuration block with encryption configuration for the cluster. Only available on Kubernetes 1.13 and above clusters created after March 6, 2020. Detailed below.
    endpoint : str, default is Undefined, optional
        Endpoint for your Kubernetes API server.
    id : str, default is Undefined, optional
        Name of the cluster.
    identity : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderIdentityItems0], default is Undefined, optional
        Attribute block containing identity provider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded on or after September 3, 2019. Detailed below.
    kubernetesNetworkConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderKubernetesNetworkConfigItems0], default is Undefined, optional
        Configuration block with kubernetes network configuration for the cluster. Detailed below.
    outpostConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderOutpostConfigItems0], default is Undefined, optional
        Configuration block representing the configuration of your local Amazon EKS cluster on an AWS Outpost. This block isn't available for creating Amazon EKS clusters on the AWS cloud.
    platformVersion : str, default is Undefined, optional
        Platform version for the cluster.
    remoteNetworkConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0], default is Undefined, optional
        Configuration block with remote network configuration for EKS Hybrid Nodes. Detailed below.
    roleArn : str, default is Undefined, optional
        ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding depends_on if using the aws_iam_role_policy resource or aws_iam_role_policy_attachment resource, otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.
    status : str, default is Undefined, optional
        Status of the EKS cluster. One of CREATING, ACTIVE, DELETING, FAILED.
    storageConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderStorageConfigItems0], default is Undefined, optional
        Configuration block with storage configuration for EKS Auto Mode. Detailed below.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    upgradePolicy : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderUpgradePolicyItems0], default is Undefined, optional
        Configuration block for the support policy to use for the cluster.  See upgrade_policy for details.
    version : str, default is Undefined, optional
        â€“  Desired Kubernetes master version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except those automatically triggered by EKS. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by EKS.
    vpcConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderVpcConfigItems0], default is Undefined, optional
        Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see Cluster VPC Considerations and Cluster Security Group Considerations in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section.
    zonalShiftConfig : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderZonalShiftConfigItems0], default is Undefined, optional
        Configuration block with zonal shift configuration for the cluster. Detailed below.
    """


    accessConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderAccessConfigItems0]

    arn?: str

    bootstrapSelfManagedAddons?: bool

    certificateAuthority?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderCertificateAuthorityItems0]

    clusterId?: str

    computeConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderComputeConfigItems0]

    createdAt?: str

    enabledClusterLogTypes?: [str]

    encryptionConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderEncryptionConfigItems0]

    endpoint?: str

    id?: str

    identity?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderIdentityItems0]

    kubernetesNetworkConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderKubernetesNetworkConfigItems0]

    outpostConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderOutpostConfigItems0]

    platformVersion?: str

    remoteNetworkConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0]

    roleArn?: str

    status?: str

    storageConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderStorageConfigItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    upgradePolicy?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderUpgradePolicyItems0]

    version?: str

    vpcConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderVpcConfigItems0]

    zonalShiftConfig?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderZonalShiftConfigItems0]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderAccessConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider access config items0

    Attributes
    ----------
    authenticationMode : str, default is Undefined, optional
        The authentication mode for the cluster. Valid values are CONFIG_MAP, API or API_AND_CONFIG_MAP
    bootstrapClusterCreatorAdminPermissions : bool, default is Undefined, optional
        Whether or not to bootstrap the access config values to the cluster. Default is true.
    """


    authenticationMode?: str

    bootstrapClusterCreatorAdminPermissions?: bool


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderCertificateAuthorityItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider certificate authority items0

    Attributes
    ----------
    data : str, default is Undefined, optional
        Base64 encoded certificate data required to communicate with your cluster. Add this to the certificate-authority-data section of the kubeconfig file for your cluster.
    """


    data?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderComputeConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider compute config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Request to enable or disable the compute capability on your EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon Web Services account.
    nodePools : [str], default is Undefined, optional
        Configuration for node pools that defines the compute resources for your EKS Auto Mode cluster. Valid options are general-purpose and system.
    nodeRoleArn : str, default is Undefined, optional
        The ARN of the IAM Role EKS will assign to EC2 Managed Instances in your EKS Auto Mode cluster. This value cannot be changed after the compute capability of EKS Auto Mode is enabled..
    """


    enabled?: bool

    nodePools?: [str]

    nodeRoleArn?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderEncryptionConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider encryption config items0

    Attributes
    ----------
    provider : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderEncryptionConfigItems0ProviderItems0], default is Undefined, optional
        Configuration block with provider for encryption. Detailed below.
    resources : [str], default is Undefined, optional
        List of strings with resources to be encrypted. Valid values: secrets.
    """


    provider?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderEncryptionConfigItems0ProviderItems0]

    resources?: [str]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderEncryptionConfigItems0ProviderItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider encryption config items0 provider items0

    Attributes
    ----------
    keyArn : str, default is Undefined, optional
        ARN of the Key Management Service (KMS) customer master key (CMK). The CMK must be symmetric, created in the same region as the cluster, and if the CMK was created in a different account, the user must have access to the CMK. For more information, see Allowing Users in Other Accounts to Use a CMK in the AWS Key Management Service Developer Guide.
    """


    keyArn?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderIdentityItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider identity items0

    Attributes
    ----------
    oidc : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderIdentityItems0OidcItems0], default is Undefined, optional
        Nested block containing OpenID Connect identity provider information for the cluster. Detailed below.
    """


    oidc?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderIdentityItems0OidcItems0]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderIdentityItems0OidcItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider identity items0 oidc items0

    Attributes
    ----------
    issuer : str, default is Undefined, optional
        Issuer URL for the OpenID Connect identity provider.
    """


    issuer?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderKubernetesNetworkConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider kubernetes network config items0

    Attributes
    ----------
    elasticLoadBalancing : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0], default is Undefined, optional
        Configuration block with elastic load balancing configuration for the cluster. Detailed below.
    ipFamily : str, default is Undefined, optional
        The IP family used to assign Kubernetes pod and service addresses. Valid values are ipv4 (default) and ipv6. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
    serviceIpv4Cidr : str, default is Undefined, optional
        The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
    serviceIpv6Cidr : str, default is Undefined, optional
        The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specified ipv6 for ipFamily when you created the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
    """


    elasticLoadBalancing?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0]

    ipFamily?: str

    serviceIpv4Cidr?: str

    serviceIpv6Cidr?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderKubernetesNetworkConfigItems0ElasticLoadBalancingItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider kubernetes network config items0 elastic load balancing items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderOutpostConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider outpost config items0

    Attributes
    ----------
    controlPlaneInstanceType : str, default is Undefined, optional
        The Amazon EC2 instance type that you want to use for your local Amazon EKS cluster on Outposts. The instance type that you specify is used for all Kubernetes control plane instances. The instance type can't be changed after cluster creation. Choose an instance type based on the number of nodes that your cluster will have. If your cluster will have:
    controlPlanePlacement : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderOutpostConfigItems0ControlPlanePlacementItems0], default is Undefined, optional
        An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
        The control_plane_placement configuration block supports the following arguments:
    outpostArns : [str], default is Undefined, optional
        The ARN of the Outpost that you want to use for your local Amazon EKS cluster on Outposts. This argument is a list of arns, but only a single Outpost ARN is supported currently.
    """


    controlPlaneInstanceType?: str

    controlPlanePlacement?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderOutpostConfigItems0ControlPlanePlacementItems0]

    outpostArns?: [str]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderOutpostConfigItems0ControlPlanePlacementItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider outpost config items0 control plane placement items0

    Attributes
    ----------
    groupName : str, default is Undefined, optional
        The name of the placement group for the Kubernetes control plane instances. This setting can't be changed after cluster creation.
    """


    groupName?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider remote network config items0

    Attributes
    ----------
    remoteNodeNetworks : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0], default is Undefined, optional
        Configuration block with remote node network configuration for EKS Hybrid Nodes. Detailed below.
    remotePodNetworks : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0RemotePodNetworksItems0], default is Undefined, optional
        Configuration block with remote pod network configuration for EKS Hybrid Nodes. Detailed below.
    """


    remoteNodeNetworks?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0]

    remotePodNetworks?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0RemotePodNetworksItems0]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0RemoteNodeNetworksItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider remote network config items0 remote node networks items0

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderRemoteNetworkConfigItems0RemotePodNetworksItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider remote network config items0 remote pod networks items0

    Attributes
    ----------
    cidrs : [str], default is Undefined, optional
        List of network CIDRs that can contain pods that run Kubernetes webhooks on hybrid nodes.
    """


    cidrs?: [str]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderStorageConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider storage config items0

    Attributes
    ----------
    blockStorage : [EksAwsUpboundIoV1beta1ClusterStatusAtProviderStorageConfigItems0BlockStorageItems0], default is Undefined, optional
        block storage
    """


    blockStorage?: [EksAwsUpboundIoV1beta1ClusterStatusAtProviderStorageConfigItems0BlockStorageItems0]


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderStorageConfigItems0BlockStorageItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider storage config items0 block storage items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderUpgradePolicyItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider upgrade policy items0

    Attributes
    ----------
    supportType : str, default is Undefined, optional
        Support type to use for the cluster. If the cluster is set to EXTENDED, it will enter extended support at the end of standard support. If the cluster is set to STANDARD, it will be automatically upgraded at the end of standard support. Valid values are EXTENDED, STANDARD
    """


    supportType?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderVpcConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider vpc config items0

    Attributes
    ----------
    clusterSecurityGroupId : str, default is Undefined, optional
        Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication.
    endpointPrivateAccess : bool, default is Undefined, optional
        Whether the Amazon EKS private API server endpoint is enabled. Default is false.
    endpointPublicAccess : bool, default is Undefined, optional
        Whether the Amazon EKS public API server endpoint is enabled. Default is true.
    index : str, default is "0", optional
        This is an injected field with a default value for being able to merge items of the parent object list.
    publicAccessCidrs : [str], default is Undefined, optional
        List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with 0.0.0.0/0.
    securityGroupIds : [str], default is Undefined, optional
        account elastic network interfaces that Amazon EKS creates to use to allow communication between your worker nodes and the Kubernetes control plane.
    subnetIds : [str], default is Undefined, optional
        account elastic network interfaces in these subnets to allow communication between your worker nodes and the Kubernetes control plane.
    vpcId : str, default is Undefined, optional
        ID of the VPC associated with your cluster.
    """


    clusterSecurityGroupId?: str

    endpointPrivateAccess?: bool

    endpointPublicAccess?: bool

    index?: str = "0"

    publicAccessCidrs?: [str]

    securityGroupIds?: [str]

    subnetIds?: [str]

    vpcId?: str


schema EksAwsUpboundIoV1beta1ClusterStatusAtProviderZonalShiftConfigItems0:
    r"""
    eks aws upbound io v1beta1 cluster status at provider zonal shift config items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether zonal shift is enabled for the cluster.
    """


    enabled?: bool


schema EksAwsUpboundIoV1beta1ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


