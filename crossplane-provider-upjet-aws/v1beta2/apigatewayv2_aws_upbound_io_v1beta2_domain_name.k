"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DomainName:
    r"""
    DomainName is the Schema for the DomainNames API. Manages an Amazon API Gateway Version 2 domain name.

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DomainName", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsUpboundIoV1beta2DomainNameStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.upbound.io/v1beta2" = "apigatewayv2.aws.upbound.io/v1beta2"

    kind: "DomainName" = "DomainName"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpec

    status?: Apigatewayv2AwsUpboundIoV1beta2DomainNameStatus


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpec:
    r"""
    DomainNameSpec defines the desired state of DomainName

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProvider, default is Undefined, required
        for provider
    initProvider : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProvider

    initProvider?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecProviderConfigRef

    publishConnectionDetailsTo?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecWriteConnectionSecretToRef


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProvider:
    r"""
    apigatewayv2 aws upbound io v1beta2 domain name spec for provider

    Attributes
    ----------
    domainNameConfiguration : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfiguration, default is Undefined, optional
        domain name configuration
    mutualTlsAuthentication : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderMutualTLSAuthentication, default is Undefined, optional
        mutual Tls authentication
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    domainNameConfiguration?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfiguration

    mutualTlsAuthentication?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderMutualTLSAuthentication

    region: str

    tags?: {str:str}


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfiguration:
    r"""
    Domain name configuration. See below.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the aws_acm_certificate resource to configure an ACM certificate.
    certificateArnRef : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnRef, default is Undefined, optional
        certificate arn ref
    certificateArnSelector : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnSelector, default is Undefined, optional
        certificate arn selector
    endpointType : str, default is Undefined, optional
        Endpoint type. Valid values: REGIONAL.
    ownershipVerificationCertificateArn : str, default is Undefined, optional
        ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)
    securityPolicy : str, default is Undefined, optional
        Transport Layer Security (TLS) version of the security policy for the domain name. Valid values: TLS_1_2.
    """


    certificateArn?: str

    certificateArnRef?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnRef

    certificateArnSelector?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnSelector

    endpointType?: str

    ownershipVerificationCertificateArn?: str

    securityPolicy?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnRef:
    r"""
    Reference to a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnSelector:
    r"""
    Selector for a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderDomainNameConfigurationCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecForProviderMutualTLSAuthentication:
    r"""
    Mutual TLS authentication configuration for the domain name.

    Attributes
    ----------
    truststoreUri : str, default is Undefined, optional
        Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
    truststoreVersion : str, default is Undefined, optional
        Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
    """


    truststoreUri?: str

    truststoreVersion?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    domainNameConfiguration : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfiguration, default is Undefined, optional
        domain name configuration
    mutualTlsAuthentication : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderMutualTLSAuthentication, default is Undefined, optional
        mutual Tls authentication
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    domainNameConfiguration?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfiguration

    mutualTlsAuthentication?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderMutualTLSAuthentication

    tags?: {str:str}


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfiguration:
    r"""
    Domain name configuration. See below.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the aws_acm_certificate resource to configure an ACM certificate.
    certificateArnRef : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnRef, default is Undefined, optional
        certificate arn ref
    certificateArnSelector : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnSelector, default is Undefined, optional
        certificate arn selector
    endpointType : str, default is Undefined, optional
        Endpoint type. Valid values: REGIONAL.
    ownershipVerificationCertificateArn : str, default is Undefined, optional
        ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)
    securityPolicy : str, default is Undefined, optional
        Transport Layer Security (TLS) version of the security policy for the domain name. Valid values: TLS_1_2.
    """


    certificateArn?: str

    certificateArnRef?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnRef

    certificateArnSelector?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnSelector

    endpointType?: str

    ownershipVerificationCertificateArn?: str

    securityPolicy?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnRef:
    r"""
    Reference to a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnSelector:
    r"""
    Selector for a Certificate in acm to populate certificateArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnSelectorPolicy


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderDomainNameConfigurationCertificateArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecInitProviderMutualTLSAuthentication:
    r"""
    Mutual TLS authentication configuration for the domain name.

    Attributes
    ----------
    truststoreUri : str, default is Undefined, optional
        Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
    truststoreVersion : str, default is Undefined, optional
        Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
    """


    truststoreUri?: str

    truststoreVersion?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecProviderConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameStatus:
    r"""
    DomainNameStatus defines the observed state of DomainName.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProvider

    conditions?: [Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusConditionsItems0]

    observedGeneration?: int


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProvider:
    r"""
    apigatewayv2 aws upbound io v1beta2 domain name status at provider

    Attributes
    ----------
    apiMappingSelectionExpression : str, default is Undefined, optional
        API mapping selection expression for the domain name.
    arn : str, default is Undefined, optional
        ARN of the domain name.
    domainNameConfiguration : Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProviderDomainNameConfiguration, default is Undefined, optional
        domain name configuration
    id : str, default is Undefined, optional
        Domain name identifier.
    mutualTlsAuthentication : Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProviderMutualTLSAuthentication, default is Undefined, optional
        mutual Tls authentication
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    apiMappingSelectionExpression?: str

    arn?: str

    domainNameConfiguration?: Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProviderDomainNameConfiguration

    id?: str

    mutualTlsAuthentication?: Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProviderMutualTLSAuthentication

    tags?: {str:str}

    tagsAll?: {str:str}


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProviderDomainNameConfiguration:
    r"""
    Domain name configuration. See below.

    Attributes
    ----------
    certificateArn : str, default is Undefined, optional
        ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the aws_acm_certificate resource to configure an ACM certificate.
    endpointType : str, default is Undefined, optional
        Endpoint type. Valid values: REGIONAL.
    hostedZoneId : str, default is Undefined, optional
        (Computed) Amazon Route 53 Hosted Zone ID of the endpoint.
    ownershipVerificationCertificateArn : str, default is Undefined, optional
        ARN of the AWS-issued certificate used to validate custom domain ownership (when certificate_arn is issued via an ACM Private CA or mutual_tls_authentication is configured with an ACM-imported certificate.)
    securityPolicy : str, default is Undefined, optional
        Transport Layer Security (TLS) version of the security policy for the domain name. Valid values: TLS_1_2.
    targetDomainName : str, default is Undefined, optional
        (Computed) Target domain name.
    """


    certificateArn?: str

    endpointType?: str

    hostedZoneId?: str

    ownershipVerificationCertificateArn?: str

    securityPolicy?: str

    targetDomainName?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusAtProviderMutualTLSAuthentication:
    r"""
    Mutual TLS authentication configuration for the domain name.

    Attributes
    ----------
    truststoreUri : str, default is Undefined, optional
        Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, s3://bucket-name/key-name. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
    truststoreVersion : str, default is Undefined, optional
        Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
    """


    truststoreUri?: str

    truststoreVersion?: str


schema Apigatewayv2AwsUpboundIoV1beta2DomainNameStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


