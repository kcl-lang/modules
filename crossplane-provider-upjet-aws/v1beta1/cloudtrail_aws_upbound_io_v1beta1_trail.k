"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Trail:
    r"""
    Trail is the Schema for the Trails API. Provides a CloudTrail resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudtrail.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Trail", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudtrailAwsUpboundIoV1beta1TrailSpec, default is Undefined, required
        spec
    status : CloudtrailAwsUpboundIoV1beta1TrailStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudtrail.aws.upbound.io/v1beta1" = "cloudtrail.aws.upbound.io/v1beta1"

    kind: "Trail" = "Trail"

    metadata?: v1.ObjectMeta

    spec: CloudtrailAwsUpboundIoV1beta1TrailSpec

    status?: CloudtrailAwsUpboundIoV1beta1TrailStatus


schema CloudtrailAwsUpboundIoV1beta1TrailSpec:
    r"""
    TrailSpec defines the desired state of Trail

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudtrailAwsUpboundIoV1beta1TrailSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudtrailAwsUpboundIoV1beta1TrailSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudtrailAwsUpboundIoV1beta1TrailSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudtrailAwsUpboundIoV1beta1TrailSpecForProvider

    initProvider?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecWriteConnectionSecretToRef


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProvider:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec for provider

    Attributes
    ----------
    advancedEventSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderAdvancedEventSelectorItems0], default is Undefined, optional
        Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.
    cloudWatchLogsGroupArn : str, default is Undefined, optional
        Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.
    cloudWatchLogsRoleArn : str, default is Undefined, optional
        Role for the CloudWatch Logs endpoint to assume to write to a userâ€™s log group.
    cloudWatchLogsRoleArnRef : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnRef, default is Undefined, optional
        cloud watch logs role arn ref
    cloudWatchLogsRoleArnSelector : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnSelector, default is Undefined, optional
        cloud watch logs role arn selector
    enableLogFileValidation : bool, default is Undefined, optional
        Whether log file integrity validation is enabled. Defaults to false.
    enableLogging : bool, default is Undefined, optional
        Enables logging for the trail. Defaults to true. Setting this to false will pause logging.
    eventSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderEventSelectorItems0], default is Undefined, optional
        Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.
    includeGlobalServiceEvents : bool, default is Undefined, optional
        Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.
    insightSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderInsightSelectorItems0], default is Undefined, optional
        Configuration block for identifying unusual operational activity. See details below.
    isMultiRegionTrail : bool, default is Undefined, optional
        Whether the trail is created in the current region or in all regions. Defaults to false.
    isOrganizationTrail : bool, default is Undefined, optional
        Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.
    kmsKeyId : str, default is Undefined, optional
        KMS key ARN to use to encrypt the logs delivered by CloudTrail.
    kmsKeyIdRef : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket designated for publishing log files.
    s3BucketNameRef : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameRef, default is Undefined, optional
        s3 bucket name ref
    s3BucketNameSelector : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameSelector, default is Undefined, optional
        s3 bucket name selector
    s3KeyPrefix : str, default is Undefined, optional
        S3 key prefix that follows the name of the bucket you have designated for log file delivery.
    snsTopicName : str, default is Undefined, optional
        Name of the Amazon SNS topic defined for notification of log file delivery.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    advancedEventSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderAdvancedEventSelectorItems0]

    cloudWatchLogsGroupArn?: str

    cloudWatchLogsRoleArn?: str

    cloudWatchLogsRoleArnRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnRef

    cloudWatchLogsRoleArnSelector?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnSelector

    enableLogFileValidation?: bool

    enableLogging?: bool

    eventSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderEventSelectorItems0]

    includeGlobalServiceEvents?: bool

    insightSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderInsightSelectorItems0]

    isMultiRegionTrail?: bool

    isOrganizationTrail?: bool

    kmsKeyId?: str

    kmsKeyIdRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDSelector

    region: str

    s3BucketName?: str

    s3BucketNameRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameRef

    s3BucketNameSelector?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameSelector

    s3KeyPrefix?: str

    snsTopicName?: str

    tags?: {str:str}


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderAdvancedEventSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec for provider advanced event selector items0

    Attributes
    ----------
    fieldSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderAdvancedEventSelectorItems0FieldSelectorItems0], default is Undefined, optional
        Specifies the selector statements in an advanced event selector. Fields documented below.
    name : str, default is Undefined, optional
        Name of the trail.
    """


    fieldSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderAdvancedEventSelectorItems0FieldSelectorItems0]

    name?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderAdvancedEventSelectorItems0FieldSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec for provider advanced event selector items0 field selector items0

    Attributes
    ----------
    endsWith : [str], default is Undefined, optional
        A list of values that includes events that match the last few characters of the event record field specified as the value of field.
    equals : [str], default is Undefined, optional
        A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
    field : str, default is Undefined, optional
        Field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.
    notEndsWith : [str], default is Undefined, optional
        A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
    notEquals : [str], default is Undefined, optional
        A list of values that excludes events that match the exact value of the event record field specified as the value of field.
    notStartsWith : [str], default is Undefined, optional
        A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
    startsWith : [str], default is Undefined, optional
        A list of values that includes events that match the first few characters of the event record field specified as the value of field.
    """


    endsWith?: [str]

    equals?: [str]

    field?: str

    notEndsWith?: [str]

    notEquals?: [str]

    notStartsWith?: [str]

    startsWith?: [str]


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnRef:
    r"""
    Reference to a Role in iam to populate cloudWatchLogsRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate cloudWatchLogsRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnSelectorPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderCloudWatchLogsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderEventSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec for provider event selector items0

    Attributes
    ----------
    dataResource : [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderEventSelectorItems0DataResourceItems0], default is Undefined, optional
        Configuration block for data events. See details below.
    excludeManagementEventSources : [str], default is Undefined, optional
        A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.
    includeManagementEvents : bool, default is Undefined, optional
        Whether to include management events for your trail. Defaults to true.
    readWriteType : str, default is Undefined, optional
        Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.
    """


    dataResource?: [CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderEventSelectorItems0DataResourceItems0]

    excludeManagementEventSources?: [str]

    includeManagementEvents?: bool

    readWriteType?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderEventSelectorItems0DataResourceItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec for provider event selector items0 data resource items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".
    values : [str], default is Undefined, optional
        List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.
    """


    $type?: str

    values?: [str]


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderInsightSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec for provider insight selector items0

    Attributes
    ----------
    insightType : str, default is Undefined, optional
        Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.
    """


    insightType?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDSelectorPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameRef:
    r"""
    Reference to a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameSelector:
    r"""
    Selector for a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameSelectorPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecForProviderS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    advancedEventSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderAdvancedEventSelectorItems0], default is Undefined, optional
        Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.
    cloudWatchLogsGroupArn : str, default is Undefined, optional
        Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.
    cloudWatchLogsRoleArn : str, default is Undefined, optional
        Role for the CloudWatch Logs endpoint to assume to write to a userâ€™s log group.
    cloudWatchLogsRoleArnRef : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnRef, default is Undefined, optional
        cloud watch logs role arn ref
    cloudWatchLogsRoleArnSelector : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnSelector, default is Undefined, optional
        cloud watch logs role arn selector
    enableLogFileValidation : bool, default is Undefined, optional
        Whether log file integrity validation is enabled. Defaults to false.
    enableLogging : bool, default is Undefined, optional
        Enables logging for the trail. Defaults to true. Setting this to false will pause logging.
    eventSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderEventSelectorItems0], default is Undefined, optional
        Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.
    includeGlobalServiceEvents : bool, default is Undefined, optional
        Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.
    insightSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderInsightSelectorItems0], default is Undefined, optional
        Configuration block for identifying unusual operational activity. See details below.
    isMultiRegionTrail : bool, default is Undefined, optional
        Whether the trail is created in the current region or in all regions. Defaults to false.
    isOrganizationTrail : bool, default is Undefined, optional
        Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.
    kmsKeyId : str, default is Undefined, optional
        KMS key ARN to use to encrypt the logs delivered by CloudTrail.
    kmsKeyIdRef : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket designated for publishing log files.
    s3BucketNameRef : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameRef, default is Undefined, optional
        s3 bucket name ref
    s3BucketNameSelector : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameSelector, default is Undefined, optional
        s3 bucket name selector
    s3KeyPrefix : str, default is Undefined, optional
        S3 key prefix that follows the name of the bucket you have designated for log file delivery.
    snsTopicName : str, default is Undefined, optional
        Name of the Amazon SNS topic defined for notification of log file delivery.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    advancedEventSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderAdvancedEventSelectorItems0]

    cloudWatchLogsGroupArn?: str

    cloudWatchLogsRoleArn?: str

    cloudWatchLogsRoleArnRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnRef

    cloudWatchLogsRoleArnSelector?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnSelector

    enableLogFileValidation?: bool

    enableLogging?: bool

    eventSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderEventSelectorItems0]

    includeGlobalServiceEvents?: bool

    insightSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderInsightSelectorItems0]

    isMultiRegionTrail?: bool

    isOrganizationTrail?: bool

    kmsKeyId?: str

    kmsKeyIdRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDSelector

    s3BucketName?: str

    s3BucketNameRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameRef

    s3BucketNameSelector?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameSelector

    s3KeyPrefix?: str

    snsTopicName?: str

    tags?: {str:str}


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderAdvancedEventSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec init provider advanced event selector items0

    Attributes
    ----------
    fieldSelector : [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderAdvancedEventSelectorItems0FieldSelectorItems0], default is Undefined, optional
        Specifies the selector statements in an advanced event selector. Fields documented below.
    name : str, default is Undefined, optional
        Name of the trail.
    """


    fieldSelector?: [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderAdvancedEventSelectorItems0FieldSelectorItems0]

    name?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderAdvancedEventSelectorItems0FieldSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec init provider advanced event selector items0 field selector items0

    Attributes
    ----------
    endsWith : [str], default is Undefined, optional
        A list of values that includes events that match the last few characters of the event record field specified as the value of field.
    equals : [str], default is Undefined, optional
        A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
    field : str, default is Undefined, optional
        Field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.
    notEndsWith : [str], default is Undefined, optional
        A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
    notEquals : [str], default is Undefined, optional
        A list of values that excludes events that match the exact value of the event record field specified as the value of field.
    notStartsWith : [str], default is Undefined, optional
        A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
    startsWith : [str], default is Undefined, optional
        A list of values that includes events that match the first few characters of the event record field specified as the value of field.
    """


    endsWith?: [str]

    equals?: [str]

    field?: str

    notEndsWith?: [str]

    notEquals?: [str]

    notStartsWith?: [str]

    startsWith?: [str]


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnRef:
    r"""
    Reference to a Role in iam to populate cloudWatchLogsRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate cloudWatchLogsRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnSelectorPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderCloudWatchLogsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderEventSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec init provider event selector items0

    Attributes
    ----------
    dataResource : [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderEventSelectorItems0DataResourceItems0], default is Undefined, optional
        Configuration block for data events. See details below.
    excludeManagementEventSources : [str], default is Undefined, optional
        A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.
    includeManagementEvents : bool, default is Undefined, optional
        Whether to include management events for your trail. Defaults to true.
    readWriteType : str, default is Undefined, optional
        Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.
    """


    dataResource?: [CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderEventSelectorItems0DataResourceItems0]

    excludeManagementEventSources?: [str]

    includeManagementEvents?: bool

    readWriteType?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderEventSelectorItems0DataResourceItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec init provider event selector items0 data resource items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".
    values : [str], default is Undefined, optional
        List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.
    """


    $type?: str

    values?: [str]


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderInsightSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail spec init provider insight selector items0

    Attributes
    ----------
    insightType : str, default is Undefined, optional
        Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.
    """


    insightType?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDSelectorPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameRef:
    r"""
    Reference to a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameSelector:
    r"""
    Selector for a Bucket in s3 to populate s3BucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameSelectorPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecInitProviderS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecProviderConfigRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudtrailAwsUpboundIoV1beta1TrailSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudtrailAwsUpboundIoV1beta1TrailSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudtrailAwsUpboundIoV1beta1TrailStatus:
    r"""
    TrailStatus defines the observed state of Trail.

    Attributes
    ----------
    atProvider : CloudtrailAwsUpboundIoV1beta1TrailStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudtrailAwsUpboundIoV1beta1TrailStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudtrailAwsUpboundIoV1beta1TrailStatusAtProvider

    conditions?: [CloudtrailAwsUpboundIoV1beta1TrailStatusConditionsItems0]

    observedGeneration?: int


schema CloudtrailAwsUpboundIoV1beta1TrailStatusAtProvider:
    r"""
    cloudtrail aws upbound io v1beta1 trail status at provider

    Attributes
    ----------
    advancedEventSelector : [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderAdvancedEventSelectorItems0], default is Undefined, optional
        Specifies an advanced event selector for enabling data event logging. Fields documented below. Conflicts with event_selector.
    arn : str, default is Undefined, optional
        ARN of the trail.
    cloudWatchLogsGroupArn : str, default is Undefined, optional
        Log group name using an ARN that represents the log group to which CloudTrail logs will be delivered. Note that CloudTrail requires the Log Stream wildcard.
    cloudWatchLogsRoleArn : str, default is Undefined, optional
        Role for the CloudWatch Logs endpoint to assume to write to a userâ€™s log group.
    enableLogFileValidation : bool, default is Undefined, optional
        Whether log file integrity validation is enabled. Defaults to false.
    enableLogging : bool, default is Undefined, optional
        Enables logging for the trail. Defaults to true. Setting this to false will pause logging.
    eventSelector : [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderEventSelectorItems0], default is Undefined, optional
        Specifies an event selector for enabling data event logging. Fields documented below. Please note the CloudTrail limits when configuring these. Conflicts with advanced_event_selector.
    homeRegion : str, default is Undefined, optional
        Region in which the trail was created.
    id : str, default is Undefined, optional
        ARN of the trail.
    includeGlobalServiceEvents : bool, default is Undefined, optional
        Whether the trail is publishing events from global services such as IAM to the log files. Defaults to true.
    insightSelector : [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderInsightSelectorItems0], default is Undefined, optional
        Configuration block for identifying unusual operational activity. See details below.
    isMultiRegionTrail : bool, default is Undefined, optional
        Whether the trail is created in the current region or in all regions. Defaults to false.
    isOrganizationTrail : bool, default is Undefined, optional
        Whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to false.
    kmsKeyId : str, default is Undefined, optional
        KMS key ARN to use to encrypt the logs delivered by CloudTrail.
    s3BucketName : str, default is Undefined, optional
        Name of the S3 bucket designated for publishing log files.
    s3KeyPrefix : str, default is Undefined, optional
        S3 key prefix that follows the name of the bucket you have designated for log file delivery.
    snsTopicName : str, default is Undefined, optional
        Name of the Amazon SNS topic defined for notification of log file delivery.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    advancedEventSelector?: [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderAdvancedEventSelectorItems0]

    arn?: str

    cloudWatchLogsGroupArn?: str

    cloudWatchLogsRoleArn?: str

    enableLogFileValidation?: bool

    enableLogging?: bool

    eventSelector?: [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderEventSelectorItems0]

    homeRegion?: str

    id?: str

    includeGlobalServiceEvents?: bool

    insightSelector?: [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderInsightSelectorItems0]

    isMultiRegionTrail?: bool

    isOrganizationTrail?: bool

    kmsKeyId?: str

    s3BucketName?: str

    s3KeyPrefix?: str

    snsTopicName?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderAdvancedEventSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail status at provider advanced event selector items0

    Attributes
    ----------
    fieldSelector : [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderAdvancedEventSelectorItems0FieldSelectorItems0], default is Undefined, optional
        Specifies the selector statements in an advanced event selector. Fields documented below.
    name : str, default is Undefined, optional
        Name of the trail.
    """


    fieldSelector?: [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderAdvancedEventSelectorItems0FieldSelectorItems0]

    name?: str


schema CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderAdvancedEventSelectorItems0FieldSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail status at provider advanced event selector items0 field selector items0

    Attributes
    ----------
    endsWith : [str], default is Undefined, optional
        A list of values that includes events that match the last few characters of the event record field specified as the value of field.
    equals : [str], default is Undefined, optional
        A list of values that includes events that match the exact value of the event record field specified as the value of field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
    field : str, default is Undefined, optional
        Field in an event record on which to filter events to be logged. You can specify only the following values: readOnly, eventSource, eventName, eventCategory, resources.type, resources.ARN.
    notEndsWith : [str], default is Undefined, optional
        A list of values that excludes events that match the last few characters of the event record field specified as the value of field.
    notEquals : [str], default is Undefined, optional
        A list of values that excludes events that match the exact value of the event record field specified as the value of field.
    notStartsWith : [str], default is Undefined, optional
        A list of values that excludes events that match the first few characters of the event record field specified as the value of field.
    startsWith : [str], default is Undefined, optional
        A list of values that includes events that match the first few characters of the event record field specified as the value of field.
    """


    endsWith?: [str]

    equals?: [str]

    field?: str

    notEndsWith?: [str]

    notEquals?: [str]

    notStartsWith?: [str]

    startsWith?: [str]


schema CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderEventSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail status at provider event selector items0

    Attributes
    ----------
    dataResource : [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderEventSelectorItems0DataResourceItems0], default is Undefined, optional
        Configuration block for data events. See details below.
    excludeManagementEventSources : [str], default is Undefined, optional
        A set of event sources to exclude. Valid values include: kms.amazonaws.com and rdsdata.amazonaws.com. include_management_events must be set totrue to allow this.
    includeManagementEvents : bool, default is Undefined, optional
        Whether to include management events for your trail. Defaults to true.
    readWriteType : str, default is Undefined, optional
        Type of events to log. Valid values are ReadOnly, WriteOnly, All. Default value is All.
    """


    dataResource?: [CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderEventSelectorItems0DataResourceItems0]

    excludeManagementEventSources?: [str]

    includeManagementEvents?: bool

    readWriteType?: str


schema CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderEventSelectorItems0DataResourceItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail status at provider event selector items0 data resource items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function" and "AWS::DynamoDB::Table".
    values : [str], default is Undefined, optional
        List of ARN strings or partial ARN strings to specify selectors for data audit events over data resources. ARN list is specific to single-valued type. For example, arn:aws:s3:::<bucket name>/ for all objects in a bucket, arn:aws:s3:::<bucket name>/key for specific objects, arn:aws:lambda for all lambda events within an account, arn:aws:lambda:<region>:<account number>:function:<function name> for a specific Lambda function, arn:aws:dynamodb for all DDB events for all tables within an account, or arn:aws:dynamodb:<region>:<account number>:table/<table name> for a specific DynamoDB table.
    """


    $type?: str

    values?: [str]


schema CloudtrailAwsUpboundIoV1beta1TrailStatusAtProviderInsightSelectorItems0:
    r"""
    cloudtrail aws upbound io v1beta1 trail status at provider insight selector items0

    Attributes
    ----------
    insightType : str, default is Undefined, optional
        Type of insights to log on a trail. Valid values are: ApiCallRateInsight and ApiErrorRateInsight.
    """


    insightType?: str


schema CloudtrailAwsUpboundIoV1beta1TrailStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


