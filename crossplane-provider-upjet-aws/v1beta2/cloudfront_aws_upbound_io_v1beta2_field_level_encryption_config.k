"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema FieldLevelEncryptionConfig:
    r"""
    FieldLevelEncryptionConfig is the Schema for the FieldLevelEncryptionConfigs API. Provides a CloudFront Field-level Encryption Config resource.

    Attributes
    ----------
    apiVersion : str, default is "cloudfront.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "FieldLevelEncryptionConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpec, default is Undefined, required
        spec
    status : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudfront.aws.upbound.io/v1beta2" = "cloudfront.aws.upbound.io/v1beta2"

    kind: "FieldLevelEncryptionConfig" = "FieldLevelEncryptionConfig"

    metadata?: v1.ObjectMeta

    spec: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpec

    status?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatus


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpec:
    r"""
    FieldLevelEncryptionConfigSpec defines the desired state of FieldLevelEncryptionConfig

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProvider, default is Undefined, required
        for provider
    initProvider : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProvider

    initProvider?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecProviderConfigRef

    publishConnectionDetailsTo?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecWriteConnectionSecretToRef


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProvider:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config spec for provider

    Attributes
    ----------
    comment : str, default is Undefined, optional
        An optional comment about the Field Level Encryption Config.
    contentTypeProfileConfig : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfig, default is Undefined, optional
        content type profile config
    queryArgProfileConfig : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfig, default is Undefined, optional
        query arg profile config
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    comment?: str

    contentTypeProfileConfig?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfig

    queryArgProfileConfig?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfig

    region: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfig:
    r"""
    Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.

    Attributes
    ----------
    contentTypeProfiles : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfigContentTypeProfiles, default is Undefined, optional
        content type profiles
    forwardWhenContentTypeIsUnknown : bool, default is Undefined, optional
        specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
    """


    contentTypeProfiles?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfigContentTypeProfiles

    forwardWhenContentTypeIsUnknown?: bool


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfigContentTypeProfiles:
    r"""
    Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.

    Attributes
    ----------
    items : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfigContentTypeProfilesItemsItems0], default is Undefined, optional
        items
    """


    items?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfigContentTypeProfilesItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderContentTypeProfileConfigContentTypeProfilesItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config spec for provider content type profile config content type profiles items items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.
    format : str, default is Undefined, optional
        The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.
    profileId : str, default is Undefined, optional
        The profile ID for a field-level encryption content type-profile mapping.
    """


    contentType?: str

    format?: str

    profileId?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfig:
    r"""
    Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.

    Attributes
    ----------
    forwardWhenQueryArgProfileIsUnknown : bool, default is Undefined, optional
        Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
    queryArgProfiles : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfiles, default is Undefined, optional
        query arg profiles
    """


    forwardWhenQueryArgProfileIsUnknown?: bool

    queryArgProfiles?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfiles


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfiles:
    r"""
    Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.

    Attributes
    ----------
    items : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0], default is Undefined, optional
        items
    """


    items?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config spec for provider query arg profile config query arg profiles items items0

    Attributes
    ----------
    profileId : str, default is Undefined, optional
        The profile ID for a field-level encryption content type-profile mapping.
    profileIdRef : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRef, default is Undefined, optional
        profile Id ref
    profileIdSelector : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelector, default is Undefined, optional
        profile Id selector
    queryArg : str, default is Undefined, optional
        Query argument for field-level encryption query argument-profile mapping.
    """


    profileId?: str

    profileIdRef?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRef

    profileIdSelector?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelector

    queryArg?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRef:
    r"""
    Reference to a FieldLevelEncryptionProfile in cloudfront to populate profileId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRefPolicy


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelector:
    r"""
    Selector for a FieldLevelEncryptionProfile in cloudfront to populate profileId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecForProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    comment : str, default is Undefined, optional
        An optional comment about the Field Level Encryption Config.
    contentTypeProfileConfig : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfig, default is Undefined, optional
        content type profile config
    queryArgProfileConfig : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfig, default is Undefined, optional
        query arg profile config
    """


    comment?: str

    contentTypeProfileConfig?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfig

    queryArgProfileConfig?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfig


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfig:
    r"""
    Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.

    Attributes
    ----------
    contentTypeProfiles : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfigContentTypeProfiles, default is Undefined, optional
        content type profiles
    forwardWhenContentTypeIsUnknown : bool, default is Undefined, optional
        specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
    """


    contentTypeProfiles?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfigContentTypeProfiles

    forwardWhenContentTypeIsUnknown?: bool


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfigContentTypeProfiles:
    r"""
    Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.

    Attributes
    ----------
    items : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfigContentTypeProfilesItemsItems0], default is Undefined, optional
        items
    """


    items?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfigContentTypeProfilesItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderContentTypeProfileConfigContentTypeProfilesItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config spec init provider content type profile config content type profiles items items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.
    format : str, default is Undefined, optional
        The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.
    profileId : str, default is Undefined, optional
        The profile ID for a field-level encryption content type-profile mapping.
    """


    contentType?: str

    format?: str

    profileId?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfig:
    r"""
    Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.

    Attributes
    ----------
    forwardWhenQueryArgProfileIsUnknown : bool, default is Undefined, optional
        Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
    queryArgProfiles : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfiles, default is Undefined, optional
        query arg profiles
    """


    forwardWhenQueryArgProfileIsUnknown?: bool

    queryArgProfiles?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfiles


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfiles:
    r"""
    Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.

    Attributes
    ----------
    items : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0], default is Undefined, optional
        items
    """


    items?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config spec init provider query arg profile config query arg profiles items items0

    Attributes
    ----------
    profileId : str, default is Undefined, optional
        The profile ID for a field-level encryption content type-profile mapping.
    profileIdRef : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRef, default is Undefined, optional
        profile Id ref
    profileIdSelector : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelector, default is Undefined, optional
        profile Id selector
    queryArg : str, default is Undefined, optional
        Query argument for field-level encryption query argument-profile mapping.
    """


    profileId?: str

    profileIdRef?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRef

    profileIdSelector?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelector

    queryArg?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRef:
    r"""
    Reference to a FieldLevelEncryptionProfile in cloudfront to populate profileId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRefPolicy


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelector:
    r"""
    Selector for a FieldLevelEncryptionProfile in cloudfront to populate profileId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelectorPolicy


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecInitProviderQueryArgProfileConfigQueryArgProfilesItemsItems0ProfileIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecProviderConfigRefPolicy


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToConfigRef

    metadata?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToMetadata

    name: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToConfigRefPolicy


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatus:
    r"""
    FieldLevelEncryptionConfigStatus defines the observed state of FieldLevelEncryptionConfig.

    Attributes
    ----------
    atProvider : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProvider

    conditions?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusConditionsItems0]

    observedGeneration?: int


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProvider:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config status at provider

    Attributes
    ----------
    callerReference : str, default is Undefined, optional
        Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.
    comment : str, default is Undefined, optional
        An optional comment about the Field Level Encryption Config.
    contentTypeProfileConfig : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfig, default is Undefined, optional
        content type profile config
    etag : str, default is Undefined, optional
        The current version of the Field Level Encryption Config. For example: E2QWRUHAPOMQZL.
    id : str, default is Undefined, optional
        The identifier for the Field Level Encryption Config. For example: K3D5EWEUDCCXON.
    queryArgProfileConfig : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfig, default is Undefined, optional
        query arg profile config
    """


    callerReference?: str

    comment?: str

    contentTypeProfileConfig?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfig

    etag?: str

    id?: str

    queryArgProfileConfig?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfig


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfig:
    r"""
    Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.

    Attributes
    ----------
    contentTypeProfiles : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfigContentTypeProfiles, default is Undefined, optional
        content type profiles
    forwardWhenContentTypeIsUnknown : bool, default is Undefined, optional
        specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.
    """


    contentTypeProfiles?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfigContentTypeProfiles

    forwardWhenContentTypeIsUnknown?: bool


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfigContentTypeProfiles:
    r"""
    Object that contains an attribute items that contains the list of configurations for a field-level encryption content type-profile. See Content Type Profile.

    Attributes
    ----------
    items : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfigContentTypeProfilesItemsItems0], default is Undefined, optional
        items
    """


    items?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfigContentTypeProfilesItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderContentTypeProfileConfigContentTypeProfilesItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config status at provider content type profile config content type profiles items items0

    Attributes
    ----------
    contentType : str, default is Undefined, optional
        he content type for a field-level encryption content type-profile mapping. Valid value is application/x-www-form-urlencoded.
    format : str, default is Undefined, optional
        The format for a field-level encryption content type-profile mapping. Valid value is URLEncoded.
    profileId : str, default is Undefined, optional
        The profile ID for a field-level encryption content type-profile mapping.
    """


    contentType?: str

    format?: str

    profileId?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfig:
    r"""
    Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.

    Attributes
    ----------
    forwardWhenQueryArgProfileIsUnknown : bool, default is Undefined, optional
        Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.
    queryArgProfiles : CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfigQueryArgProfiles, default is Undefined, optional
        query arg profiles
    """


    forwardWhenQueryArgProfileIsUnknown?: bool

    queryArgProfiles?: CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfigQueryArgProfiles


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfigQueryArgProfiles:
    r"""
    Object that contains an attribute items that contains the list ofrofiles specified for query argument-profile mapping for field-level encryption. see Query Arg Profile.

    Attributes
    ----------
    items : [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfigQueryArgProfilesItemsItems0], default is Undefined, optional
        items
    """


    items?: [CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfigQueryArgProfilesItemsItems0]


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusAtProviderQueryArgProfileConfigQueryArgProfilesItemsItems0:
    r"""
    cloudfront aws upbound io v1beta2 field level encryption config status at provider query arg profile config query arg profiles items items0

    Attributes
    ----------
    profileId : str, default is Undefined, optional
        The profile ID for a field-level encryption content type-profile mapping.
    queryArg : str, default is Undefined, optional
        Query argument for field-level encryption query argument-profile mapping.
    """


    profileId?: str

    queryArg?: str


schema CloudfrontAwsUpboundIoV1beta2FieldLevelEncryptionConfigStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


