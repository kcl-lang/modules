"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema EmailIdentity:
    r"""
    EmailIdentity is the Schema for the EmailIdentitys API.

    Attributes
    ----------
    apiVersion : str, default is "sesv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "EmailIdentity", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Sesv2AwsUpboundIoV1beta1EmailIdentitySpec, default is Undefined, required
        spec
    status : Sesv2AwsUpboundIoV1beta1EmailIdentityStatus, default is Undefined, optional
        status
    """


    apiVersion: "sesv2.aws.upbound.io/v1beta1" = "sesv2.aws.upbound.io/v1beta1"

    kind: "EmailIdentity" = "EmailIdentity"

    metadata?: v1.ObjectMeta

    spec: Sesv2AwsUpboundIoV1beta1EmailIdentitySpec

    status?: Sesv2AwsUpboundIoV1beta1EmailIdentityStatus


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpec:
    r"""
    EmailIdentitySpec defines the desired state of EmailIdentity

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProvider, default is Undefined, required
        for provider
    initProvider : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProvider

    initProvider?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecProviderConfigRef

    publishConnectionDetailsTo?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecWriteConnectionSecretToRef


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProvider:
    r"""
    sesv2 aws upbound io v1beta1 email identity spec for provider

    Attributes
    ----------
    configurationSetName : str, default is Undefined, optional
        The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
    configurationSetNameRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameRef, default is Undefined, optional
        configuration set name ref
    configurationSetNameSelector : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameSelector, default is Undefined, optional
        configuration set name selector
    dkimSigningAttributes : [Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderDkimSigningAttributesItems0], default is Undefined, optional
        The configuration of the DKIM authentication settings for an email domain identity.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    configurationSetName?: str

    configurationSetNameRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameRef

    configurationSetNameSelector?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameSelector

    dkimSigningAttributes?: [Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderDkimSigningAttributesItems0]

    region: str

    tags?: {str:str}


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameRef:
    r"""
    Reference to a ConfigurationSet in sesv2 to populate configurationSetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameRefPolicy


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameSelector:
    r"""
    Selector for a ConfigurationSet in sesv2 to populate configurationSetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameSelectorPolicy


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderConfigurationSetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderDkimSigningAttributesItems0:
    r"""
    sesv2 aws upbound io v1beta1 email identity spec for provider dkim signing attributes items0

    Attributes
    ----------
    domainSigningPrivateKeySecretRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderDkimSigningAttributesItems0DomainSigningPrivateKeySecretRef, default is Undefined, optional
        domain signing private key secret ref
    domainSigningSelector : str, default is Undefined, optional
        [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
    nextSigningKeyLength : str, default is Undefined, optional
        [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: RSA_1024_BIT, RSA_2048_BIT.
    """


    domainSigningPrivateKeySecretRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderDkimSigningAttributesItems0DomainSigningPrivateKeySecretRef

    domainSigningSelector?: str

    nextSigningKeyLength?: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecForProviderDkimSigningAttributesItems0DomainSigningPrivateKeySecretRef:
    r"""
    [Bring Your Own DKIM] A private key that's used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    configurationSetName : str, default is Undefined, optional
        The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
    configurationSetNameRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameRef, default is Undefined, optional
        configuration set name ref
    configurationSetNameSelector : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameSelector, default is Undefined, optional
        configuration set name selector
    dkimSigningAttributes : [Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderDkimSigningAttributesItems0], default is Undefined, optional
        The configuration of the DKIM authentication settings for an email domain identity.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    configurationSetName?: str

    configurationSetNameRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameRef

    configurationSetNameSelector?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameSelector

    dkimSigningAttributes?: [Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderDkimSigningAttributesItems0]

    tags?: {str:str}


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameRef:
    r"""
    Reference to a ConfigurationSet in sesv2 to populate configurationSetName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameRefPolicy


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameSelector:
    r"""
    Selector for a ConfigurationSet in sesv2 to populate configurationSetName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameSelectorPolicy


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderConfigurationSetNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderDkimSigningAttributesItems0:
    r"""
    sesv2 aws upbound io v1beta1 email identity spec init provider dkim signing attributes items0

    Attributes
    ----------
    domainSigningPrivateKeySecretRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderDkimSigningAttributesItems0DomainSigningPrivateKeySecretRef, default is Undefined, optional
        domain signing private key secret ref
    domainSigningSelector : str, default is Undefined, optional
        [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
    nextSigningKeyLength : str, default is Undefined, optional
        [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: RSA_1024_BIT, RSA_2048_BIT.
    """


    domainSigningPrivateKeySecretRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderDkimSigningAttributesItems0DomainSigningPrivateKeySecretRef

    domainSigningSelector?: str

    nextSigningKeyLength?: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecInitProviderDkimSigningAttributesItems0DomainSigningPrivateKeySecretRef:
    r"""
    [Bring Your Own DKIM] A private key that's used to generate a DKIM signature. The private key must use 1024 or 2048-bit RSA encryption, and must be encoded using base64 encoding.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecProviderConfigRefPolicy


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToConfigRef

    metadata?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToMetadata

    name: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToConfigRefPolicy


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentitySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Sesv2AwsUpboundIoV1beta1EmailIdentityStatus:
    r"""
    EmailIdentityStatus defines the observed state of EmailIdentity.

    Attributes
    ----------
    atProvider : Sesv2AwsUpboundIoV1beta1EmailIdentityStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Sesv2AwsUpboundIoV1beta1EmailIdentityStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Sesv2AwsUpboundIoV1beta1EmailIdentityStatusAtProvider

    conditions?: [Sesv2AwsUpboundIoV1beta1EmailIdentityStatusConditionsItems0]

    observedGeneration?: int


schema Sesv2AwsUpboundIoV1beta1EmailIdentityStatusAtProvider:
    r"""
    sesv2 aws upbound io v1beta1 email identity status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the Email Identity.
    configurationSetName : str, default is Undefined, optional
        The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
    dkimSigningAttributes : [Sesv2AwsUpboundIoV1beta1EmailIdentityStatusAtProviderDkimSigningAttributesItems0], default is Undefined, optional
        The configuration of the DKIM authentication settings for an email domain identity.
    id : str, default is Undefined, optional
        id
    identityType : str, default is Undefined, optional
        The email identity type. Valid values: EMAIL_ADDRESS, DOMAIN.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    verifiedForSendingStatus : bool, default is Undefined, optional
        Specifies whether or not the identity is verified.
    """


    arn?: str

    configurationSetName?: str

    dkimSigningAttributes?: [Sesv2AwsUpboundIoV1beta1EmailIdentityStatusAtProviderDkimSigningAttributesItems0]

    id?: str

    identityType?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    verifiedForSendingStatus?: bool


schema Sesv2AwsUpboundIoV1beta1EmailIdentityStatusAtProviderDkimSigningAttributesItems0:
    r"""
    sesv2 aws upbound io v1beta1 email identity status at provider dkim signing attributes items0

    Attributes
    ----------
    currentSigningKeyLength : str, default is Undefined, optional
        [Easy DKIM] The key length of the DKIM key pair in use.
    domainSigningSelector : str, default is Undefined, optional
        [Bring Your Own DKIM] A string that's used to identify a public key in the DNS configuration for a domain.
    lastKeyGenerationTimestamp : str, default is Undefined, optional
        [Easy DKIM] The last time a key pair was generated for this identity.
    nextSigningKeyLength : str, default is Undefined, optional
        [Easy DKIM] The key length of the future DKIM key pair to be generated. This can be changed at most once per day. Valid values: RSA_1024_BIT, RSA_2048_BIT.
    signingAttributesOrigin : str, default is Undefined, optional
        A string that indicates how DKIM was configured for the identity. AWS_SES indicates that DKIM was configured for the identity by using Easy DKIM. EXTERNAL indicates that DKIM was configured for the identity by using Bring Your Own DKIM (BYODKIM).
    status : str, default is Undefined, optional
        Describes whether or not Amazon SES has successfully located the DKIM records in the DNS records for the domain. See the AWS SES API v2 Reference for supported statuses.
    tokens : [str], default is Undefined, optional
        If you used Easy DKIM to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete. If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector for the public key.
    """


    currentSigningKeyLength?: str

    domainSigningSelector?: str

    lastKeyGenerationTimestamp?: str

    nextSigningKeyLength?: str

    signingAttributesOrigin?: str

    status?: str

    tokens?: [str]


schema Sesv2AwsUpboundIoV1beta1EmailIdentityStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


