"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AccessPoint:
    r"""
    AccessPoint is the Schema for the AccessPoints API. Provides an Elastic File System (EFS) access point.

    Attributes
    ----------
    apiVersion : str, default is "efs.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AccessPoint", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EfsAwsUpboundIoV1beta2AccessPointSpec, default is Undefined, required
        spec
    status : EfsAwsUpboundIoV1beta2AccessPointStatus, default is Undefined, optional
        status
    """


    apiVersion: "efs.aws.upbound.io/v1beta2" = "efs.aws.upbound.io/v1beta2"

    kind: "AccessPoint" = "AccessPoint"

    metadata?: v1.ObjectMeta

    spec: EfsAwsUpboundIoV1beta2AccessPointSpec

    status?: EfsAwsUpboundIoV1beta2AccessPointStatus


schema EfsAwsUpboundIoV1beta2AccessPointSpec:
    r"""
    AccessPointSpec defines the desired state of AccessPoint

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EfsAwsUpboundIoV1beta2AccessPointSpecForProvider, default is Undefined, required
        for provider
    initProvider : EfsAwsUpboundIoV1beta2AccessPointSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EfsAwsUpboundIoV1beta2AccessPointSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EfsAwsUpboundIoV1beta2AccessPointSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EfsAwsUpboundIoV1beta2AccessPointSpecForProvider

    initProvider?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EfsAwsUpboundIoV1beta2AccessPointSpecProviderConfigRef

    publishConnectionDetailsTo?: EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EfsAwsUpboundIoV1beta2AccessPointSpecWriteConnectionSecretToRef


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProvider:
    r"""
    efs aws upbound io v1beta2 access point spec for provider

    Attributes
    ----------
    fileSystemId : str, default is Undefined, optional
        ID of the file system for which the access point is intended.
    fileSystemIdRef : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDRef, default is Undefined, optional
        file system Id ref
    fileSystemIdSelector : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDSelector, default is Undefined, optional
        file system Id selector
    posixUser : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderPosixUser, default is Undefined, optional
        posix user
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    rootDirectory : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderRootDirectory, default is Undefined, optional
        root directory
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    fileSystemId?: str

    fileSystemIdRef?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDRef

    fileSystemIdSelector?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDSelector

    posixUser?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderPosixUser

    region: str

    rootDirectory?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderRootDirectory

    tags?: {str:str}


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDRef:
    r"""
    Reference to a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDRefPolicy


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDSelector:
    r"""
    Selector for a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDSelectorPolicy


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderFileSystemIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderPosixUser:
    r"""
    Operating system user and group applied to all file system requests made using the access point. Detailed below.

    Attributes
    ----------
    gid : float, default is Undefined, optional
        POSIX group ID used for all file system operations using this access point.
    secondaryGids : [float], default is Undefined, optional
        Secondary POSIX group IDs used for all file system operations using this access point.
    uid : float, default is Undefined, optional
        POSIX user ID used for all file system operations using this access point.
    """


    gid?: float

    secondaryGids?: [float]

    uid?: float


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderRootDirectory:
    r"""
    Directory on the Amazon EFS file system that the access point provides access to. Detailed below.

    Attributes
    ----------
    creationInfo : EfsAwsUpboundIoV1beta2AccessPointSpecForProviderRootDirectoryCreationInfo, default is Undefined, optional
        creation info
    path : str, default is Undefined, optional
        Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide creation_info.
    """


    creationInfo?: EfsAwsUpboundIoV1beta2AccessPointSpecForProviderRootDirectoryCreationInfo

    path?: str


schema EfsAwsUpboundIoV1beta2AccessPointSpecForProviderRootDirectoryCreationInfo:
    r"""
    POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.

    Attributes
    ----------
    ownerGid : float, default is Undefined, optional
        POSIX group ID to apply to the root_directory.
    ownerUid : float, default is Undefined, optional
        POSIX user ID to apply to the root_directory.
    permissions : str, default is Undefined, optional
        POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
    """


    ownerGid?: float

    ownerUid?: float

    permissions?: str


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    fileSystemId : str, default is Undefined, optional
        ID of the file system for which the access point is intended.
    fileSystemIdRef : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDRef, default is Undefined, optional
        file system Id ref
    fileSystemIdSelector : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDSelector, default is Undefined, optional
        file system Id selector
    posixUser : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderPosixUser, default is Undefined, optional
        posix user
    rootDirectory : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderRootDirectory, default is Undefined, optional
        root directory
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    fileSystemId?: str

    fileSystemIdRef?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDRef

    fileSystemIdSelector?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDSelector

    posixUser?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderPosixUser

    rootDirectory?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderRootDirectory

    tags?: {str:str}


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDRef:
    r"""
    Reference to a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDRefPolicy


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDSelector:
    r"""
    Selector for a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDSelectorPolicy


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderFileSystemIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderPosixUser:
    r"""
    Operating system user and group applied to all file system requests made using the access point. Detailed below.

    Attributes
    ----------
    gid : float, default is Undefined, optional
        POSIX group ID used for all file system operations using this access point.
    secondaryGids : [float], default is Undefined, optional
        Secondary POSIX group IDs used for all file system operations using this access point.
    uid : float, default is Undefined, optional
        POSIX user ID used for all file system operations using this access point.
    """


    gid?: float

    secondaryGids?: [float]

    uid?: float


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderRootDirectory:
    r"""
    Directory on the Amazon EFS file system that the access point provides access to. Detailed below.

    Attributes
    ----------
    creationInfo : EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderRootDirectoryCreationInfo, default is Undefined, optional
        creation info
    path : str, default is Undefined, optional
        Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide creation_info.
    """


    creationInfo?: EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderRootDirectoryCreationInfo

    path?: str


schema EfsAwsUpboundIoV1beta2AccessPointSpecInitProviderRootDirectoryCreationInfo:
    r"""
    POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.

    Attributes
    ----------
    ownerGid : float, default is Undefined, optional
        POSIX group ID to apply to the root_directory.
    ownerUid : float, default is Undefined, optional
        POSIX user ID to apply to the root_directory.
    permissions : str, default is Undefined, optional
        POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
    """


    ownerGid?: float

    ownerUid?: float

    permissions?: str


schema EfsAwsUpboundIoV1beta2AccessPointSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2AccessPointSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2AccessPointSpecProviderConfigRefPolicy


schema EfsAwsUpboundIoV1beta2AccessPointSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToConfigRef

    metadata?: EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToMetadata

    name: str


schema EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToConfigRefPolicy


schema EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta2AccessPointSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EfsAwsUpboundIoV1beta2AccessPointSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EfsAwsUpboundIoV1beta2AccessPointStatus:
    r"""
    AccessPointStatus defines the observed state of AccessPoint.

    Attributes
    ----------
    atProvider : EfsAwsUpboundIoV1beta2AccessPointStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EfsAwsUpboundIoV1beta2AccessPointStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EfsAwsUpboundIoV1beta2AccessPointStatusAtProvider

    conditions?: [EfsAwsUpboundIoV1beta2AccessPointStatusConditionsItems0]

    observedGeneration?: int


schema EfsAwsUpboundIoV1beta2AccessPointStatusAtProvider:
    r"""
    efs aws upbound io v1beta2 access point status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the access point.
    fileSystemArn : str, default is Undefined, optional
        ARN of the file system.
    fileSystemId : str, default is Undefined, optional
        ID of the file system for which the access point is intended.
    id : str, default is Undefined, optional
        ID of the access point.
    ownerId : str, default is Undefined, optional
        ID of the access point.
    posixUser : EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderPosixUser, default is Undefined, optional
        posix user
    rootDirectory : EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderRootDirectory, default is Undefined, optional
        root directory
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    arn?: str

    fileSystemArn?: str

    fileSystemId?: str

    id?: str

    ownerId?: str

    posixUser?: EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderPosixUser

    rootDirectory?: EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderRootDirectory

    tags?: {str:str}

    tagsAll?: {str:str}


schema EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderPosixUser:
    r"""
    Operating system user and group applied to all file system requests made using the access point. Detailed below.

    Attributes
    ----------
    gid : float, default is Undefined, optional
        POSIX group ID used for all file system operations using this access point.
    secondaryGids : [float], default is Undefined, optional
        Secondary POSIX group IDs used for all file system operations using this access point.
    uid : float, default is Undefined, optional
        POSIX user ID used for all file system operations using this access point.
    """


    gid?: float

    secondaryGids?: [float]

    uid?: float


schema EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderRootDirectory:
    r"""
    Directory on the Amazon EFS file system that the access point provides access to. Detailed below.

    Attributes
    ----------
    creationInfo : EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderRootDirectoryCreationInfo, default is Undefined, optional
        creation info
    path : str, default is Undefined, optional
        Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide creation_info.
    """


    creationInfo?: EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderRootDirectoryCreationInfo

    path?: str


schema EfsAwsUpboundIoV1beta2AccessPointStatusAtProviderRootDirectoryCreationInfo:
    r"""
    POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.

    Attributes
    ----------
    ownerGid : float, default is Undefined, optional
        POSIX group ID to apply to the root_directory.
    ownerUid : float, default is Undefined, optional
        POSIX user ID to apply to the root_directory.
    permissions : str, default is Undefined, optional
        POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
    """


    ownerGid?: float

    ownerUid?: float

    permissions?: str


schema EfsAwsUpboundIoV1beta2AccessPointStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


