"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema RoleMapper:
    r"""
    RoleMapper is the Schema for the RoleMappers API.

    Attributes
    ----------
    apiVersion : str, default is "client.keycloak.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "RoleMapper", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpec, default is Undefined, required
        spec
    status : ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatus, default is Undefined, optional
        status
    """


    apiVersion: "client.keycloak.crossplane.io/v1alpha1" = "client.keycloak.crossplane.io/v1alpha1"

    kind: "RoleMapper" = "RoleMapper"

    metadata?: v1.ObjectMeta

    spec: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpec

    status?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatus


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpec:
    r"""
    RoleMapperSpec defines the desired state of RoleMapper

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProvider, default is Undefined, required
        for provider
    initProvider : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProvider

    initProvider?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRef

    writeConnectionSecretToRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecWriteConnectionSecretToRef


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProvider:
    r"""
    client keycloak crossplane io v1alpha1 role mapper spec for provider

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The ID of the client this role mapper should be added to. Conflicts with client_scope_id. This argument is required if client_scope_id is not set.
        The destination client of the role. Cannot be used at the same time as client_scope_id.
    clientIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelector, default is Undefined, optional
        client Id selector
    clientScopeId : str, default is Undefined, optional
        The ID of the client scope this role mapper should be added to. Conflicts with client_id. This argument is required if client_id is not set.
        The destination client scope of the role. Cannot be used at the same time as client_id.
    clientScopeIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDRef, default is Undefined, optional
        client scope Id ref
    clientScopeIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDSelector, default is Undefined, optional
        client scope Id selector
    realmId : str, default is Undefined, optional
        The realm this role mapper exists within.
        The realm id where the associated client or client scope exists.
    realmIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    roleId : str, default is Undefined, optional
        The ID of the role to be added to this role mapper.
        Id of the role to assign
    roleIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDRef, default is Undefined, optional
        role Id ref
    roleIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDSelector, default is Undefined, optional
        role Id selector
    """


    clientId?: str

    clientIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRef

    clientIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelector

    clientScopeId?: str

    clientScopeIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDRef

    clientScopeIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDSelector

    realmId?: str

    realmIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRef

    realmIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelector

    roleId?: str

    roleIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDRef

    roleIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDSelector


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRef:
    r"""
    Reference to a Client in openidclient to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelector:
    r"""
    Selector for a Client in openidclient to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDRef:
    r"""
    Reference to a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDSelector:
    r"""
    Selector for a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderClientScopeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDRef:
    r"""
    Reference to a Role in role to populate roleId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDSelector:
    r"""
    Selector for a Role in role to populate roleId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecForProviderRoleIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The ID of the client this role mapper should be added to. Conflicts with client_scope_id. This argument is required if client_scope_id is not set.
        The destination client of the role. Cannot be used at the same time as client_scope_id.
    clientIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRef, default is Undefined, optional
        client Id ref
    clientIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelector, default is Undefined, optional
        client Id selector
    clientScopeId : str, default is Undefined, optional
        The ID of the client scope this role mapper should be added to. Conflicts with client_id. This argument is required if client_id is not set.
        The destination client scope of the role. Cannot be used at the same time as client_id.
    clientScopeIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDRef, default is Undefined, optional
        client scope Id ref
    clientScopeIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDSelector, default is Undefined, optional
        client scope Id selector
    realmId : str, default is Undefined, optional
        The realm this role mapper exists within.
        The realm id where the associated client or client scope exists.
    realmIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    roleId : str, default is Undefined, optional
        The ID of the role to be added to this role mapper.
        Id of the role to assign
    roleIdRef : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDRef, default is Undefined, optional
        role Id ref
    roleIdSelector : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDSelector, default is Undefined, optional
        role Id selector
    """


    clientId?: str

    clientIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRef

    clientIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelector

    clientScopeId?: str

    clientScopeIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDRef

    clientScopeIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDSelector

    realmId?: str

    realmIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRef

    realmIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelector

    roleId?: str

    roleIdRef?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDRef

    roleIdSelector?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDSelector


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRef:
    r"""
    Reference to a Client in openidclient to populate clientId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelector:
    r"""
    Selector for a Client in openidclient to populate clientId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDRef:
    r"""
    Reference to a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDSelector:
    r"""
    Selector for a ClientScope in openidclient to populate clientScopeId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderClientScopeIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDRef:
    r"""
    Reference to a Role in role to populate roleId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDSelector:
    r"""
    Selector for a Role in role to populate roleId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDSelectorPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecInitProviderRoleIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRefPolicy


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatus:
    r"""
    RoleMapperStatus defines the observed state of RoleMapper.

    Attributes
    ----------
    atProvider : ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatusAtProvider

    conditions?: [ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatusConditionsItems0]

    observedGeneration?: int


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatusAtProvider:
    r"""
    client keycloak crossplane io v1alpha1 role mapper status at provider

    Attributes
    ----------
    clientId : str, default is Undefined, optional
        The ID of the client this role mapper should be added to. Conflicts with client_scope_id. This argument is required if client_scope_id is not set.
        The destination client of the role. Cannot be used at the same time as client_scope_id.
    clientScopeId : str, default is Undefined, optional
        The ID of the client scope this role mapper should be added to. Conflicts with client_id. This argument is required if client_id is not set.
        The destination client scope of the role. Cannot be used at the same time as client_id.
    id : str, default is Undefined, optional
        id
    realmId : str, default is Undefined, optional
        The realm this role mapper exists within.
        The realm id where the associated client or client scope exists.
    roleId : str, default is Undefined, optional
        The ID of the role to be added to this role mapper.
        Id of the role to assign
    """


    clientId?: str

    clientScopeId?: str

    id?: str

    realmId?: str

    roleId?: str


schema ClientKeycloakCrossplaneIoV1alpha1RoleMapperStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


