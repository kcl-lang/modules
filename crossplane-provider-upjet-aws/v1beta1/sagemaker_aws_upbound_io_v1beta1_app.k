"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema App:
    r"""
    App is the Schema for the Apps API. Provides a SageMaker App resource.

    Attributes
    ----------
    apiVersion : str, default is "sagemaker.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "App", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SagemakerAwsUpboundIoV1beta1AppSpec, default is Undefined, required
        spec
    status : SagemakerAwsUpboundIoV1beta1AppStatus, default is Undefined, optional
        status
    """


    apiVersion: "sagemaker.aws.upbound.io/v1beta1" = "sagemaker.aws.upbound.io/v1beta1"

    kind: "App" = "App"

    metadata?: v1.ObjectMeta

    spec: SagemakerAwsUpboundIoV1beta1AppSpec

    status?: SagemakerAwsUpboundIoV1beta1AppStatus


schema SagemakerAwsUpboundIoV1beta1AppSpec:
    r"""
    AppSpec defines the desired state of App

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SagemakerAwsUpboundIoV1beta1AppSpecForProvider, default is Undefined, required
        for provider
    initProvider : SagemakerAwsUpboundIoV1beta1AppSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SagemakerAwsUpboundIoV1beta1AppSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SagemakerAwsUpboundIoV1beta1AppSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SagemakerAwsUpboundIoV1beta1AppSpecForProvider

    initProvider?: SagemakerAwsUpboundIoV1beta1AppSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SagemakerAwsUpboundIoV1beta1AppSpecProviderConfigRef

    publishConnectionDetailsTo?: SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SagemakerAwsUpboundIoV1beta1AppSpecWriteConnectionSecretToRef


schema SagemakerAwsUpboundIoV1beta1AppSpecForProvider:
    r"""
    sagemaker aws upbound io v1beta1 app spec for provider

    Attributes
    ----------
    appName : str, default is Undefined, optional
        The name of the app.
    appType : str, default is Undefined, optional
        The type of app. Valid values are JupyterServer, KernelGateway, RStudioServerPro, RSessionGateway and TensorBoard.
    domainId : str, default is Undefined, optional
        The domain ID.
    domainIdRef : SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDRef, default is Undefined, optional
        domain Id ref
    domainIdSelector : SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDSelector, default is Undefined, optional
        domain Id selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resourceSpec : [SagemakerAwsUpboundIoV1beta1AppSpecForProviderResourceSpecItems0], default is Undefined, optional
        The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
    spaceName : str, default is Undefined, optional
        The name of the space. At least one of user_profile_name or space_name required.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userProfileName : str, default is Undefined, optional
        The user profile name. At least one of user_profile_name or space_name required.
    userProfileNameRef : SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameRef, default is Undefined, optional
        user profile name ref
    userProfileNameSelector : SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameSelector, default is Undefined, optional
        user profile name selector
    """


    appName?: str

    appType?: str

    domainId?: str

    domainIdRef?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDRef

    domainIdSelector?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDSelector

    region: str

    resourceSpec?: [SagemakerAwsUpboundIoV1beta1AppSpecForProviderResourceSpecItems0]

    spaceName?: str

    tags?: {str:str}

    userProfileName?: str

    userProfileNameRef?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameRef

    userProfileNameSelector?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameSelector


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDRef:
    r"""
    Reference to a Domain in sagemaker to populate domainId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDSelector:
    r"""
    Selector for a Domain in sagemaker to populate domainId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderDomainIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderResourceSpecItems0:
    r"""
    sagemaker aws upbound io v1beta1 app spec for provider resource spec items0

    Attributes
    ----------
    instanceType : str, default is Undefined, optional
        The instance type that the image version runs on. For valid values see SageMaker Instance Types.
    lifecycleConfigArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
    sagemakerImageArn : str, default is Undefined, optional
        The ARN of the SageMaker image that the image version belongs to.
    sagemakerImageVersionAlias : str, default is Undefined, optional
        The SageMaker Image Version Alias.
    sagemakerImageVersionArn : str, default is Undefined, optional
        The ARN of the image version created on the instance.
    """


    instanceType?: str

    lifecycleConfigArn?: str

    sagemakerImageArn?: str

    sagemakerImageVersionAlias?: str

    sagemakerImageVersionArn?: str


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameRef:
    r"""
    Reference to a UserProfile in sagemaker to populate userProfileName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameRefPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameSelector:
    r"""
    Selector for a UserProfile in sagemaker to populate userProfileName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecForProviderUserProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    appName : str, default is Undefined, optional
        The name of the app.
    appType : str, default is Undefined, optional
        The type of app. Valid values are JupyterServer, KernelGateway, RStudioServerPro, RSessionGateway and TensorBoard.
    domainId : str, default is Undefined, optional
        The domain ID.
    domainIdRef : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDRef, default is Undefined, optional
        domain Id ref
    domainIdSelector : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDSelector, default is Undefined, optional
        domain Id selector
    resourceSpec : [SagemakerAwsUpboundIoV1beta1AppSpecInitProviderResourceSpecItems0], default is Undefined, optional
        The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
    spaceName : str, default is Undefined, optional
        The name of the space. At least one of user_profile_name or space_name required.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userProfileName : str, default is Undefined, optional
        The user profile name. At least one of user_profile_name or space_name required.
    userProfileNameRef : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameRef, default is Undefined, optional
        user profile name ref
    userProfileNameSelector : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameSelector, default is Undefined, optional
        user profile name selector
    """


    appName?: str

    appType?: str

    domainId?: str

    domainIdRef?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDRef

    domainIdSelector?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDSelector

    resourceSpec?: [SagemakerAwsUpboundIoV1beta1AppSpecInitProviderResourceSpecItems0]

    spaceName?: str

    tags?: {str:str}

    userProfileName?: str

    userProfileNameRef?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameRef

    userProfileNameSelector?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameSelector


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDRef:
    r"""
    Reference to a Domain in sagemaker to populate domainId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDSelector:
    r"""
    Selector for a Domain in sagemaker to populate domainId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderDomainIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderResourceSpecItems0:
    r"""
    sagemaker aws upbound io v1beta1 app spec init provider resource spec items0

    Attributes
    ----------
    instanceType : str, default is Undefined, optional
        The instance type that the image version runs on. For valid values see SageMaker Instance Types.
    lifecycleConfigArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
    sagemakerImageArn : str, default is Undefined, optional
        The ARN of the SageMaker image that the image version belongs to.
    sagemakerImageVersionAlias : str, default is Undefined, optional
        The SageMaker Image Version Alias.
    sagemakerImageVersionArn : str, default is Undefined, optional
        The ARN of the image version created on the instance.
    """


    instanceType?: str

    lifecycleConfigArn?: str

    sagemakerImageArn?: str

    sagemakerImageVersionAlias?: str

    sagemakerImageVersionArn?: str


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameRef:
    r"""
    Reference to a UserProfile in sagemaker to populate userProfileName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameRefPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameSelector:
    r"""
    Selector for a UserProfile in sagemaker to populate userProfileName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecInitProviderUserProfileNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecProviderConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToConfigRef

    metadata?: SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToMetadata

    name: str


schema SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1AppSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SagemakerAwsUpboundIoV1beta1AppSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta1AppStatus:
    r"""
    AppStatus defines the observed state of App.

    Attributes
    ----------
    atProvider : SagemakerAwsUpboundIoV1beta1AppStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SagemakerAwsUpboundIoV1beta1AppStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SagemakerAwsUpboundIoV1beta1AppStatusAtProvider

    conditions?: [SagemakerAwsUpboundIoV1beta1AppStatusConditionsItems0]

    observedGeneration?: int


schema SagemakerAwsUpboundIoV1beta1AppStatusAtProvider:
    r"""
    sagemaker aws upbound io v1beta1 app status at provider

    Attributes
    ----------
    appName : str, default is Undefined, optional
        The name of the app.
    appType : str, default is Undefined, optional
        The type of app. Valid values are JupyterServer, KernelGateway, RStudioServerPro, RSessionGateway and TensorBoard.
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the app.
    domainId : str, default is Undefined, optional
        The domain ID.
    id : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the app.
    resourceSpec : [SagemakerAwsUpboundIoV1beta1AppStatusAtProviderResourceSpecItems0], default is Undefined, optional
        The instance type and the Amazon Resource Name (ARN) of the SageMaker image created on the instance.See Resource Spec below.
    spaceName : str, default is Undefined, optional
        The name of the space. At least one of user_profile_name or space_name required.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    userProfileName : str, default is Undefined, optional
        The user profile name. At least one of user_profile_name or space_name required.
    """


    appName?: str

    appType?: str

    arn?: str

    domainId?: str

    id?: str

    resourceSpec?: [SagemakerAwsUpboundIoV1beta1AppStatusAtProviderResourceSpecItems0]

    spaceName?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    userProfileName?: str


schema SagemakerAwsUpboundIoV1beta1AppStatusAtProviderResourceSpecItems0:
    r"""
    sagemaker aws upbound io v1beta1 app status at provider resource spec items0

    Attributes
    ----------
    instanceType : str, default is Undefined, optional
        The instance type that the image version runs on. For valid values see SageMaker Instance Types.
    lifecycleConfigArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Lifecycle Configuration attached to the Resource.
    sagemakerImageArn : str, default is Undefined, optional
        The ARN of the SageMaker image that the image version belongs to.
    sagemakerImageVersionAlias : str, default is Undefined, optional
        The SageMaker Image Version Alias.
    sagemakerImageVersionArn : str, default is Undefined, optional
        The ARN of the image version created on the instance.
    """


    instanceType?: str

    lifecycleConfigArn?: str

    sagemakerImageArn?: str

    sagemakerImageVersionAlias?: str

    sagemakerImageVersionArn?: str


schema SagemakerAwsUpboundIoV1beta1AppStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


