"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ConfigurationProfile:
    r"""
    ConfigurationProfile is the Schema for the ConfigurationProfiles API. Provides an AppConfig Configuration Profile resource.

    Attributes
    ----------
    apiVersion : str, default is "appconfig.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ConfigurationProfile", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpec, default is Undefined, required
        spec
    status : AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatus, default is Undefined, optional
        status
    """


    apiVersion: "appconfig.aws.upbound.io/v1beta1" = "appconfig.aws.upbound.io/v1beta1"

    kind: "ConfigurationProfile" = "ConfigurationProfile"

    metadata?: v1.ObjectMeta

    spec: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpec

    status?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatus


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpec:
    r"""
    ConfigurationProfileSpec defines the desired state of ConfigurationProfile

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProvider

    initProvider?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecProviderConfigRef

    publishConnectionDetailsTo?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecWriteConnectionSecretToRef


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProvider:
    r"""
    appconfig aws upbound io v1beta1 configuration profile spec for provider

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        Application ID. Must be between 4 and 7 characters in length.
    applicationIdRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDSelector, default is Undefined, optional
        application Id selector
    description : str, default is Undefined, optional
        Description of the configuration profile. Can be at most 1024 characters.
    kmsKeyIdentifier : str, default is Undefined, optional
        The identifier for an Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for hosted configuration types. The identifier can be an KMS key ID, alias, or the Amazon Resource Name (ARN) of the key ID or alias.
    locationUri : str, default is Undefined, optional
        URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify hosted. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the ARN. For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey>.
    name : str, default is Undefined, optional
        Name for the configuration profile. Must be between 1 and 128 characters in length.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    retrievalRoleArn : str, default is Undefined, optional
        ARN of an IAM role with permission to access the configuration at the specified location_uri. A retrieval role ARN is not required for configurations stored in the AWS AppConfig hosted configuration store. It is required for all other sources that store your configuration.
    retrievalRoleArnRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnRef, default is Undefined, optional
        retrieval role arn ref
    retrievalRoleArnSelector : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnSelector, default is Undefined, optional
        retrieval role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Type of configurations contained in the profile. Valid values: AWS.AppConfig.FeatureFlags and AWS.Freeform.  Default: AWS.Freeform.
    validator : [AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderValidatorItems0], default is Undefined, optional
        Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
    """


    applicationId?: str

    applicationIdRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDRef

    applicationIdSelector?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDSelector

    description?: str

    kmsKeyIdentifier?: str

    locationUri?: str

    name?: str

    region: str

    retrievalRoleArn?: str

    retrievalRoleArnRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnRef

    retrievalRoleArnSelector?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnSelector

    tags?: {str:str}

    $type?: str

    validator?: [AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderValidatorItems0]


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDRef:
    r"""
    Reference to a Application in appconfig to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDSelector:
    r"""
    Selector for a Application in appconfig to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnRef:
    r"""
    Reference to a Role in iam to populate retrievalRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnSelector:
    r"""
    Selector for a Role in iam to populate retrievalRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderRetrievalRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderValidatorItems0:
    r"""
    appconfig aws upbound io v1beta1 configuration profile spec for provider validator items0

    Attributes
    ----------
    contentSecretRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderValidatorItems0ContentSecretRef, default is Undefined, optional
        content secret ref
    $type : str, default is Undefined, optional
        Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
    """


    contentSecretRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderValidatorItems0ContentSecretRef

    $type?: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecForProviderValidatorItems0ContentSecretRef:
    r"""
    Either the JSON Schema content or the ARN of an AWS Lambda function.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        Application ID. Must be between 4 and 7 characters in length.
    applicationIdRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDSelector, default is Undefined, optional
        application Id selector
    description : str, default is Undefined, optional
        Description of the configuration profile. Can be at most 1024 characters.
    kmsKeyIdentifier : str, default is Undefined, optional
        The identifier for an Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for hosted configuration types. The identifier can be an KMS key ID, alias, or the Amazon Resource Name (ARN) of the key ID or alias.
    locationUri : str, default is Undefined, optional
        URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify hosted. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the ARN. For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey>.
    name : str, default is Undefined, optional
        Name for the configuration profile. Must be between 1 and 128 characters in length.
    retrievalRoleArn : str, default is Undefined, optional
        ARN of an IAM role with permission to access the configuration at the specified location_uri. A retrieval role ARN is not required for configurations stored in the AWS AppConfig hosted configuration store. It is required for all other sources that store your configuration.
    retrievalRoleArnRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnRef, default is Undefined, optional
        retrieval role arn ref
    retrievalRoleArnSelector : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnSelector, default is Undefined, optional
        retrieval role arn selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Type of configurations contained in the profile. Valid values: AWS.AppConfig.FeatureFlags and AWS.Freeform.  Default: AWS.Freeform.
    validator : [AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderValidatorItems0], default is Undefined, optional
        Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
    """


    applicationId?: str

    applicationIdRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDRef

    applicationIdSelector?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDSelector

    description?: str

    kmsKeyIdentifier?: str

    locationUri?: str

    name?: str

    retrievalRoleArn?: str

    retrievalRoleArnRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnRef

    retrievalRoleArnSelector?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnSelector

    tags?: {str:str}

    $type?: str

    validator?: [AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderValidatorItems0]


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDRef:
    r"""
    Reference to a Application in appconfig to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDSelector:
    r"""
    Selector for a Application in appconfig to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnRef:
    r"""
    Reference to a Role in iam to populate retrievalRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnRefPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnSelector:
    r"""
    Selector for a Role in iam to populate retrievalRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderRetrievalRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderValidatorItems0:
    r"""
    appconfig aws upbound io v1beta1 configuration profile spec init provider validator items0

    Attributes
    ----------
    contentSecretRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderValidatorItems0ContentSecretRef, default is Undefined, optional
        content secret ref
    $type : str, default is Undefined, optional
        Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
    """


    contentSecretRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderValidatorItems0ContentSecretRef

    $type?: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecInitProviderValidatorItems0ContentSecretRef:
    r"""
    Either the JSON Schema content or the ARN of an AWS Lambda function.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecProviderConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToConfigRef

    metadata?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToMetadata

    name: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatus:
    r"""
    ConfigurationProfileStatus defines the observed state of ConfigurationProfile.

    Attributes
    ----------
    atProvider : AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusAtProvider

    conditions?: [AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusConditionsItems0]

    observedGeneration?: int


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusAtProvider:
    r"""
    appconfig aws upbound io v1beta1 configuration profile status at provider

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        Application ID. Must be between 4 and 7 characters in length.
    arn : str, default is Undefined, optional
        ARN of the AppConfig Configuration Profile.
    configurationProfileId : str, default is Undefined, optional
        The configuration profile ID.
    description : str, default is Undefined, optional
        Description of the configuration profile. Can be at most 1024 characters.
    id : str, default is Undefined, optional
        AppConfig configuration profile ID and application ID separated by a colon (:).
    kmsKeyIdentifier : str, default is Undefined, optional
        The identifier for an Key Management Service key to encrypt new configuration data versions in the AppConfig hosted configuration store. This attribute is only used for hosted configuration types. The identifier can be an KMS key ID, alias, or the Amazon Resource Name (ARN) of the key ID or alias.
    locationUri : str, default is Undefined, optional
        URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store, specify hosted. For an SSM document, specify either the document name in the format ssm-document://<Document_name> or the ARN. For a parameter, specify either the parameter name in the format ssm-parameter://<Parameter_name> or the ARN. For an Amazon S3 object, specify the URI in the following format: s3://<bucket>/<objectKey>.
    name : str, default is Undefined, optional
        Name for the configuration profile. Must be between 1 and 128 characters in length.
    retrievalRoleArn : str, default is Undefined, optional
        ARN of an IAM role with permission to access the configuration at the specified location_uri. A retrieval role ARN is not required for configurations stored in the AWS AppConfig hosted configuration store. It is required for all other sources that store your configuration.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        Type of configurations contained in the profile. Valid values: AWS.AppConfig.FeatureFlags and AWS.Freeform.  Default: AWS.Freeform.
    validator : [AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusAtProviderValidatorItems0], default is Undefined, optional
        Set of methods for validating the configuration. Maximum of 2. See Validator below for more details.
    """


    applicationId?: str

    arn?: str

    configurationProfileId?: str

    description?: str

    id?: str

    kmsKeyIdentifier?: str

    locationUri?: str

    name?: str

    retrievalRoleArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    validator?: [AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusAtProviderValidatorItems0]


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusAtProviderValidatorItems0:
    r"""
    appconfig aws upbound io v1beta1 configuration profile status at provider validator items0

    Attributes
    ----------
    $type : str, default is Undefined, optional
        Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
    """


    $type?: str


schema AppconfigAwsUpboundIoV1beta1ConfigurationProfileStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


