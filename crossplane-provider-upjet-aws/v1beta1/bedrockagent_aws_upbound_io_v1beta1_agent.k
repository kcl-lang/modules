"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Agent:
    r"""
    Agent is the Schema for the Agents API.

    Attributes
    ----------
    apiVersion : str, default is "bedrockagent.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Agent", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BedrockagentAwsUpboundIoV1beta1AgentSpec, default is Undefined, required
        spec
    status : BedrockagentAwsUpboundIoV1beta1AgentStatus, default is Undefined, optional
        status
    """


    apiVersion: "bedrockagent.aws.upbound.io/v1beta1" = "bedrockagent.aws.upbound.io/v1beta1"

    kind: "Agent" = "Agent"

    metadata?: v1.ObjectMeta

    spec: BedrockagentAwsUpboundIoV1beta1AgentSpec

    status?: BedrockagentAwsUpboundIoV1beta1AgentStatus


schema BedrockagentAwsUpboundIoV1beta1AgentSpec:
    r"""
    AgentSpec defines the desired state of Agent

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BedrockagentAwsUpboundIoV1beta1AgentSpecForProvider, default is Undefined, required
        for provider
    initProvider : BedrockagentAwsUpboundIoV1beta1AgentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BedrockagentAwsUpboundIoV1beta1AgentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BedrockagentAwsUpboundIoV1beta1AgentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BedrockagentAwsUpboundIoV1beta1AgentSpecForProvider

    initProvider?: BedrockagentAwsUpboundIoV1beta1AgentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BedrockagentAwsUpboundIoV1beta1AgentSpecProviderConfigRef

    publishConnectionDetailsTo?: BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BedrockagentAwsUpboundIoV1beta1AgentSpecWriteConnectionSecretToRef


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProvider:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec for provider

    Attributes
    ----------
    agentCollaboration : str, default is Undefined, optional
        Agents collaboration role. Valid values: SUPERVISOR, SUPERVISOR_ROUTER, DISABLED.
    agentName : str, default is Undefined, optional
        Name of the agent.
    agentResourceRoleArn : str, default is Undefined, optional
        ARN of the IAM role with permissions to invoke API operations on the agent.
    agentResourceRoleArnRef : BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnRef, default is Undefined, optional
        agent resource role arn ref
    agentResourceRoleArnSelector : BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnSelector, default is Undefined, optional
        agent resource role arn selector
    customerEncryptionKeyArn : str, default is Undefined, optional
        ARN of the AWS KMS key that encrypts the agent.
    description : str, default is Undefined, optional
        Description of the agent.
    foundationModel : str, default is Undefined, optional
        Foundation model used for orchestration by the agent.
    guardrailConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderGuardrailConfigurationItems0], default is Undefined, optional
        Details about the guardrail associated with the agent. See guardrail_configuration Block for details.
    idleSessionTtlInSeconds : float, default is Undefined, optional
        Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
    instruction : str, default is Undefined, optional
        Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 8000 characters.
    prepareAgent : bool, default is Undefined, optional
        Whether to prepare the agent after creation or modification. Defaults to true.
    promptOverrideConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0], default is Undefined, optional
        Configurations to override prompt templates in different parts of an agent sequence. For more information, see Advanced prompts. See prompt_override_configuration Block for details.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    skipResourceInUseCheck : bool, default is Undefined, optional
        Whether the in-use check is skipped when deleting the agent.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    agentCollaboration?: str

    agentName?: str

    agentResourceRoleArn?: str

    agentResourceRoleArnRef?: BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnRef

    agentResourceRoleArnSelector?: BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnSelector

    customerEncryptionKeyArn?: str

    description?: str

    foundationModel?: str

    guardrailConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderGuardrailConfigurationItems0]

    idleSessionTtlInSeconds?: float

    instruction?: str

    prepareAgent?: bool

    promptOverrideConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0]

    region: str

    skipResourceInUseCheck?: bool

    tags?: {str:str}


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnRef:
    r"""
    Reference to a Role in iam to populate agentResourceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnRefPolicy


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate agentResourceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnSelectorPolicy


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderAgentResourceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderGuardrailConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec for provider guardrail configuration items0

    Attributes
    ----------
    guardrailIdentifier : str, default is Undefined, optional
        Unique identifier of the guardrail.
    guardrailVersion : str, default is Undefined, optional
        Version of the guardrail.
    """


    guardrailIdentifier?: str

    guardrailVersion?: str


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec for provider prompt override configuration items0

    Attributes
    ----------
    overrideLambda : str, default is Undefined, optional
        ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the prompt_configurations block must contain a parser_mode value that is set to OVERRIDDEN.
    promptConfigurations : [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0], default is Undefined, optional
        Configurations to override a prompt template in one part of an agent sequence. See prompt_configurations Block for details.
    """


    overrideLambda?: str

    promptConfigurations?: [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0]


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec for provider prompt override configuration items0 prompt configurations items0

    Attributes
    ----------
    basePromptTemplate : str, default is Undefined, optional
        prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see Prompt template placeholder variables.
    inferenceConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0], default is Undefined, optional
        Inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the prompt_type. For more information, see Inference parameters for foundation models. See inference_configuration Block for details.
    parserMode : str, default is Undefined, optional
        Whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the prompt_type. If you set the argument as OVERRIDDEN, the override_lambda argument in the prompt_override_configuration block must be specified with the ARN of a Lambda function. Valid values: DEFAULT, OVERRIDDEN.
    promptCreationMode : str, default is Undefined, optional
        Whether to override the default prompt template for this prompt_type. Set this argument to OVERRIDDEN to use the prompt that you provide in the base_prompt_template. If you leave it as DEFAULT, the agent uses a default prompt template. Valid values: DEFAULT, OVERRIDDEN.
    promptState : str, default is Undefined, optional
        Whether to allow the agent to carry out the step specified in the prompt_type. If you set this argument to DISABLED, the agent skips that step. Valid Values: ENABLED, DISABLED.
    promptType : str, default is Undefined, optional
        Step in the agent sequence that this prompt configuration applies to. Valid values: PRE_PROCESSING, ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.
    """


    basePromptTemplate?: str

    inferenceConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0]

    parserMode?: str

    promptCreationMode?: str

    promptState?: str

    promptType?: str


schema BedrockagentAwsUpboundIoV1beta1AgentSpecForProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec for provider prompt override configuration items0 prompt configurations items0 inference configuration items0

    Attributes
    ----------
    maxLength : float, default is Undefined, optional
        Maximum number of tokens to allow in the generated response.
    stopSequences : [str], default is Undefined, optional
        List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.
    temperature : float, default is Undefined, optional
        Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.
    topK : float, default is Undefined, optional
        Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.
    topP : float, default is Undefined, optional
        Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.
    """


    maxLength?: float

    stopSequences?: [str]

    temperature?: float

    topK?: float

    topP?: float


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    agentCollaboration : str, default is Undefined, optional
        Agents collaboration role. Valid values: SUPERVISOR, SUPERVISOR_ROUTER, DISABLED.
    agentName : str, default is Undefined, optional
        Name of the agent.
    agentResourceRoleArn : str, default is Undefined, optional
        ARN of the IAM role with permissions to invoke API operations on the agent.
    agentResourceRoleArnRef : BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnRef, default is Undefined, optional
        agent resource role arn ref
    agentResourceRoleArnSelector : BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnSelector, default is Undefined, optional
        agent resource role arn selector
    customerEncryptionKeyArn : str, default is Undefined, optional
        ARN of the AWS KMS key that encrypts the agent.
    description : str, default is Undefined, optional
        Description of the agent.
    foundationModel : str, default is Undefined, optional
        Foundation model used for orchestration by the agent.
    guardrailConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderGuardrailConfigurationItems0], default is Undefined, optional
        Details about the guardrail associated with the agent. See guardrail_configuration Block for details.
    idleSessionTtlInSeconds : float, default is Undefined, optional
        Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
    instruction : str, default is Undefined, optional
        Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 8000 characters.
    prepareAgent : bool, default is Undefined, optional
        Whether to prepare the agent after creation or modification. Defaults to true.
    promptOverrideConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0], default is Undefined, optional
        Configurations to override prompt templates in different parts of an agent sequence. For more information, see Advanced prompts. See prompt_override_configuration Block for details.
    skipResourceInUseCheck : bool, default is Undefined, optional
        Whether the in-use check is skipped when deleting the agent.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    agentCollaboration?: str

    agentName?: str

    agentResourceRoleArn?: str

    agentResourceRoleArnRef?: BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnRef

    agentResourceRoleArnSelector?: BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnSelector

    customerEncryptionKeyArn?: str

    description?: str

    foundationModel?: str

    guardrailConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderGuardrailConfigurationItems0]

    idleSessionTtlInSeconds?: float

    instruction?: str

    prepareAgent?: bool

    promptOverrideConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0]

    skipResourceInUseCheck?: bool

    tags?: {str:str}


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnRef:
    r"""
    Reference to a Role in iam to populate agentResourceRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnRefPolicy


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnSelector:
    r"""
    Selector for a Role in iam to populate agentResourceRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnSelectorPolicy


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderAgentResourceRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderGuardrailConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec init provider guardrail configuration items0

    Attributes
    ----------
    guardrailIdentifier : str, default is Undefined, optional
        Unique identifier of the guardrail.
    guardrailVersion : str, default is Undefined, optional
        Version of the guardrail.
    """


    guardrailIdentifier?: str

    guardrailVersion?: str


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec init provider prompt override configuration items0

    Attributes
    ----------
    overrideLambda : str, default is Undefined, optional
        ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the prompt_configurations block must contain a parser_mode value that is set to OVERRIDDEN.
    promptConfigurations : [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0], default is Undefined, optional
        Configurations to override a prompt template in one part of an agent sequence. See prompt_configurations Block for details.
    """


    overrideLambda?: str

    promptConfigurations?: [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0]


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec init provider prompt override configuration items0 prompt configurations items0

    Attributes
    ----------
    basePromptTemplate : str, default is Undefined, optional
        prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see Prompt template placeholder variables.
    inferenceConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0], default is Undefined, optional
        Inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the prompt_type. For more information, see Inference parameters for foundation models. See inference_configuration Block for details.
    parserMode : str, default is Undefined, optional
        Whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the prompt_type. If you set the argument as OVERRIDDEN, the override_lambda argument in the prompt_override_configuration block must be specified with the ARN of a Lambda function. Valid values: DEFAULT, OVERRIDDEN.
    promptCreationMode : str, default is Undefined, optional
        Whether to override the default prompt template for this prompt_type. Set this argument to OVERRIDDEN to use the prompt that you provide in the base_prompt_template. If you leave it as DEFAULT, the agent uses a default prompt template. Valid values: DEFAULT, OVERRIDDEN.
    promptState : str, default is Undefined, optional
        Whether to allow the agent to carry out the step specified in the prompt_type. If you set this argument to DISABLED, the agent skips that step. Valid Values: ENABLED, DISABLED.
    promptType : str, default is Undefined, optional
        Step in the agent sequence that this prompt configuration applies to. Valid values: PRE_PROCESSING, ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.
    """


    basePromptTemplate?: str

    inferenceConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0]

    parserMode?: str

    promptCreationMode?: str

    promptState?: str

    promptType?: str


schema BedrockagentAwsUpboundIoV1beta1AgentSpecInitProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent spec init provider prompt override configuration items0 prompt configurations items0 inference configuration items0

    Attributes
    ----------
    maxLength : float, default is Undefined, optional
        Maximum number of tokens to allow in the generated response.
    stopSequences : [str], default is Undefined, optional
        List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.
    temperature : float, default is Undefined, optional
        Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.
    topK : float, default is Undefined, optional
        Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.
    topP : float, default is Undefined, optional
        Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.
    """


    maxLength?: float

    stopSequences?: [str]

    temperature?: float

    topK?: float

    topP?: float


schema BedrockagentAwsUpboundIoV1beta1AgentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BedrockagentAwsUpboundIoV1beta1AgentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BedrockagentAwsUpboundIoV1beta1AgentSpecProviderConfigRefPolicy


schema BedrockagentAwsUpboundIoV1beta1AgentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToConfigRef

    metadata?: BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToMetadata

    name: str


schema BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToConfigRefPolicy


schema BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BedrockagentAwsUpboundIoV1beta1AgentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BedrockagentAwsUpboundIoV1beta1AgentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BedrockagentAwsUpboundIoV1beta1AgentStatus:
    r"""
    AgentStatus defines the observed state of Agent.

    Attributes
    ----------
    atProvider : BedrockagentAwsUpboundIoV1beta1AgentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BedrockagentAwsUpboundIoV1beta1AgentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BedrockagentAwsUpboundIoV1beta1AgentStatusAtProvider

    conditions?: [BedrockagentAwsUpboundIoV1beta1AgentStatusConditionsItems0]

    observedGeneration?: int


schema BedrockagentAwsUpboundIoV1beta1AgentStatusAtProvider:
    r"""
    bedrockagent aws upbound io v1beta1 agent status at provider

    Attributes
    ----------
    agentArn : str, default is Undefined, optional
        ARN of the agent.
    agentCollaboration : str, default is Undefined, optional
        Agents collaboration role. Valid values: SUPERVISOR, SUPERVISOR_ROUTER, DISABLED.
    agentId : str, default is Undefined, optional
        Unique identifier of the agent.
    agentName : str, default is Undefined, optional
        Name of the agent.
    agentResourceRoleArn : str, default is Undefined, optional
        ARN of the IAM role with permissions to invoke API operations on the agent.
    agentVersion : str, default is Undefined, optional
        Version of the agent.
    customerEncryptionKeyArn : str, default is Undefined, optional
        ARN of the AWS KMS key that encrypts the agent.
    description : str, default is Undefined, optional
        Description of the agent.
    foundationModel : str, default is Undefined, optional
        Foundation model used for orchestration by the agent.
    guardrailConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderGuardrailConfigurationItems0], default is Undefined, optional
        Details about the guardrail associated with the agent. See guardrail_configuration Block for details.
    id : str, default is Undefined, optional
        Unique identifier of the agent.
    idleSessionTtlInSeconds : float, default is Undefined, optional
        Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
    instruction : str, default is Undefined, optional
        Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 8000 characters.
    prepareAgent : bool, default is Undefined, optional
        Whether to prepare the agent after creation or modification. Defaults to true.
    promptOverrideConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0], default is Undefined, optional
        Configurations to override prompt templates in different parts of an agent sequence. For more information, see Advanced prompts. See prompt_override_configuration Block for details.
    skipResourceInUseCheck : bool, default is Undefined, optional
        Whether the in-use check is skipped when deleting the agent.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    agentArn?: str

    agentCollaboration?: str

    agentId?: str

    agentName?: str

    agentResourceRoleArn?: str

    agentVersion?: str

    customerEncryptionKeyArn?: str

    description?: str

    foundationModel?: str

    guardrailConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderGuardrailConfigurationItems0]

    id?: str

    idleSessionTtlInSeconds?: float

    instruction?: str

    prepareAgent?: bool

    promptOverrideConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0]

    skipResourceInUseCheck?: bool

    tags?: {str:str}

    tagsAll?: {str:str}


schema BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderGuardrailConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent status at provider guardrail configuration items0

    Attributes
    ----------
    guardrailIdentifier : str, default is Undefined, optional
        Unique identifier of the guardrail.
    guardrailVersion : str, default is Undefined, optional
        Version of the guardrail.
    """


    guardrailIdentifier?: str

    guardrailVersion?: str


schema BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent status at provider prompt override configuration items0

    Attributes
    ----------
    overrideLambda : str, default is Undefined, optional
        ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the prompt_configurations block must contain a parser_mode value that is set to OVERRIDDEN.
    promptConfigurations : [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0], default is Undefined, optional
        Configurations to override a prompt template in one part of an agent sequence. See prompt_configurations Block for details.
    """


    overrideLambda?: str

    promptConfigurations?: [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0]


schema BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent status at provider prompt override configuration items0 prompt configurations items0

    Attributes
    ----------
    basePromptTemplate : str, default is Undefined, optional
        prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see Prompt template placeholder variables.
    inferenceConfiguration : [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0], default is Undefined, optional
        Inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the prompt_type. For more information, see Inference parameters for foundation models. See inference_configuration Block for details.
    parserMode : str, default is Undefined, optional
        Whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the prompt_type. If you set the argument as OVERRIDDEN, the override_lambda argument in the prompt_override_configuration block must be specified with the ARN of a Lambda function. Valid values: DEFAULT, OVERRIDDEN.
    promptCreationMode : str, default is Undefined, optional
        Whether to override the default prompt template for this prompt_type. Set this argument to OVERRIDDEN to use the prompt that you provide in the base_prompt_template. If you leave it as DEFAULT, the agent uses a default prompt template. Valid values: DEFAULT, OVERRIDDEN.
    promptState : str, default is Undefined, optional
        Whether to allow the agent to carry out the step specified in the prompt_type. If you set this argument to DISABLED, the agent skips that step. Valid Values: ENABLED, DISABLED.
    promptType : str, default is Undefined, optional
        Step in the agent sequence that this prompt configuration applies to. Valid values: PRE_PROCESSING, ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.
    """


    basePromptTemplate?: str

    inferenceConfiguration?: [BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0]

    parserMode?: str

    promptCreationMode?: str

    promptState?: str

    promptType?: str


schema BedrockagentAwsUpboundIoV1beta1AgentStatusAtProviderPromptOverrideConfigurationItems0PromptConfigurationsItems0InferenceConfigurationItems0:
    r"""
    bedrockagent aws upbound io v1beta1 agent status at provider prompt override configuration items0 prompt configurations items0 inference configuration items0

    Attributes
    ----------
    maxLength : float, default is Undefined, optional
        Maximum number of tokens to allow in the generated response.
    stopSequences : [str], default is Undefined, optional
        List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.
    temperature : float, default is Undefined, optional
        Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.
    topK : float, default is Undefined, optional
        Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.
    topP : float, default is Undefined, optional
        Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.
    """


    maxLength?: float

    stopSequences?: [str]

    temperature?: float

    topK?: float

    topP?: float


schema BedrockagentAwsUpboundIoV1beta1AgentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


