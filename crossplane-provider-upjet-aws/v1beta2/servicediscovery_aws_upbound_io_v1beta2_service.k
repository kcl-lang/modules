"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Service:
    r"""
    Service is the Schema for the Services API. Provides a Service Discovery Service resource.

    Attributes
    ----------
    apiVersion : str, default is "servicediscovery.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Service", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ServicediscoveryAwsUpboundIoV1beta2ServiceSpec, default is Undefined, required
        spec
    status : ServicediscoveryAwsUpboundIoV1beta2ServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "servicediscovery.aws.upbound.io/v1beta2" = "servicediscovery.aws.upbound.io/v1beta2"

    kind: "Service" = "Service"

    metadata?: v1.ObjectMeta

    spec: ServicediscoveryAwsUpboundIoV1beta2ServiceSpec

    status?: ServicediscoveryAwsUpboundIoV1beta2ServiceStatus


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpec:
    r"""
    ServiceSpec defines the desired state of Service

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProvider, default is Undefined, required
        for provider
    initProvider : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProvider

    initProvider?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecProviderConfigRef

    publishConnectionDetailsTo?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecWriteConnectionSecretToRef


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProvider:
    r"""
    servicediscovery aws upbound io v1beta2 service spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description of the service.
    dnsConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfig, default is Undefined, optional
        dns config
    forceDestroy : bool, default is Undefined, optional
        A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable. Defaults to false.
    healthCheckConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckConfig, default is Undefined, optional
        health check config
    healthCheckCustomConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckCustomConfig, default is Undefined, optional
        health check custom config
    name : str, default is Undefined, optional
        The name of the service.
    namespaceId : str, default is Undefined, optional
        The ID of the namespace that you want to use to create the service.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        If present, specifies that the service instances are only discoverable using the DiscoverInstances API operation. No DNS records is registered for the service instances. The only valid value is HTTP.
    """


    description?: str

    dnsConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfig

    forceDestroy?: bool

    healthCheckConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckConfig

    healthCheckCustomConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckCustomConfig

    name?: str

    namespaceId?: str

    region: str

    tags?: {str:str}

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfig:
    r"""
    A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance. See dns_config Block for details.

    Attributes
    ----------
    dnsRecords : [ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigDNSRecordsItems0], default is Undefined, optional
        An array that contains one DnsRecord object for each resource record set. See dns_records Block for details.
    namespaceId : str, default is Undefined, optional
        The ID of the namespace to use for DNS configuration.
    namespaceIdRef : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDRef, default is Undefined, optional
        namespace Id ref
    namespaceIdSelector : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDSelector, default is Undefined, optional
        namespace Id selector
    routingPolicy : str, default is Undefined, optional
        The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
    """


    dnsRecords?: [ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigDNSRecordsItems0]

    namespaceId?: str

    namespaceIdRef?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDRef

    namespaceIdSelector?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDSelector

    routingPolicy?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigDNSRecordsItems0:
    r"""
    servicediscovery aws upbound io v1beta2 service spec for provider DNS config DNS records items0

    Attributes
    ----------
    ttl : float, default is Undefined, optional
        The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
    $type : str, default is Undefined, optional
        The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
    """


    ttl?: float

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDRef:
    r"""
    Reference to a PrivateDNSNamespace in servicediscovery to populate namespaceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDRefPolicy


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDSelector:
    r"""
    Selector for a PrivateDNSNamespace in servicediscovery to populate namespaceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDSelectorPolicy


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderDNSConfigNamespaceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckConfig:
    r"""
    A complex type that contains settings for an optional health check. Only for Public DNS namespaces. See health_check_config Block for details.

    Attributes
    ----------
    failureThreshold : float, default is Undefined, optional
        The number of consecutive health checks. Maximum value of 10.
    resourcePath : str, default is Undefined, optional
        The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
    $type : str, default is Undefined, optional
        The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
    """


    failureThreshold?: float

    resourcePath?: str

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecForProviderHealthCheckCustomConfig:
    r"""
    A complex type that contains settings for ECS managed health checks. See health_check_custom_config Block for details.

    Attributes
    ----------
    failureThreshold : float, default is Undefined, optional
        The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
    """


    failureThreshold?: float


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        The description of the service.
    dnsConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfig, default is Undefined, optional
        dns config
    forceDestroy : bool, default is Undefined, optional
        A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable. Defaults to false.
    healthCheckConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckConfig, default is Undefined, optional
        health check config
    healthCheckCustomConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckCustomConfig, default is Undefined, optional
        health check custom config
    name : str, default is Undefined, optional
        The name of the service.
    namespaceId : str, default is Undefined, optional
        The ID of the namespace that you want to use to create the service.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        If present, specifies that the service instances are only discoverable using the DiscoverInstances API operation. No DNS records is registered for the service instances. The only valid value is HTTP.
    """


    description?: str

    dnsConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfig

    forceDestroy?: bool

    healthCheckConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckConfig

    healthCheckCustomConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckCustomConfig

    name?: str

    namespaceId?: str

    tags?: {str:str}

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfig:
    r"""
    A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance. See dns_config Block for details.

    Attributes
    ----------
    dnsRecords : [ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigDNSRecordsItems0], default is Undefined, optional
        An array that contains one DnsRecord object for each resource record set. See dns_records Block for details.
    namespaceId : str, default is Undefined, optional
        The ID of the namespace to use for DNS configuration.
    namespaceIdRef : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDRef, default is Undefined, optional
        namespace Id ref
    namespaceIdSelector : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDSelector, default is Undefined, optional
        namespace Id selector
    routingPolicy : str, default is Undefined, optional
        The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
    """


    dnsRecords?: [ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigDNSRecordsItems0]

    namespaceId?: str

    namespaceIdRef?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDRef

    namespaceIdSelector?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDSelector

    routingPolicy?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigDNSRecordsItems0:
    r"""
    servicediscovery aws upbound io v1beta2 service spec init provider DNS config DNS records items0

    Attributes
    ----------
    ttl : float, default is Undefined, optional
        The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
    $type : str, default is Undefined, optional
        The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
    """


    ttl?: float

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDRef:
    r"""
    Reference to a PrivateDNSNamespace in servicediscovery to populate namespaceId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDRefPolicy


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDSelector:
    r"""
    Selector for a PrivateDNSNamespace in servicediscovery to populate namespaceId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDSelectorPolicy


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderDNSConfigNamespaceIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckConfig:
    r"""
    A complex type that contains settings for an optional health check. Only for Public DNS namespaces. See health_check_config Block for details.

    Attributes
    ----------
    failureThreshold : float, default is Undefined, optional
        The number of consecutive health checks. Maximum value of 10.
    resourcePath : str, default is Undefined, optional
        The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
    $type : str, default is Undefined, optional
        The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
    """


    failureThreshold?: float

    resourcePath?: str

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecInitProviderHealthCheckCustomConfig:
    r"""
    A complex type that contains settings for ECS managed health checks. See health_check_custom_config Block for details.

    Attributes
    ----------
    failureThreshold : float, default is Undefined, optional
        The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
    """


    failureThreshold?: float


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecProviderConfigRefPolicy


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRef

    metadata?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToMetadata

    name: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRefPolicy


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatus:
    r"""
    ServiceStatus defines the observed state of Service.

    Attributes
    ----------
    atProvider : ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ServicediscoveryAwsUpboundIoV1beta2ServiceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProvider

    conditions?: [ServicediscoveryAwsUpboundIoV1beta2ServiceStatusConditionsItems0]

    observedGeneration?: int


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProvider:
    r"""
    servicediscovery aws upbound io v1beta2 service status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the service.
    description : str, default is Undefined, optional
        The description of the service.
    dnsConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderDNSConfig, default is Undefined, optional
        dns config
    forceDestroy : bool, default is Undefined, optional
        A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable. Defaults to false.
    healthCheckConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckConfig, default is Undefined, optional
        health check config
    healthCheckCustomConfig : ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckCustomConfig, default is Undefined, optional
        health check custom config
    id : str, default is Undefined, optional
        The ID of the service.
    name : str, default is Undefined, optional
        The name of the service.
    namespaceId : str, default is Undefined, optional
        The ID of the namespace that you want to use to create the service.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        If present, specifies that the service instances are only discoverable using the DiscoverInstances API operation. No DNS records is registered for the service instances. The only valid value is HTTP.
    """


    arn?: str

    description?: str

    dnsConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderDNSConfig

    forceDestroy?: bool

    healthCheckConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckConfig

    healthCheckCustomConfig?: ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckCustomConfig

    id?: str

    name?: str

    namespaceId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderDNSConfig:
    r"""
    A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance. See dns_config Block for details.

    Attributes
    ----------
    dnsRecords : [ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderDNSConfigDNSRecordsItems0], default is Undefined, optional
        An array that contains one DnsRecord object for each resource record set. See dns_records Block for details.
    namespaceId : str, default is Undefined, optional
        The ID of the namespace to use for DNS configuration.
    routingPolicy : str, default is Undefined, optional
        The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
    """


    dnsRecords?: [ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderDNSConfigDNSRecordsItems0]

    namespaceId?: str

    routingPolicy?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderDNSConfigDNSRecordsItems0:
    r"""
    servicediscovery aws upbound io v1beta2 service status at provider DNS config DNS records items0

    Attributes
    ----------
    ttl : float, default is Undefined, optional
        The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
    $type : str, default is Undefined, optional
        The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
    """


    ttl?: float

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckConfig:
    r"""
    A complex type that contains settings for an optional health check. Only for Public DNS namespaces. See health_check_config Block for details.

    Attributes
    ----------
    failureThreshold : float, default is Undefined, optional
        The number of consecutive health checks. Maximum value of 10.
    resourcePath : str, default is Undefined, optional
        The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
    $type : str, default is Undefined, optional
        The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
    """


    failureThreshold?: float

    resourcePath?: str

    $type?: str


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatusAtProviderHealthCheckCustomConfig:
    r"""
    A complex type that contains settings for ECS managed health checks. See health_check_custom_config Block for details.

    Attributes
    ----------
    failureThreshold : float, default is Undefined, optional
        The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
    """


    failureThreshold?: float


schema ServicediscoveryAwsUpboundIoV1beta2ServiceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


