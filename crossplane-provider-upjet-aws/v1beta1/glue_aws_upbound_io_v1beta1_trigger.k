"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Trigger:
    r"""
    Trigger is the Schema for the Triggers API. Manages a Glue Trigger resource.

    Attributes
    ----------
    apiVersion : str, default is "glue.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Trigger", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : GlueAwsUpboundIoV1beta1TriggerSpec, default is Undefined, required
        spec
    status : GlueAwsUpboundIoV1beta1TriggerStatus, default is Undefined, optional
        status
    """


    apiVersion: "glue.aws.upbound.io/v1beta1" = "glue.aws.upbound.io/v1beta1"

    kind: "Trigger" = "Trigger"

    metadata?: v1.ObjectMeta

    spec: GlueAwsUpboundIoV1beta1TriggerSpec

    status?: GlueAwsUpboundIoV1beta1TriggerStatus


schema GlueAwsUpboundIoV1beta1TriggerSpec:
    r"""
    TriggerSpec defines the desired state of Trigger

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : GlueAwsUpboundIoV1beta1TriggerSpecForProvider, default is Undefined, required
        for provider
    initProvider : GlueAwsUpboundIoV1beta1TriggerSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : GlueAwsUpboundIoV1beta1TriggerSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : GlueAwsUpboundIoV1beta1TriggerSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: GlueAwsUpboundIoV1beta1TriggerSpecForProvider

    initProvider?: GlueAwsUpboundIoV1beta1TriggerSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: GlueAwsUpboundIoV1beta1TriggerSpecProviderConfigRef

    publishConnectionDetailsTo?: GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: GlueAwsUpboundIoV1beta1TriggerSpecWriteConnectionSecretToRef


schema GlueAwsUpboundIoV1beta1TriggerSpecForProvider:
    r"""
    glue aws upbound io v1beta1 trigger spec for provider

    Attributes
    ----------
    actions : [GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0], default is Undefined, optional
        –  List of actions initiated by this trigger when it fires. See Actions Below.
    description : str, default is Undefined, optional
        –  A description of the new trigger.
    enabled : bool, default is Undefined, optional
        –  Start the trigger. Defaults to true.
    eventBatchingCondition : [GlueAwsUpboundIoV1beta1TriggerSpecForProviderEventBatchingConditionItems0], default is Undefined, optional
        Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires. See Event Batching Condition.
    predicate : [GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0], default is Undefined, optional
        –  A predicate to specify when the new trigger should fire. Required when trigger type is CONDITIONAL. See Predicate Below.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    schedule : str, default is Undefined, optional
        Based Schedules for Jobs and Crawlers
    startOnCreation : bool, default is Undefined, optional
        –  Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        –  The type of trigger. Valid values are CONDITIONAL, EVENT, ON_DEMAND, and SCHEDULED.
    workflowName : str, default is Undefined, optional
        A workflow to which the trigger should be associated to. Every workflow graph (DAG) needs a starting trigger (ON_DEMAND or SCHEDULED type) and can contain multiple additional CONDITIONAL triggers.
    """


    actions?: [GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0]

    description?: str

    enabled?: bool

    eventBatchingCondition?: [GlueAwsUpboundIoV1beta1TriggerSpecForProviderEventBatchingConditionItems0]

    predicate?: [GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0]

    region: str

    schedule?: str

    startOnCreation?: bool

    tags?: {str:str}

    $type?: str

    workflowName?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec for provider actions items0

    Attributes
    ----------
    arguments : {str:str}, default is Undefined, optional
        Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
    crawlerName : str, default is Undefined, optional
        The name of the crawler to be executed. Conflicts with job_name.
    crawlerNameRef : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameRef, default is Undefined, optional
        crawler name ref
    crawlerNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameSelector, default is Undefined, optional
        crawler name selector
    jobName : str, default is Undefined, optional
        The name of a job to be executed. Conflicts with crawler_name.
    jobNameRef : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameRef, default is Undefined, optional
        job name ref
    jobNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameSelector, default is Undefined, optional
        job name selector
    notificationProperty : [GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0NotificationPropertyItems0], default is Undefined, optional
        Specifies configuration properties of a job run notification. See Notification Property details below.
    securityConfiguration : str, default is Undefined, optional
        The name of the Security Configuration structure to be used with this action.
    timeout : float, default is Undefined, optional
        The job run timeout in minutes. It overrides the timeout value of the job.
    """


    arguments?: {str:str}

    crawlerName?: str

    crawlerNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameRef

    crawlerNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameSelector

    jobName?: str

    jobNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameRef

    jobNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameSelector

    notificationProperty?: [GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0NotificationPropertyItems0]

    securityConfiguration?: str

    timeout?: float


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameRef:
    r"""
    Reference to a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameSelector:
    r"""
    Selector for a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0CrawlerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameRef:
    r"""
    Reference to a Job in glue to populate jobName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameSelector:
    r"""
    Selector for a Job in glue to populate jobName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0JobNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderActionsItems0NotificationPropertyItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec for provider actions items0 notification property items0

    Attributes
    ----------
    notifyDelayAfter : float, default is Undefined, optional
        After a job run starts, the number of minutes to wait before sending a job run delay notification.
    """


    notifyDelayAfter?: float


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderEventBatchingConditionItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec for provider event batching condition items0

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        Number of events that must be received from Amazon EventBridge before EventBridge  event trigger fires.
    batchWindow : float, default is Undefined, optional
        Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received. Default value is 900.
    """


    batchSize?: float

    batchWindow?: float


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec for provider predicate items0

    Attributes
    ----------
    conditions : [GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0], default is Undefined, optional
        A list of the conditions that determine when the trigger will fire. See Conditions.
    logical : str, default is Undefined, optional
        How to handle multiple conditions. Defaults to AND. Valid values are AND or ANY.
    """


    conditions?: [GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0]

    logical?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec for provider predicate items0 conditions items0

    Attributes
    ----------
    crawlState : str, default is Undefined, optional
        The condition crawl state. Currently, the values supported are RUNNING, SUCCEEDED, CANCELLED, and FAILED. If this is specified, crawler_name must also be specified. Conflicts with state.
    crawlerName : str, default is Undefined, optional
        The name of the crawler to be executed. Conflicts with job_name.
    crawlerNameRef : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameRef, default is Undefined, optional
        crawler name ref
    crawlerNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameSelector, default is Undefined, optional
        crawler name selector
    jobName : str, default is Undefined, optional
        The name of a job to be executed. Conflicts with crawler_name.
    jobNameRef : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameRef, default is Undefined, optional
        job name ref
    jobNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameSelector, default is Undefined, optional
        job name selector
    logicalOperator : str, default is Undefined, optional
        A logical operator. Defaults to EQUALS.
    state : str, default is Undefined, optional
        The condition job state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT and FAILED. If this is specified, job_name must also be specified. Conflicts with crawler_state.
    """


    crawlState?: str

    crawlerName?: str

    crawlerNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameRef

    crawlerNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameSelector

    jobName?: str

    jobNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameRef

    jobNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameSelector

    logicalOperator?: str

    state?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameRef:
    r"""
    Reference to a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameSelector:
    r"""
    Selector for a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0CrawlerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameRef:
    r"""
    Reference to a Job in glue to populate jobName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameSelector:
    r"""
    Selector for a Job in glue to populate jobName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecForProviderPredicateItems0ConditionsItems0JobNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    actions : [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0], default is Undefined, optional
        –  List of actions initiated by this trigger when it fires. See Actions Below.
    description : str, default is Undefined, optional
        –  A description of the new trigger.
    enabled : bool, default is Undefined, optional
        –  Start the trigger. Defaults to true.
    eventBatchingCondition : [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderEventBatchingConditionItems0], default is Undefined, optional
        Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires. See Event Batching Condition.
    predicate : [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0], default is Undefined, optional
        –  A predicate to specify when the new trigger should fire. Required when trigger type is CONDITIONAL. See Predicate Below.
    schedule : str, default is Undefined, optional
        Based Schedules for Jobs and Crawlers
    startOnCreation : bool, default is Undefined, optional
        –  Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        –  The type of trigger. Valid values are CONDITIONAL, EVENT, ON_DEMAND, and SCHEDULED.
    workflowName : str, default is Undefined, optional
        A workflow to which the trigger should be associated to. Every workflow graph (DAG) needs a starting trigger (ON_DEMAND or SCHEDULED type) and can contain multiple additional CONDITIONAL triggers.
    """


    actions?: [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0]

    description?: str

    enabled?: bool

    eventBatchingCondition?: [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderEventBatchingConditionItems0]

    predicate?: [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0]

    schedule?: str

    startOnCreation?: bool

    tags?: {str:str}

    $type?: str

    workflowName?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec init provider actions items0

    Attributes
    ----------
    arguments : {str:str}, default is Undefined, optional
        Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
    crawlerName : str, default is Undefined, optional
        The name of the crawler to be executed. Conflicts with job_name.
    crawlerNameRef : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameRef, default is Undefined, optional
        crawler name ref
    crawlerNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameSelector, default is Undefined, optional
        crawler name selector
    jobName : str, default is Undefined, optional
        The name of a job to be executed. Conflicts with crawler_name.
    jobNameRef : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameRef, default is Undefined, optional
        job name ref
    jobNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameSelector, default is Undefined, optional
        job name selector
    notificationProperty : [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0NotificationPropertyItems0], default is Undefined, optional
        Specifies configuration properties of a job run notification. See Notification Property details below.
    securityConfiguration : str, default is Undefined, optional
        The name of the Security Configuration structure to be used with this action.
    timeout : float, default is Undefined, optional
        The job run timeout in minutes. It overrides the timeout value of the job.
    """


    arguments?: {str:str}

    crawlerName?: str

    crawlerNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameRef

    crawlerNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameSelector

    jobName?: str

    jobNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameRef

    jobNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameSelector

    notificationProperty?: [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0NotificationPropertyItems0]

    securityConfiguration?: str

    timeout?: float


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameRef:
    r"""
    Reference to a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameSelector:
    r"""
    Selector for a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0CrawlerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameRef:
    r"""
    Reference to a Job in glue to populate jobName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameSelector:
    r"""
    Selector for a Job in glue to populate jobName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0JobNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderActionsItems0NotificationPropertyItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec init provider actions items0 notification property items0

    Attributes
    ----------
    notifyDelayAfter : float, default is Undefined, optional
        After a job run starts, the number of minutes to wait before sending a job run delay notification.
    """


    notifyDelayAfter?: float


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderEventBatchingConditionItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec init provider event batching condition items0

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        Number of events that must be received from Amazon EventBridge before EventBridge  event trigger fires.
    batchWindow : float, default is Undefined, optional
        Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received. Default value is 900.
    """


    batchSize?: float

    batchWindow?: float


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec init provider predicate items0

    Attributes
    ----------
    conditions : [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0], default is Undefined, optional
        A list of the conditions that determine when the trigger will fire. See Conditions.
    logical : str, default is Undefined, optional
        How to handle multiple conditions. Defaults to AND. Valid values are AND or ANY.
    """


    conditions?: [GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0]

    logical?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0:
    r"""
    glue aws upbound io v1beta1 trigger spec init provider predicate items0 conditions items0

    Attributes
    ----------
    crawlState : str, default is Undefined, optional
        The condition crawl state. Currently, the values supported are RUNNING, SUCCEEDED, CANCELLED, and FAILED. If this is specified, crawler_name must also be specified. Conflicts with state.
    crawlerName : str, default is Undefined, optional
        The name of the crawler to be executed. Conflicts with job_name.
    crawlerNameRef : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameRef, default is Undefined, optional
        crawler name ref
    crawlerNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameSelector, default is Undefined, optional
        crawler name selector
    jobName : str, default is Undefined, optional
        The name of a job to be executed. Conflicts with crawler_name.
    jobNameRef : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameRef, default is Undefined, optional
        job name ref
    jobNameSelector : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameSelector, default is Undefined, optional
        job name selector
    logicalOperator : str, default is Undefined, optional
        A logical operator. Defaults to EQUALS.
    state : str, default is Undefined, optional
        The condition job state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT and FAILED. If this is specified, job_name must also be specified. Conflicts with crawler_state.
    """


    crawlState?: str

    crawlerName?: str

    crawlerNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameRef

    crawlerNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameSelector

    jobName?: str

    jobNameRef?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameRef

    jobNameSelector?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameSelector

    logicalOperator?: str

    state?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameRef:
    r"""
    Reference to a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameSelector:
    r"""
    Selector for a Crawler in glue to populate crawlerName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0CrawlerNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameRef:
    r"""
    Reference to a Job in glue to populate jobName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameSelector:
    r"""
    Selector for a Job in glue to populate jobName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameSelectorPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecInitProviderPredicateItems0ConditionsItems0JobNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecProviderConfigRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRef

    metadata?: GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToMetadata

    name: str


schema GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRefPolicy


schema GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema GlueAwsUpboundIoV1beta1TriggerSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema GlueAwsUpboundIoV1beta1TriggerSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema GlueAwsUpboundIoV1beta1TriggerStatus:
    r"""
    TriggerStatus defines the observed state of Trigger.

    Attributes
    ----------
    atProvider : GlueAwsUpboundIoV1beta1TriggerStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [GlueAwsUpboundIoV1beta1TriggerStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: GlueAwsUpboundIoV1beta1TriggerStatusAtProvider

    conditions?: [GlueAwsUpboundIoV1beta1TriggerStatusConditionsItems0]

    observedGeneration?: int


schema GlueAwsUpboundIoV1beta1TriggerStatusAtProvider:
    r"""
    glue aws upbound io v1beta1 trigger status at provider

    Attributes
    ----------
    actions : [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderActionsItems0], default is Undefined, optional
        –  List of actions initiated by this trigger when it fires. See Actions Below.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of Glue Trigger
    description : str, default is Undefined, optional
        –  A description of the new trigger.
    enabled : bool, default is Undefined, optional
        –  Start the trigger. Defaults to true.
    eventBatchingCondition : [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderEventBatchingConditionItems0], default is Undefined, optional
        Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires. See Event Batching Condition.
    id : str, default is Undefined, optional
        Trigger name
    predicate : [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderPredicateItems0], default is Undefined, optional
        –  A predicate to specify when the new trigger should fire. Required when trigger type is CONDITIONAL. See Predicate Below.
    schedule : str, default is Undefined, optional
        Based Schedules for Jobs and Crawlers
    startOnCreation : bool, default is Undefined, optional
        –  Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.
    state : str, default is Undefined, optional
        The condition job state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT and FAILED. If this is specified, job_name must also be specified. Conflicts with crawler_state.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        –  The type of trigger. Valid values are CONDITIONAL, EVENT, ON_DEMAND, and SCHEDULED.
    workflowName : str, default is Undefined, optional
        A workflow to which the trigger should be associated to. Every workflow graph (DAG) needs a starting trigger (ON_DEMAND or SCHEDULED type) and can contain multiple additional CONDITIONAL triggers.
    """


    actions?: [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderActionsItems0]

    arn?: str

    description?: str

    enabled?: bool

    eventBatchingCondition?: [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderEventBatchingConditionItems0]

    id?: str

    predicate?: [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderPredicateItems0]

    schedule?: str

    startOnCreation?: bool

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    workflowName?: str


schema GlueAwsUpboundIoV1beta1TriggerStatusAtProviderActionsItems0:
    r"""
    glue aws upbound io v1beta1 trigger status at provider actions items0

    Attributes
    ----------
    arguments : {str:str}, default is Undefined, optional
        Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
    crawlerName : str, default is Undefined, optional
        The name of the crawler to be executed. Conflicts with job_name.
    jobName : str, default is Undefined, optional
        The name of a job to be executed. Conflicts with crawler_name.
    notificationProperty : [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderActionsItems0NotificationPropertyItems0], default is Undefined, optional
        Specifies configuration properties of a job run notification. See Notification Property details below.
    securityConfiguration : str, default is Undefined, optional
        The name of the Security Configuration structure to be used with this action.
    timeout : float, default is Undefined, optional
        The job run timeout in minutes. It overrides the timeout value of the job.
    """


    arguments?: {str:str}

    crawlerName?: str

    jobName?: str

    notificationProperty?: [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderActionsItems0NotificationPropertyItems0]

    securityConfiguration?: str

    timeout?: float


schema GlueAwsUpboundIoV1beta1TriggerStatusAtProviderActionsItems0NotificationPropertyItems0:
    r"""
    glue aws upbound io v1beta1 trigger status at provider actions items0 notification property items0

    Attributes
    ----------
    notifyDelayAfter : float, default is Undefined, optional
        After a job run starts, the number of minutes to wait before sending a job run delay notification.
    """


    notifyDelayAfter?: float


schema GlueAwsUpboundIoV1beta1TriggerStatusAtProviderEventBatchingConditionItems0:
    r"""
    glue aws upbound io v1beta1 trigger status at provider event batching condition items0

    Attributes
    ----------
    batchSize : float, default is Undefined, optional
        Number of events that must be received from Amazon EventBridge before EventBridge  event trigger fires.
    batchWindow : float, default is Undefined, optional
        Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received. Default value is 900.
    """


    batchSize?: float

    batchWindow?: float


schema GlueAwsUpboundIoV1beta1TriggerStatusAtProviderPredicateItems0:
    r"""
    glue aws upbound io v1beta1 trigger status at provider predicate items0

    Attributes
    ----------
    conditions : [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderPredicateItems0ConditionsItems0], default is Undefined, optional
        A list of the conditions that determine when the trigger will fire. See Conditions.
    logical : str, default is Undefined, optional
        How to handle multiple conditions. Defaults to AND. Valid values are AND or ANY.
    """


    conditions?: [GlueAwsUpboundIoV1beta1TriggerStatusAtProviderPredicateItems0ConditionsItems0]

    logical?: str


schema GlueAwsUpboundIoV1beta1TriggerStatusAtProviderPredicateItems0ConditionsItems0:
    r"""
    glue aws upbound io v1beta1 trigger status at provider predicate items0 conditions items0

    Attributes
    ----------
    crawlState : str, default is Undefined, optional
        The condition crawl state. Currently, the values supported are RUNNING, SUCCEEDED, CANCELLED, and FAILED. If this is specified, crawler_name must also be specified. Conflicts with state.
    crawlerName : str, default is Undefined, optional
        The name of the crawler to be executed. Conflicts with job_name.
    jobName : str, default is Undefined, optional
        The name of a job to be executed. Conflicts with crawler_name.
    logicalOperator : str, default is Undefined, optional
        A logical operator. Defaults to EQUALS.
    state : str, default is Undefined, optional
        The condition job state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT and FAILED. If this is specified, job_name must also be specified. Conflicts with crawler_state.
    """


    crawlState?: str

    crawlerName?: str

    jobName?: str

    logicalOperator?: str

    state?: str


schema GlueAwsUpboundIoV1beta1TriggerStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


