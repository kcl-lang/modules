"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Stage:
    r"""
    Stage is the Schema for the Stages API. Manages an API Gateway Stage.

    Attributes
    ----------
    apiVersion : str, default is "apigateway.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stage", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ApigatewayAwsUpboundIoV1beta2StageSpec, default is Undefined, required
        spec
    status : ApigatewayAwsUpboundIoV1beta2StageStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigateway.aws.upbound.io/v1beta2" = "apigateway.aws.upbound.io/v1beta2"

    kind: "Stage" = "Stage"

    metadata?: v1.ObjectMeta

    spec: ApigatewayAwsUpboundIoV1beta2StageSpec

    status?: ApigatewayAwsUpboundIoV1beta2StageStatus


schema ApigatewayAwsUpboundIoV1beta2StageSpec:
    r"""
    StageSpec defines the desired state of Stage

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ApigatewayAwsUpboundIoV1beta2StageSpecForProvider, default is Undefined, required
        for provider
    initProvider : ApigatewayAwsUpboundIoV1beta2StageSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ApigatewayAwsUpboundIoV1beta2StageSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ApigatewayAwsUpboundIoV1beta2StageSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ApigatewayAwsUpboundIoV1beta2StageSpecForProvider

    initProvider?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ApigatewayAwsUpboundIoV1beta2StageSpecProviderConfigRef

    publishConnectionDetailsTo?: ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ApigatewayAwsUpboundIoV1beta2StageSpecWriteConnectionSecretToRef


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProvider:
    r"""
    apigateway aws upbound io v1beta2 stage spec for provider

    Attributes
    ----------
    accessLogSettings : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderAccessLogSettings, default is Undefined, optional
        access log settings
    cacheClusterEnabled : bool, default is Undefined, optional
        Whether a cache cluster is enabled for the stage
    cacheClusterSize : str, default is Undefined, optional
        Size of the cache cluster for the stage, if enabled. Allowed values include 0.5, 1.6, 6.1, 13.5, 28.4, 58.2, 118 and 237.
    canarySettings : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderCanarySettings, default is Undefined, optional
        canary settings
    clientCertificateId : str, default is Undefined, optional
        Identifier of a client certificate for the stage.
    deploymentId : str, default is Undefined, optional
        ID of the deployment that the stage points to
    deploymentIdRef : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRef, default is Undefined, optional
        deployment Id ref
    deploymentIdSelector : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelector, default is Undefined, optional
        deployment Id selector
    description : str, default is Undefined, optional
        Description of the stage.
    documentationVersion : str, default is Undefined, optional
        Version of the associated API documentation
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    restApiId : str, default is Undefined, optional
        ID of the associated REST API
    restApiIdRef : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDRef, default is Undefined, optional
        rest Api Id ref
    restApiIdSelector : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDSelector, default is Undefined, optional
        rest Api Id selector
    stageName : str, default is Undefined, optional
        Name of the stage
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    variables : {str:str}, default is Undefined, optional
        Map that defines the stage variables
    xrayTracingEnabled : bool, default is Undefined, optional
        Whether active tracing with X-ray is enabled. Defaults to false.
    """


    accessLogSettings?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderAccessLogSettings

    cacheClusterEnabled?: bool

    cacheClusterSize?: str

    canarySettings?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderCanarySettings

    clientCertificateId?: str

    deploymentId?: str

    deploymentIdRef?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRef

    deploymentIdSelector?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelector

    description?: str

    documentationVersion?: str

    region: str

    restApiId?: str

    restApiIdRef?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDRef

    restApiIdSelector?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDSelector

    stageName?: str

    tags?: {str:str}

    variables?: {str:str}

    xrayTracingEnabled?: bool


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderAccessLogSettings:
    r"""
    Enables access logs for the API stage. See Access Log Settings below.

    Attributes
    ----------
    destinationArn : str, default is Undefined, optional
        ARN of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. Automatically removes trailing :* if present.
    format : str, default is Undefined, optional
        Formatting and values recorded in the logs.
        For more information on configuring the log format rules visit the AWS documentation
    """


    destinationArn?: str

    format?: str


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderCanarySettings:
    r"""
    Configuration settings of a canary deployment. See Canary Settings below.

    Attributes
    ----------
    deploymentId : str, default is Undefined, optional
        ID of the deployment that the stage points to
    percentTraffic : float, default is Undefined, optional
        Percent 0.0 - 100.0 of traffic to divert to the canary deployment.
    stageVariableOverrides : {str:str}, default is Undefined, optional
        Map of overridden stage variables (including new variables) for the canary deployment.
    useStageCache : bool, default is Undefined, optional
        Whether the canary deployment uses the stage cache. Defaults to false.
    """


    deploymentId?: str

    percentTraffic?: float

    stageVariableOverrides?: {str:str}

    useStageCache?: bool


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRef:
    r"""
    Reference to a Deployment in apigateway to populate deploymentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelector:
    r"""
    Selector for a Deployment in apigateway to populate deploymentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderDeploymentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecForProviderRestAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessLogSettings : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderAccessLogSettings, default is Undefined, optional
        access log settings
    cacheClusterEnabled : bool, default is Undefined, optional
        Whether a cache cluster is enabled for the stage
    cacheClusterSize : str, default is Undefined, optional
        Size of the cache cluster for the stage, if enabled. Allowed values include 0.5, 1.6, 6.1, 13.5, 28.4, 58.2, 118 and 237.
    canarySettings : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderCanarySettings, default is Undefined, optional
        canary settings
    clientCertificateId : str, default is Undefined, optional
        Identifier of a client certificate for the stage.
    deploymentId : str, default is Undefined, optional
        ID of the deployment that the stage points to
    deploymentIdRef : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRef, default is Undefined, optional
        deployment Id ref
    deploymentIdSelector : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelector, default is Undefined, optional
        deployment Id selector
    description : str, default is Undefined, optional
        Description of the stage.
    documentationVersion : str, default is Undefined, optional
        Version of the associated API documentation
    restApiId : str, default is Undefined, optional
        ID of the associated REST API
    restApiIdRef : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDRef, default is Undefined, optional
        rest Api Id ref
    restApiIdSelector : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDSelector, default is Undefined, optional
        rest Api Id selector
    stageName : str, default is Undefined, optional
        Name of the stage
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    variables : {str:str}, default is Undefined, optional
        Map that defines the stage variables
    xrayTracingEnabled : bool, default is Undefined, optional
        Whether active tracing with X-ray is enabled. Defaults to false.
    """


    accessLogSettings?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderAccessLogSettings

    cacheClusterEnabled?: bool

    cacheClusterSize?: str

    canarySettings?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderCanarySettings

    clientCertificateId?: str

    deploymentId?: str

    deploymentIdRef?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRef

    deploymentIdSelector?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelector

    description?: str

    documentationVersion?: str

    restApiId?: str

    restApiIdRef?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDRef

    restApiIdSelector?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDSelector

    stageName?: str

    tags?: {str:str}

    variables?: {str:str}

    xrayTracingEnabled?: bool


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderAccessLogSettings:
    r"""
    Enables access logs for the API stage. See Access Log Settings below.

    Attributes
    ----------
    destinationArn : str, default is Undefined, optional
        ARN of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. Automatically removes trailing :* if present.
    format : str, default is Undefined, optional
        Formatting and values recorded in the logs.
        For more information on configuring the log format rules visit the AWS documentation
    """


    destinationArn?: str

    format?: str


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderCanarySettings:
    r"""
    Configuration settings of a canary deployment. See Canary Settings below.

    Attributes
    ----------
    deploymentId : str, default is Undefined, optional
        ID of the deployment that the stage points to
    percentTraffic : float, default is Undefined, optional
        Percent 0.0 - 100.0 of traffic to divert to the canary deployment.
    stageVariableOverrides : {str:str}, default is Undefined, optional
        Map of overridden stage variables (including new variables) for the canary deployment.
    useStageCache : bool, default is Undefined, optional
        Whether the canary deployment uses the stage cache. Defaults to false.
    """


    deploymentId?: str

    percentTraffic?: float

    stageVariableOverrides?: {str:str}

    useStageCache?: bool


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRef:
    r"""
    Reference to a Deployment in apigateway to populate deploymentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelector:
    r"""
    Selector for a Deployment in apigateway to populate deploymentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderDeploymentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDRef:
    r"""
    Reference to a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDRefPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDSelector:
    r"""
    Selector for a RestAPI in apigateway to populate restApiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDSelectorPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecInitProviderRestAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecProviderConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRef

    metadata?: ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToMetadata

    name: str


schema ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRefPolicy


schema ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ApigatewayAwsUpboundIoV1beta2StageSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ApigatewayAwsUpboundIoV1beta2StageSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ApigatewayAwsUpboundIoV1beta2StageStatus:
    r"""
    StageStatus defines the observed state of Stage.

    Attributes
    ----------
    atProvider : ApigatewayAwsUpboundIoV1beta2StageStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ApigatewayAwsUpboundIoV1beta2StageStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ApigatewayAwsUpboundIoV1beta2StageStatusAtProvider

    conditions?: [ApigatewayAwsUpboundIoV1beta2StageStatusConditionsItems0]

    observedGeneration?: int


schema ApigatewayAwsUpboundIoV1beta2StageStatusAtProvider:
    r"""
    apigateway aws upbound io v1beta2 stage status at provider

    Attributes
    ----------
    accessLogSettings : ApigatewayAwsUpboundIoV1beta2StageStatusAtProviderAccessLogSettings, default is Undefined, optional
        access log settings
    arn : str, default is Undefined, optional
        ARN
    cacheClusterEnabled : bool, default is Undefined, optional
        Whether a cache cluster is enabled for the stage
    cacheClusterSize : str, default is Undefined, optional
        Size of the cache cluster for the stage, if enabled. Allowed values include 0.5, 1.6, 6.1, 13.5, 28.4, 58.2, 118 and 237.
    canarySettings : ApigatewayAwsUpboundIoV1beta2StageStatusAtProviderCanarySettings, default is Undefined, optional
        canary settings
    clientCertificateId : str, default is Undefined, optional
        Identifier of a client certificate for the stage.
    deploymentId : str, default is Undefined, optional
        ID of the deployment that the stage points to
    description : str, default is Undefined, optional
        Description of the stage.
    documentationVersion : str, default is Undefined, optional
        Version of the associated API documentation
    executionArn : str, default is Undefined, optional
        Execution ARN to be used in lambda_permission's source_arn
        when allowing API Gateway to invoke a Lambda function,
        e.g., arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod
    id : str, default is Undefined, optional
        ID of the stage
    invokeUrl : str, default is Undefined, optional
        URL to invoke the API pointing to the stage,
        e.g., https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod
    restApiId : str, default is Undefined, optional
        ID of the associated REST API
    stageName : str, default is Undefined, optional
        Name of the stage
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    variables : {str:str}, default is Undefined, optional
        Map that defines the stage variables
    webAclArn : str, default is Undefined, optional
        ARN of the WebAcl associated with the Stage.
    xrayTracingEnabled : bool, default is Undefined, optional
        Whether active tracing with X-ray is enabled. Defaults to false.
    """


    accessLogSettings?: ApigatewayAwsUpboundIoV1beta2StageStatusAtProviderAccessLogSettings

    arn?: str

    cacheClusterEnabled?: bool

    cacheClusterSize?: str

    canarySettings?: ApigatewayAwsUpboundIoV1beta2StageStatusAtProviderCanarySettings

    clientCertificateId?: str

    deploymentId?: str

    description?: str

    documentationVersion?: str

    executionArn?: str

    id?: str

    invokeUrl?: str

    restApiId?: str

    stageName?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    variables?: {str:str}

    webAclArn?: str

    xrayTracingEnabled?: bool


schema ApigatewayAwsUpboundIoV1beta2StageStatusAtProviderAccessLogSettings:
    r"""
    Enables access logs for the API stage. See Access Log Settings below.

    Attributes
    ----------
    destinationArn : str, default is Undefined, optional
        ARN of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with amazon-apigateway-. Automatically removes trailing :* if present.
    format : str, default is Undefined, optional
        Formatting and values recorded in the logs.
        For more information on configuring the log format rules visit the AWS documentation
    """


    destinationArn?: str

    format?: str


schema ApigatewayAwsUpboundIoV1beta2StageStatusAtProviderCanarySettings:
    r"""
    Configuration settings of a canary deployment. See Canary Settings below.

    Attributes
    ----------
    deploymentId : str, default is Undefined, optional
        ID of the deployment that the stage points to
    percentTraffic : float, default is Undefined, optional
        Percent 0.0 - 100.0 of traffic to divert to the canary deployment.
    stageVariableOverrides : {str:str}, default is Undefined, optional
        Map of overridden stage variables (including new variables) for the canary deployment.
    useStageCache : bool, default is Undefined, optional
        Whether the canary deployment uses the stage cache. Defaults to false.
    """


    deploymentId?: str

    percentTraffic?: float

    stageVariableOverrides?: {str:str}

    useStageCache?: bool


schema ApigatewayAwsUpboundIoV1beta2StageStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


