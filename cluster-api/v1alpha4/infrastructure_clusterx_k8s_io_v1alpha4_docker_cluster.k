"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DockerCluster:
    r"""
    DockerCluster is the Schema for the dockerclusters API.


    Deprecated: This type will be removed in one of the next releases.

    Attributes
    ----------
    apiVersion : str, default is "infrastructure.cluster.x-k8s.io/v1alpha4", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DockerCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InfrastructureClusterxK8sIoV1alpha4DockerClusterSpec, default is Undefined, optional
        spec
    status : InfrastructureClusterxK8sIoV1alpha4DockerClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "infrastructure.cluster.x-k8s.io/v1alpha4" = "infrastructure.cluster.x-k8s.io/v1alpha4"

    kind: "DockerCluster" = "DockerCluster"

    metadata?: v1.ObjectMeta

    spec?: InfrastructureClusterxK8sIoV1alpha4DockerClusterSpec

    status?: InfrastructureClusterxK8sIoV1alpha4DockerClusterStatus


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterSpec:
    r"""
    DockerClusterSpec defines the desired state of DockerCluster.

    Attributes
    ----------
    controlPlaneEndpoint : InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecControlPlaneEndpoint, default is Undefined, optional
        control plane endpoint
    failureDomains : {str:InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecFailureDomainsAnon}, default is Undefined, optional
        FailureDomains are not usulaly defined on the spec.
        The docker provider is special since failure domains don't mean anything in a local docker environment.
        Instead, the docker cluster controller will simply copy these into the Status and allow the Cluster API
        controllers to do what they will with the defined failure domains.
    loadBalancer : InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecLoadBalancer, default is Undefined, optional
        load balancer
    """


    controlPlaneEndpoint?: InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecControlPlaneEndpoint

    failureDomains?: {str:InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecFailureDomainsAnon}

    loadBalancer?: InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecLoadBalancer


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecControlPlaneEndpoint:
    r"""
    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.

    Attributes
    ----------
    host : str, default is Undefined, required
        Host is the hostname on which the API server is serving.
    port : int, default is Undefined, required
        Port is the port on which the API server is serving.
    """


    host: str

    port: int


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterSpecLoadBalancer:
    r"""
    LoadBalancer allows defining configurations for the cluster load balancer.

    Attributes
    ----------
    imageRepository : str, default is Undefined, optional
        ImageRepository sets the container registry to pull the haproxy image from.
        if not set, "kindest" will be used instead.
    imageTag : str, default is Undefined, optional
        ImageTag allows to specify a tag for the haproxy image.
        if not set, "v20210715-a6da3463" will be used instead.
    """


    imageRepository?: str

    imageTag?: str


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterStatus:
    r"""
    DockerClusterStatus defines the observed state of DockerCluster.

    Attributes
    ----------
    conditions : [InfrastructureClusterxK8sIoV1alpha4DockerClusterStatusConditionsItems0], default is Undefined, optional
        Conditions defines current service state of the DockerCluster.
    failureDomains : {str:InfrastructureClusterxK8sIoV1alpha4DockerClusterStatusFailureDomainsAnon}, default is Undefined, optional
        FailureDomains don't mean much in CAPD since it's all local, but we can see how the rest of cluster API
        will use this if we populate it.
    ready : bool, default is Undefined, required
        Ready denotes that the docker cluster (infrastructure) is ready.
    """


    conditions?: [InfrastructureClusterxK8sIoV1alpha4DockerClusterStatusConditionsItems0]

    failureDomains?: {str:InfrastructureClusterxK8sIoV1alpha4DockerClusterStatusFailureDomainsAnon}

    ready: bool


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterStatusConditionsItems0:
    r"""
    Condition defines an observation of a Cluster API resource operational state.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
        This should be when the underlying condition changed. If that is not known, then using the time when
        the API field changed is acceptable.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
        This field may be empty.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition in CamelCase.
        The specific API may choose whether or not this field is considered a guaranteed API.
        This field may not be empty.
    severity : str, default is Undefined, optional
        Severity provides an explicit classification of Reason code, so the users or machines can immediately
        understand the current situation and act accordingly.
        The Severity field MUST be set only when Status=False.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
        can be useful (see .node.status.conditions), the ability to deconflict is important.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    severity?: str

    status: str

    $type: str


schema InfrastructureClusterxK8sIoV1alpha4DockerClusterStatusFailureDomainsAnon:
    r"""
    FailureDomainSpec is the Schema for Cluster API failure domains.
    It allows controllers to understand how many failure domains a cluster can optionally span across.

    Attributes
    ----------
    attributes : {str:str}, default is Undefined, optional
        Attributes is a free form map of attributes an infrastructure provider might use or require.
    controlPlane : bool, default is Undefined, optional
        ControlPlane determines if this failure domain is suitable for use by control plane machines.
    """


    attributes?: {str:str}

    controlPlane?: bool


