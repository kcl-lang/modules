"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Provides an Neptune Cluster Resource

    Attributes
    ----------
    apiVersion : str, default is "neptune.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NeptuneAwsUpboundIoV1beta2ClusterSpec, default is Undefined, required
        spec
    status : NeptuneAwsUpboundIoV1beta2ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "neptune.aws.upbound.io/v1beta2" = "neptune.aws.upbound.io/v1beta2"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: NeptuneAwsUpboundIoV1beta2ClusterSpec

    status?: NeptuneAwsUpboundIoV1beta2ClusterStatus


schema NeptuneAwsUpboundIoV1beta2ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : NeptuneAwsUpboundIoV1beta2ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : NeptuneAwsUpboundIoV1beta2ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : NeptuneAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: NeptuneAwsUpboundIoV1beta2ClusterSpecForProvider

    initProvider?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProvider:
    r"""
    neptune aws upbound io v1beta2 cluster spec for provider

    Attributes
    ----------
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Specifies whether upgrades between different major versions are allowed. You must set it to true when providing an engine_version parameter that uses a different major version than the DB cluster's current version. Default is false.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
    availabilityZones : [str], default is Undefined, optional
        A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for. Default 1
    copyTagsToSnapshot : bool, default is Undefined, optional
        If set to true, tags are copied to any snapshot of the DB cluster that is created.
    deletionProtection : bool, default is Undefined, optional
        A value that indicates whether the DB cluster has deletion protection enabled.The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
    enableCloudwatchLogsExports : [str], default is Undefined, optional
        A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports audit and slowquery.
    engine : str, default is Undefined, optional
        The name of the database engine to be used for this Neptune cluster. Defaults to neptune.
    engineVersion : str, default is Undefined, optional
        The database engine version.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier specified on aws_neptune_global_cluster.
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
    iamRoleRefs : [NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleRefsItems0], default is Undefined, optional
        References to Role in iam to populate iamRoles.
    iamRoleSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleSelector, default is Undefined, optional
        iam role selector
    iamRoles : [str], default is Undefined, optional
        A List of ARNs for the IAM roles to associate to the Neptune Cluster.
    kmsKeyArn : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_arn, storage_encrypted needs to be set to true.
    kmsKeyArnRef : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    neptuneClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    neptuneClusterParameterGroupNameRef : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameRef, default is Undefined, optional
        neptune cluster parameter group name ref
    neptuneClusterParameterGroupNameSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameSelector, default is Undefined, optional
        neptune cluster parameter group name selector
    neptuneInstanceParameterGroupName : str, default is Undefined, optional
        The name of the DB parameter group to apply to all instances of the DB cluster.
    neptuneSubnetGroupName : str, default is Undefined, optional
        A Neptune subnet group to associate with this Neptune instance.
    neptuneSubnetGroupNameRef : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameRef, default is Undefined, optional
        neptune subnet group name ref
    neptuneSubnetGroupNameSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameSelector, default is Undefined, optional
        neptune subnet group name selector
    port : float, default is Undefined, optional
        The port on which the Neptune accepts connections. Default is 8182.
    preferredBackupWindow : str, default is Undefined, optional
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicationSourceIdentifier : str, default is Undefined, optional
        ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
    replicationSourceIdentifierRef : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierRef, default is Undefined, optional
        replication source identifier ref
    replicationSourceIdentifierSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierSelector, default is Undefined, optional
        replication source identifier selector
    serverlessV2ScalingConfiguration : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderServerlessV2ScalingConfiguration, default is Undefined, optional
        serverless v2 scaling configuration
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot. Automated snapshots should not be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
    snapshotIdentifierRef : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierRef, default is Undefined, optional
        snapshot identifier ref
    snapshotIdentifierSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierSelector, default is Undefined, optional
        snapshot identifier selector
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the Neptune cluster is encrypted. The default is false if not specified.
    storageType : str, default is Undefined, optional
        Storage type associated with the cluster standard/iopt1. Default: standard
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate with the Cluster
    """


    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    availabilityZones?: [str]

    backupRetentionPeriod?: float

    copyTagsToSnapshot?: bool

    deletionProtection?: bool

    enableCloudwatchLogsExports?: [str]

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    iamDatabaseAuthenticationEnabled?: bool

    iamRoleRefs?: [NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleRefsItems0]

    iamRoleSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleSelector

    iamRoles?: [str]

    kmsKeyArn?: str

    kmsKeyArnRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnSelector

    neptuneClusterParameterGroupName?: str

    neptuneClusterParameterGroupNameRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameRef

    neptuneClusterParameterGroupNameSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameSelector

    neptuneInstanceParameterGroupName?: str

    neptuneSubnetGroupName?: str

    neptuneSubnetGroupNameRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameRef

    neptuneSubnetGroupNameSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameSelector

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    region: str

    replicationSourceIdentifier?: str

    replicationSourceIdentifierRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierRef

    replicationSourceIdentifierSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierSelector

    serverlessV2ScalingConfiguration?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderServerlessV2ScalingConfiguration

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    snapshotIdentifierRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierRef

    snapshotIdentifierSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierSelector

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleRefsItems0Policy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleSelector:
    r"""
    Selector for a list of Role in iam to populate iamRoles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderIamRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameRef:
    r"""
    Reference to a ClusterParameterGroup in neptune to populate neptuneClusterParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameSelector:
    r"""
    Selector for a ClusterParameterGroup in neptune to populate neptuneClusterParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneClusterParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in neptune to populate neptuneSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in neptune to populate neptuneSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderNeptuneSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierRef:
    r"""
    Reference to a Cluster in neptune to populate replicationSourceIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierSelector:
    r"""
    Selector for a Cluster in neptune to populate replicationSourceIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderReplicationSourceIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderServerlessV2ScalingConfiguration:
    r"""
    If set, create the Neptune cluster as a serverless one. See Serverless for example block attributes.

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        : (default: 128) The maximum Neptune Capacity Units (NCUs) for this cluster. Must be lower or equal than 128. See AWS Documentation for more details.
    minCapacity : float, default is Undefined, optional
        : (default: 2.5) The minimum Neptune Capacity Units (NCUs) for this cluster. Must be greater or equal than 1. See AWS Documentation for more details.
    """


    maxCapacity?: float

    minCapacity?: float


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierRef:
    r"""
    Reference to a ClusterSnapshot in neptune to populate snapshotIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierSelector:
    r"""
    Selector for a ClusterSnapshot in neptune to populate snapshotIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderSnapshotIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Specifies whether upgrades between different major versions are allowed. You must set it to true when providing an engine_version parameter that uses a different major version than the DB cluster's current version. Default is false.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
    availabilityZones : [str], default is Undefined, optional
        A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for. Default 1
    copyTagsToSnapshot : bool, default is Undefined, optional
        If set to true, tags are copied to any snapshot of the DB cluster that is created.
    deletionProtection : bool, default is Undefined, optional
        A value that indicates whether the DB cluster has deletion protection enabled.The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
    enableCloudwatchLogsExports : [str], default is Undefined, optional
        A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports audit and slowquery.
    engine : str, default is Undefined, optional
        The name of the database engine to be used for this Neptune cluster. Defaults to neptune.
    engineVersion : str, default is Undefined, optional
        The database engine version.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier specified on aws_neptune_global_cluster.
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
    iamRoleRefs : [NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleRefsItems0], default is Undefined, optional
        References to Role in iam to populate iamRoles.
    iamRoleSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleSelector, default is Undefined, optional
        iam role selector
    iamRoles : [str], default is Undefined, optional
        A List of ARNs for the IAM roles to associate to the Neptune Cluster.
    kmsKeyArn : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_arn, storage_encrypted needs to be set to true.
    kmsKeyArnRef : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    neptuneClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    neptuneClusterParameterGroupNameRef : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameRef, default is Undefined, optional
        neptune cluster parameter group name ref
    neptuneClusterParameterGroupNameSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameSelector, default is Undefined, optional
        neptune cluster parameter group name selector
    neptuneInstanceParameterGroupName : str, default is Undefined, optional
        The name of the DB parameter group to apply to all instances of the DB cluster.
    neptuneSubnetGroupName : str, default is Undefined, optional
        A Neptune subnet group to associate with this Neptune instance.
    neptuneSubnetGroupNameRef : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameRef, default is Undefined, optional
        neptune subnet group name ref
    neptuneSubnetGroupNameSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameSelector, default is Undefined, optional
        neptune subnet group name selector
    port : float, default is Undefined, optional
        The port on which the Neptune accepts connections. Default is 8182.
    preferredBackupWindow : str, default is Undefined, optional
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    replicationSourceIdentifier : str, default is Undefined, optional
        ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
    replicationSourceIdentifierRef : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierRef, default is Undefined, optional
        replication source identifier ref
    replicationSourceIdentifierSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierSelector, default is Undefined, optional
        replication source identifier selector
    serverlessV2ScalingConfiguration : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderServerlessV2ScalingConfiguration, default is Undefined, optional
        serverless v2 scaling configuration
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot. Automated snapshots should not be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
    snapshotIdentifierRef : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierRef, default is Undefined, optional
        snapshot identifier ref
    snapshotIdentifierSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierSelector, default is Undefined, optional
        snapshot identifier selector
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the Neptune cluster is encrypted. The default is false if not specified.
    storageType : str, default is Undefined, optional
        Storage type associated with the cluster standard/iopt1. Default: standard
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate with the Cluster
    """


    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    availabilityZones?: [str]

    backupRetentionPeriod?: float

    copyTagsToSnapshot?: bool

    deletionProtection?: bool

    enableCloudwatchLogsExports?: [str]

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    iamDatabaseAuthenticationEnabled?: bool

    iamRoleRefs?: [NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleRefsItems0]

    iamRoleSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleSelector

    iamRoles?: [str]

    kmsKeyArn?: str

    kmsKeyArnRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnSelector

    neptuneClusterParameterGroupName?: str

    neptuneClusterParameterGroupNameRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameRef

    neptuneClusterParameterGroupNameSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameSelector

    neptuneInstanceParameterGroupName?: str

    neptuneSubnetGroupName?: str

    neptuneSubnetGroupNameRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameRef

    neptuneSubnetGroupNameSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameSelector

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    replicationSourceIdentifier?: str

    replicationSourceIdentifierRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierRef

    replicationSourceIdentifierSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierSelector

    serverlessV2ScalingConfiguration?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderServerlessV2ScalingConfiguration

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    snapshotIdentifierRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierRef

    snapshotIdentifierSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierSelector

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleRefsItems0Policy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleSelector:
    r"""
    Selector for a list of Role in iam to populate iamRoles.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderIamRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameRef:
    r"""
    Reference to a ClusterParameterGroup in neptune to populate neptuneClusterParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameSelector:
    r"""
    Selector for a ClusterParameterGroup in neptune to populate neptuneClusterParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneClusterParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in neptune to populate neptuneSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in neptune to populate neptuneSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderNeptuneSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierRef:
    r"""
    Reference to a Cluster in neptune to populate replicationSourceIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierSelector:
    r"""
    Selector for a Cluster in neptune to populate replicationSourceIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderReplicationSourceIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderServerlessV2ScalingConfiguration:
    r"""
    If set, create the Neptune cluster as a serverless one. See Serverless for example block attributes.

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        : (default: 128) The maximum Neptune Capacity Units (NCUs) for this cluster. Must be lower or equal than 128. See AWS Documentation for more details.
    minCapacity : float, default is Undefined, optional
        : (default: 2.5) The minimum Neptune Capacity Units (NCUs) for this cluster. Must be greater or equal than 1. See AWS Documentation for more details.
    """


    maxCapacity?: float

    minCapacity?: float


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierRef:
    r"""
    Reference to a ClusterSnapshot in neptune to populate snapshotIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierSelector:
    r"""
    Selector for a ClusterSnapshot in neptune to populate snapshotIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderSnapshotIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema NeptuneAwsUpboundIoV1beta2ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema NeptuneAwsUpboundIoV1beta2ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema NeptuneAwsUpboundIoV1beta2ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : NeptuneAwsUpboundIoV1beta2ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [NeptuneAwsUpboundIoV1beta2ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: NeptuneAwsUpboundIoV1beta2ClusterStatusAtProvider

    conditions?: [NeptuneAwsUpboundIoV1beta2ClusterStatusConditionsItems0]

    observedGeneration?: int


schema NeptuneAwsUpboundIoV1beta2ClusterStatusAtProvider:
    r"""
    neptune aws upbound io v1beta2 cluster status at provider

    Attributes
    ----------
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Specifies whether upgrades between different major versions are allowed. You must set it to true when providing an engine_version parameter that uses a different major version than the DB cluster's current version. Default is false.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false.
    arn : str, default is Undefined, optional
        The Neptune Cluster Amazon Resource Name (ARN)
    availabilityZones : [str], default is Undefined, optional
        A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for. Default 1
    clusterMembers : [str], default is Undefined, optional
        – List of Neptune Instances that are a part of this cluster
    clusterResourceId : str, default is Undefined, optional
        The Neptune Cluster Resource ID
    copyTagsToSnapshot : bool, default is Undefined, optional
        If set to true, tags are copied to any snapshot of the DB cluster that is created.
    deletionProtection : bool, default is Undefined, optional
        A value that indicates whether the DB cluster has deletion protection enabled.The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.
    enableCloudwatchLogsExports : [str], default is Undefined, optional
        A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports audit and slowquery.
    endpoint : str, default is Undefined, optional
        The DNS address of the Neptune instance
    engine : str, default is Undefined, optional
        The name of the database engine to be used for this Neptune cluster. Defaults to neptune.
    engineVersion : str, default is Undefined, optional
        The database engine version.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier specified on aws_neptune_global_cluster.
    hostedZoneId : str, default is Undefined, optional
        The Route53 Hosted Zone ID of the endpoint
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
    iamRoles : [str], default is Undefined, optional
        A List of ARNs for the IAM roles to associate to the Neptune Cluster.
    id : str, default is Undefined, optional
        The Neptune Cluster Identifier
    kmsKeyArn : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_arn, storage_encrypted needs to be set to true.
    neptuneClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    neptuneInstanceParameterGroupName : str, default is Undefined, optional
        The name of the DB parameter group to apply to all instances of the DB cluster.
    neptuneSubnetGroupName : str, default is Undefined, optional
        A Neptune subnet group to associate with this Neptune instance.
    port : float, default is Undefined, optional
        The port on which the Neptune accepts connections. Default is 8182.
    preferredBackupWindow : str, default is Undefined, optional
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    readerEndpoint : str, default is Undefined, optional
        A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas
    replicationSourceIdentifier : str, default is Undefined, optional
        ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
    serverlessV2ScalingConfiguration : NeptuneAwsUpboundIoV1beta2ClusterStatusAtProviderServerlessV2ScalingConfiguration, default is Undefined, optional
        serverless v2 scaling configuration
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot. Automated snapshots should not be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the Neptune cluster is encrypted. The default is false if not specified.
    storageType : str, default is Undefined, optional
        Storage type associated with the cluster standard/iopt1. Default: standard
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate with the Cluster
    """


    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    arn?: str

    availabilityZones?: [str]

    backupRetentionPeriod?: float

    clusterMembers?: [str]

    clusterResourceId?: str

    copyTagsToSnapshot?: bool

    deletionProtection?: bool

    enableCloudwatchLogsExports?: [str]

    endpoint?: str

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    hostedZoneId?: str

    iamDatabaseAuthenticationEnabled?: bool

    iamRoles?: [str]

    id?: str

    kmsKeyArn?: str

    neptuneClusterParameterGroupName?: str

    neptuneInstanceParameterGroupName?: str

    neptuneSubnetGroupName?: str

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    readerEndpoint?: str

    replicationSourceIdentifier?: str

    serverlessV2ScalingConfiguration?: NeptuneAwsUpboundIoV1beta2ClusterStatusAtProviderServerlessV2ScalingConfiguration

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcSecurityGroupIds?: [str]


schema NeptuneAwsUpboundIoV1beta2ClusterStatusAtProviderServerlessV2ScalingConfiguration:
    r"""
    If set, create the Neptune cluster as a serverless one. See Serverless for example block attributes.

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        : (default: 128) The maximum Neptune Capacity Units (NCUs) for this cluster. Must be lower or equal than 128. See AWS Documentation for more details.
    minCapacity : float, default is Undefined, optional
        : (default: 2.5) The minimum Neptune Capacity Units (NCUs) for this cluster. Must be greater or equal than 1. See AWS Documentation for more details.
    """


    maxCapacity?: float

    minCapacity?: float


schema NeptuneAwsUpboundIoV1beta2ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


