"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema SafetyRule:
    r"""
    SafetyRule is the Schema for the SafetyRules API. Provides an AWS Route 53 Recovery Control Config Safety Rule

    Attributes
    ----------
    apiVersion : str, default is "route53recoverycontrolconfig.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "SafetyRule", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpec, default is Undefined, required
        spec
    status : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatus, default is Undefined, optional
        status
    """


    apiVersion: "route53recoverycontrolconfig.aws.upbound.io/v1beta2" = "route53recoverycontrolconfig.aws.upbound.io/v1beta2"

    kind: "SafetyRule" = "SafetyRule"

    metadata?: v1.ObjectMeta

    spec: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpec

    status?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatus


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpec:
    r"""
    SafetyRuleSpec defines the desired state of SafetyRule

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProvider, default is Undefined, required
        for provider
    initProvider : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProvider

    initProvider?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecProviderConfigRef

    publishConnectionDetailsTo?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecWriteConnectionSecretToRef


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProvider:
    r"""
    route53recoverycontrolconfig aws upbound io v1beta2 safety rule spec for provider

    Attributes
    ----------
    assertedControls : [str], default is Undefined, optional
        Routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed.
    assertedControlsRefs : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsRefsItems0], default is Undefined, optional
        References to RoutingControl in route53recoverycontrolconfig to populate assertedControls.
    assertedControlsSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsSelector, default is Undefined, optional
        asserted controls selector
    controlPanelArn : str, default is Undefined, optional
        ARN of the control panel in which this safety rule will reside.
    controlPanelArnRef : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnRef, default is Undefined, optional
        control panel arn ref
    controlPanelArnSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnSelector, default is Undefined, optional
        control panel arn selector
    gatingControls : [str], default is Undefined, optional
        Gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
    gatingControlsRefs : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsRefsItems0], default is Undefined, optional
        References to RoutingControl in route53recoverycontrolconfig to populate gatingControls.
    gatingControlsSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsSelector, default is Undefined, optional
        gating controls selector
    name : str, default is Undefined, optional
        Name describing the safety rule.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    ruleConfig : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderRuleConfig, default is Undefined, optional
        rule config
    targetControls : [str], default is Undefined, optional
        Routing controls that can only be set or unset if the specified rule_config evaluates to true for the specified gating_controls.
    targetControlsRefs : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsRefsItems0], default is Undefined, optional
        References to RoutingControl in route53recoverycontrolconfig to populate targetControls.
    targetControlsSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsSelector, default is Undefined, optional
        target controls selector
    waitPeriodMs : float, default is Undefined, optional
        Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail.
    """


    assertedControls?: [str]

    assertedControlsRefs?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsRefsItems0]

    assertedControlsSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsSelector

    controlPanelArn?: str

    controlPanelArnRef?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnRef

    controlPanelArnSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnSelector

    gatingControls?: [str]

    gatingControlsRefs?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsRefsItems0]

    gatingControlsSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsSelector

    name?: str

    region: str

    ruleConfig?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderRuleConfig

    targetControls?: [str]

    targetControlsRefs?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsRefsItems0]

    targetControlsSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsSelector

    waitPeriodMs?: float


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsRefsItems0Policy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsSelector:
    r"""
    Selector for a list of RoutingControl in route53recoverycontrolconfig to populate assertedControls.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderAssertedControlsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnRef:
    r"""
    Reference to a ControlPanel in route53recoverycontrolconfig to populate controlPanelArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnRefPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnSelector:
    r"""
    Selector for a ControlPanel in route53recoverycontrolconfig to populate controlPanelArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderControlPanelArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsRefsItems0Policy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsSelector:
    r"""
    Selector for a list of RoutingControl in route53recoverycontrolconfig to populate gatingControls.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderGatingControlsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderRuleConfig:
    r"""
    Configuration block for safety rule criteria. See below.

    Attributes
    ----------
    inverted : bool, default is Undefined, optional
        Logical negation of the rule.
    threshold : float, default is Undefined, optional
        Number of controls that must be set when you specify an ATLEAST type rule.
    $type : str, default is Undefined, optional
        Rule type. Valid values are ATLEAST, AND, and OR.
    """


    inverted?: bool

    threshold?: float

    $type?: str


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsRefsItems0Policy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsSelector:
    r"""
    Selector for a list of RoutingControl in route53recoverycontrolconfig to populate targetControls.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecForProviderTargetControlsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    assertedControls : [str], default is Undefined, optional
        Routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed.
    assertedControlsRefs : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsRefsItems0], default is Undefined, optional
        References to RoutingControl in route53recoverycontrolconfig to populate assertedControls.
    assertedControlsSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsSelector, default is Undefined, optional
        asserted controls selector
    controlPanelArn : str, default is Undefined, optional
        ARN of the control panel in which this safety rule will reside.
    controlPanelArnRef : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnRef, default is Undefined, optional
        control panel arn ref
    controlPanelArnSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnSelector, default is Undefined, optional
        control panel arn selector
    gatingControls : [str], default is Undefined, optional
        Gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
    gatingControlsRefs : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsRefsItems0], default is Undefined, optional
        References to RoutingControl in route53recoverycontrolconfig to populate gatingControls.
    gatingControlsSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsSelector, default is Undefined, optional
        gating controls selector
    name : str, default is Undefined, optional
        Name describing the safety rule.
    ruleConfig : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderRuleConfig, default is Undefined, optional
        rule config
    targetControls : [str], default is Undefined, optional
        Routing controls that can only be set or unset if the specified rule_config evaluates to true for the specified gating_controls.
    targetControlsRefs : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsRefsItems0], default is Undefined, optional
        References to RoutingControl in route53recoverycontrolconfig to populate targetControls.
    targetControlsSelector : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsSelector, default is Undefined, optional
        target controls selector
    waitPeriodMs : float, default is Undefined, optional
        Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail.
    """


    assertedControls?: [str]

    assertedControlsRefs?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsRefsItems0]

    assertedControlsSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsSelector

    controlPanelArn?: str

    controlPanelArnRef?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnRef

    controlPanelArnSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnSelector

    gatingControls?: [str]

    gatingControlsRefs?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsRefsItems0]

    gatingControlsSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsSelector

    name?: str

    ruleConfig?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderRuleConfig

    targetControls?: [str]

    targetControlsRefs?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsRefsItems0]

    targetControlsSelector?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsSelector

    waitPeriodMs?: float


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsRefsItems0Policy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsSelector:
    r"""
    Selector for a list of RoutingControl in route53recoverycontrolconfig to populate assertedControls.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderAssertedControlsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnRef:
    r"""
    Reference to a ControlPanel in route53recoverycontrolconfig to populate controlPanelArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnRefPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnSelector:
    r"""
    Selector for a ControlPanel in route53recoverycontrolconfig to populate controlPanelArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderControlPanelArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsRefsItems0Policy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsSelector:
    r"""
    Selector for a list of RoutingControl in route53recoverycontrolconfig to populate gatingControls.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderGatingControlsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderRuleConfig:
    r"""
    Configuration block for safety rule criteria. See below.

    Attributes
    ----------
    inverted : bool, default is Undefined, optional
        Logical negation of the rule.
    threshold : float, default is Undefined, optional
        Number of controls that must be set when you specify an ATLEAST type rule.
    $type : str, default is Undefined, optional
        Rule type. Valid values are ATLEAST, AND, and OR.
    """


    inverted?: bool

    threshold?: float

    $type?: str


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsRefsItems0Policy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsSelector:
    r"""
    Selector for a list of RoutingControl in route53recoverycontrolconfig to populate targetControls.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsSelectorPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecInitProviderTargetControlsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecProviderConfigRefPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToConfigRef

    metadata?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToMetadata

    name: str


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToConfigRefPolicy


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatus:
    r"""
    SafetyRuleStatus defines the observed state of SafetyRule.

    Attributes
    ----------
    atProvider : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusAtProvider

    conditions?: [Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusConditionsItems0]

    observedGeneration?: int


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusAtProvider:
    r"""
    route53recoverycontrolconfig aws upbound io v1beta2 safety rule status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the safety rule.
    assertedControls : [str], default is Undefined, optional
        Routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed.
    controlPanelArn : str, default is Undefined, optional
        ARN of the control panel in which this safety rule will reside.
    gatingControls : [str], default is Undefined, optional
        Gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
    id : str, default is Undefined, optional
        id
    name : str, default is Undefined, optional
        Name describing the safety rule.
    ruleConfig : Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusAtProviderRuleConfig, default is Undefined, optional
        rule config
    status : str, default is Undefined, optional
        Status of the safety rule. PENDING when it is being created/updated, PENDING_DELETION when it is being deleted, and DEPLOYED otherwise.
    targetControls : [str], default is Undefined, optional
        Routing controls that can only be set or unset if the specified rule_config evaluates to true for the specified gating_controls.
    waitPeriodMs : float, default is Undefined, optional
        Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail.
    """


    arn?: str

    assertedControls?: [str]

    controlPanelArn?: str

    gatingControls?: [str]

    id?: str

    name?: str

    ruleConfig?: Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusAtProviderRuleConfig

    status?: str

    targetControls?: [str]

    waitPeriodMs?: float


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusAtProviderRuleConfig:
    r"""
    Configuration block for safety rule criteria. See below.

    Attributes
    ----------
    inverted : bool, default is Undefined, optional
        Logical negation of the rule.
    threshold : float, default is Undefined, optional
        Number of controls that must be set when you specify an ATLEAST type rule.
    $type : str, default is Undefined, optional
        Rule type. Valid values are ATLEAST, AND, and OR.
    """


    inverted?: bool

    threshold?: float

    $type?: str


schema Route53recoverycontrolconfigAwsUpboundIoV1beta2SafetyRuleStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


