"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MountTarget:
    r"""
    MountTarget is the Schema for the MountTargets API. Provides an Elastic File System (EFS) mount target.

    Attributes
    ----------
    apiVersion : str, default is "efs.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MountTarget", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EfsAwsUpboundIoV1beta1MountTargetSpec, default is Undefined, required
        spec
    status : EfsAwsUpboundIoV1beta1MountTargetStatus, default is Undefined, optional
        status
    """


    apiVersion: "efs.aws.upbound.io/v1beta1" = "efs.aws.upbound.io/v1beta1"

    kind: "MountTarget" = "MountTarget"

    metadata?: v1.ObjectMeta

    spec: EfsAwsUpboundIoV1beta1MountTargetSpec

    status?: EfsAwsUpboundIoV1beta1MountTargetStatus


schema EfsAwsUpboundIoV1beta1MountTargetSpec:
    r"""
    MountTargetSpec defines the desired state of MountTarget

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EfsAwsUpboundIoV1beta1MountTargetSpecForProvider, default is Undefined, required
        for provider
    initProvider : EfsAwsUpboundIoV1beta1MountTargetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EfsAwsUpboundIoV1beta1MountTargetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EfsAwsUpboundIoV1beta1MountTargetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EfsAwsUpboundIoV1beta1MountTargetSpecForProvider

    initProvider?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EfsAwsUpboundIoV1beta1MountTargetSpecProviderConfigRef

    publishConnectionDetailsTo?: EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EfsAwsUpboundIoV1beta1MountTargetSpecWriteConnectionSecretToRef


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProvider:
    r"""
    efs aws upbound io v1beta1 mount target spec for provider

    Attributes
    ----------
    fileSystemId : str, default is Undefined, optional
        The ID of the file system for which the mount target is intended.
    fileSystemIdRef : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDRef, default is Undefined, optional
        file system Id ref
    fileSystemIdSelector : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDSelector, default is Undefined, optional
        file system Id selector
    ipAddress : str, default is Undefined, optional
        The address (within the address range of the specified subnet) at
        which the file system may be mounted via the mount target.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroups : [str], default is Undefined, optional
        A list of up to 5 VPC security group IDs (that must
        be for the same VPC as subnet specified) in effect for the mount target.
    securityGroupsRefs : [EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupsSelector : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsSelector, default is Undefined, optional
        security groups selector
    subnetId : str, default is Undefined, optional
        The ID of the subnet to add the mount target in.
    subnetIdRef : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    fileSystemId?: str

    fileSystemIdRef?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDRef

    fileSystemIdSelector?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDSelector

    ipAddress?: str

    region: str

    securityGroups?: [str]

    securityGroupsRefs?: [EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsRefsItems0]

    securityGroupsSelector?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsSelector

    subnetId?: str

    subnetIdRef?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDRef

    subnetIdSelector?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDSelector


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDRef:
    r"""
    Reference to a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDRefPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDSelector:
    r"""
    Selector for a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDSelectorPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderFileSystemIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsRefsItems0Policy


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsSelectorPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDRefPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDSelectorPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    fileSystemId : str, default is Undefined, optional
        The ID of the file system for which the mount target is intended.
    fileSystemIdRef : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDRef, default is Undefined, optional
        file system Id ref
    fileSystemIdSelector : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDSelector, default is Undefined, optional
        file system Id selector
    ipAddress : str, default is Undefined, optional
        The address (within the address range of the specified subnet) at
        which the file system may be mounted via the mount target.
    securityGroups : [str], default is Undefined, optional
        A list of up to 5 VPC security group IDs (that must
        be for the same VPC as subnet specified) in effect for the mount target.
    securityGroupsRefs : [EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroups.
    securityGroupsSelector : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsSelector, default is Undefined, optional
        security groups selector
    subnetId : str, default is Undefined, optional
        The ID of the subnet to add the mount target in.
    subnetIdRef : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    """


    fileSystemId?: str

    fileSystemIdRef?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDRef

    fileSystemIdSelector?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDSelector

    ipAddress?: str

    securityGroups?: [str]

    securityGroupsRefs?: [EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsRefsItems0]

    securityGroupsSelector?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsSelector

    subnetId?: str

    subnetIdRef?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDRef

    subnetIdSelector?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDSelector


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDRef:
    r"""
    Reference to a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDRefPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDSelector:
    r"""
    Selector for a FileSystem in efs to populate fileSystemId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDSelectorPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderFileSystemIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsRefsItems0Policy


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsSelectorPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSecurityGroupsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDRefPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDSelectorPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecProviderConfigRefPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToConfigRef

    metadata?: EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToMetadata

    name: str


schema EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToConfigRefPolicy


schema EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EfsAwsUpboundIoV1beta1MountTargetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EfsAwsUpboundIoV1beta1MountTargetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EfsAwsUpboundIoV1beta1MountTargetStatus:
    r"""
    MountTargetStatus defines the observed state of MountTarget.

    Attributes
    ----------
    atProvider : EfsAwsUpboundIoV1beta1MountTargetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EfsAwsUpboundIoV1beta1MountTargetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EfsAwsUpboundIoV1beta1MountTargetStatusAtProvider

    conditions?: [EfsAwsUpboundIoV1beta1MountTargetStatusConditionsItems0]

    observedGeneration?: int


schema EfsAwsUpboundIoV1beta1MountTargetStatusAtProvider:
    r"""
    efs aws upbound io v1beta1 mount target status at provider

    Attributes
    ----------
    availabilityZoneId : str, default is Undefined, optional
        The unique and consistent identifier of the Availability Zone (AZ) that the mount target resides in.
    availabilityZoneName : str, default is Undefined, optional
        The name of the Availability Zone (AZ) that the mount target resides in.
    dnsName : str, default is Undefined, optional
        The DNS name for the EFS file system.
    fileSystemArn : str, default is Undefined, optional
        Amazon Resource Name of the file system.
    fileSystemId : str, default is Undefined, optional
        The ID of the file system for which the mount target is intended.
    id : str, default is Undefined, optional
        The ID of the mount target.
    ipAddress : str, default is Undefined, optional
        The address (within the address range of the specified subnet) at
        which the file system may be mounted via the mount target.
    mountTargetDnsName : str, default is Undefined, optional
        The DNS name for the given subnet/AZ per documented convention.
    networkInterfaceId : str, default is Undefined, optional
        The ID of the network interface that Amazon EFS created when it created the mount target.
    ownerId : str, default is Undefined, optional
        AWS account ID that owns the resource.
    securityGroups : [str], default is Undefined, optional
        A list of up to 5 VPC security group IDs (that must
        be for the same VPC as subnet specified) in effect for the mount target.
    subnetId : str, default is Undefined, optional
        The ID of the subnet to add the mount target in.
    """


    availabilityZoneId?: str

    availabilityZoneName?: str

    dnsName?: str

    fileSystemArn?: str

    fileSystemId?: str

    id?: str

    ipAddress?: str

    mountTargetDnsName?: str

    networkInterfaceId?: str

    ownerId?: str

    securityGroups?: [str]

    subnetId?: str


schema EfsAwsUpboundIoV1beta1MountTargetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


