"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Attachment:
    r"""
    Attachment is the Schema for the Attachments API. Provides an Elastic Load Balancer Attachment resource.

    Attributes
    ----------
    apiVersion : str, default is "elb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Attachment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ElbAwsUpboundIoV1beta1AttachmentSpec, default is Undefined, required
        spec
    status : ElbAwsUpboundIoV1beta1AttachmentStatus, default is Undefined, optional
        status
    """


    apiVersion: "elb.aws.upbound.io/v1beta1" = "elb.aws.upbound.io/v1beta1"

    kind: "Attachment" = "Attachment"

    metadata?: v1.ObjectMeta

    spec: ElbAwsUpboundIoV1beta1AttachmentSpec

    status?: ElbAwsUpboundIoV1beta1AttachmentStatus


schema ElbAwsUpboundIoV1beta1AttachmentSpec:
    r"""
    AttachmentSpec defines the desired state of Attachment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : ElbAwsUpboundIoV1beta1AttachmentSpecForProvider, default is Undefined, required
        for provider
    initProvider : ElbAwsUpboundIoV1beta1AttachmentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : ElbAwsUpboundIoV1beta1AttachmentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : ElbAwsUpboundIoV1beta1AttachmentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: ElbAwsUpboundIoV1beta1AttachmentSpecForProvider

    initProvider?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: ElbAwsUpboundIoV1beta1AttachmentSpecProviderConfigRef

    publishConnectionDetailsTo?: ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: ElbAwsUpboundIoV1beta1AttachmentSpecWriteConnectionSecretToRef


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProvider:
    r"""
    elb aws upbound io v1beta1 attachment spec for provider

    Attributes
    ----------
    elb : str, default is Undefined, optional
        The name of the ELB.
    elbRef : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbRef, default is Undefined, optional
        elb ref
    elbSelector : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbSelector, default is Undefined, optional
        elb selector
    instance : str, default is Undefined, optional
        Instance ID to place in the ELB pool.
    instanceRef : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceSelector, default is Undefined, optional
        instance selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    """


    elb?: str

    elbRef?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbRef

    elbSelector?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbSelector

    instance?: str

    instanceRef?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceRef

    instanceSelector?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceSelector

    region: str


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbRef:
    r"""
    Reference to a ELB in elb to populate elb.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbRefPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbSelector:
    r"""
    Selector for a ELB in elb to populate elb.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbSelectorPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderElbSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceRef:
    r"""
    Reference to a Instance in ec2 to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceRefPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceSelector:
    r"""
    Selector for a Instance in ec2 to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceSelectorPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecForProviderInstanceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    elb : str, default is Undefined, optional
        The name of the ELB.
    elbRef : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbRef, default is Undefined, optional
        elb ref
    elbSelector : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbSelector, default is Undefined, optional
        elb selector
    instance : str, default is Undefined, optional
        Instance ID to place in the ELB pool.
    instanceRef : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceRef, default is Undefined, optional
        instance ref
    instanceSelector : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceSelector, default is Undefined, optional
        instance selector
    """


    elb?: str

    elbRef?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbRef

    elbSelector?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbSelector

    instance?: str

    instanceRef?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceRef

    instanceSelector?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceSelector


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbRef:
    r"""
    Reference to a ELB in elb to populate elb.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbRefPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbSelector:
    r"""
    Selector for a ELB in elb to populate elb.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbSelectorPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderElbSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceRef:
    r"""
    Reference to a Instance in ec2 to populate instance.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceRefPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceSelector:
    r"""
    Selector for a Instance in ec2 to populate instance.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceSelectorPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecInitProviderInstanceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecProviderConfigRefPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToConfigRef

    metadata?: ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToMetadata

    name: str


schema ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToConfigRefPolicy


schema ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema ElbAwsUpboundIoV1beta1AttachmentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema ElbAwsUpboundIoV1beta1AttachmentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema ElbAwsUpboundIoV1beta1AttachmentStatus:
    r"""
    AttachmentStatus defines the observed state of Attachment.

    Attributes
    ----------
    atProvider : ElbAwsUpboundIoV1beta1AttachmentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [ElbAwsUpboundIoV1beta1AttachmentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: ElbAwsUpboundIoV1beta1AttachmentStatusAtProvider

    conditions?: [ElbAwsUpboundIoV1beta1AttachmentStatusConditionsItems0]

    observedGeneration?: int


schema ElbAwsUpboundIoV1beta1AttachmentStatusAtProvider:
    r"""
    elb aws upbound io v1beta1 attachment status at provider

    Attributes
    ----------
    elb : str, default is Undefined, optional
        The name of the ELB.
    id : str, default is Undefined, optional
        id
    instance : str, default is Undefined, optional
        Instance ID to place in the ELB pool.
    """


    elb?: str

    id?: str

    instance?: str


schema ElbAwsUpboundIoV1beta1AttachmentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


