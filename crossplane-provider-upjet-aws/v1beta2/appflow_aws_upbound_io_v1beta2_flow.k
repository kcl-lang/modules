"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Flow:
    r"""
    Flow is the Schema for the Flows API. Provides an AppFlow Flow resource.

    Attributes
    ----------
    apiVersion : str, default is "appflow.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Flow", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppflowAwsUpboundIoV1beta2FlowSpec, default is Undefined, required
        spec
    status : AppflowAwsUpboundIoV1beta2FlowStatus, default is Undefined, optional
        status
    """


    apiVersion: "appflow.aws.upbound.io/v1beta2" = "appflow.aws.upbound.io/v1beta2"

    kind: "Flow" = "Flow"

    metadata?: v1.ObjectMeta

    spec: AppflowAwsUpboundIoV1beta2FlowSpec

    status?: AppflowAwsUpboundIoV1beta2FlowStatus


schema AppflowAwsUpboundIoV1beta2FlowSpec:
    r"""
    FlowSpec defines the desired state of Flow

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppflowAwsUpboundIoV1beta2FlowSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppflowAwsUpboundIoV1beta2FlowSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppflowAwsUpboundIoV1beta2FlowSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppflowAwsUpboundIoV1beta2FlowSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppflowAwsUpboundIoV1beta2FlowSpecForProvider

    initProvider?: AppflowAwsUpboundIoV1beta2FlowSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppflowAwsUpboundIoV1beta2FlowSpecProviderConfigRef

    publishConnectionDetailsTo?: AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppflowAwsUpboundIoV1beta2FlowSpecWriteConnectionSecretToRef


schema AppflowAwsUpboundIoV1beta2FlowSpecForProvider:
    r"""
    appflow aws upbound io v1beta2 flow spec for provider

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the flow you want to create.
    destinationFlowConfig : [AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0], default is Undefined, optional
        A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.
    kmsArn : str, default is Undefined, optional
        ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
    metadataCatalogConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderMetadataCatalogConfig, default is Undefined, optional
        metadata catalog config
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    sourceFlowConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfig, default is Undefined, optional
        source flow config
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    task : [AppflowAwsUpboundIoV1beta2FlowSpecForProviderTaskItems0], default is Undefined, optional
        A Task that Amazon AppFlow performs while transferring the data in the flow run.
    triggerConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfig, default is Undefined, optional
        trigger config
    """


    description?: str

    destinationFlowConfig?: [AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0]

    kmsArn?: str

    metadataCatalogConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderMetadataCatalogConfig

    region: str

    sourceFlowConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfig

    tags?: {str:str}

    task?: [AppflowAwsUpboundIoV1beta2FlowSpecForProviderTaskItems0]

    triggerConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0:
    r"""
    appflow aws upbound io v1beta2 flow spec for provider destination flow config items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version that the destination connector uses.
    connectorProfileName : str, default is Undefined, optional
        Name of the connector profile. This name must be unique for each connector profile in the AWS account.
    connectorType : str, default is Undefined, optional
        Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.
    destinationConnectorProperties : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorProperties, default is Undefined, optional
        destination connector properties
    """


    apiVersion?: str

    connectorProfileName?: str

    connectorType?: str

    destinationConnectorProperties?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorProperties


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorProperties:
    r"""
    This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.

    Attributes
    ----------
    customConnector : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector, default is Undefined, optional
        custom connector
    customerProfiles : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles, default is Undefined, optional
        customer profiles
    eventBridge : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge, default is Undefined, optional
        event bridge
    honeycode : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode, default is Undefined, optional
        honeycode
    lookoutMetrics : any, default is Undefined, optional
        lookout metrics
    marketo : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo, default is Undefined, optional
        marketo
    redshift : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift, default is Undefined, optional
        redshift
    s3 : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3, default is Undefined, optional
        s3
    salesforce : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce, default is Undefined, optional
        salesforce
    sapoData : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData, default is Undefined, optional
        sapo data
    snowflake : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake, default is Undefined, optional
        snowflake
    upsolver : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver, default is Undefined, optional
        upsolver
    zendesk : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk, default is Undefined, optional
        zendesk
    """


    customConnector?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector

    customerProfiles?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles

    eventBridge?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge

    honeycode?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode

    lookoutMetrics?: any

    marketo?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo

    redshift?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift

    s3?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3

    salesforce?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce

    sapoData?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData

    snowflake?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake

    upsolver?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver

    zendesk?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector:
    r"""
    Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.

    Attributes
    ----------
    customProperties : {str:str}, default is Undefined, optional
        Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
    entityName : str, default is Undefined, optional
        Entity specified in the custom connector as a destination in the flow.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    customProperties?: {str:str}

    entityName?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig

    idFieldNames?: [str]

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles:
    r"""
    Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.

    Attributes
    ----------
    domainName : str, default is Undefined, optional
        Unique name of the Amazon Connect Customer Profiles domain.
    objectTypeName : str, default is Undefined, optional
        Object specified in the Amazon Connect Customer Profiles flow destination.
    """


    domainName?: str

    objectTypeName?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge:
    r"""
    Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode:
    r"""
    Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo:
    r"""
    Properties that are required to query Marketo. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift:
    r"""
    Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.

    Attributes
    ----------
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig, default is Undefined, optional
        error handling config
    intermediateBucketName : str, default is Undefined, optional
        Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    bucketPrefix?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig

    intermediateBucketName?: str

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3:
    r"""
    Properties that are required to query Amazon S3. See S3 Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketNameRef : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3OutputFormatConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig, default is Undefined, optional
        s3 output format config
    """


    bucketName?: str

    bucketNameRef?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRef

    bucketNameSelector?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelector

    bucketPrefix?: str

    s3OutputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRef:
    r"""
    Reference to a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRefPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelector:
    r"""
    Selector for a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelectorPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig:
    r"""
    Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.

    Attributes
    ----------
    aggregationConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig, default is Undefined, optional
        aggregation config
    fileType : str, default is Undefined, optional
        File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.
    prefixConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig, default is Undefined, optional
        prefix config
    preserveSourceDataTyping : bool, default is Undefined, optional
        Whether the data types from the source system need to be preserved (Only valid for Parquet file type)
    """


    aggregationConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig

    fileType?: str

    prefixConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig

    preserveSourceDataTyping?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig:
    r"""
    Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.

    Attributes
    ----------
    aggregationType : str, default is Undefined, optional
        Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.
    targetFileSize : float, default is Undefined, optional
        The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.
    """


    aggregationType?: str

    targetFileSize?: float


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig:
    r"""
    Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.

    Attributes
    ----------
    prefixFormat : str, default is Undefined, optional
        Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.
    prefixHierarchy : [str], default is Undefined, optional
        Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION
    prefixType : str, default is Undefined, optional
        Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.
    """


    prefixFormat?: str

    prefixHierarchy?: [str]

    prefixType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce:
    r"""
    Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig

    idFieldNames?: [str]

    object?: str

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData:
    r"""
    Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    objectPath : str, default is Undefined, optional
        Object path specified in the SAPOData flow destination.
    successResponseHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig, default is Undefined, optional
        success response handling config
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig

    idFieldNames?: [str]

    objectPath?: str

    successResponseHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig:
    r"""
    Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    """


    bucketName?: str

    bucketPrefix?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake:
    r"""
    Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.

    Attributes
    ----------
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig, default is Undefined, optional
        error handling config
    intermediateBucketName : str, default is Undefined, optional
        Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    bucketPrefix?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig

    intermediateBucketName?: str

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver:
    r"""
    Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3OutputFormatConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig, default is Undefined, optional
        s3 output format config
    """


    bucketName?: str

    bucketPrefix?: str

    s3OutputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig:
    r"""
    Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.

    Attributes
    ----------
    aggregationConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig, default is Undefined, optional
        aggregation config
    fileType : str, default is Undefined, optional
        File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.
    prefixConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig, default is Undefined, optional
        prefix config
    """


    aggregationConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig

    fileType?: str

    prefixConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig:
    r"""
    Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.

    Attributes
    ----------
    aggregationType : str, default is Undefined, optional
        Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.
    """


    aggregationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig:
    r"""
    Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.

    Attributes
    ----------
    prefixFormat : str, default is Undefined, optional
        Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.
    prefixHierarchy : [str], default is Undefined, optional
        Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION
    prefixType : str, default is Undefined, optional
        Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.
    """


    prefixFormat?: str

    prefixHierarchy?: [str]

    prefixType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk:
    r"""
    Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig

    idFieldNames?: [str]

    object?: str

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderMetadataCatalogConfig:
    r"""
    A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data that’s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.

    Attributes
    ----------
    glueDataCatalog : AppflowAwsUpboundIoV1beta2FlowSpecForProviderMetadataCatalogConfigGlueDataCatalog, default is Undefined, optional
        glue data catalog
    """


    glueDataCatalog?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderMetadataCatalogConfigGlueDataCatalog


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderMetadataCatalogConfigGlueDataCatalog:
    r"""
    appflow aws upbound io v1beta2 flow spec for provider metadata catalog config glue data catalog

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
    roleArn : str, default is Undefined, optional
        The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
    tablePrefix : str, default is Undefined, optional
        A naming prefix for each Data Catalog table that Amazon AppFlow creates
    """


    databaseName?: str

    roleArn?: str

    tablePrefix?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfig:
    r"""
    The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version that the destination connector uses.
    connectorProfileName : str, default is Undefined, optional
        Name of the connector profile. This name must be unique for each connector profile in the AWS account.
    connectorType : str, default is Undefined, optional
        Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.
    incrementalPullConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigIncrementalPullConfig, default is Undefined, optional
        incremental pull config
    sourceConnectorProperties : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorProperties, default is Undefined, optional
        source connector properties
    """


    apiVersion?: str

    connectorProfileName?: str

    connectorType?: str

    incrementalPullConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigIncrementalPullConfig

    sourceConnectorProperties?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorProperties


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigIncrementalPullConfig:
    r"""
    Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.

    Attributes
    ----------
    datetimeTypeFieldName : str, default is Undefined, optional
        Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
    """


    datetimeTypeFieldName?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorProperties:
    r"""
    Information that is required to query a particular source connector. See Source Connector Properties for details.

    Attributes
    ----------
    amplitude : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesAmplitude, default is Undefined, optional
        amplitude
    customConnector : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector, default is Undefined, optional
        custom connector
    datadog : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesDatadog, default is Undefined, optional
        datadog
    dynatrace : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesDynatrace, default is Undefined, optional
        dynatrace
    googleAnalytics : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics, default is Undefined, optional
        google analytics
    inforNexus : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesInforNexus, default is Undefined, optional
        infor nexus
    marketo : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesMarketo, default is Undefined, optional
        marketo
    s3 : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3, default is Undefined, optional
        s3
    salesforce : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSalesforce, default is Undefined, optional
        salesforce
    sapoData : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoData, default is Undefined, optional
        sapo data
    serviceNow : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesServiceNow, default is Undefined, optional
        service now
    singular : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSingular, default is Undefined, optional
        singular
    slack : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSlack, default is Undefined, optional
        slack
    trendmicro : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro, default is Undefined, optional
        trendmicro
    veeva : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesVeeva, default is Undefined, optional
        veeva
    zendesk : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesZendesk, default is Undefined, optional
        zendesk
    """


    amplitude?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesAmplitude

    customConnector?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector

    datadog?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesDatadog

    dynatrace?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesDynatrace

    googleAnalytics?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics

    inforNexus?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesInforNexus

    marketo?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesMarketo

    s3?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3

    salesforce?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSalesforce

    sapoData?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoData

    serviceNow?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesServiceNow

    singular?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSingular

    slack?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSlack

    trendmicro?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro

    veeva?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesVeeva

    zendesk?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesZendesk


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesAmplitude:
    r"""
    Information that is required for querying Amplitude. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector:
    r"""
    Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.

    Attributes
    ----------
    customProperties : {str:str}, default is Undefined, optional
        Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
    entityName : str, default is Undefined, optional
        Entity specified in the custom connector as a destination in the flow.
    """


    customProperties?: {str:str}

    entityName?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesDatadog:
    r"""
    Information that is required for querying Datadog. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesDynatrace:
    r"""
    Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics:
    r"""
    Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesInforNexus:
    r"""
    Information that is required for querying Infor Nexus. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesMarketo:
    r"""
    Properties that are required to query Marketo. See Generic Destination Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3:
    r"""
    Properties that are required to query Amazon S3. See S3 Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketNameRef : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3InputFormatConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig, default is Undefined, optional
        s3 input format config
    """


    bucketName?: str

    bucketNameRef?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRef

    bucketNameSelector?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelector

    bucketPrefix?: str

    s3InputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRef:
    r"""
    Reference to a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRefPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelector:
    r"""
    Selector for a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelectorPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig:
    r"""
    When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.

    Attributes
    ----------
    s3InputFileType : str, default is Undefined, optional
        File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.
    """


    s3InputFileType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSalesforce:
    r"""
    Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.

    Attributes
    ----------
    enableDynamicFieldUpdate : bool, default is Undefined, optional
        Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
    includeDeletedRecords : bool, default is Undefined, optional
        Whether Amazon AppFlow includes deleted files in the flow run.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    enableDynamicFieldUpdate?: bool

    includeDeletedRecords?: bool

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoData:
    r"""
    Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.

    Attributes
    ----------
    objectPath : str, default is Undefined, optional
        Object path specified in the SAPOData flow destination.
    paginationConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig, default is Undefined, optional
        pagination config
    parallelismConfig : AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig, default is Undefined, optional
        parallelism config
    """


    objectPath?: str

    paginationConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig

    parallelismConfig?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig:
    r"""
    Sets the page size for each concurrent process that transfers OData records from your SAP instance.

    Attributes
    ----------
    maxPageSize : float, default is Undefined, optional
        he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.
    """


    maxPageSize?: float


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig:
    r"""
    Sets the number of concurrent processes that transfers OData records from your SAP instance.

    Attributes
    ----------
    maxPageSize : float, default is Undefined, optional
        he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.
    """


    maxPageSize?: float


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesServiceNow:
    r"""
    Information that is required for querying ServiceNow. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSingular:
    r"""
    Information that is required for querying Singular. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesSlack:
    r"""
    Information that is required for querying Slack. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro:
    r"""
    Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesVeeva:
    r"""
    Information that is required for querying Veeva. See Veeva Source Properties for more details.

    Attributes
    ----------
    documentType : str, default is Undefined, optional
        Document type specified in the Veeva document extract flow.
    includeAllVersions : bool, default is Undefined, optional
        Boolean value to include All Versions of files in Veeva document extract flow.
    includeRenditions : bool, default is Undefined, optional
        Boolean value to include file renditions in Veeva document extract flow.
    includeSourceFiles : bool, default is Undefined, optional
        Boolean value to include source files in Veeva document extract flow.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    documentType?: str

    includeAllVersions?: bool

    includeRenditions?: bool

    includeSourceFiles?: bool

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderSourceFlowConfigSourceConnectorPropertiesZendesk:
    r"""
    Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderTaskItems0:
    r"""
    appflow aws upbound io v1beta2 flow spec for provider task items0

    Attributes
    ----------
    connectorOperator : [AppflowAwsUpboundIoV1beta2FlowSpecForProviderTaskItems0ConnectorOperatorItems0], default is Undefined, optional
        Operation to be performed on the provided source fields. See Connector Operator for details.
    destinationField : str, default is Undefined, optional
        Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
    sourceFields : [str], default is Undefined, optional
        Source fields to which a particular task is applied.
    taskProperties : {str:str}, default is Undefined, optional
        Map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.
    taskType : str, default is Undefined, optional
        Particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.
    """


    connectorOperator?: [AppflowAwsUpboundIoV1beta2FlowSpecForProviderTaskItems0ConnectorOperatorItems0]

    destinationField?: str

    sourceFields?: [str]

    taskProperties?: {str:str}

    taskType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderTaskItems0ConnectorOperatorItems0:
    r"""
    appflow aws upbound io v1beta2 flow spec for provider task items0 connector operator items0

    Attributes
    ----------
    amplitude : str, default is Undefined, optional
        Information that is required for querying Amplitude. See Generic Source Properties for more details.
    customConnector : str, default is Undefined, optional
        Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
    datadog : str, default is Undefined, optional
        Information that is required for querying Datadog. See Generic Source Properties for more details.
    dynatrace : str, default is Undefined, optional
        Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.
    googleAnalytics : str, default is Undefined, optional
        Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.
    inforNexus : str, default is Undefined, optional
        Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
    marketo : str, default is Undefined, optional
        Properties that are required to query Marketo. See Generic Destination Properties for more details.
    s3 : str, default is Undefined, optional
        Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
    salesforce : str, default is Undefined, optional
        Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
    sapoData : str, default is Undefined, optional
        Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
    serviceNow : str, default is Undefined, optional
        Information that is required for querying ServiceNow. See Generic Source Properties for more details.
    singular : str, default is Undefined, optional
        Information that is required for querying Singular. See Generic Source Properties for more details.
    slack : str, default is Undefined, optional
        Information that is required for querying Slack. See Generic Source Properties for more details.
    trendmicro : str, default is Undefined, optional
        Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.
    veeva : str, default is Undefined, optional
        Information that is required for querying Veeva. See Veeva Source Properties for more details.
    zendesk : str, default is Undefined, optional
        Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
    """


    amplitude?: str

    customConnector?: str

    datadog?: str

    dynatrace?: str

    googleAnalytics?: str

    inforNexus?: str

    marketo?: str

    s3?: str

    salesforce?: str

    sapoData?: str

    serviceNow?: str

    singular?: str

    slack?: str

    trendmicro?: str

    veeva?: str

    zendesk?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfig:
    r"""
    A Trigger that determine how and when the flow runs.

    Attributes
    ----------
    triggerProperties : AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfigTriggerProperties, default is Undefined, optional
        trigger properties
    triggerType : str, default is Undefined, optional
        Type of flow trigger. Valid values are Scheduled, Event, and OnDemand.
    """


    triggerProperties?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfigTriggerProperties

    triggerType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfigTriggerProperties:
    r"""
    Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.

    Attributes
    ----------
    scheduled : AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfigTriggerPropertiesScheduled, default is Undefined, optional
        scheduled
    """


    scheduled?: AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfigTriggerPropertiesScheduled


schema AppflowAwsUpboundIoV1beta2FlowSpecForProviderTriggerConfigTriggerPropertiesScheduled:
    r"""
    appflow aws upbound io v1beta2 flow spec for provider trigger config trigger properties scheduled

    Attributes
    ----------
    dataPullMode : str, default is Undefined, optional
        Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.
    firstExecutionFrom : str, default is Undefined, optional
        Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
    scheduleEndTime : str, default is Undefined, optional
        Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
    scheduleExpression : str, default is Undefined, optional
        Scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).
    scheduleOffset : float, default is Undefined, optional
        Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
    scheduleStartTime : str, default is Undefined, optional
        Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
    timezone : str, default is Undefined, optional
        Time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.
    """


    dataPullMode?: str

    firstExecutionFrom?: str

    scheduleEndTime?: str

    scheduleExpression?: str

    scheduleOffset?: float

    scheduleStartTime?: str

    timezone?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    description : str, default is Undefined, optional
        Description of the flow you want to create.
    destinationFlowConfig : [AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0], default is Undefined, optional
        A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.
    kmsArn : str, default is Undefined, optional
        ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
    metadataCatalogConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderMetadataCatalogConfig, default is Undefined, optional
        metadata catalog config
    sourceFlowConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfig, default is Undefined, optional
        source flow config
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    task : [AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTaskItems0], default is Undefined, optional
        A Task that Amazon AppFlow performs while transferring the data in the flow run.
    triggerConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfig, default is Undefined, optional
        trigger config
    """


    description?: str

    destinationFlowConfig?: [AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0]

    kmsArn?: str

    metadataCatalogConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderMetadataCatalogConfig

    sourceFlowConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfig

    tags?: {str:str}

    task?: [AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTaskItems0]

    triggerConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0:
    r"""
    appflow aws upbound io v1beta2 flow spec init provider destination flow config items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version that the destination connector uses.
    connectorProfileName : str, default is Undefined, optional
        Name of the connector profile. This name must be unique for each connector profile in the AWS account.
    connectorType : str, default is Undefined, optional
        Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.
    destinationConnectorProperties : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorProperties, default is Undefined, optional
        destination connector properties
    """


    apiVersion?: str

    connectorProfileName?: str

    connectorType?: str

    destinationConnectorProperties?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorProperties


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorProperties:
    r"""
    This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.

    Attributes
    ----------
    customConnector : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector, default is Undefined, optional
        custom connector
    customerProfiles : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles, default is Undefined, optional
        customer profiles
    eventBridge : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge, default is Undefined, optional
        event bridge
    honeycode : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode, default is Undefined, optional
        honeycode
    lookoutMetrics : any, default is Undefined, optional
        lookout metrics
    marketo : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo, default is Undefined, optional
        marketo
    redshift : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift, default is Undefined, optional
        redshift
    s3 : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3, default is Undefined, optional
        s3
    salesforce : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce, default is Undefined, optional
        salesforce
    sapoData : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData, default is Undefined, optional
        sapo data
    snowflake : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake, default is Undefined, optional
        snowflake
    upsolver : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver, default is Undefined, optional
        upsolver
    zendesk : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk, default is Undefined, optional
        zendesk
    """


    customConnector?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector

    customerProfiles?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles

    eventBridge?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge

    honeycode?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode

    lookoutMetrics?: any

    marketo?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo

    redshift?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift

    s3?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3

    salesforce?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce

    sapoData?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData

    snowflake?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake

    upsolver?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver

    zendesk?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector:
    r"""
    Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.

    Attributes
    ----------
    customProperties : {str:str}, default is Undefined, optional
        Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
    entityName : str, default is Undefined, optional
        Entity specified in the custom connector as a destination in the flow.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    customProperties?: {str:str}

    entityName?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig

    idFieldNames?: [str]

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles:
    r"""
    Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.

    Attributes
    ----------
    domainName : str, default is Undefined, optional
        Unique name of the Amazon Connect Customer Profiles domain.
    objectTypeName : str, default is Undefined, optional
        Object specified in the Amazon Connect Customer Profiles flow destination.
    """


    domainName?: str

    objectTypeName?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge:
    r"""
    Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode:
    r"""
    Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo:
    r"""
    Properties that are required to query Marketo. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift:
    r"""
    Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.

    Attributes
    ----------
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig, default is Undefined, optional
        error handling config
    intermediateBucketName : str, default is Undefined, optional
        Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    bucketPrefix?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig

    intermediateBucketName?: str

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3:
    r"""
    Properties that are required to query Amazon S3. See S3 Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketNameRef : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3OutputFormatConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig, default is Undefined, optional
        s3 output format config
    """


    bucketName?: str

    bucketNameRef?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRef

    bucketNameSelector?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelector

    bucketPrefix?: str

    s3OutputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRef:
    r"""
    Reference to a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRefPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelector:
    r"""
    Selector for a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelectorPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig:
    r"""
    Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.

    Attributes
    ----------
    aggregationConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig, default is Undefined, optional
        aggregation config
    fileType : str, default is Undefined, optional
        File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.
    prefixConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig, default is Undefined, optional
        prefix config
    preserveSourceDataTyping : bool, default is Undefined, optional
        Whether the data types from the source system need to be preserved (Only valid for Parquet file type)
    """


    aggregationConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig

    fileType?: str

    prefixConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig

    preserveSourceDataTyping?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig:
    r"""
    Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.

    Attributes
    ----------
    aggregationType : str, default is Undefined, optional
        Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.
    targetFileSize : float, default is Undefined, optional
        The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.
    """


    aggregationType?: str

    targetFileSize?: float


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig:
    r"""
    Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.

    Attributes
    ----------
    prefixFormat : str, default is Undefined, optional
        Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.
    prefixHierarchy : [str], default is Undefined, optional
        Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION
    prefixType : str, default is Undefined, optional
        Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.
    """


    prefixFormat?: str

    prefixHierarchy?: [str]

    prefixType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce:
    r"""
    Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig

    idFieldNames?: [str]

    object?: str

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData:
    r"""
    Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    objectPath : str, default is Undefined, optional
        Object path specified in the SAPOData flow destination.
    successResponseHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig, default is Undefined, optional
        success response handling config
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig

    idFieldNames?: [str]

    objectPath?: str

    successResponseHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig:
    r"""
    Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    """


    bucketName?: str

    bucketPrefix?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake:
    r"""
    Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.

    Attributes
    ----------
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig, default is Undefined, optional
        error handling config
    intermediateBucketName : str, default is Undefined, optional
        Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    bucketPrefix?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig

    intermediateBucketName?: str

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver:
    r"""
    Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3OutputFormatConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig, default is Undefined, optional
        s3 output format config
    """


    bucketName?: str

    bucketPrefix?: str

    s3OutputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig:
    r"""
    Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.

    Attributes
    ----------
    aggregationConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig, default is Undefined, optional
        aggregation config
    fileType : str, default is Undefined, optional
        File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.
    prefixConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig, default is Undefined, optional
        prefix config
    """


    aggregationConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig

    fileType?: str

    prefixConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig:
    r"""
    Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.

    Attributes
    ----------
    aggregationType : str, default is Undefined, optional
        Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.
    """


    aggregationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig:
    r"""
    Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.

    Attributes
    ----------
    prefixFormat : str, default is Undefined, optional
        Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.
    prefixHierarchy : [str], default is Undefined, optional
        Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION
    prefixType : str, default is Undefined, optional
        Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.
    """


    prefixFormat?: str

    prefixHierarchy?: [str]

    prefixType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk:
    r"""
    Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig

    idFieldNames?: [str]

    object?: str

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderMetadataCatalogConfig:
    r"""
    A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data that’s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.

    Attributes
    ----------
    glueDataCatalog : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderMetadataCatalogConfigGlueDataCatalog, default is Undefined, optional
        glue data catalog
    """


    glueDataCatalog?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderMetadataCatalogConfigGlueDataCatalog


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderMetadataCatalogConfigGlueDataCatalog:
    r"""
    appflow aws upbound io v1beta2 flow spec init provider metadata catalog config glue data catalog

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
    roleArn : str, default is Undefined, optional
        The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
    tablePrefix : str, default is Undefined, optional
        A naming prefix for each Data Catalog table that Amazon AppFlow creates
    """


    databaseName?: str

    roleArn?: str

    tablePrefix?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfig:
    r"""
    The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version that the destination connector uses.
    connectorProfileName : str, default is Undefined, optional
        Name of the connector profile. This name must be unique for each connector profile in the AWS account.
    connectorType : str, default is Undefined, optional
        Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.
    incrementalPullConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigIncrementalPullConfig, default is Undefined, optional
        incremental pull config
    sourceConnectorProperties : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorProperties, default is Undefined, optional
        source connector properties
    """


    apiVersion?: str

    connectorProfileName?: str

    connectorType?: str

    incrementalPullConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigIncrementalPullConfig

    sourceConnectorProperties?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorProperties


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigIncrementalPullConfig:
    r"""
    Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.

    Attributes
    ----------
    datetimeTypeFieldName : str, default is Undefined, optional
        Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
    """


    datetimeTypeFieldName?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorProperties:
    r"""
    Information that is required to query a particular source connector. See Source Connector Properties for details.

    Attributes
    ----------
    amplitude : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesAmplitude, default is Undefined, optional
        amplitude
    customConnector : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector, default is Undefined, optional
        custom connector
    datadog : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesDatadog, default is Undefined, optional
        datadog
    dynatrace : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesDynatrace, default is Undefined, optional
        dynatrace
    googleAnalytics : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics, default is Undefined, optional
        google analytics
    inforNexus : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesInforNexus, default is Undefined, optional
        infor nexus
    marketo : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesMarketo, default is Undefined, optional
        marketo
    s3 : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3, default is Undefined, optional
        s3
    salesforce : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSalesforce, default is Undefined, optional
        salesforce
    sapoData : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoData, default is Undefined, optional
        sapo data
    serviceNow : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesServiceNow, default is Undefined, optional
        service now
    singular : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSingular, default is Undefined, optional
        singular
    slack : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSlack, default is Undefined, optional
        slack
    trendmicro : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro, default is Undefined, optional
        trendmicro
    veeva : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesVeeva, default is Undefined, optional
        veeva
    zendesk : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesZendesk, default is Undefined, optional
        zendesk
    """


    amplitude?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesAmplitude

    customConnector?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector

    datadog?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesDatadog

    dynatrace?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesDynatrace

    googleAnalytics?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics

    inforNexus?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesInforNexus

    marketo?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesMarketo

    s3?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3

    salesforce?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSalesforce

    sapoData?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoData

    serviceNow?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesServiceNow

    singular?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSingular

    slack?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSlack

    trendmicro?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro

    veeva?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesVeeva

    zendesk?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesZendesk


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesAmplitude:
    r"""
    Information that is required for querying Amplitude. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector:
    r"""
    Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.

    Attributes
    ----------
    customProperties : {str:str}, default is Undefined, optional
        Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
    entityName : str, default is Undefined, optional
        Entity specified in the custom connector as a destination in the flow.
    """


    customProperties?: {str:str}

    entityName?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesDatadog:
    r"""
    Information that is required for querying Datadog. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesDynatrace:
    r"""
    Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics:
    r"""
    Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesInforNexus:
    r"""
    Information that is required for querying Infor Nexus. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesMarketo:
    r"""
    Properties that are required to query Marketo. See Generic Destination Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3:
    r"""
    Properties that are required to query Amazon S3. See S3 Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketNameRef : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3InputFormatConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig, default is Undefined, optional
        s3 input format config
    """


    bucketName?: str

    bucketNameRef?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRef

    bucketNameSelector?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelector

    bucketPrefix?: str

    s3InputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRef:
    r"""
    Reference to a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRefPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelector:
    r"""
    Selector for a BucketPolicy in s3 to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelectorPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig:
    r"""
    When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.

    Attributes
    ----------
    s3InputFileType : str, default is Undefined, optional
        File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.
    """


    s3InputFileType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSalesforce:
    r"""
    Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.

    Attributes
    ----------
    enableDynamicFieldUpdate : bool, default is Undefined, optional
        Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
    includeDeletedRecords : bool, default is Undefined, optional
        Whether Amazon AppFlow includes deleted files in the flow run.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    enableDynamicFieldUpdate?: bool

    includeDeletedRecords?: bool

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoData:
    r"""
    Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.

    Attributes
    ----------
    objectPath : str, default is Undefined, optional
        Object path specified in the SAPOData flow destination.
    paginationConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig, default is Undefined, optional
        pagination config
    parallelismConfig : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig, default is Undefined, optional
        parallelism config
    """


    objectPath?: str

    paginationConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig

    parallelismConfig?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig:
    r"""
    Sets the page size for each concurrent process that transfers OData records from your SAP instance.

    Attributes
    ----------
    maxPageSize : float, default is Undefined, optional
        he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.
    """


    maxPageSize?: float


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig:
    r"""
    Sets the number of concurrent processes that transfers OData records from your SAP instance.

    Attributes
    ----------
    maxPageSize : float, default is Undefined, optional
        he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.
    """


    maxPageSize?: float


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesServiceNow:
    r"""
    Information that is required for querying ServiceNow. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSingular:
    r"""
    Information that is required for querying Singular. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesSlack:
    r"""
    Information that is required for querying Slack. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro:
    r"""
    Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesVeeva:
    r"""
    Information that is required for querying Veeva. See Veeva Source Properties for more details.

    Attributes
    ----------
    documentType : str, default is Undefined, optional
        Document type specified in the Veeva document extract flow.
    includeAllVersions : bool, default is Undefined, optional
        Boolean value to include All Versions of files in Veeva document extract flow.
    includeRenditions : bool, default is Undefined, optional
        Boolean value to include file renditions in Veeva document extract flow.
    includeSourceFiles : bool, default is Undefined, optional
        Boolean value to include source files in Veeva document extract flow.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    documentType?: str

    includeAllVersions?: bool

    includeRenditions?: bool

    includeSourceFiles?: bool

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderSourceFlowConfigSourceConnectorPropertiesZendesk:
    r"""
    Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTaskItems0:
    r"""
    appflow aws upbound io v1beta2 flow spec init provider task items0

    Attributes
    ----------
    connectorOperator : [AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTaskItems0ConnectorOperatorItems0], default is Undefined, optional
        Operation to be performed on the provided source fields. See Connector Operator for details.
    destinationField : str, default is Undefined, optional
        Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
    sourceFields : [str], default is Undefined, optional
        Source fields to which a particular task is applied.
    taskProperties : {str:str}, default is Undefined, optional
        Map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.
    taskType : str, default is Undefined, optional
        Particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.
    """


    connectorOperator?: [AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTaskItems0ConnectorOperatorItems0]

    destinationField?: str

    sourceFields?: [str]

    taskProperties?: {str:str}

    taskType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTaskItems0ConnectorOperatorItems0:
    r"""
    appflow aws upbound io v1beta2 flow spec init provider task items0 connector operator items0

    Attributes
    ----------
    amplitude : str, default is Undefined, optional
        Information that is required for querying Amplitude. See Generic Source Properties for more details.
    customConnector : str, default is Undefined, optional
        Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
    datadog : str, default is Undefined, optional
        Information that is required for querying Datadog. See Generic Source Properties for more details.
    dynatrace : str, default is Undefined, optional
        Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.
    googleAnalytics : str, default is Undefined, optional
        Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.
    inforNexus : str, default is Undefined, optional
        Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
    marketo : str, default is Undefined, optional
        Properties that are required to query Marketo. See Generic Destination Properties for more details.
    s3 : str, default is Undefined, optional
        Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
    salesforce : str, default is Undefined, optional
        Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
    sapoData : str, default is Undefined, optional
        Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
    serviceNow : str, default is Undefined, optional
        Information that is required for querying ServiceNow. See Generic Source Properties for more details.
    singular : str, default is Undefined, optional
        Information that is required for querying Singular. See Generic Source Properties for more details.
    slack : str, default is Undefined, optional
        Information that is required for querying Slack. See Generic Source Properties for more details.
    trendmicro : str, default is Undefined, optional
        Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.
    veeva : str, default is Undefined, optional
        Information that is required for querying Veeva. See Veeva Source Properties for more details.
    zendesk : str, default is Undefined, optional
        Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
    """


    amplitude?: str

    customConnector?: str

    datadog?: str

    dynatrace?: str

    googleAnalytics?: str

    inforNexus?: str

    marketo?: str

    s3?: str

    salesforce?: str

    sapoData?: str

    serviceNow?: str

    singular?: str

    slack?: str

    trendmicro?: str

    veeva?: str

    zendesk?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfig:
    r"""
    A Trigger that determine how and when the flow runs.

    Attributes
    ----------
    triggerProperties : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfigTriggerProperties, default is Undefined, optional
        trigger properties
    triggerType : str, default is Undefined, optional
        Type of flow trigger. Valid values are Scheduled, Event, and OnDemand.
    """


    triggerProperties?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfigTriggerProperties

    triggerType?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfigTriggerProperties:
    r"""
    Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.

    Attributes
    ----------
    scheduled : AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfigTriggerPropertiesScheduled, default is Undefined, optional
        scheduled
    """


    scheduled?: AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfigTriggerPropertiesScheduled


schema AppflowAwsUpboundIoV1beta2FlowSpecInitProviderTriggerConfigTriggerPropertiesScheduled:
    r"""
    appflow aws upbound io v1beta2 flow spec init provider trigger config trigger properties scheduled

    Attributes
    ----------
    dataPullMode : str, default is Undefined, optional
        Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.
    firstExecutionFrom : str, default is Undefined, optional
        Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
    scheduleEndTime : str, default is Undefined, optional
        Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
    scheduleExpression : str, default is Undefined, optional
        Scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).
    scheduleOffset : float, default is Undefined, optional
        Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
    scheduleStartTime : str, default is Undefined, optional
        Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
    timezone : str, default is Undefined, optional
        Time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.
    """


    dataPullMode?: str

    firstExecutionFrom?: str

    scheduleEndTime?: str

    scheduleExpression?: str

    scheduleOffset?: float

    scheduleStartTime?: str

    timezone?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecProviderConfigRefPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToConfigRef

    metadata?: AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToMetadata

    name: str


schema AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToConfigRefPolicy


schema AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppflowAwsUpboundIoV1beta2FlowSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppflowAwsUpboundIoV1beta2FlowSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppflowAwsUpboundIoV1beta2FlowStatus:
    r"""
    FlowStatus defines the observed state of Flow.

    Attributes
    ----------
    atProvider : AppflowAwsUpboundIoV1beta2FlowStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppflowAwsUpboundIoV1beta2FlowStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppflowAwsUpboundIoV1beta2FlowStatusAtProvider

    conditions?: [AppflowAwsUpboundIoV1beta2FlowStatusConditionsItems0]

    observedGeneration?: int


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProvider:
    r"""
    appflow aws upbound io v1beta2 flow status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        Flow's ARN.
    description : str, default is Undefined, optional
        Description of the flow you want to create.
    destinationFlowConfig : [AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0], default is Undefined, optional
        A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.
    flowStatus : str, default is Undefined, optional
        The current status of the flow.
    id : str, default is Undefined, optional
        id
    kmsArn : str, default is Undefined, optional
        ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
    metadataCatalogConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderMetadataCatalogConfig, default is Undefined, optional
        metadata catalog config
    sourceFlowConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfig, default is Undefined, optional
        source flow config
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    task : [AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTaskItems0], default is Undefined, optional
        A Task that Amazon AppFlow performs while transferring the data in the flow run.
    triggerConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfig, default is Undefined, optional
        trigger config
    """


    arn?: str

    description?: str

    destinationFlowConfig?: [AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0]

    flowStatus?: str

    id?: str

    kmsArn?: str

    metadataCatalogConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderMetadataCatalogConfig

    sourceFlowConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfig

    tags?: {str:str}

    tagsAll?: {str:str}

    task?: [AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTaskItems0]

    triggerConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfig


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0:
    r"""
    appflow aws upbound io v1beta2 flow status at provider destination flow config items0

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version that the destination connector uses.
    connectorProfileName : str, default is Undefined, optional
        Name of the connector profile. This name must be unique for each connector profile in the AWS account.
    connectorType : str, default is Undefined, optional
        Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.
    destinationConnectorProperties : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorProperties, default is Undefined, optional
        destination connector properties
    """


    apiVersion?: str

    connectorProfileName?: str

    connectorType?: str

    destinationConnectorProperties?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorProperties


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorProperties:
    r"""
    This stores the information that is required to query a particular connector. See Destination Connector Properties for more information.

    Attributes
    ----------
    customConnector : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector, default is Undefined, optional
        custom connector
    customerProfiles : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles, default is Undefined, optional
        customer profiles
    eventBridge : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge, default is Undefined, optional
        event bridge
    honeycode : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode, default is Undefined, optional
        honeycode
    lookoutMetrics : any, default is Undefined, optional
        lookout metrics
    marketo : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo, default is Undefined, optional
        marketo
    redshift : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift, default is Undefined, optional
        redshift
    s3 : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3, default is Undefined, optional
        s3
    salesforce : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce, default is Undefined, optional
        salesforce
    sapoData : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData, default is Undefined, optional
        sapo data
    snowflake : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake, default is Undefined, optional
        snowflake
    upsolver : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver, default is Undefined, optional
        upsolver
    zendesk : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk, default is Undefined, optional
        zendesk
    """


    customConnector?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector

    customerProfiles?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles

    eventBridge?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge

    honeycode?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode

    lookoutMetrics?: any

    marketo?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo

    redshift?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift

    s3?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3

    salesforce?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce

    sapoData?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData

    snowflake?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake

    upsolver?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver

    zendesk?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnector:
    r"""
    Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.

    Attributes
    ----------
    customProperties : {str:str}, default is Undefined, optional
        Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
    entityName : str, default is Undefined, optional
        Entity specified in the custom connector as a destination in the flow.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    customProperties?: {str:str}

    entityName?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig

    idFieldNames?: [str]

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomConnectorErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesCustomerProfiles:
    r"""
    Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.

    Attributes
    ----------
    domainName : str, default is Undefined, optional
        Unique name of the Amazon Connect Customer Profiles domain.
    objectTypeName : str, default is Undefined, optional
        Object specified in the Amazon Connect Customer Profiles flow destination.
    """


    domainName?: str

    objectTypeName?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridge:
    r"""
    Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesEventBridgeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycode:
    r"""
    Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesHoneycodeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketo:
    r"""
    Properties that are required to query Marketo. See Generic Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig, default is Undefined, optional
        error handling config
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesMarketoErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshift:
    r"""
    Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.

    Attributes
    ----------
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig, default is Undefined, optional
        error handling config
    intermediateBucketName : str, default is Undefined, optional
        Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    bucketPrefix?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig

    intermediateBucketName?: str

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesRedshiftErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3:
    r"""
    Properties that are required to query Amazon S3. See S3 Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3OutputFormatConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig, default is Undefined, optional
        s3 output format config
    """


    bucketName?: str

    bucketPrefix?: str

    s3OutputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfig:
    r"""
    Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.

    Attributes
    ----------
    aggregationConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig, default is Undefined, optional
        aggregation config
    fileType : str, default is Undefined, optional
        File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.
    prefixConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig, default is Undefined, optional
        prefix config
    preserveSourceDataTyping : bool, default is Undefined, optional
        Whether the data types from the source system need to be preserved (Only valid for Parquet file type)
    """


    aggregationConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig

    fileType?: str

    prefixConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig

    preserveSourceDataTyping?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigAggregationConfig:
    r"""
    Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.

    Attributes
    ----------
    aggregationType : str, default is Undefined, optional
        Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.
    targetFileSize : float, default is Undefined, optional
        The desired file size, in MB, for each output file that Amazon AppFlow writes to the flow destination. Integer value.
    """


    aggregationType?: str

    targetFileSize?: float


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig:
    r"""
    Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.

    Attributes
    ----------
    prefixFormat : str, default is Undefined, optional
        Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.
    prefixHierarchy : [str], default is Undefined, optional
        Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION
    prefixType : str, default is Undefined, optional
        Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.
    """


    prefixFormat?: str

    prefixHierarchy?: [str]

    prefixType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforce:
    r"""
    Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig

    idFieldNames?: [str]

    object?: str

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSalesforceErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoData:
    r"""
    Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    objectPath : str, default is Undefined, optional
        Object path specified in the SAPOData flow destination.
    successResponseHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig, default is Undefined, optional
        success response handling config
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig

    idFieldNames?: [str]

    objectPath?: str

    successResponseHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSapoDataSuccessResponseHandlingConfig:
    r"""
    Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data. See Success Response Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    """


    bucketName?: str

    bucketPrefix?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflake:
    r"""
    Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.

    Attributes
    ----------
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig, default is Undefined, optional
        error handling config
    intermediateBucketName : str, default is Undefined, optional
        Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Redshift.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    bucketPrefix?: str

    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig

    intermediateBucketName?: str

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesSnowflakeErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolver:
    r"""
    Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3OutputFormatConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig, default is Undefined, optional
        s3 output format config
    """


    bucketName?: str

    bucketPrefix?: str

    s3OutputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfig:
    r"""
    Configuration that determines how Amazon AppFlow should format the flow output data when Amazon S3 is used as the destination. See S3 Output Format Config for more details.

    Attributes
    ----------
    aggregationConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig, default is Undefined, optional
        aggregation config
    fileType : str, default is Undefined, optional
        File type that Amazon AppFlow places in the Amazon S3 bucket. Valid values are CSV, JSON, and PARQUET.
    prefixConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig, default is Undefined, optional
        prefix config
    """


    aggregationConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig

    fileType?: str

    prefixConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigAggregationConfig:
    r"""
    Aggregation settings that you can use to customize the output format of your flow data. See Aggregation Config for more details.

    Attributes
    ----------
    aggregationType : str, default is Undefined, optional
        Whether Amazon AppFlow aggregates the flow records into a single file, or leave them unaggregated. Valid values are None and SingleFile.
    """


    aggregationType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesUpsolverS3OutputFormatConfigPrefixConfig:
    r"""
    Determines the prefix that Amazon AppFlow applies to the folder name in the Amazon S3 bucket. You can name folders according to the flow frequency and date. See Prefix Config for more details.

    Attributes
    ----------
    prefixFormat : str, default is Undefined, optional
        Determines the level of granularity that's included in the prefix. Valid values are YEAR, MONTH, DAY, HOUR, and MINUTE.
    prefixHierarchy : [str], default is Undefined, optional
        Determines whether the destination file path includes either or both of the selected elements. Valid values are EXECUTION_ID and SCHEMA_VERSION
    prefixType : str, default is Undefined, optional
        Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are FILENAME, PATH, and PATH_AND_FILENAME.
    """


    prefixFormat?: str

    prefixHierarchy?: [str]

    prefixType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendesk:
    r"""
    Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.

    Attributes
    ----------
    errorHandlingConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig, default is Undefined, optional
        error handling config
    idFieldNames : [str], default is Undefined, optional
        Name of the field that Amazon AppFlow uses as an ID when performing a write operation such as update, delete, or upsert.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    writeOperationType : str, default is Undefined, optional
        Type of write operation to be performed in the custom connector when it's used as destination. Valid values are INSERT, UPSERT, UPDATE, and DELETE.
    """


    errorHandlingConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig

    idFieldNames?: [str]

    object?: str

    writeOperationType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderDestinationFlowConfigItems0DestinationConnectorPropertiesZendeskErrorHandlingConfig:
    r"""
    Settings that determine how Amazon AppFlow handles an error when placing data in the destination. See Error Handling Config for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    failOnFirstDestinationError : bool, default is Undefined, optional
        If the flow should fail after the first instance of a failure when attempting to place data in the destination.
    """


    bucketName?: str

    bucketPrefix?: str

    failOnFirstDestinationError?: bool


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderMetadataCatalogConfig:
    r"""
    A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data that’s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.

    Attributes
    ----------
    glueDataCatalog : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderMetadataCatalogConfigGlueDataCatalog, default is Undefined, optional
        glue data catalog
    """


    glueDataCatalog?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderMetadataCatalogConfigGlueDataCatalog


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderMetadataCatalogConfigGlueDataCatalog:
    r"""
    appflow aws upbound io v1beta2 flow status at provider metadata catalog config glue data catalog

    Attributes
    ----------
    databaseName : str, default is Undefined, optional
        The name of an existing Glue database to store the metadata tables that Amazon AppFlow creates.
    roleArn : str, default is Undefined, optional
        The ARN of an IAM role that grants AppFlow the permissions it needs to create Data Catalog tables, databases, and partitions.
    tablePrefix : str, default is Undefined, optional
        A naming prefix for each Data Catalog table that Amazon AppFlow creates
    """


    databaseName?: str

    roleArn?: str

    tablePrefix?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfig:
    r"""
    The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version that the destination connector uses.
    connectorProfileName : str, default is Undefined, optional
        Name of the connector profile. This name must be unique for each connector profile in the AWS account.
    connectorType : str, default is Undefined, optional
        Type of connector, such as Salesforce, Amplitude, and so on. Valid values are Salesforce, Singular, Slack, Redshift, S3, Marketo, Googleanalytics, Zendesk, Servicenow, Datadog, Trendmicro, Snowflake, Dynatrace, Infornexus, Amplitude, Veeva, EventBridge, LookoutMetrics, Upsolver, Honeycode, CustomerProfiles, SAPOData, and CustomConnector.
    incrementalPullConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigIncrementalPullConfig, default is Undefined, optional
        incremental pull config
    sourceConnectorProperties : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorProperties, default is Undefined, optional
        source connector properties
    """


    apiVersion?: str

    connectorProfileName?: str

    connectorType?: str

    incrementalPullConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigIncrementalPullConfig

    sourceConnectorProperties?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorProperties


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigIncrementalPullConfig:
    r"""
    Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.

    Attributes
    ----------
    datetimeTypeFieldName : str, default is Undefined, optional
        Field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.
    """


    datetimeTypeFieldName?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorProperties:
    r"""
    Information that is required to query a particular source connector. See Source Connector Properties for details.

    Attributes
    ----------
    amplitude : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesAmplitude, default is Undefined, optional
        amplitude
    customConnector : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector, default is Undefined, optional
        custom connector
    datadog : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesDatadog, default is Undefined, optional
        datadog
    dynatrace : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesDynatrace, default is Undefined, optional
        dynatrace
    googleAnalytics : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics, default is Undefined, optional
        google analytics
    inforNexus : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesInforNexus, default is Undefined, optional
        infor nexus
    marketo : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesMarketo, default is Undefined, optional
        marketo
    s3 : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesS3, default is Undefined, optional
        s3
    salesforce : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSalesforce, default is Undefined, optional
        salesforce
    sapoData : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoData, default is Undefined, optional
        sapo data
    serviceNow : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesServiceNow, default is Undefined, optional
        service now
    singular : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSingular, default is Undefined, optional
        singular
    slack : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSlack, default is Undefined, optional
        slack
    trendmicro : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro, default is Undefined, optional
        trendmicro
    veeva : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesVeeva, default is Undefined, optional
        veeva
    zendesk : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesZendesk, default is Undefined, optional
        zendesk
    """


    amplitude?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesAmplitude

    customConnector?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector

    datadog?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesDatadog

    dynatrace?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesDynatrace

    googleAnalytics?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics

    inforNexus?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesInforNexus

    marketo?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesMarketo

    s3?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesS3

    salesforce?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSalesforce

    sapoData?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoData

    serviceNow?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesServiceNow

    singular?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSingular

    slack?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSlack

    trendmicro?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro

    veeva?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesVeeva

    zendesk?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesZendesk


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesAmplitude:
    r"""
    Information that is required for querying Amplitude. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesCustomConnector:
    r"""
    Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.

    Attributes
    ----------
    customProperties : {str:str}, default is Undefined, optional
        Custom properties that are specific to the connector when it's used as a destination in the flow. Maximum of 50 items.
    entityName : str, default is Undefined, optional
        Entity specified in the custom connector as a destination in the flow.
    """


    customProperties?: {str:str}

    entityName?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesDatadog:
    r"""
    Information that is required for querying Datadog. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesDynatrace:
    r"""
    Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics:
    r"""
    Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesInforNexus:
    r"""
    Information that is required for querying Infor Nexus. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesMarketo:
    r"""
    Properties that are required to query Marketo. See Generic Destination Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesS3:
    r"""
    Properties that are required to query Amazon S3. See S3 Destination Properties for more details.

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Amazon S3 bucket name in which Amazon AppFlow places the transferred data.
    bucketPrefix : str, default is Undefined, optional
        Object key for the bucket in which Amazon AppFlow places the destination files.
    s3InputFormatConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig, default is Undefined, optional
        s3 input format config
    """


    bucketName?: str

    bucketPrefix?: str

    s3InputFormatConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesS3S3InputFormatConfig:
    r"""
    When you use Amazon S3 as the source, the configuration format that you provide the flow input data. See S3 Input Format Config for details.

    Attributes
    ----------
    s3InputFileType : str, default is Undefined, optional
        File type that Amazon AppFlow gets from your Amazon S3 bucket. Valid values are CSV and JSON.
    """


    s3InputFileType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSalesforce:
    r"""
    Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.

    Attributes
    ----------
    enableDynamicFieldUpdate : bool, default is Undefined, optional
        Flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.
    includeDeletedRecords : bool, default is Undefined, optional
        Whether Amazon AppFlow includes deleted files in the flow run.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    enableDynamicFieldUpdate?: bool

    includeDeletedRecords?: bool

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoData:
    r"""
    Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.

    Attributes
    ----------
    objectPath : str, default is Undefined, optional
        Object path specified in the SAPOData flow destination.
    paginationConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig, default is Undefined, optional
        pagination config
    parallelismConfig : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig, default is Undefined, optional
        parallelism config
    """


    objectPath?: str

    paginationConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig

    parallelismConfig?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoDataPaginationConfig:
    r"""
    Sets the page size for each concurrent process that transfers OData records from your SAP instance.

    Attributes
    ----------
    maxPageSize : float, default is Undefined, optional
        he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.
    """


    maxPageSize?: float


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSapoDataParallelismConfig:
    r"""
    Sets the number of concurrent processes that transfers OData records from your SAP instance.

    Attributes
    ----------
    maxPageSize : float, default is Undefined, optional
        he maximum number of records that Amazon AppFlow receives in each page of the response from your SAP application.
    """


    maxPageSize?: float


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesServiceNow:
    r"""
    Information that is required for querying ServiceNow. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSingular:
    r"""
    Information that is required for querying Singular. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesSlack:
    r"""
    Information that is required for querying Slack. See Generic Source Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesTrendmicro:
    r"""
    Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesVeeva:
    r"""
    Information that is required for querying Veeva. See Veeva Source Properties for more details.

    Attributes
    ----------
    documentType : str, default is Undefined, optional
        Document type specified in the Veeva document extract flow.
    includeAllVersions : bool, default is Undefined, optional
        Boolean value to include All Versions of files in Veeva document extract flow.
    includeRenditions : bool, default is Undefined, optional
        Boolean value to include file renditions in Veeva document extract flow.
    includeSourceFiles : bool, default is Undefined, optional
        Boolean value to include source files in Veeva document extract flow.
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    documentType?: str

    includeAllVersions?: bool

    includeRenditions?: bool

    includeSourceFiles?: bool

    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderSourceFlowConfigSourceConnectorPropertiesZendesk:
    r"""
    Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.

    Attributes
    ----------
    object : str, default is Undefined, optional
        Object specified in the flow destination.
    """


    object?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTaskItems0:
    r"""
    appflow aws upbound io v1beta2 flow status at provider task items0

    Attributes
    ----------
    connectorOperator : [AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTaskItems0ConnectorOperatorItems0], default is Undefined, optional
        Operation to be performed on the provided source fields. See Connector Operator for details.
    destinationField : str, default is Undefined, optional
        Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
    sourceFields : [str], default is Undefined, optional
        Source fields to which a particular task is applied.
    taskProperties : {str:str}, default is Undefined, optional
        Map used to store task-related information. The execution service looks for particular information based on the TaskType. Valid keys are VALUE, VALUES, DATA_TYPE, UPPER_BOUND, LOWER_BOUND, SOURCE_DATA_TYPE, DESTINATION_DATA_TYPE, VALIDATION_ACTION, MASK_VALUE, MASK_LENGTH, TRUNCATE_LENGTH, MATH_OPERATION_FIELDS_ORDER, CONCAT_FORMAT, SUBFIELD_CATEGORY_MAP, and EXCLUDE_SOURCE_FIELDS_LIST.
    taskType : str, default is Undefined, optional
        Particular task implementation that Amazon AppFlow performs. Valid values are Arithmetic, Filter, Map, Map_all, Mask, Merge, Passthrough, Truncate, and Validate.
    """


    connectorOperator?: [AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTaskItems0ConnectorOperatorItems0]

    destinationField?: str

    sourceFields?: [str]

    taskProperties?: {str:str}

    taskType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTaskItems0ConnectorOperatorItems0:
    r"""
    appflow aws upbound io v1beta2 flow status at provider task items0 connector operator items0

    Attributes
    ----------
    amplitude : str, default is Undefined, optional
        Information that is required for querying Amplitude. See Generic Source Properties for more details.
    customConnector : str, default is Undefined, optional
        Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
    datadog : str, default is Undefined, optional
        Information that is required for querying Datadog. See Generic Source Properties for more details.
    dynatrace : str, default is Undefined, optional
        Operation to be performed on the provided Dynatrace source fields. Valid values are PROJECTION, BETWEEN, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.
    googleAnalytics : str, default is Undefined, optional
        Operation to be performed on the provided Google Analytics source fields. Valid values are PROJECTION and BETWEEN.
    inforNexus : str, default is Undefined, optional
        Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
    marketo : str, default is Undefined, optional
        Properties that are required to query Marketo. See Generic Destination Properties for more details.
    s3 : str, default is Undefined, optional
        Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
    salesforce : str, default is Undefined, optional
        Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
    sapoData : str, default is Undefined, optional
        Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
    serviceNow : str, default is Undefined, optional
        Information that is required for querying ServiceNow. See Generic Source Properties for more details.
    singular : str, default is Undefined, optional
        Information that is required for querying Singular. See Generic Source Properties for more details.
    slack : str, default is Undefined, optional
        Information that is required for querying Slack. See Generic Source Properties for more details.
    trendmicro : str, default is Undefined, optional
        Operation to be performed on the provided Trend Micro source fields. Valid values are PROJECTION, EQUAL_TO, ADDITION, MULTIPLICATION, DIVISION, SUBTRACTION, MASK_ALL, MASK_FIRST_N, MASK_LAST_N, VALIDATE_NON_NULL, VALIDATE_NON_ZERO, VALIDATE_NON_NEGATIVE, VALIDATE_NUMERIC, and NO_OP.
    veeva : str, default is Undefined, optional
        Information that is required for querying Veeva. See Veeva Source Properties for more details.
    zendesk : str, default is Undefined, optional
        Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
    """


    amplitude?: str

    customConnector?: str

    datadog?: str

    dynatrace?: str

    googleAnalytics?: str

    inforNexus?: str

    marketo?: str

    s3?: str

    salesforce?: str

    sapoData?: str

    serviceNow?: str

    singular?: str

    slack?: str

    trendmicro?: str

    veeva?: str

    zendesk?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfig:
    r"""
    A Trigger that determine how and when the flow runs.

    Attributes
    ----------
    triggerProperties : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfigTriggerProperties, default is Undefined, optional
        trigger properties
    triggerType : str, default is Undefined, optional
        Type of flow trigger. Valid values are Scheduled, Event, and OnDemand.
    """


    triggerProperties?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfigTriggerProperties

    triggerType?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfigTriggerProperties:
    r"""
    Configuration details of a schedule-triggered flow as defined by the user. Currently, these settings only apply to the Scheduled trigger type. See Scheduled Trigger Properties for details.

    Attributes
    ----------
    scheduled : AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfigTriggerPropertiesScheduled, default is Undefined, optional
        scheduled
    """


    scheduled?: AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfigTriggerPropertiesScheduled


schema AppflowAwsUpboundIoV1beta2FlowStatusAtProviderTriggerConfigTriggerPropertiesScheduled:
    r"""
    appflow aws upbound io v1beta2 flow status at provider trigger config trigger properties scheduled

    Attributes
    ----------
    dataPullMode : str, default is Undefined, optional
        Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are Incremental and Complete.
    firstExecutionFrom : str, default is Undefined, optional
        Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.
    scheduleEndTime : str, default is Undefined, optional
        Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
    scheduleExpression : str, default is Undefined, optional
        Scheduling expression that determines the rate at which the schedule will run, for example rate(5minutes).
    scheduleOffset : float, default is Undefined, optional
        Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.
    scheduleStartTime : str, default is Undefined, optional
        Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.
    timezone : str, default is Undefined, optional
        Time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.
    """


    dataPullMode?: str

    firstExecutionFrom?: str

    scheduleEndTime?: str

    scheduleExpression?: str

    scheduleOffset?: float

    scheduleStartTime?: str

    timezone?: str


schema AppflowAwsUpboundIoV1beta2FlowStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


