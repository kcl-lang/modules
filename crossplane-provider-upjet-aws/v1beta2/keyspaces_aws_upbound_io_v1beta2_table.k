"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Table:
    r"""
    Table is the Schema for the Tables API. Provides a Keyspaces Table.

    Attributes
    ----------
    apiVersion : str, default is "keyspaces.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Table", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KeyspacesAwsUpboundIoV1beta2TableSpec, default is Undefined, required
        spec
    status : KeyspacesAwsUpboundIoV1beta2TableStatus, default is Undefined, optional
        status
    """


    apiVersion: "keyspaces.aws.upbound.io/v1beta2" = "keyspaces.aws.upbound.io/v1beta2"

    kind: "Table" = "Table"

    metadata?: v1.ObjectMeta

    spec: KeyspacesAwsUpboundIoV1beta2TableSpec

    status?: KeyspacesAwsUpboundIoV1beta2TableStatus


schema KeyspacesAwsUpboundIoV1beta2TableSpec:
    r"""
    TableSpec defines the desired state of Table

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KeyspacesAwsUpboundIoV1beta2TableSpecForProvider, default is Undefined, required
        for provider
    initProvider : KeyspacesAwsUpboundIoV1beta2TableSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KeyspacesAwsUpboundIoV1beta2TableSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KeyspacesAwsUpboundIoV1beta2TableSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KeyspacesAwsUpboundIoV1beta2TableSpecForProvider

    initProvider?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KeyspacesAwsUpboundIoV1beta2TableSpecProviderConfigRef

    publishConnectionDetailsTo?: KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KeyspacesAwsUpboundIoV1beta2TableSpecWriteConnectionSecretToRef


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProvider:
    r"""
    keyspaces aws upbound io v1beta2 table spec for provider

    Attributes
    ----------
    capacitySpecification : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderCapacitySpecification, default is Undefined, optional
        capacity specification
    clientSideTimestamps : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderClientSideTimestamps, default is Undefined, optional
        client side timestamps
    comment : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderComment, default is Undefined, optional
        comment
    defaultTimeToLive : float, default is Undefined, optional
        The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.
    encryptionSpecification : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderEncryptionSpecification, default is Undefined, optional
        encryption specification
    keyspaceName : str, default is Undefined, optional
        The name of the keyspace that the table is going to be created in.
    keyspaceNameRef : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameRef, default is Undefined, optional
        keyspace name ref
    keyspaceNameSelector : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameSelector, default is Undefined, optional
        keyspace name selector
    pointInTimeRecovery : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderPointInTimeRecovery, default is Undefined, optional
        point in time recovery
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    schemaDefinition : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinition, default is Undefined, optional
        schema definition
    tableName : str, default is Undefined, optional
        The name of the table.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    ttl : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderTTL, default is Undefined, optional
        ttl
    """


    capacitySpecification?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderCapacitySpecification

    clientSideTimestamps?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderClientSideTimestamps

    comment?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderComment

    defaultTimeToLive?: float

    encryptionSpecification?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderEncryptionSpecification

    keyspaceName?: str

    keyspaceNameRef?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameRef

    keyspaceNameSelector?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameSelector

    pointInTimeRecovery?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderPointInTimeRecovery

    region: str

    schemaDefinition?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinition

    tableName?: str

    tags?: {str:str}

    ttl?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderTTL


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderCapacitySpecification:
    r"""
    Specifies the read/write throughput capacity mode for the table.

    Attributes
    ----------
    readCapacityUnits : float, default is Undefined, optional
        The throughput capacity specified for read operations defined in read capacity units (RCUs).
    throughputMode : str, default is Undefined, optional
        The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.
    writeCapacityUnits : float, default is Undefined, optional
        The throughput capacity specified for write operations defined in write capacity units (WCUs).
    """


    readCapacityUnits?: float

    throughputMode?: str

    writeCapacityUnits?: float


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderClientSideTimestamps:
    r"""
    Enables client-side timestamps for the table. By default, the setting is disabled.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderComment:
    r"""
    A description of the table.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A description of the table.
    """


    message?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderEncryptionSpecification:
    r"""
    Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    kmsKeyIdentifier : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the customer managed KMS key.
    $type : str, default is Undefined, optional
        The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.
    """


    kmsKeyIdentifier?: str

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameRef:
    r"""
    Reference to a Keyspace in keyspaces to populate keyspaceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameRefPolicy


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameSelector:
    r"""
    Selector for a Keyspace in keyspaces to populate keyspaceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameSelectorPolicy


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderKeyspaceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderPointInTimeRecovery:
    r"""
    Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinition:
    r"""
    Describes the schema of the table.

    Attributes
    ----------
    clusteringKey : [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionClusteringKeyItems0], default is Undefined, optional
        The columns that are part of the clustering key of the table.
    column : [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionColumnItems0], default is Undefined, optional
        The regular columns of the table.
    partitionKey : [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionPartitionKeyItems0], default is Undefined, optional
        The columns that are part of the partition key of the table .
    staticColumn : [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionStaticColumnItems0], default is Undefined, optional
        The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.
    """


    clusteringKey?: [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionClusteringKeyItems0]

    column?: [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionColumnItems0]

    partitionKey?: [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionPartitionKeyItems0]

    staticColumn?: [KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionStaticColumnItems0]


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionClusteringKeyItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec for provider schema definition clustering key items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    orderBy : str, default is Undefined, optional
        The order modifier. Valid values: ASC, DESC.
    """


    name?: str

    orderBy?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionColumnItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec for provider schema definition column items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    $type : str, default is Undefined, optional
        The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.
    """


    name?: str

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionPartitionKeyItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec for provider schema definition partition key items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    """


    name?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderSchemaDefinitionStaticColumnItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec for provider schema definition static column items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    """


    name?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecForProviderTTL:
    r"""
    Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    capacitySpecification : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderCapacitySpecification, default is Undefined, optional
        capacity specification
    clientSideTimestamps : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderClientSideTimestamps, default is Undefined, optional
        client side timestamps
    comment : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderComment, default is Undefined, optional
        comment
    defaultTimeToLive : float, default is Undefined, optional
        The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.
    encryptionSpecification : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderEncryptionSpecification, default is Undefined, optional
        encryption specification
    keyspaceName : str, default is Undefined, optional
        The name of the keyspace that the table is going to be created in.
    keyspaceNameRef : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameRef, default is Undefined, optional
        keyspace name ref
    keyspaceNameSelector : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameSelector, default is Undefined, optional
        keyspace name selector
    pointInTimeRecovery : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderPointInTimeRecovery, default is Undefined, optional
        point in time recovery
    schemaDefinition : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinition, default is Undefined, optional
        schema definition
    tableName : str, default is Undefined, optional
        The name of the table.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    ttl : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderTTL, default is Undefined, optional
        ttl
    """


    capacitySpecification?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderCapacitySpecification

    clientSideTimestamps?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderClientSideTimestamps

    comment?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderComment

    defaultTimeToLive?: float

    encryptionSpecification?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderEncryptionSpecification

    keyspaceName?: str

    keyspaceNameRef?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameRef

    keyspaceNameSelector?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameSelector

    pointInTimeRecovery?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderPointInTimeRecovery

    schemaDefinition?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinition

    tableName?: str

    tags?: {str:str}

    ttl?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderTTL


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderCapacitySpecification:
    r"""
    Specifies the read/write throughput capacity mode for the table.

    Attributes
    ----------
    readCapacityUnits : float, default is Undefined, optional
        The throughput capacity specified for read operations defined in read capacity units (RCUs).
    throughputMode : str, default is Undefined, optional
        The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.
    writeCapacityUnits : float, default is Undefined, optional
        The throughput capacity specified for write operations defined in write capacity units (WCUs).
    """


    readCapacityUnits?: float

    throughputMode?: str

    writeCapacityUnits?: float


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderClientSideTimestamps:
    r"""
    Enables client-side timestamps for the table. By default, the setting is disabled.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderComment:
    r"""
    A description of the table.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A description of the table.
    """


    message?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderEncryptionSpecification:
    r"""
    Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    kmsKeyIdentifier : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the customer managed KMS key.
    $type : str, default is Undefined, optional
        The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.
    """


    kmsKeyIdentifier?: str

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameRef:
    r"""
    Reference to a Keyspace in keyspaces to populate keyspaceName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameRefPolicy


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameSelector:
    r"""
    Selector for a Keyspace in keyspaces to populate keyspaceName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameSelectorPolicy


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderKeyspaceNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderPointInTimeRecovery:
    r"""
    Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinition:
    r"""
    Describes the schema of the table.

    Attributes
    ----------
    clusteringKey : [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionClusteringKeyItems0], default is Undefined, optional
        The columns that are part of the clustering key of the table.
    column : [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionColumnItems0], default is Undefined, optional
        The regular columns of the table.
    partitionKey : [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionPartitionKeyItems0], default is Undefined, optional
        The columns that are part of the partition key of the table .
    staticColumn : [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionStaticColumnItems0], default is Undefined, optional
        The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.
    """


    clusteringKey?: [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionClusteringKeyItems0]

    column?: [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionColumnItems0]

    partitionKey?: [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionPartitionKeyItems0]

    staticColumn?: [KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionStaticColumnItems0]


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionClusteringKeyItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec init provider schema definition clustering key items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    orderBy : str, default is Undefined, optional
        The order modifier. Valid values: ASC, DESC.
    """


    name?: str

    orderBy?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionColumnItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec init provider schema definition column items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    $type : str, default is Undefined, optional
        The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.
    """


    name?: str

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionPartitionKeyItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec init provider schema definition partition key items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    """


    name?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderSchemaDefinitionStaticColumnItems0:
    r"""
    keyspaces aws upbound io v1beta2 table spec init provider schema definition static column items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    """


    name?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecInitProviderTTL:
    r"""
    Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyspacesAwsUpboundIoV1beta2TableSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyspacesAwsUpboundIoV1beta2TableSpecProviderConfigRefPolicy


schema KeyspacesAwsUpboundIoV1beta2TableSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToConfigRef

    metadata?: KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToMetadata

    name: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToConfigRefPolicy


schema KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KeyspacesAwsUpboundIoV1beta2TableSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KeyspacesAwsUpboundIoV1beta2TableStatus:
    r"""
    TableStatus defines the observed state of Table.

    Attributes
    ----------
    atProvider : KeyspacesAwsUpboundIoV1beta2TableStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KeyspacesAwsUpboundIoV1beta2TableStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProvider

    conditions?: [KeyspacesAwsUpboundIoV1beta2TableStatusConditionsItems0]

    observedGeneration?: int


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProvider:
    r"""
    keyspaces aws upbound io v1beta2 table status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the table.
    capacitySpecification : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderCapacitySpecification, default is Undefined, optional
        capacity specification
    clientSideTimestamps : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderClientSideTimestamps, default is Undefined, optional
        client side timestamps
    comment : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderComment, default is Undefined, optional
        comment
    defaultTimeToLive : float, default is Undefined, optional
        The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.
    encryptionSpecification : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderEncryptionSpecification, default is Undefined, optional
        encryption specification
    id : str, default is Undefined, optional
        id
    keyspaceName : str, default is Undefined, optional
        The name of the keyspace that the table is going to be created in.
    pointInTimeRecovery : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderPointInTimeRecovery, default is Undefined, optional
        point in time recovery
    schemaDefinition : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinition, default is Undefined, optional
        schema definition
    tableName : str, default is Undefined, optional
        The name of the table.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    ttl : KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderTTL, default is Undefined, optional
        ttl
    """


    arn?: str

    capacitySpecification?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderCapacitySpecification

    clientSideTimestamps?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderClientSideTimestamps

    comment?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderComment

    defaultTimeToLive?: float

    encryptionSpecification?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderEncryptionSpecification

    id?: str

    keyspaceName?: str

    pointInTimeRecovery?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderPointInTimeRecovery

    schemaDefinition?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinition

    tableName?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    ttl?: KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderTTL


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderCapacitySpecification:
    r"""
    Specifies the read/write throughput capacity mode for the table.

    Attributes
    ----------
    readCapacityUnits : float, default is Undefined, optional
        The throughput capacity specified for read operations defined in read capacity units (RCUs).
    throughputMode : str, default is Undefined, optional
        The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.
    writeCapacityUnits : float, default is Undefined, optional
        The throughput capacity specified for write operations defined in write capacity units (WCUs).
    """


    readCapacityUnits?: float

    throughputMode?: str

    writeCapacityUnits?: float


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderClientSideTimestamps:
    r"""
    Enables client-side timestamps for the table. By default, the setting is disabled.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderComment:
    r"""
    A description of the table.

    Attributes
    ----------
    message : str, default is Undefined, optional
        A description of the table.
    """


    message?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderEncryptionSpecification:
    r"""
    Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    kmsKeyIdentifier : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the customer managed KMS key.
    $type : str, default is Undefined, optional
        The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.
    """


    kmsKeyIdentifier?: str

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderPointInTimeRecovery:
    r"""
    Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinition:
    r"""
    Describes the schema of the table.

    Attributes
    ----------
    clusteringKey : [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionClusteringKeyItems0], default is Undefined, optional
        The columns that are part of the clustering key of the table.
    column : [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionColumnItems0], default is Undefined, optional
        The regular columns of the table.
    partitionKey : [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionPartitionKeyItems0], default is Undefined, optional
        The columns that are part of the partition key of the table .
    staticColumn : [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionStaticColumnItems0], default is Undefined, optional
        The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.
    """


    clusteringKey?: [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionClusteringKeyItems0]

    column?: [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionColumnItems0]

    partitionKey?: [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionPartitionKeyItems0]

    staticColumn?: [KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionStaticColumnItems0]


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionClusteringKeyItems0:
    r"""
    keyspaces aws upbound io v1beta2 table status at provider schema definition clustering key items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    orderBy : str, default is Undefined, optional
        The order modifier. Valid values: ASC, DESC.
    """


    name?: str

    orderBy?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionColumnItems0:
    r"""
    keyspaces aws upbound io v1beta2 table status at provider schema definition column items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    $type : str, default is Undefined, optional
        The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.
    """


    name?: str

    $type?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionPartitionKeyItems0:
    r"""
    keyspaces aws upbound io v1beta2 table status at provider schema definition partition key items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    """


    name?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderSchemaDefinitionStaticColumnItems0:
    r"""
    keyspaces aws upbound io v1beta2 table status at provider schema definition static column items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the column.
    """


    name?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusAtProviderTTL:
    r"""
    Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.

    Attributes
    ----------
    status : str, default is Undefined, optional
        Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.
    """


    status?: str


schema KeyspacesAwsUpboundIoV1beta2TableStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


