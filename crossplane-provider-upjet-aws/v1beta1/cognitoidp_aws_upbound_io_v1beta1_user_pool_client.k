"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UserPoolClient:
    r"""
    UserPoolClient is the Schema for the UserPoolClients API. Provides a Cognito User Pool Client resource.

    Attributes
    ----------
    apiVersion : str, default is "cognitoidp.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UserPoolClient", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpec, default is Undefined, required
        spec
    status : CognitoidpAwsUpboundIoV1beta1UserPoolClientStatus, default is Undefined, optional
        status
    """


    apiVersion: "cognitoidp.aws.upbound.io/v1beta1" = "cognitoidp.aws.upbound.io/v1beta1"

    kind: "UserPoolClient" = "UserPoolClient"

    metadata?: v1.ObjectMeta

    spec: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpec

    status?: CognitoidpAwsUpboundIoV1beta1UserPoolClientStatus


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpec:
    r"""
    UserPoolClientSpec defines the desired state of UserPoolClient

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProvider, default is Undefined, required
        for provider
    initProvider : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProvider

    initProvider?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecProviderConfigRef

    publishConnectionDetailsTo?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecWriteConnectionSecretToRef


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProvider:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client spec for provider

    Attributes
    ----------
    accessTokenValidity : float, default is Undefined, optional
        Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in token_validity_units.access_token.
    allowedOauthFlows : [str], default is Undefined, optional
        List of allowed OAuth flows, including code, implicit, and client_credentials. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    allowedOauthFlowsUserPoolClient : bool, default is Undefined, optional
        Whether the client is allowed to use OAuth 2.0 features. allowed_oauth_flows_user_pool_client must be set to true before you can configure the following arguments: callback_urls, logout_urls, allowed_oauth_scopes and allowed_oauth_flows.
    allowedOauthScopes : [str], default is Undefined, optional
        List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    analyticsConfiguration : [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0], default is Undefined, optional
        Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
    authSessionValidity : float, default is Undefined, optional
        Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for auth_session_validity are between 3 and 15, with a default value of 3.
    callbackUrls : [str], default is Undefined, optional
        List of allowed callback URLs for the identity providers. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    defaultRedirectUri : str, default is Undefined, optional
        Default redirect URI and must be included in the list of callback URLs.
    enablePropagateAdditionalUserContextData : bool, default is Undefined, optional
        Enables the propagation of additional user context data.
    enableTokenRevocation : bool, default is Undefined, optional
        Enables or disables token revocation.
    explicitAuthFlows : [str], default is Undefined, optional
        List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
    generateSecret : bool, default is Undefined, optional
        Boolean flag indicating whether an application secret should be generated.
    idTokenValidity : float, default is Undefined, optional
        Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in token_validity_units.id_token.
    logoutUrls : [str], default is Undefined, optional
        List of allowed logout URLs for the identity providers. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    name : str, default is Undefined, optional
        Name of the application client.
    preventUserExistenceErrors : str, default is Undefined, optional
        Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
    readAttributes : [str], default is Undefined, optional
        List of user pool attributes that the application client can read from.
    refreshTokenValidity : float, default is Undefined, optional
        Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in token_validity_units.refresh_token.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    supportedIdentityProviders : [str], default is Undefined, optional
        List of provider names for the identity providers that are supported on this client. It uses the provider_name attribute of the aws_cognito_identity_provider resource(s), or the equivalent string(s).
    tokenValidityUnits : [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderTokenValidityUnitsItems0], default is Undefined, optional
        Configuration block for representing the validity times in units. See details below. Detailed below.
    userPoolId : str, default is Undefined, optional
        User pool the client belongs to.
    userPoolIdRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    writeAttributes : [str], default is Undefined, optional
        List of user pool attributes that the application client can write to.
    """


    accessTokenValidity?: float

    allowedOauthFlows?: [str]

    allowedOauthFlowsUserPoolClient?: bool

    allowedOauthScopes?: [str]

    analyticsConfiguration?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0]

    authSessionValidity?: float

    callbackUrls?: [str]

    defaultRedirectUri?: str

    enablePropagateAdditionalUserContextData?: bool

    enableTokenRevocation?: bool

    explicitAuthFlows?: [str]

    generateSecret?: bool

    idTokenValidity?: float

    logoutUrls?: [str]

    name?: str

    preventUserExistenceErrors?: str

    readAttributes?: [str]

    refreshTokenValidity?: float

    region: str

    supportedIdentityProviders?: [str]

    tokenValidityUnits?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderTokenValidityUnitsItems0]

    userPoolId?: str

    userPoolIdRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDRef

    userPoolIdSelector?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDSelector

    writeAttributes?: [str]


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client spec for provider analytics configuration items0

    Attributes
    ----------
    applicationArn : str, default is Undefined, optional
        Application ARN for an Amazon Pinpoint application. Conflicts with external_id and role_arn.
    applicationId : str, default is Undefined, optional
        Application ID for an Amazon Pinpoint application.
    applicationIdRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDSelector, default is Undefined, optional
        application Id selector
    externalId : str, default is Undefined, optional
        ID for the Analytics Configuration. Conflicts with application_arn.
    roleArn : str, default is Undefined, optional
        ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with application_arn.
    roleArnRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    userDataShared : bool, default is Undefined, optional
        If set to true, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
    """


    applicationArn?: str

    applicationId?: str

    applicationIdRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDRef

    applicationIdSelector?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDSelector

    externalId?: str

    roleArn?: str

    roleArnRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnRef

    roleArnSelector?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnSelector

    userDataShared?: bool


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDRef:
    r"""
    Reference to a App in pinpoint to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDSelector:
    r"""
    Selector for a App in pinpoint to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDSelectorPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0ApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnSelectorPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderAnalyticsConfigurationItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderTokenValidityUnitsItems0:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client spec for provider token validity units items0

    Attributes
    ----------
    accessToken : str, default is Undefined, optional
        Time unit in for the value in access_token_validity, defaults to hours.
    idToken : str, default is Undefined, optional
        Time unit in for the value in id_token_validity, defaults to hours.
    refreshToken : str, default is Undefined, optional
        Time unit in for the value in refresh_token_validity, defaults to days.
    """


    accessToken?: str

    idToken?: str

    refreshToken?: str


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDRef:
    r"""
    Reference to a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDSelector:
    r"""
    Selector for a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDSelectorPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecForProviderUserPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessTokenValidity : float, default is Undefined, optional
        Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in token_validity_units.access_token.
    allowedOauthFlows : [str], default is Undefined, optional
        List of allowed OAuth flows, including code, implicit, and client_credentials. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    allowedOauthFlowsUserPoolClient : bool, default is Undefined, optional
        Whether the client is allowed to use OAuth 2.0 features. allowed_oauth_flows_user_pool_client must be set to true before you can configure the following arguments: callback_urls, logout_urls, allowed_oauth_scopes and allowed_oauth_flows.
    allowedOauthScopes : [str], default is Undefined, optional
        List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    analyticsConfiguration : [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0], default is Undefined, optional
        Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
    authSessionValidity : float, default is Undefined, optional
        Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for auth_session_validity are between 3 and 15, with a default value of 3.
    callbackUrls : [str], default is Undefined, optional
        List of allowed callback URLs for the identity providers. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    defaultRedirectUri : str, default is Undefined, optional
        Default redirect URI and must be included in the list of callback URLs.
    enablePropagateAdditionalUserContextData : bool, default is Undefined, optional
        Enables the propagation of additional user context data.
    enableTokenRevocation : bool, default is Undefined, optional
        Enables or disables token revocation.
    explicitAuthFlows : [str], default is Undefined, optional
        List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
    generateSecret : bool, default is Undefined, optional
        Boolean flag indicating whether an application secret should be generated.
    idTokenValidity : float, default is Undefined, optional
        Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in token_validity_units.id_token.
    logoutUrls : [str], default is Undefined, optional
        List of allowed logout URLs for the identity providers. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    name : str, default is Undefined, optional
        Name of the application client.
    preventUserExistenceErrors : str, default is Undefined, optional
        Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
    readAttributes : [str], default is Undefined, optional
        List of user pool attributes that the application client can read from.
    refreshTokenValidity : float, default is Undefined, optional
        Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in token_validity_units.refresh_token.
    supportedIdentityProviders : [str], default is Undefined, optional
        List of provider names for the identity providers that are supported on this client. It uses the provider_name attribute of the aws_cognito_identity_provider resource(s), or the equivalent string(s).
    tokenValidityUnits : [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderTokenValidityUnitsItems0], default is Undefined, optional
        Configuration block for representing the validity times in units. See details below. Detailed below.
    userPoolId : str, default is Undefined, optional
        User pool the client belongs to.
    userPoolIdRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    writeAttributes : [str], default is Undefined, optional
        List of user pool attributes that the application client can write to.
    """


    accessTokenValidity?: float

    allowedOauthFlows?: [str]

    allowedOauthFlowsUserPoolClient?: bool

    allowedOauthScopes?: [str]

    analyticsConfiguration?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0]

    authSessionValidity?: float

    callbackUrls?: [str]

    defaultRedirectUri?: str

    enablePropagateAdditionalUserContextData?: bool

    enableTokenRevocation?: bool

    explicitAuthFlows?: [str]

    generateSecret?: bool

    idTokenValidity?: float

    logoutUrls?: [str]

    name?: str

    preventUserExistenceErrors?: str

    readAttributes?: [str]

    refreshTokenValidity?: float

    supportedIdentityProviders?: [str]

    tokenValidityUnits?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderTokenValidityUnitsItems0]

    userPoolId?: str

    userPoolIdRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDRef

    userPoolIdSelector?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDSelector

    writeAttributes?: [str]


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client spec init provider analytics configuration items0

    Attributes
    ----------
    applicationArn : str, default is Undefined, optional
        Application ARN for an Amazon Pinpoint application. Conflicts with external_id and role_arn.
    applicationId : str, default is Undefined, optional
        Application ID for an Amazon Pinpoint application.
    applicationIdRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDSelector, default is Undefined, optional
        application Id selector
    externalId : str, default is Undefined, optional
        ID for the Analytics Configuration. Conflicts with application_arn.
    roleArn : str, default is Undefined, optional
        ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with application_arn.
    roleArnRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnSelector, default is Undefined, optional
        role arn selector
    userDataShared : bool, default is Undefined, optional
        If set to true, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
    """


    applicationArn?: str

    applicationId?: str

    applicationIdRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDRef

    applicationIdSelector?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDSelector

    externalId?: str

    roleArn?: str

    roleArnRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnRef

    roleArnSelector?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnSelector

    userDataShared?: bool


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDRef:
    r"""
    Reference to a App in pinpoint to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDSelector:
    r"""
    Selector for a App in pinpoint to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDSelectorPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0ApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnSelectorPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderAnalyticsConfigurationItems0RoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderTokenValidityUnitsItems0:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client spec init provider token validity units items0

    Attributes
    ----------
    accessToken : str, default is Undefined, optional
        Time unit in for the value in access_token_validity, defaults to hours.
    idToken : str, default is Undefined, optional
        Time unit in for the value in id_token_validity, defaults to hours.
    refreshToken : str, default is Undefined, optional
        Time unit in for the value in refresh_token_validity, defaults to days.
    """


    accessToken?: str

    idToken?: str

    refreshToken?: str


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDRef:
    r"""
    Reference to a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDSelector:
    r"""
    Selector for a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDSelectorPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecInitProviderUserPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecProviderConfigRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToConfigRef

    metadata?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToMetadata

    name: str


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToConfigRefPolicy


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientStatus:
    r"""
    UserPoolClientStatus defines the observed state of UserPoolClient.

    Attributes
    ----------
    atProvider : CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProvider

    conditions?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusConditionsItems0]

    observedGeneration?: int


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProvider:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client status at provider

    Attributes
    ----------
    accessTokenValidity : float, default is Undefined, optional
        Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in token_validity_units.access_token.
    allowedOauthFlows : [str], default is Undefined, optional
        List of allowed OAuth flows, including code, implicit, and client_credentials. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    allowedOauthFlowsUserPoolClient : bool, default is Undefined, optional
        Whether the client is allowed to use OAuth 2.0 features. allowed_oauth_flows_user_pool_client must be set to true before you can configure the following arguments: callback_urls, logout_urls, allowed_oauth_scopes and allowed_oauth_flows.
    allowedOauthScopes : [str], default is Undefined, optional
        List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    analyticsConfiguration : [CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProviderAnalyticsConfigurationItems0], default is Undefined, optional
        Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
    authSessionValidity : float, default is Undefined, optional
        Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for auth_session_validity are between 3 and 15, with a default value of 3.
    callbackUrls : [str], default is Undefined, optional
        List of allowed callback URLs for the identity providers. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    defaultRedirectUri : str, default is Undefined, optional
        Default redirect URI and must be included in the list of callback URLs.
    enablePropagateAdditionalUserContextData : bool, default is Undefined, optional
        Enables the propagation of additional user context data.
    enableTokenRevocation : bool, default is Undefined, optional
        Enables or disables token revocation.
    explicitAuthFlows : [str], default is Undefined, optional
        List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
    generateSecret : bool, default is Undefined, optional
        Boolean flag indicating whether an application secret should be generated.
    id : str, default is Undefined, optional
        ID of the user pool client.
    idTokenValidity : float, default is Undefined, optional
        Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in token_validity_units.id_token.
    logoutUrls : [str], default is Undefined, optional
        List of allowed logout URLs for the identity providers. allowed_oauth_flows_user_pool_client must be set to true before you can configure this option.
    name : str, default is Undefined, optional
        Name of the application client.
    preventUserExistenceErrors : str, default is Undefined, optional
        Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
    readAttributes : [str], default is Undefined, optional
        List of user pool attributes that the application client can read from.
    refreshTokenValidity : float, default is Undefined, optional
        Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in token_validity_units.refresh_token.
    supportedIdentityProviders : [str], default is Undefined, optional
        List of provider names for the identity providers that are supported on this client. It uses the provider_name attribute of the aws_cognito_identity_provider resource(s), or the equivalent string(s).
    tokenValidityUnits : [CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProviderTokenValidityUnitsItems0], default is Undefined, optional
        Configuration block for representing the validity times in units. See details below. Detailed below.
    userPoolId : str, default is Undefined, optional
        User pool the client belongs to.
    writeAttributes : [str], default is Undefined, optional
        List of user pool attributes that the application client can write to.
    """


    accessTokenValidity?: float

    allowedOauthFlows?: [str]

    allowedOauthFlowsUserPoolClient?: bool

    allowedOauthScopes?: [str]

    analyticsConfiguration?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProviderAnalyticsConfigurationItems0]

    authSessionValidity?: float

    callbackUrls?: [str]

    defaultRedirectUri?: str

    enablePropagateAdditionalUserContextData?: bool

    enableTokenRevocation?: bool

    explicitAuthFlows?: [str]

    generateSecret?: bool

    id?: str

    idTokenValidity?: float

    logoutUrls?: [str]

    name?: str

    preventUserExistenceErrors?: str

    readAttributes?: [str]

    refreshTokenValidity?: float

    supportedIdentityProviders?: [str]

    tokenValidityUnits?: [CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProviderTokenValidityUnitsItems0]

    userPoolId?: str

    writeAttributes?: [str]


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProviderAnalyticsConfigurationItems0:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client status at provider analytics configuration items0

    Attributes
    ----------
    applicationArn : str, default is Undefined, optional
        Application ARN for an Amazon Pinpoint application. Conflicts with external_id and role_arn.
    applicationId : str, default is Undefined, optional
        Application ID for an Amazon Pinpoint application.
    externalId : str, default is Undefined, optional
        ID for the Analytics Configuration. Conflicts with application_arn.
    roleArn : str, default is Undefined, optional
        ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with application_arn.
    userDataShared : bool, default is Undefined, optional
        If set to true, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
    """


    applicationArn?: str

    applicationId?: str

    externalId?: str

    roleArn?: str

    userDataShared?: bool


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusAtProviderTokenValidityUnitsItems0:
    r"""
    cognitoidp aws upbound io v1beta1 user pool client status at provider token validity units items0

    Attributes
    ----------
    accessToken : str, default is Undefined, optional
        Time unit in for the value in access_token_validity, defaults to hours.
    idToken : str, default is Undefined, optional
        Time unit in for the value in id_token_validity, defaults to hours.
    refreshToken : str, default is Undefined, optional
        Time unit in for the value in refresh_token_validity, defaults to days.
    """


    accessToken?: str

    idToken?: str

    refreshToken?: str


schema CognitoidpAwsUpboundIoV1beta1UserPoolClientStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


