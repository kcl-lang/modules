"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Budget:
    r"""
    Budget is the Schema for the Budgets API. Provides a budgets budget resource.

    Attributes
    ----------
    apiVersion : str, default is "budgets.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Budget", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BudgetsAwsUpboundIoV1beta2BudgetSpec, default is Undefined, required
        spec
    status : BudgetsAwsUpboundIoV1beta2BudgetStatus, default is Undefined, optional
        status
    """


    apiVersion: "budgets.aws.upbound.io/v1beta2" = "budgets.aws.upbound.io/v1beta2"

    kind: "Budget" = "Budget"

    metadata?: v1.ObjectMeta

    spec: BudgetsAwsUpboundIoV1beta2BudgetSpec

    status?: BudgetsAwsUpboundIoV1beta2BudgetStatus


schema BudgetsAwsUpboundIoV1beta2BudgetSpec:
    r"""
    BudgetSpec defines the desired state of Budget

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : BudgetsAwsUpboundIoV1beta2BudgetSpecForProvider, default is Undefined, required
        for provider
    initProvider : BudgetsAwsUpboundIoV1beta2BudgetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : BudgetsAwsUpboundIoV1beta2BudgetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : BudgetsAwsUpboundIoV1beta2BudgetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: BudgetsAwsUpboundIoV1beta2BudgetSpecForProvider

    initProvider?: BudgetsAwsUpboundIoV1beta2BudgetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: BudgetsAwsUpboundIoV1beta2BudgetSpecProviderConfigRef

    publishConnectionDetailsTo?: BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: BudgetsAwsUpboundIoV1beta2BudgetSpecWriteConnectionSecretToRef


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProvider:
    r"""
    budgets aws upbound io v1beta2 budget spec for provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the target account for budget. Will use current user's account_id by default if omitted.
    autoAdjustData : BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderAutoAdjustData, default is Undefined, optional
        auto adjust data
    budgetType : str, default is Undefined, optional
        Whether this budget tracks monetary cost or usage.
    costFilter : [BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderCostFilterItems0], default is Undefined, optional
        A list of CostFilter name/values pair to apply to budget.
    costTypes : BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderCostTypes, default is Undefined, optional
        cost types
    limitAmount : str, default is Undefined, optional
        The amount of cost or usage being measured for a budget.
    limitUnit : str, default is Undefined, optional
        The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.
    notification : [BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderNotificationItems0], default is Undefined, optional
        Object containing Budget Notifications. Can be used multiple times to define more than one budget notification.
    plannedLimit : [BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderPlannedLimitItems0], default is Undefined, optional
        Object containing Planned Budget Limits. Can be used multiple times to plan more than one budget limit. See PlannedBudgetLimits documentation.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timePeriodEnd : str, default is Undefined, optional
        The end of the time period covered by the budget. There are no restrictions on the end date. Format: 2017-01-01_12:00.
    timePeriodStart : str, default is Undefined, optional
        The start of the time period covered by the budget. If you don't specify a start date, AWS defaults to the start of your chosen time period. The start date must come before the end date. Format: 2017-01-01_12:00.
    timeUnit : str, default is Undefined, optional
        The length of time until a budget resets the actual and forecasted spend. Valid values: MONTHLY, QUARTERLY, ANNUALLY, and DAILY.
    """


    accountId?: str

    autoAdjustData?: BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderAutoAdjustData

    budgetType?: str

    costFilter?: [BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderCostFilterItems0]

    costTypes?: BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderCostTypes

    limitAmount?: str

    limitUnit?: str

    notification?: [BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderNotificationItems0]

    plannedLimit?: [BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderPlannedLimitItems0]

    region: str

    tags?: {str:str}

    timePeriodEnd?: str

    timePeriodStart?: str

    timeUnit?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderAutoAdjustData:
    r"""
    Object containing AutoAdjustData which determines the budget amount for an auto-adjusting budget.

    Attributes
    ----------
    autoAdjustType : str, default is Undefined, optional
        The string that defines whether your budget auto-adjusts based on historical or forecasted data. Valid values: FORECAST,HISTORICAL
    historicalOptions : BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderAutoAdjustDataHistoricalOptions, default is Undefined, optional
        historical options
    """


    autoAdjustType?: str

    historicalOptions?: BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderAutoAdjustDataHistoricalOptions


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderAutoAdjustDataHistoricalOptions:
    r"""
    Configuration block of Historical Options. Required for auto_adjust_type of HISTORICAL Configuration block that defines the historical data that your auto-adjusting budget is based on.

    Attributes
    ----------
    budgetAdjustmentPeriod : float, default is Undefined, optional
        The number of budget periods included in the moving-average calculation that determines your auto-adjusted budget amount.
    """


    budgetAdjustmentPeriod?: float


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderCostFilterItems0:
    r"""
    budgets aws upbound io v1beta2 budget spec for provider cost filter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of a budget. Unique within accounts.
    values : [str], default is Undefined, optional
        values
    """


    name?: str

    values?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderCostTypes:
    r"""
    Object containing CostTypes The types of cost included in a budget, such as tax and subscriptions.

    Attributes
    ----------
    includeCredit : bool, default is Undefined, optional
        A boolean value whether to include credits in the cost budget. Defaults to true
    includeDiscount : bool, default is Undefined, optional
        Whether a budget includes discounts. Defaults to true
    includeOtherSubscription : bool, default is Undefined, optional
        A boolean value whether to include other subscription costs in the cost budget. Defaults to true
    includeRecurring : bool, default is Undefined, optional
        A boolean value whether to include recurring costs in the cost budget. Defaults to true
    includeRefund : bool, default is Undefined, optional
        A boolean value whether to include refunds in the cost budget. Defaults to true
    includeSubscription : bool, default is Undefined, optional
        A boolean value whether to include subscriptions in the cost budget. Defaults to true
    includeSupport : bool, default is Undefined, optional
        A boolean value whether to include support costs in the cost budget. Defaults to true
    includeTax : bool, default is Undefined, optional
        A boolean value whether to include tax in the cost budget. Defaults to true
    includeUpfront : bool, default is Undefined, optional
        A boolean value whether to include upfront costs in the cost budget. Defaults to true
    useAmortized : bool, default is Undefined, optional
        Whether a budget uses the amortized rate. Defaults to false
    useBlended : bool, default is Undefined, optional
        A boolean value whether to use blended costs in the cost budget. Defaults to false
    """


    includeCredit?: bool

    includeDiscount?: bool

    includeOtherSubscription?: bool

    includeRecurring?: bool

    includeRefund?: bool

    includeSubscription?: bool

    includeSupport?: bool

    includeTax?: bool

    includeUpfront?: bool

    useAmortized?: bool

    useBlended?: bool


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderNotificationItems0:
    r"""
    budgets aws upbound io v1beta2 budget spec for provider notification items0

    Attributes
    ----------
    comparisonOperator : str, default is Undefined, optional
        Comparison operator to use to evaluate the condition. Can be LESS_THAN, EQUAL_TO or GREATER_THAN.
    notificationType : str, default is Undefined, optional
        What kind of budget value to notify on. Can be ACTUAL or FORECASTED
    subscriberEmailAddresses : [str], default is Undefined, optional
        E-Mail addresses to notify. Either this or subscriber_sns_topic_arns is required.
    subscriberSnsTopicArns : [str], default is Undefined, optional
        SNS topics to notify. Either this or subscriber_email_addresses is required.
    threshold : float, default is Undefined, optional
        Threshold when the notification should be sent.
    thresholdType : str, default is Undefined, optional
        What kind of threshold is defined. Can be PERCENTAGE OR ABSOLUTE_VALUE.
    """


    comparisonOperator?: str

    notificationType?: str

    subscriberEmailAddresses?: [str]

    subscriberSnsTopicArns?: [str]

    threshold?: float

    thresholdType?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecForProviderPlannedLimitItems0:
    r"""
    budgets aws upbound io v1beta2 budget spec for provider planned limit items0

    Attributes
    ----------
    amount : str, default is Undefined, optional
        The amount of cost or usage being measured for a budget.
    startTime : str, default is Undefined, optional
        The start time of the budget limit. Format: 2017-01-01_12:00. See PlannedBudgetLimits documentation.
    unit : str, default is Undefined, optional
        The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.
    """


    amount?: str

    startTime?: str

    unit?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the target account for budget. Will use current user's account_id by default if omitted.
    autoAdjustData : BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderAutoAdjustData, default is Undefined, optional
        auto adjust data
    budgetType : str, default is Undefined, optional
        Whether this budget tracks monetary cost or usage.
    costFilter : [BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderCostFilterItems0], default is Undefined, optional
        A list of CostFilter name/values pair to apply to budget.
    costTypes : BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderCostTypes, default is Undefined, optional
        cost types
    limitAmount : str, default is Undefined, optional
        The amount of cost or usage being measured for a budget.
    limitUnit : str, default is Undefined, optional
        The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.
    notification : [BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderNotificationItems0], default is Undefined, optional
        Object containing Budget Notifications. Can be used multiple times to define more than one budget notification.
    plannedLimit : [BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderPlannedLimitItems0], default is Undefined, optional
        Object containing Planned Budget Limits. Can be used multiple times to plan more than one budget limit. See PlannedBudgetLimits documentation.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timePeriodEnd : str, default is Undefined, optional
        The end of the time period covered by the budget. There are no restrictions on the end date. Format: 2017-01-01_12:00.
    timePeriodStart : str, default is Undefined, optional
        The start of the time period covered by the budget. If you don't specify a start date, AWS defaults to the start of your chosen time period. The start date must come before the end date. Format: 2017-01-01_12:00.
    timeUnit : str, default is Undefined, optional
        The length of time until a budget resets the actual and forecasted spend. Valid values: MONTHLY, QUARTERLY, ANNUALLY, and DAILY.
    """


    accountId?: str

    autoAdjustData?: BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderAutoAdjustData

    budgetType?: str

    costFilter?: [BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderCostFilterItems0]

    costTypes?: BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderCostTypes

    limitAmount?: str

    limitUnit?: str

    notification?: [BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderNotificationItems0]

    plannedLimit?: [BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderPlannedLimitItems0]

    tags?: {str:str}

    timePeriodEnd?: str

    timePeriodStart?: str

    timeUnit?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderAutoAdjustData:
    r"""
    Object containing AutoAdjustData which determines the budget amount for an auto-adjusting budget.

    Attributes
    ----------
    autoAdjustType : str, default is Undefined, optional
        The string that defines whether your budget auto-adjusts based on historical or forecasted data. Valid values: FORECAST,HISTORICAL
    historicalOptions : BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderAutoAdjustDataHistoricalOptions, default is Undefined, optional
        historical options
    """


    autoAdjustType?: str

    historicalOptions?: BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderAutoAdjustDataHistoricalOptions


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderAutoAdjustDataHistoricalOptions:
    r"""
    Configuration block of Historical Options. Required for auto_adjust_type of HISTORICAL Configuration block that defines the historical data that your auto-adjusting budget is based on.

    Attributes
    ----------
    budgetAdjustmentPeriod : float, default is Undefined, optional
        The number of budget periods included in the moving-average calculation that determines your auto-adjusted budget amount.
    """


    budgetAdjustmentPeriod?: float


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderCostFilterItems0:
    r"""
    budgets aws upbound io v1beta2 budget spec init provider cost filter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of a budget. Unique within accounts.
    values : [str], default is Undefined, optional
        values
    """


    name?: str

    values?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderCostTypes:
    r"""
    Object containing CostTypes The types of cost included in a budget, such as tax and subscriptions.

    Attributes
    ----------
    includeCredit : bool, default is Undefined, optional
        A boolean value whether to include credits in the cost budget. Defaults to true
    includeDiscount : bool, default is Undefined, optional
        Whether a budget includes discounts. Defaults to true
    includeOtherSubscription : bool, default is Undefined, optional
        A boolean value whether to include other subscription costs in the cost budget. Defaults to true
    includeRecurring : bool, default is Undefined, optional
        A boolean value whether to include recurring costs in the cost budget. Defaults to true
    includeRefund : bool, default is Undefined, optional
        A boolean value whether to include refunds in the cost budget. Defaults to true
    includeSubscription : bool, default is Undefined, optional
        A boolean value whether to include subscriptions in the cost budget. Defaults to true
    includeSupport : bool, default is Undefined, optional
        A boolean value whether to include support costs in the cost budget. Defaults to true
    includeTax : bool, default is Undefined, optional
        A boolean value whether to include tax in the cost budget. Defaults to true
    includeUpfront : bool, default is Undefined, optional
        A boolean value whether to include upfront costs in the cost budget. Defaults to true
    useAmortized : bool, default is Undefined, optional
        Whether a budget uses the amortized rate. Defaults to false
    useBlended : bool, default is Undefined, optional
        A boolean value whether to use blended costs in the cost budget. Defaults to false
    """


    includeCredit?: bool

    includeDiscount?: bool

    includeOtherSubscription?: bool

    includeRecurring?: bool

    includeRefund?: bool

    includeSubscription?: bool

    includeSupport?: bool

    includeTax?: bool

    includeUpfront?: bool

    useAmortized?: bool

    useBlended?: bool


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderNotificationItems0:
    r"""
    budgets aws upbound io v1beta2 budget spec init provider notification items0

    Attributes
    ----------
    comparisonOperator : str, default is Undefined, optional
        Comparison operator to use to evaluate the condition. Can be LESS_THAN, EQUAL_TO or GREATER_THAN.
    notificationType : str, default is Undefined, optional
        What kind of budget value to notify on. Can be ACTUAL or FORECASTED
    subscriberEmailAddresses : [str], default is Undefined, optional
        E-Mail addresses to notify. Either this or subscriber_sns_topic_arns is required.
    subscriberSnsTopicArns : [str], default is Undefined, optional
        SNS topics to notify. Either this or subscriber_email_addresses is required.
    threshold : float, default is Undefined, optional
        Threshold when the notification should be sent.
    thresholdType : str, default is Undefined, optional
        What kind of threshold is defined. Can be PERCENTAGE OR ABSOLUTE_VALUE.
    """


    comparisonOperator?: str

    notificationType?: str

    subscriberEmailAddresses?: [str]

    subscriberSnsTopicArns?: [str]

    threshold?: float

    thresholdType?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecInitProviderPlannedLimitItems0:
    r"""
    budgets aws upbound io v1beta2 budget spec init provider planned limit items0

    Attributes
    ----------
    amount : str, default is Undefined, optional
        The amount of cost or usage being measured for a budget.
    startTime : str, default is Undefined, optional
        The start time of the budget limit. Format: 2017-01-01_12:00. See PlannedBudgetLimits documentation.
    unit : str, default is Undefined, optional
        The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.
    """


    amount?: str

    startTime?: str

    unit?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetSpecProviderConfigRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToConfigRef

    metadata?: BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToMetadata

    name: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToConfigRefPolicy


schema BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema BudgetsAwsUpboundIoV1beta2BudgetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema BudgetsAwsUpboundIoV1beta2BudgetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema BudgetsAwsUpboundIoV1beta2BudgetStatus:
    r"""
    BudgetStatus defines the observed state of Budget.

    Attributes
    ----------
    atProvider : BudgetsAwsUpboundIoV1beta2BudgetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [BudgetsAwsUpboundIoV1beta2BudgetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: BudgetsAwsUpboundIoV1beta2BudgetStatusAtProvider

    conditions?: [BudgetsAwsUpboundIoV1beta2BudgetStatusConditionsItems0]

    observedGeneration?: int


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProvider:
    r"""
    budgets aws upbound io v1beta2 budget status at provider

    Attributes
    ----------
    accountId : str, default is Undefined, optional
        The ID of the target account for budget. Will use current user's account_id by default if omitted.
    arn : str, default is Undefined, optional
        The ARN of the budget.
    autoAdjustData : BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderAutoAdjustData, default is Undefined, optional
        auto adjust data
    budgetType : str, default is Undefined, optional
        Whether this budget tracks monetary cost or usage.
    costFilter : [BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderCostFilterItems0], default is Undefined, optional
        A list of CostFilter name/values pair to apply to budget.
    costTypes : BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderCostTypes, default is Undefined, optional
        cost types
    id : str, default is Undefined, optional
        id of resource.
    limitAmount : str, default is Undefined, optional
        The amount of cost or usage being measured for a budget.
    limitUnit : str, default is Undefined, optional
        The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.
    notification : [BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderNotificationItems0], default is Undefined, optional
        Object containing Budget Notifications. Can be used multiple times to define more than one budget notification.
    plannedLimit : [BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderPlannedLimitItems0], default is Undefined, optional
        Object containing Planned Budget Limits. Can be used multiple times to plan more than one budget limit. See PlannedBudgetLimits documentation.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    timePeriodEnd : str, default is Undefined, optional
        The end of the time period covered by the budget. There are no restrictions on the end date. Format: 2017-01-01_12:00.
    timePeriodStart : str, default is Undefined, optional
        The start of the time period covered by the budget. If you don't specify a start date, AWS defaults to the start of your chosen time period. The start date must come before the end date. Format: 2017-01-01_12:00.
    timeUnit : str, default is Undefined, optional
        The length of time until a budget resets the actual and forecasted spend. Valid values: MONTHLY, QUARTERLY, ANNUALLY, and DAILY.
    """


    accountId?: str

    arn?: str

    autoAdjustData?: BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderAutoAdjustData

    budgetType?: str

    costFilter?: [BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderCostFilterItems0]

    costTypes?: BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderCostTypes

    id?: str

    limitAmount?: str

    limitUnit?: str

    notification?: [BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderNotificationItems0]

    plannedLimit?: [BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderPlannedLimitItems0]

    tags?: {str:str}

    tagsAll?: {str:str}

    timePeriodEnd?: str

    timePeriodStart?: str

    timeUnit?: str


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderAutoAdjustData:
    r"""
    Object containing AutoAdjustData which determines the budget amount for an auto-adjusting budget.

    Attributes
    ----------
    autoAdjustType : str, default is Undefined, optional
        The string that defines whether your budget auto-adjusts based on historical or forecasted data. Valid values: FORECAST,HISTORICAL
    historicalOptions : BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderAutoAdjustDataHistoricalOptions, default is Undefined, optional
        historical options
    lastAutoAdjustTime : str, default is Undefined, optional
        The last time that your budget was auto-adjusted.
    """


    autoAdjustType?: str

    historicalOptions?: BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderAutoAdjustDataHistoricalOptions

    lastAutoAdjustTime?: str


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderAutoAdjustDataHistoricalOptions:
    r"""
    Configuration block of Historical Options. Required for auto_adjust_type of HISTORICAL Configuration block that defines the historical data that your auto-adjusting budget is based on.

    Attributes
    ----------
    budgetAdjustmentPeriod : float, default is Undefined, optional
        The number of budget periods included in the moving-average calculation that determines your auto-adjusted budget amount.
    lookbackAvailablePeriods : float, default is Undefined, optional
        The integer that describes how many budget periods in your BudgetAdjustmentPeriod are included in the calculation of your current budget limit. If the first budget period in your BudgetAdjustmentPeriod has no cost data, then that budget period isn’t included in the average that determines your budget limit. You can’t set your own LookBackAvailablePeriods. The value is automatically calculated from the budget_adjustment_period and your historical cost data.
    """


    budgetAdjustmentPeriod?: float

    lookbackAvailablePeriods?: float


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderCostFilterItems0:
    r"""
    budgets aws upbound io v1beta2 budget status at provider cost filter items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of a budget. Unique within accounts.
    values : [str], default is Undefined, optional
        values
    """


    name?: str

    values?: [str]


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderCostTypes:
    r"""
    Object containing CostTypes The types of cost included in a budget, such as tax and subscriptions.

    Attributes
    ----------
    includeCredit : bool, default is Undefined, optional
        A boolean value whether to include credits in the cost budget. Defaults to true
    includeDiscount : bool, default is Undefined, optional
        Whether a budget includes discounts. Defaults to true
    includeOtherSubscription : bool, default is Undefined, optional
        A boolean value whether to include other subscription costs in the cost budget. Defaults to true
    includeRecurring : bool, default is Undefined, optional
        A boolean value whether to include recurring costs in the cost budget. Defaults to true
    includeRefund : bool, default is Undefined, optional
        A boolean value whether to include refunds in the cost budget. Defaults to true
    includeSubscription : bool, default is Undefined, optional
        A boolean value whether to include subscriptions in the cost budget. Defaults to true
    includeSupport : bool, default is Undefined, optional
        A boolean value whether to include support costs in the cost budget. Defaults to true
    includeTax : bool, default is Undefined, optional
        A boolean value whether to include tax in the cost budget. Defaults to true
    includeUpfront : bool, default is Undefined, optional
        A boolean value whether to include upfront costs in the cost budget. Defaults to true
    useAmortized : bool, default is Undefined, optional
        Whether a budget uses the amortized rate. Defaults to false
    useBlended : bool, default is Undefined, optional
        A boolean value whether to use blended costs in the cost budget. Defaults to false
    """


    includeCredit?: bool

    includeDiscount?: bool

    includeOtherSubscription?: bool

    includeRecurring?: bool

    includeRefund?: bool

    includeSubscription?: bool

    includeSupport?: bool

    includeTax?: bool

    includeUpfront?: bool

    useAmortized?: bool

    useBlended?: bool


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderNotificationItems0:
    r"""
    budgets aws upbound io v1beta2 budget status at provider notification items0

    Attributes
    ----------
    comparisonOperator : str, default is Undefined, optional
        Comparison operator to use to evaluate the condition. Can be LESS_THAN, EQUAL_TO or GREATER_THAN.
    notificationType : str, default is Undefined, optional
        What kind of budget value to notify on. Can be ACTUAL or FORECASTED
    subscriberEmailAddresses : [str], default is Undefined, optional
        E-Mail addresses to notify. Either this or subscriber_sns_topic_arns is required.
    subscriberSnsTopicArns : [str], default is Undefined, optional
        SNS topics to notify. Either this or subscriber_email_addresses is required.
    threshold : float, default is Undefined, optional
        Threshold when the notification should be sent.
    thresholdType : str, default is Undefined, optional
        What kind of threshold is defined. Can be PERCENTAGE OR ABSOLUTE_VALUE.
    """


    comparisonOperator?: str

    notificationType?: str

    subscriberEmailAddresses?: [str]

    subscriberSnsTopicArns?: [str]

    threshold?: float

    thresholdType?: str


schema BudgetsAwsUpboundIoV1beta2BudgetStatusAtProviderPlannedLimitItems0:
    r"""
    budgets aws upbound io v1beta2 budget status at provider planned limit items0

    Attributes
    ----------
    amount : str, default is Undefined, optional
        The amount of cost or usage being measured for a budget.
    startTime : str, default is Undefined, optional
        The start time of the budget limit. Format: 2017-01-01_12:00. See PlannedBudgetLimits documentation.
    unit : str, default is Undefined, optional
        The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See Spend documentation.
    """


    amount?: str

    startTime?: str

    unit?: str


schema BudgetsAwsUpboundIoV1beta2BudgetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


