"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Index:
    r"""
    Index is the Schema for the Indexs API. Provides an Amazon Kendra Index resource.

    Attributes
    ----------
    apiVersion : str, default is "kendra.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Index", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KendraAwsUpboundIoV1beta2IndexSpec, default is Undefined, required
        spec
    status : KendraAwsUpboundIoV1beta2IndexStatus, default is Undefined, optional
        status
    """


    apiVersion: "kendra.aws.upbound.io/v1beta2" = "kendra.aws.upbound.io/v1beta2"

    kind: "Index" = "Index"

    metadata?: v1.ObjectMeta

    spec: KendraAwsUpboundIoV1beta2IndexSpec

    status?: KendraAwsUpboundIoV1beta2IndexStatus


schema KendraAwsUpboundIoV1beta2IndexSpec:
    r"""
    IndexSpec defines the desired state of Index

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KendraAwsUpboundIoV1beta2IndexSpecForProvider, default is Undefined, required
        for provider
    initProvider : KendraAwsUpboundIoV1beta2IndexSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KendraAwsUpboundIoV1beta2IndexSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : KendraAwsUpboundIoV1beta2IndexSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KendraAwsUpboundIoV1beta2IndexSpecForProvider

    initProvider?: KendraAwsUpboundIoV1beta2IndexSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KendraAwsUpboundIoV1beta2IndexSpecProviderConfigRef

    publishConnectionDetailsTo?: KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: KendraAwsUpboundIoV1beta2IndexSpecWriteConnectionSecretToRef


schema KendraAwsUpboundIoV1beta2IndexSpecForProvider:
    r"""
    kendra aws upbound io v1beta2 index spec for provider

    Attributes
    ----------
    capacityUnits : KendraAwsUpboundIoV1beta2IndexSpecForProviderCapacityUnits, default is Undefined, optional
        capacity units
    description : str, default is Undefined, optional
        The description of the Index.
    documentMetadataConfigurationUpdates : [KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0], default is Undefined, optional
        One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at Amazon Kendra Index documentation. For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
    edition : str, default is Undefined, optional
        The Amazon Kendra edition to use for the index. Choose DEVELOPER_EDITION for indexes intended for development, testing, or proof of concept. Use ENTERPRISE_EDITION for your production databases. Once you set the edition for an index, it can't be changed. Defaults to ENTERPRISE_EDITION
    name : str, default is Undefined, optional
        Specifies the name of the Index.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the BatchPutDocument API to index documents from an Amazon S3 bucket.
    roleArnRef : KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    serverSideEncryptionConfiguration : KendraAwsUpboundIoV1beta2IndexSpecForProviderServerSideEncryptionConfiguration, default is Undefined, optional
        server side encryption configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userContextPolicy : str, default is Undefined, optional
        The user context policy. Valid values are ATTRIBUTE_FILTER or USER_TOKEN. For more information, refer to UserContextPolicy. Defaults to ATTRIBUTE_FILTER.
    userGroupResolutionConfiguration : KendraAwsUpboundIoV1beta2IndexSpecForProviderUserGroupResolutionConfiguration, default is Undefined, optional
        user group resolution configuration
    userTokenConfigurations : KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurations, default is Undefined, optional
        user token configurations
    """


    capacityUnits?: KendraAwsUpboundIoV1beta2IndexSpecForProviderCapacityUnits

    description?: str

    documentMetadataConfigurationUpdates?: [KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0]

    edition?: str

    name?: str

    region: str

    roleArn?: str

    roleArnRef?: KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnRef

    roleArnSelector?: KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnSelector

    serverSideEncryptionConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecForProviderServerSideEncryptionConfiguration

    tags?: {str:str}

    userContextPolicy?: str

    userGroupResolutionConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecForProviderUserGroupResolutionConfiguration

    userTokenConfigurations?: KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurations


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderCapacityUnits:
    r"""
    A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.

    Attributes
    ----------
    queryCapacityUnits : float, default is Undefined, optional
        The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to QueryCapacityUnits.
    storageCapacityUnits : float, default is Undefined, optional
        The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
    """


    queryCapacityUnits?: float

    storageCapacityUnits?: float


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0:
    r"""
    kendra aws upbound io v1beta2 index spec for provider document metadata configuration updates items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the index field. Minimum length of 1. Maximum length of 30.
    relevance : KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0Relevance, default is Undefined, optional
        relevance
    search : KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0Search, default is Undefined, optional
        search
    $type : str, default is Undefined, optional
        The data type of the index field. Valid values are STRING_VALUE, STRING_LIST_VALUE, LONG_VALUE, DATE_VALUE.
    """


    name?: str

    relevance?: KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0Relevance

    search?: KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0Search

    $type?: str


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0Relevance:
    r"""
    A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Specifies the time period that the boost applies to. For more information, refer to Duration.
    freshness : bool, default is Undefined, optional
        Indicates that this field determines how "fresh" a document is. For more information, refer to Freshness.
    importance : float, default is Undefined, optional
        The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
    rankOrder : str, default is Undefined, optional
        Determines how values should be interpreted. For more information, refer to RankOrder.
    valuesImportanceMap : {str:float}, default is Undefined, optional
        A list of values that should be given a different boost when they appear in the result list. For more information, refer to ValueImportanceMap.
    """


    duration?: str

    freshness?: bool

    importance?: float

    rankOrder?: str

    valuesImportanceMap?: {str:float}


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderDocumentMetadataConfigurationUpdatesItems0Search:
    r"""
    A block that provides information about how the field is used during a search. Documented below. Detailed below

    Attributes
    ----------
    displayable : bool, default is Undefined, optional
        Determines whether the field is returned in the query response. The default is true.
    facetable : bool, default is Undefined, optional
        Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is false.
    searchable : bool, default is Undefined, optional
        Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is true for string fields and false for number and date fields.
    sortable : bool, default is Undefined, optional
        Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is false.
    """


    displayable?: bool

    facetable?: bool

    searchable?: bool

    sortable?: bool


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnRefPolicy


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnSelectorPolicy


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderServerSideEncryptionConfiguration:
    r"""
    A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.

    Attributes
    ----------
    kmsKeyId : str, default is Undefined, optional
        The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
    """


    kmsKeyId?: str


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderUserGroupResolutionConfiguration:
    r"""
    A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see UserGroupResolutionConfiguration. Detailed below.

    Attributes
    ----------
    userGroupResolutionMode : str, default is Undefined, optional
        The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are AWS_SSO or NONE.
    """


    userGroupResolutionMode?: str


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurations:
    r"""
    A block that specifies the user token configuration. Detailed below.

    Attributes
    ----------
    jsonTokenTypeConfiguration : KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurationsJSONTokenTypeConfiguration, default is Undefined, optional
        json token type configuration
    jwtTokenTypeConfiguration : KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurationsJwtTokenTypeConfiguration, default is Undefined, optional
        jwt token type configuration
    """


    jsonTokenTypeConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurationsJSONTokenTypeConfiguration

    jwtTokenTypeConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurationsJwtTokenTypeConfiguration


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurationsJSONTokenTypeConfiguration:
    r"""
    A block that specifies the information about the JSON token type configuration. Detailed below.

    Attributes
    ----------
    groupAttributeField : str, default is Undefined, optional
        The group attribute field. Minimum length of 1. Maximum length of 2048.
    userNameAttributeField : str, default is Undefined, optional
        The user name attribute field. Minimum length of 1. Maximum length of 2048.
    """


    groupAttributeField?: str

    userNameAttributeField?: str


schema KendraAwsUpboundIoV1beta2IndexSpecForProviderUserTokenConfigurationsJwtTokenTypeConfiguration:
    r"""
    A block that specifies the information about the JWT token type configuration. Detailed below.

    Attributes
    ----------
    claimRegex : str, default is Undefined, optional
        The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
    groupAttributeField : str, default is Undefined, optional
        The group attribute field. Minimum length of 1. Maximum length of 2048.
    issuer : str, default is Undefined, optional
        The issuer of the token. Minimum length of 1. Maximum length of 65.
    keyLocation : str, default is Undefined, optional
        The location of the key. Valid values are URL or SECRET_MANAGER
    secretsManagerArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the secret.
    url : str, default is Undefined, optional
        The signing key URL. Valid pattern is ^(https?|ftp|file):\/\/([^\s]*)
    userNameAttributeField : str, default is Undefined, optional
        The user name attribute field. Minimum length of 1. Maximum length of 2048.
    """


    claimRegex?: str

    groupAttributeField?: str

    issuer?: str

    keyLocation?: str

    secretsManagerArn?: str

    url?: str

    userNameAttributeField?: str


schema KendraAwsUpboundIoV1beta2IndexSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    capacityUnits : KendraAwsUpboundIoV1beta2IndexSpecInitProviderCapacityUnits, default is Undefined, optional
        capacity units
    description : str, default is Undefined, optional
        The description of the Index.
    documentMetadataConfigurationUpdates : [KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0], default is Undefined, optional
        One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at Amazon Kendra Index documentation. For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
    edition : str, default is Undefined, optional
        The Amazon Kendra edition to use for the index. Choose DEVELOPER_EDITION for indexes intended for development, testing, or proof of concept. Use ENTERPRISE_EDITION for your production databases. Once you set the edition for an index, it can't be changed. Defaults to ENTERPRISE_EDITION
    name : str, default is Undefined, optional
        Specifies the name of the Index.
    roleArn : str, default is Undefined, optional
        An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the BatchPutDocument API to index documents from an Amazon S3 bucket.
    roleArnRef : KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    serverSideEncryptionConfiguration : KendraAwsUpboundIoV1beta2IndexSpecInitProviderServerSideEncryptionConfiguration, default is Undefined, optional
        server side encryption configuration
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userContextPolicy : str, default is Undefined, optional
        The user context policy. Valid values are ATTRIBUTE_FILTER or USER_TOKEN. For more information, refer to UserContextPolicy. Defaults to ATTRIBUTE_FILTER.
    userGroupResolutionConfiguration : KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserGroupResolutionConfiguration, default is Undefined, optional
        user group resolution configuration
    userTokenConfigurations : KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurations, default is Undefined, optional
        user token configurations
    """


    capacityUnits?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderCapacityUnits

    description?: str

    documentMetadataConfigurationUpdates?: [KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0]

    edition?: str

    name?: str

    roleArn?: str

    roleArnRef?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnRef

    roleArnSelector?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnSelector

    serverSideEncryptionConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderServerSideEncryptionConfiguration

    tags?: {str:str}

    userContextPolicy?: str

    userGroupResolutionConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserGroupResolutionConfiguration

    userTokenConfigurations?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurations


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderCapacityUnits:
    r"""
    A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.

    Attributes
    ----------
    queryCapacityUnits : float, default is Undefined, optional
        The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to QueryCapacityUnits.
    storageCapacityUnits : float, default is Undefined, optional
        The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
    """


    queryCapacityUnits?: float

    storageCapacityUnits?: float


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0:
    r"""
    kendra aws upbound io v1beta2 index spec init provider document metadata configuration updates items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the index field. Minimum length of 1. Maximum length of 30.
    relevance : KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0Relevance, default is Undefined, optional
        relevance
    search : KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0Search, default is Undefined, optional
        search
    $type : str, default is Undefined, optional
        The data type of the index field. Valid values are STRING_VALUE, STRING_LIST_VALUE, LONG_VALUE, DATE_VALUE.
    """


    name?: str

    relevance?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0Relevance

    search?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0Search

    $type?: str


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0Relevance:
    r"""
    A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Specifies the time period that the boost applies to. For more information, refer to Duration.
    freshness : bool, default is Undefined, optional
        Indicates that this field determines how "fresh" a document is. For more information, refer to Freshness.
    importance : float, default is Undefined, optional
        The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
    rankOrder : str, default is Undefined, optional
        Determines how values should be interpreted. For more information, refer to RankOrder.
    valuesImportanceMap : {str:float}, default is Undefined, optional
        A list of values that should be given a different boost when they appear in the result list. For more information, refer to ValueImportanceMap.
    """


    duration?: str

    freshness?: bool

    importance?: float

    rankOrder?: str

    valuesImportanceMap?: {str:float}


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderDocumentMetadataConfigurationUpdatesItems0Search:
    r"""
    A block that provides information about how the field is used during a search. Documented below. Detailed below

    Attributes
    ----------
    displayable : bool, default is Undefined, optional
        Determines whether the field is returned in the query response. The default is true.
    facetable : bool, default is Undefined, optional
        Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is false.
    searchable : bool, default is Undefined, optional
        Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is true for string fields and false for number and date fields.
    sortable : bool, default is Undefined, optional
        Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is false.
    """


    displayable?: bool

    facetable?: bool

    searchable?: bool

    sortable?: bool


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnRefPolicy


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnSelectorPolicy


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderServerSideEncryptionConfiguration:
    r"""
    A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.

    Attributes
    ----------
    kmsKeyId : str, default is Undefined, optional
        The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
    """


    kmsKeyId?: str


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserGroupResolutionConfiguration:
    r"""
    A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see UserGroupResolutionConfiguration. Detailed below.

    Attributes
    ----------
    userGroupResolutionMode : str, default is Undefined, optional
        The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are AWS_SSO or NONE.
    """


    userGroupResolutionMode?: str


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurations:
    r"""
    A block that specifies the user token configuration. Detailed below.

    Attributes
    ----------
    jsonTokenTypeConfiguration : KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurationsJSONTokenTypeConfiguration, default is Undefined, optional
        json token type configuration
    jwtTokenTypeConfiguration : KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurationsJwtTokenTypeConfiguration, default is Undefined, optional
        jwt token type configuration
    """


    jsonTokenTypeConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurationsJSONTokenTypeConfiguration

    jwtTokenTypeConfiguration?: KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurationsJwtTokenTypeConfiguration


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurationsJSONTokenTypeConfiguration:
    r"""
    A block that specifies the information about the JSON token type configuration. Detailed below.

    Attributes
    ----------
    groupAttributeField : str, default is Undefined, optional
        The group attribute field. Minimum length of 1. Maximum length of 2048.
    userNameAttributeField : str, default is Undefined, optional
        The user name attribute field. Minimum length of 1. Maximum length of 2048.
    """


    groupAttributeField?: str

    userNameAttributeField?: str


schema KendraAwsUpboundIoV1beta2IndexSpecInitProviderUserTokenConfigurationsJwtTokenTypeConfiguration:
    r"""
    A block that specifies the information about the JWT token type configuration. Detailed below.

    Attributes
    ----------
    claimRegex : str, default is Undefined, optional
        The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
    groupAttributeField : str, default is Undefined, optional
        The group attribute field. Minimum length of 1. Maximum length of 2048.
    issuer : str, default is Undefined, optional
        The issuer of the token. Minimum length of 1. Maximum length of 65.
    keyLocation : str, default is Undefined, optional
        The location of the key. Valid values are URL or SECRET_MANAGER
    secretsManagerArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the secret.
    url : str, default is Undefined, optional
        The signing key URL. Valid pattern is ^(https?|ftp|file):\/\/([^\s]*)
    userNameAttributeField : str, default is Undefined, optional
        The user name attribute field. Minimum length of 1. Maximum length of 2048.
    """


    claimRegex?: str

    groupAttributeField?: str

    issuer?: str

    keyLocation?: str

    secretsManagerArn?: str

    url?: str

    userNameAttributeField?: str


schema KendraAwsUpboundIoV1beta2IndexSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta2IndexSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta2IndexSpecProviderConfigRefPolicy


schema KendraAwsUpboundIoV1beta2IndexSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToConfigRef

    metadata?: KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToMetadata

    name: str


schema KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToConfigRefPolicy


schema KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KendraAwsUpboundIoV1beta2IndexSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KendraAwsUpboundIoV1beta2IndexSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KendraAwsUpboundIoV1beta2IndexStatus:
    r"""
    IndexStatus defines the observed state of Index.

    Attributes
    ----------
    atProvider : KendraAwsUpboundIoV1beta2IndexStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KendraAwsUpboundIoV1beta2IndexStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KendraAwsUpboundIoV1beta2IndexStatusAtProvider

    conditions?: [KendraAwsUpboundIoV1beta2IndexStatusConditionsItems0]

    observedGeneration?: int


schema KendraAwsUpboundIoV1beta2IndexStatusAtProvider:
    r"""
    kendra aws upbound io v1beta2 index status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the Index.
    capacityUnits : KendraAwsUpboundIoV1beta2IndexStatusAtProviderCapacityUnits, default is Undefined, optional
        capacity units
    createdAt : str, default is Undefined, optional
        The Unix datetime that the index was created.
    description : str, default is Undefined, optional
        The description of the Index.
    documentMetadataConfigurationUpdates : [KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0], default is Undefined, optional
        One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at Amazon Kendra Index documentation. For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
    edition : str, default is Undefined, optional
        The Amazon Kendra edition to use for the index. Choose DEVELOPER_EDITION for indexes intended for development, testing, or proof of concept. Use ENTERPRISE_EDITION for your production databases. Once you set the edition for an index, it can't be changed. Defaults to ENTERPRISE_EDITION
    errorMessage : str, default is Undefined, optional
        When the Status field value is FAILED, this contains a message that explains why.
    id : str, default is Undefined, optional
        The identifier of the Index.
    indexStatistics : [KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0], default is Undefined, optional
        A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
    name : str, default is Undefined, optional
        Specifies the name of the Index.
    roleArn : str, default is Undefined, optional
        An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the BatchPutDocument API to index documents from an Amazon S3 bucket.
    serverSideEncryptionConfiguration : KendraAwsUpboundIoV1beta2IndexStatusAtProviderServerSideEncryptionConfiguration, default is Undefined, optional
        server side encryption configuration
    status : str, default is Undefined, optional
        The current status of the index. When the value is ACTIVE, the index is ready for use. If the Status field value is FAILED, the error_message field contains a message that explains why.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    updatedAt : str, default is Undefined, optional
        The Unix datetime that the index was last updated.
    userContextPolicy : str, default is Undefined, optional
        The user context policy. Valid values are ATTRIBUTE_FILTER or USER_TOKEN. For more information, refer to UserContextPolicy. Defaults to ATTRIBUTE_FILTER.
    userGroupResolutionConfiguration : KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserGroupResolutionConfiguration, default is Undefined, optional
        user group resolution configuration
    userTokenConfigurations : KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurations, default is Undefined, optional
        user token configurations
    """


    arn?: str

    capacityUnits?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderCapacityUnits

    createdAt?: str

    description?: str

    documentMetadataConfigurationUpdates?: [KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0]

    edition?: str

    errorMessage?: str

    id?: str

    indexStatistics?: [KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0]

    name?: str

    roleArn?: str

    serverSideEncryptionConfiguration?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderServerSideEncryptionConfiguration

    status?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    updatedAt?: str

    userContextPolicy?: str

    userGroupResolutionConfiguration?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserGroupResolutionConfiguration

    userTokenConfigurations?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurations


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderCapacityUnits:
    r"""
    A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.

    Attributes
    ----------
    queryCapacityUnits : float, default is Undefined, optional
        The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to QueryCapacityUnits.
    storageCapacityUnits : float, default is Undefined, optional
        The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.
    """


    queryCapacityUnits?: float

    storageCapacityUnits?: float


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0:
    r"""
    kendra aws upbound io v1beta2 index status at provider document metadata configuration updates items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the index field. Minimum length of 1. Maximum length of 30.
    relevance : KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0Relevance, default is Undefined, optional
        relevance
    search : KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0Search, default is Undefined, optional
        search
    $type : str, default is Undefined, optional
        The data type of the index field. Valid values are STRING_VALUE, STRING_LIST_VALUE, LONG_VALUE, DATE_VALUE.
    """


    name?: str

    relevance?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0Relevance

    search?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0Search

    $type?: str


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0Relevance:
    r"""
    A block that provides manual tuning parameters to determine how the field affects the search results. Detailed below

    Attributes
    ----------
    duration : str, default is Undefined, optional
        Specifies the time period that the boost applies to. For more information, refer to Duration.
    freshness : bool, default is Undefined, optional
        Indicates that this field determines how "fresh" a document is. For more information, refer to Freshness.
    importance : float, default is Undefined, optional
        The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers. Minimum value of 1. Maximum value of 10.
    rankOrder : str, default is Undefined, optional
        Determines how values should be interpreted. For more information, refer to RankOrder.
    valuesImportanceMap : {str:float}, default is Undefined, optional
        A list of values that should be given a different boost when they appear in the result list. For more information, refer to ValueImportanceMap.
    """


    duration?: str

    freshness?: bool

    importance?: float

    rankOrder?: str

    valuesImportanceMap?: {str:float}


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderDocumentMetadataConfigurationUpdatesItems0Search:
    r"""
    A block that provides information about how the field is used during a search. Documented below. Detailed below

    Attributes
    ----------
    displayable : bool, default is Undefined, optional
        Determines whether the field is returned in the query response. The default is true.
    facetable : bool, default is Undefined, optional
        Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is false.
    searchable : bool, default is Undefined, optional
        Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is true for string fields and false for number and date fields.
    sortable : bool, default is Undefined, optional
        Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is false.
    """


    displayable?: bool

    facetable?: bool

    searchable?: bool

    sortable?: bool


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0:
    r"""
    kendra aws upbound io v1beta2 index status at provider index statistics items0

    Attributes
    ----------
    faqStatistics : [KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0FaqStatisticsItems0], default is Undefined, optional
        A block that specifies the number of question and answer topics in the index. Detailed below.
    textDocumentStatistics : [KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0TextDocumentStatisticsItems0], default is Undefined, optional
        A block that specifies the number of text documents indexed. Detailed below.
    """


    faqStatistics?: [KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0FaqStatisticsItems0]

    textDocumentStatistics?: [KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0TextDocumentStatisticsItems0]


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0FaqStatisticsItems0:
    r"""
    kendra aws upbound io v1beta2 index status at provider index statistics items0 faq statistics items0

    Attributes
    ----------
    indexedQuestionAnswersCount : float, default is Undefined, optional
        The total number of FAQ questions and answers contained in the index.
    """


    indexedQuestionAnswersCount?: float


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderIndexStatisticsItems0TextDocumentStatisticsItems0:
    r"""
    kendra aws upbound io v1beta2 index status at provider index statistics items0 text document statistics items0

    Attributes
    ----------
    indexedTextBytes : float, default is Undefined, optional
        The total size, in bytes, of the indexed documents.
    indexedTextDocumentsCount : float, default is Undefined, optional
        The number of text documents indexed.
    """


    indexedTextBytes?: float

    indexedTextDocumentsCount?: float


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderServerSideEncryptionConfiguration:
    r"""
    A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.

    Attributes
    ----------
    kmsKeyId : str, default is Undefined, optional
        The identifier of the AWS KMScustomer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
    """


    kmsKeyId?: str


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserGroupResolutionConfiguration:
    r"""
    A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see UserGroupResolutionConfiguration. Detailed below.

    Attributes
    ----------
    userGroupResolutionMode : str, default is Undefined, optional
        The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are AWS_SSO or NONE.
    """


    userGroupResolutionMode?: str


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurations:
    r"""
    A block that specifies the user token configuration. Detailed below.

    Attributes
    ----------
    jsonTokenTypeConfiguration : KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurationsJSONTokenTypeConfiguration, default is Undefined, optional
        json token type configuration
    jwtTokenTypeConfiguration : KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurationsJwtTokenTypeConfiguration, default is Undefined, optional
        jwt token type configuration
    """


    jsonTokenTypeConfiguration?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurationsJSONTokenTypeConfiguration

    jwtTokenTypeConfiguration?: KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurationsJwtTokenTypeConfiguration


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurationsJSONTokenTypeConfiguration:
    r"""
    A block that specifies the information about the JSON token type configuration. Detailed below.

    Attributes
    ----------
    groupAttributeField : str, default is Undefined, optional
        The group attribute field. Minimum length of 1. Maximum length of 2048.
    userNameAttributeField : str, default is Undefined, optional
        The user name attribute field. Minimum length of 1. Maximum length of 2048.
    """


    groupAttributeField?: str

    userNameAttributeField?: str


schema KendraAwsUpboundIoV1beta2IndexStatusAtProviderUserTokenConfigurationsJwtTokenTypeConfiguration:
    r"""
    A block that specifies the information about the JWT token type configuration. Detailed below.

    Attributes
    ----------
    claimRegex : str, default is Undefined, optional
        The regular expression that identifies the claim. Minimum length of 1. Maximum length of 100.
    groupAttributeField : str, default is Undefined, optional
        The group attribute field. Minimum length of 1. Maximum length of 2048.
    issuer : str, default is Undefined, optional
        The issuer of the token. Minimum length of 1. Maximum length of 65.
    keyLocation : str, default is Undefined, optional
        The location of the key. Valid values are URL or SECRET_MANAGER
    secretsManagerArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the secret.
    url : str, default is Undefined, optional
        The signing key URL. Valid pattern is ^(https?|ftp|file):\/\/([^\s]*)
    userNameAttributeField : str, default is Undefined, optional
        The user name attribute field. Minimum length of 1. Maximum length of 2048.
    """


    claimRegex?: str

    groupAttributeField?: str

    issuer?: str

    keyLocation?: str

    secretsManagerArn?: str

    url?: str

    userNameAttributeField?: str


schema KendraAwsUpboundIoV1beta2IndexStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


