"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema API:
    r"""
    API is the Schema for the APIs API. Manages an Amazon API Gateway Version 2 API.

    Attributes
    ----------
    apiVersion : str, default is "apigatewayv2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "API", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Apigatewayv2AwsUpboundIoV1beta1APISpec, default is Undefined, required
        spec
    status : Apigatewayv2AwsUpboundIoV1beta1APIStatus, default is Undefined, optional
        status
    """


    apiVersion: "apigatewayv2.aws.upbound.io/v1beta1" = "apigatewayv2.aws.upbound.io/v1beta1"

    kind: "API" = "API"

    metadata?: v1.ObjectMeta

    spec: Apigatewayv2AwsUpboundIoV1beta1APISpec

    status?: Apigatewayv2AwsUpboundIoV1beta1APIStatus


schema Apigatewayv2AwsUpboundIoV1beta1APISpec:
    r"""
    APISpec defines the desired state of API

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Apigatewayv2AwsUpboundIoV1beta1APISpecForProvider, default is Undefined, required
        for provider
    initProvider : Apigatewayv2AwsUpboundIoV1beta1APISpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Apigatewayv2AwsUpboundIoV1beta1APISpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Apigatewayv2AwsUpboundIoV1beta1APISpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Apigatewayv2AwsUpboundIoV1beta1APISpecForProvider

    initProvider?: Apigatewayv2AwsUpboundIoV1beta1APISpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Apigatewayv2AwsUpboundIoV1beta1APISpecProviderConfigRef

    publishConnectionDetailsTo?: Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Apigatewayv2AwsUpboundIoV1beta1APISpecWriteConnectionSecretToRef


schema Apigatewayv2AwsUpboundIoV1beta1APISpecForProvider:
    r"""
    apigatewayv2 aws upbound io v1beta1 API spec for provider

    Attributes
    ----------
    apiKeySelectionExpression : str, default is Undefined, optional
        An API key selection expression.
        Valid values: $context.authorizer.usageIdentifierKey, $request.header.x-api-key. Defaults to $request.header.x-api-key.
        Applicable for WebSocket APIs.
    body : str, default is Undefined, optional
        An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.
    corsConfiguration : [Apigatewayv2AwsUpboundIoV1beta1APISpecForProviderCorsConfigurationItems0], default is Undefined, optional
        Cross-origin resource sharing (CORS) configuration. Applicable for HTTP APIs.
    credentialsArn : str, default is Undefined, optional
        Part of quick create. Specifies any credentials required for the integration. Applicable for HTTP APIs.
    description : str, default is Undefined, optional
        Description of the API. Must be less than or equal to 1024 characters in length.
    disableExecuteApiEndpoint : bool, default is Undefined, optional
        Whether clients can invoke the API by using the default execute-api endpoint.
        By default, clients can invoke the API with the default {api_id}.execute-api.{region}.amazonaws.com endpoint.
        To require that clients use a custom domain name to invoke the API, disable the default endpoint.
    failOnWarnings : bool, default is Undefined, optional
        Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to false. Applicable for HTTP APIs.
    name : str, default is Undefined, optional
        Name of the API. Must be less than or equal to 128 characters in length.
    protocolType : str, default is Undefined, optional
        API protocol. Valid values: HTTP, WEBSOCKET.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    routeKey : str, default is Undefined, optional
        Part of quick create. Specifies any route key. Applicable for HTTP APIs.
    routeSelectionExpression : str, default is Undefined, optional
        The route selection expression for the API.
        Defaults to $request.method $request.path.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    target : str, default is Undefined, optional
        Part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes.
        For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN.
        The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Applicable for HTTP APIs.
    version : str, default is Undefined, optional
        Version identifier for the API. Must be between 1 and 64 characters in length.
    """


    apiKeySelectionExpression?: str

    body?: str

    corsConfiguration?: [Apigatewayv2AwsUpboundIoV1beta1APISpecForProviderCorsConfigurationItems0]

    credentialsArn?: str

    description?: str

    disableExecuteApiEndpoint?: bool

    failOnWarnings?: bool

    name?: str

    protocolType?: str

    region: str

    routeKey?: str

    routeSelectionExpression?: str

    tags?: {str:str}

    target?: str

    version?: str


schema Apigatewayv2AwsUpboundIoV1beta1APISpecForProviderCorsConfigurationItems0:
    r"""
    apigatewayv2 aws upbound io v1beta1 API spec for provider cors configuration items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        Whether credentials are included in the CORS request.
    allowHeaders : [str], default is Undefined, optional
        Set of allowed HTTP headers.
    allowMethods : [str], default is Undefined, optional
        Set of allowed HTTP methods.
    allowOrigins : [str], default is Undefined, optional
        Set of allowed origins.
    exposeHeaders : [str], default is Undefined, optional
        Set of exposed HTTP headers.
    maxAge : float, default is Undefined, optional
        Number of seconds that the browser should cache preflight request results.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: float


schema Apigatewayv2AwsUpboundIoV1beta1APISpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    apiKeySelectionExpression : str, default is Undefined, optional
        An API key selection expression.
        Valid values: $context.authorizer.usageIdentifierKey, $request.header.x-api-key. Defaults to $request.header.x-api-key.
        Applicable for WebSocket APIs.
    body : str, default is Undefined, optional
        An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.
    corsConfiguration : [Apigatewayv2AwsUpboundIoV1beta1APISpecInitProviderCorsConfigurationItems0], default is Undefined, optional
        Cross-origin resource sharing (CORS) configuration. Applicable for HTTP APIs.
    credentialsArn : str, default is Undefined, optional
        Part of quick create. Specifies any credentials required for the integration. Applicable for HTTP APIs.
    description : str, default is Undefined, optional
        Description of the API. Must be less than or equal to 1024 characters in length.
    disableExecuteApiEndpoint : bool, default is Undefined, optional
        Whether clients can invoke the API by using the default execute-api endpoint.
        By default, clients can invoke the API with the default {api_id}.execute-api.{region}.amazonaws.com endpoint.
        To require that clients use a custom domain name to invoke the API, disable the default endpoint.
    failOnWarnings : bool, default is Undefined, optional
        Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to false. Applicable for HTTP APIs.
    name : str, default is Undefined, optional
        Name of the API. Must be less than or equal to 128 characters in length.
    protocolType : str, default is Undefined, optional
        API protocol. Valid values: HTTP, WEBSOCKET.
    routeKey : str, default is Undefined, optional
        Part of quick create. Specifies any route key. Applicable for HTTP APIs.
    routeSelectionExpression : str, default is Undefined, optional
        The route selection expression for the API.
        Defaults to $request.method $request.path.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    target : str, default is Undefined, optional
        Part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes.
        For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN.
        The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Applicable for HTTP APIs.
    version : str, default is Undefined, optional
        Version identifier for the API. Must be between 1 and 64 characters in length.
    """


    apiKeySelectionExpression?: str

    body?: str

    corsConfiguration?: [Apigatewayv2AwsUpboundIoV1beta1APISpecInitProviderCorsConfigurationItems0]

    credentialsArn?: str

    description?: str

    disableExecuteApiEndpoint?: bool

    failOnWarnings?: bool

    name?: str

    protocolType?: str

    routeKey?: str

    routeSelectionExpression?: str

    tags?: {str:str}

    target?: str

    version?: str


schema Apigatewayv2AwsUpboundIoV1beta1APISpecInitProviderCorsConfigurationItems0:
    r"""
    apigatewayv2 aws upbound io v1beta1 API spec init provider cors configuration items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        Whether credentials are included in the CORS request.
    allowHeaders : [str], default is Undefined, optional
        Set of allowed HTTP headers.
    allowMethods : [str], default is Undefined, optional
        Set of allowed HTTP methods.
    allowOrigins : [str], default is Undefined, optional
        Set of allowed origins.
    exposeHeaders : [str], default is Undefined, optional
        Set of exposed HTTP headers.
    maxAge : float, default is Undefined, optional
        Number of seconds that the browser should cache preflight request results.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: float


schema Apigatewayv2AwsUpboundIoV1beta1APISpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1APISpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1APISpecProviderConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1APISpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToConfigRef

    metadata?: Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToMetadata

    name: str


schema Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToConfigRefPolicy


schema Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Apigatewayv2AwsUpboundIoV1beta1APISpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Apigatewayv2AwsUpboundIoV1beta1APISpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Apigatewayv2AwsUpboundIoV1beta1APIStatus:
    r"""
    APIStatus defines the observed state of API.

    Attributes
    ----------
    atProvider : Apigatewayv2AwsUpboundIoV1beta1APIStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Apigatewayv2AwsUpboundIoV1beta1APIStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Apigatewayv2AwsUpboundIoV1beta1APIStatusAtProvider

    conditions?: [Apigatewayv2AwsUpboundIoV1beta1APIStatusConditionsItems0]

    observedGeneration?: int


schema Apigatewayv2AwsUpboundIoV1beta1APIStatusAtProvider:
    r"""
    apigatewayv2 aws upbound io v1beta1 API status at provider

    Attributes
    ----------
    apiEndpoint : str, default is Undefined, optional
        URI of the API, of the form https://{api-id}.execute-api.{region}.amazonaws.com for HTTP APIs and wss://{api-id}.execute-api.{region}.amazonaws.com for WebSocket APIs.
    apiKeySelectionExpression : str, default is Undefined, optional
        An API key selection expression.
        Valid values: $context.authorizer.usageIdentifierKey, $request.header.x-api-key. Defaults to $request.header.x-api-key.
        Applicable for WebSocket APIs.
    arn : str, default is Undefined, optional
        ARN of the API.
    body : str, default is Undefined, optional
        An OpenAPI specification that defines the set of routes and integrations to create as part of the HTTP APIs. Supported only for HTTP APIs.
    corsConfiguration : [Apigatewayv2AwsUpboundIoV1beta1APIStatusAtProviderCorsConfigurationItems0], default is Undefined, optional
        Cross-origin resource sharing (CORS) configuration. Applicable for HTTP APIs.
    credentialsArn : str, default is Undefined, optional
        Part of quick create. Specifies any credentials required for the integration. Applicable for HTTP APIs.
    description : str, default is Undefined, optional
        Description of the API. Must be less than or equal to 1024 characters in length.
    disableExecuteApiEndpoint : bool, default is Undefined, optional
        Whether clients can invoke the API by using the default execute-api endpoint.
        By default, clients can invoke the API with the default {api_id}.execute-api.{region}.amazonaws.com endpoint.
        To require that clients use a custom domain name to invoke the API, disable the default endpoint.
    executionArn : str, default is Undefined, optional
        ARN prefix to be used in an aws_lambda_permission's source_arn attribute
        or in an aws_iam_policy to authorize access to the @connections API.
        See the Amazon API Gateway Developer Guide for details.
    failOnWarnings : bool, default is Undefined, optional
        Whether warnings should return an error while API Gateway is creating or updating the resource using an OpenAPI specification. Defaults to false. Applicable for HTTP APIs.
    id : str, default is Undefined, optional
        API identifier.
    name : str, default is Undefined, optional
        Name of the API. Must be less than or equal to 128 characters in length.
    protocolType : str, default is Undefined, optional
        API protocol. Valid values: HTTP, WEBSOCKET.
    routeKey : str, default is Undefined, optional
        Part of quick create. Specifies any route key. Applicable for HTTP APIs.
    routeSelectionExpression : str, default is Undefined, optional
        The route selection expression for the API.
        Defaults to $request.method $request.path.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    target : str, default is Undefined, optional
        Part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes.
        For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN.
        The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Applicable for HTTP APIs.
    version : str, default is Undefined, optional
        Version identifier for the API. Must be between 1 and 64 characters in length.
    """


    apiEndpoint?: str

    apiKeySelectionExpression?: str

    arn?: str

    body?: str

    corsConfiguration?: [Apigatewayv2AwsUpboundIoV1beta1APIStatusAtProviderCorsConfigurationItems0]

    credentialsArn?: str

    description?: str

    disableExecuteApiEndpoint?: bool

    executionArn?: str

    failOnWarnings?: bool

    id?: str

    name?: str

    protocolType?: str

    routeKey?: str

    routeSelectionExpression?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    target?: str

    version?: str


schema Apigatewayv2AwsUpboundIoV1beta1APIStatusAtProviderCorsConfigurationItems0:
    r"""
    apigatewayv2 aws upbound io v1beta1 API status at provider cors configuration items0

    Attributes
    ----------
    allowCredentials : bool, default is Undefined, optional
        Whether credentials are included in the CORS request.
    allowHeaders : [str], default is Undefined, optional
        Set of allowed HTTP headers.
    allowMethods : [str], default is Undefined, optional
        Set of allowed HTTP methods.
    allowOrigins : [str], default is Undefined, optional
        Set of allowed origins.
    exposeHeaders : [str], default is Undefined, optional
        Set of exposed HTTP headers.
    maxAge : float, default is Undefined, optional
        Number of seconds that the browser should cache preflight request results.
    """


    allowCredentials?: bool

    allowHeaders?: [str]

    allowMethods?: [str]

    allowOrigins?: [str]

    exposeHeaders?: [str]

    maxAge?: float


schema Apigatewayv2AwsUpboundIoV1beta1APIStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


