"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema NotebookInstance:
    r"""
    NotebookInstance is the Schema for the NotebookInstances API. Provides a SageMaker Notebook Instance resource.

    Attributes
    ----------
    apiVersion : str, default is "sagemaker.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NotebookInstance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpec, default is Undefined, required
        spec
    status : SagemakerAwsUpboundIoV1beta1NotebookInstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "sagemaker.aws.upbound.io/v1beta1" = "sagemaker.aws.upbound.io/v1beta1"

    kind: "NotebookInstance" = "NotebookInstance"

    metadata?: v1.ObjectMeta

    spec: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpec

    status?: SagemakerAwsUpboundIoV1beta1NotebookInstanceStatus


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpec:
    r"""
    NotebookInstanceSpec defines the desired state of NotebookInstance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProvider

    initProvider?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecWriteConnectionSecretToRef


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProvider:
    r"""
    sagemaker aws upbound io v1beta1 notebook instance spec for provider

    Attributes
    ----------
    acceleratorTypes : [str], default is Undefined, optional
        A list of Elastic Inference (EI) instance types to associate with this notebook instance. See Elastic Inference Accelerator for more details. Valid values: ml.eia1.medium, ml.eia1.large, ml.eia1.xlarge, ml.eia2.medium, ml.eia2.large, ml.eia2.xlarge.
    additionalCodeRepositories : [str], default is Undefined, optional
        An array of up to three Git repositories to associate with the notebook instance.
        These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
    defaultCodeRepository : str, default is Undefined, optional
        The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository.
    defaultCodeRepositoryRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositoryRef, default is Undefined, optional
        default code repository ref
    defaultCodeRepositorySelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositorySelector, default is Undefined, optional
        default code repository selector
    directInternetAccess : str, default is Undefined, optional
        Set to Disabled to disable internet access to notebook. Requires security_groups and subnet_id to be set. Supported values: Enabled (Default) or Disabled. If set to Disabled, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
    instanceMetadataServiceConfiguration : [SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderInstanceMetadataServiceConfigurationItems0], default is Undefined, optional
        Information on the IMDS configuration of the notebook instance. Conflicts with instance_metadata_service_configuration. see details below.
    instanceType : str, default is Undefined, optional
        The name of ML compute instance type.
    kmsKeyId : str, default is Undefined, optional
        The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
    kmsKeyIdRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    lifecycleConfigName : str, default is Undefined, optional
        The name of a lifecycle configuration to associate with the notebook instance.
    platformIdentifier : str, default is Undefined, optional
        The platform identifier of the notebook instance runtime environment. This value can be either notebook-al1-v1, notebook-al2-v1, or  notebook-al2-v2, depending on which version of Amazon Linux you require.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
    roleArnRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    rootAccess : str, default is Undefined, optional
        Whether root access is Enabled or Disabled for users of the notebook instance. The default value is Enabled.
    securityGroups : [str], default is Undefined, optional
        The associated security groups.
    subnetId : str, default is Undefined, optional
        The VPC subnet ID.
    subnetIdRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    volumeSize : float, default is Undefined, optional
        The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
    """


    acceleratorTypes?: [str]

    additionalCodeRepositories?: [str]

    defaultCodeRepository?: str

    defaultCodeRepositoryRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositoryRef

    defaultCodeRepositorySelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositorySelector

    directInternetAccess?: str

    instanceMetadataServiceConfiguration?: [SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderInstanceMetadataServiceConfigurationItems0]

    instanceType?: str

    kmsKeyId?: str

    kmsKeyIdRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDSelector

    lifecycleConfigName?: str

    platformIdentifier?: str

    region: str

    roleArn?: str

    roleArnRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnRef

    roleArnSelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnSelector

    rootAccess?: str

    securityGroups?: [str]

    subnetId?: str

    subnetIdRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDRef

    subnetIdSelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDSelector

    tags?: {str:str}

    volumeSize?: float


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositoryRef:
    r"""
    Reference to a CodeRepository in sagemaker to populate defaultCodeRepository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositoryRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositorySelector:
    r"""
    Selector for a CodeRepository in sagemaker to populate defaultCodeRepository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositorySelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderDefaultCodeRepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderInstanceMetadataServiceConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 notebook instance spec for provider instance metadata service configuration items0

    Attributes
    ----------
    minimumInstanceMetadataServiceVersion : str, default is Undefined, optional
        Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are 1 and 2.
    """


    minimumInstanceMetadataServiceVersion?: str


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecForProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    acceleratorTypes : [str], default is Undefined, optional
        A list of Elastic Inference (EI) instance types to associate with this notebook instance. See Elastic Inference Accelerator for more details. Valid values: ml.eia1.medium, ml.eia1.large, ml.eia1.xlarge, ml.eia2.medium, ml.eia2.large, ml.eia2.xlarge.
    additionalCodeRepositories : [str], default is Undefined, optional
        An array of up to three Git repositories to associate with the notebook instance.
        These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
    defaultCodeRepository : str, default is Undefined, optional
        The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository.
    defaultCodeRepositoryRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositoryRef, default is Undefined, optional
        default code repository ref
    defaultCodeRepositorySelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositorySelector, default is Undefined, optional
        default code repository selector
    directInternetAccess : str, default is Undefined, optional
        Set to Disabled to disable internet access to notebook. Requires security_groups and subnet_id to be set. Supported values: Enabled (Default) or Disabled. If set to Disabled, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
    instanceMetadataServiceConfiguration : [SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderInstanceMetadataServiceConfigurationItems0], default is Undefined, optional
        Information on the IMDS configuration of the notebook instance. Conflicts with instance_metadata_service_configuration. see details below.
    instanceType : str, default is Undefined, optional
        The name of ML compute instance type.
    kmsKeyId : str, default is Undefined, optional
        The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
    kmsKeyIdRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    lifecycleConfigName : str, default is Undefined, optional
        The name of a lifecycle configuration to associate with the notebook instance.
    platformIdentifier : str, default is Undefined, optional
        The platform identifier of the notebook instance runtime environment. This value can be either notebook-al1-v1, notebook-al2-v1, or  notebook-al2-v2, depending on which version of Amazon Linux you require.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
    roleArnRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnRef, default is Undefined, optional
        role arn ref
    roleArnSelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnSelector, default is Undefined, optional
        role arn selector
    rootAccess : str, default is Undefined, optional
        Whether root access is Enabled or Disabled for users of the notebook instance. The default value is Enabled.
    securityGroups : [str], default is Undefined, optional
        The associated security groups.
    subnetId : str, default is Undefined, optional
        The VPC subnet ID.
    subnetIdRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDRef, default is Undefined, optional
        subnet Id ref
    subnetIdSelector : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDSelector, default is Undefined, optional
        subnet Id selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    volumeSize : float, default is Undefined, optional
        The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
    """


    acceleratorTypes?: [str]

    additionalCodeRepositories?: [str]

    defaultCodeRepository?: str

    defaultCodeRepositoryRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositoryRef

    defaultCodeRepositorySelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositorySelector

    directInternetAccess?: str

    instanceMetadataServiceConfiguration?: [SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderInstanceMetadataServiceConfigurationItems0]

    instanceType?: str

    kmsKeyId?: str

    kmsKeyIdRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDSelector

    lifecycleConfigName?: str

    platformIdentifier?: str

    roleArn?: str

    roleArnRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnRef

    roleArnSelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnSelector

    rootAccess?: str

    securityGroups?: [str]

    subnetId?: str

    subnetIdRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDRef

    subnetIdSelector?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDSelector

    tags?: {str:str}

    volumeSize?: float


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositoryRef:
    r"""
    Reference to a CodeRepository in sagemaker to populate defaultCodeRepository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositoryRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositorySelector:
    r"""
    Selector for a CodeRepository in sagemaker to populate defaultCodeRepository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositorySelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderDefaultCodeRepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderInstanceMetadataServiceConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 notebook instance spec init provider instance metadata service configuration items0

    Attributes
    ----------
    minimumInstanceMetadataServiceVersion : str, default is Undefined, optional
        Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are 1 and 2.
    """


    minimumInstanceMetadataServiceVersion?: str


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnRef:
    r"""
    Reference to a Role in iam to populate roleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnSelector:
    r"""
    Selector for a Role in iam to populate roleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDRef:
    r"""
    Reference to a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDSelector:
    r"""
    Selector for a Subnet in ec2 to populate subnetId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDSelectorPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecInitProviderSubnetIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecProviderConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceStatus:
    r"""
    NotebookInstanceStatus defines the observed state of NotebookInstance.

    Attributes
    ----------
    atProvider : SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusAtProvider

    conditions?: [SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusConditionsItems0]

    observedGeneration?: int


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusAtProvider:
    r"""
    sagemaker aws upbound io v1beta1 notebook instance status at provider

    Attributes
    ----------
    acceleratorTypes : [str], default is Undefined, optional
        A list of Elastic Inference (EI) instance types to associate with this notebook instance. See Elastic Inference Accelerator for more details. Valid values: ml.eia1.medium, ml.eia1.large, ml.eia1.xlarge, ml.eia2.medium, ml.eia2.large, ml.eia2.xlarge.
    additionalCodeRepositories : [str], default is Undefined, optional
        An array of up to three Git repositories to associate with the notebook instance.
        These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in AWS CodeCommit or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance.
    arn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) assigned by AWS to this notebook instance.
    defaultCodeRepository : str, default is Undefined, optional
        The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in AWS CodeCommit or in any other Git repository.
    directInternetAccess : str, default is Undefined, optional
        Set to Disabled to disable internet access to notebook. Requires security_groups and subnet_id to be set. Supported values: Enabled (Default) or Disabled. If set to Disabled, the notebook instance will be able to access resources only in your VPC, and will not be able to connect to Amazon SageMaker training and endpoint services unless your configure a NAT Gateway in your VPC.
    id : str, default is Undefined, optional
        The name of the notebook instance.
    instanceMetadataServiceConfiguration : [SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusAtProviderInstanceMetadataServiceConfigurationItems0], default is Undefined, optional
        Information on the IMDS configuration of the notebook instance. Conflicts with instance_metadata_service_configuration. see details below.
    instanceType : str, default is Undefined, optional
        The name of ML compute instance type.
    kmsKeyId : str, default is Undefined, optional
        The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.
    lifecycleConfigName : str, default is Undefined, optional
        The name of a lifecycle configuration to associate with the notebook instance.
    networkInterfaceId : str, default is Undefined, optional
        The network interface ID that Amazon SageMaker created at the time of creating the instance. Only available when setting subnet_id.
    platformIdentifier : str, default is Undefined, optional
        The platform identifier of the notebook instance runtime environment. This value can be either notebook-al1-v1, notebook-al2-v1, or  notebook-al2-v2, depending on which version of Amazon Linux you require.
    roleArn : str, default is Undefined, optional
        The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.
    rootAccess : str, default is Undefined, optional
        Whether root access is Enabled or Disabled for users of the notebook instance. The default value is Enabled.
    securityGroups : [str], default is Undefined, optional
        The associated security groups.
    subnetId : str, default is Undefined, optional
        The VPC subnet ID.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    url : str, default is Undefined, optional
        The URL that you use to connect to the Jupyter notebook that is running in your notebook instance.
    volumeSize : float, default is Undefined, optional
        The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.
    """


    acceleratorTypes?: [str]

    additionalCodeRepositories?: [str]

    arn?: str

    defaultCodeRepository?: str

    directInternetAccess?: str

    id?: str

    instanceMetadataServiceConfiguration?: [SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusAtProviderInstanceMetadataServiceConfigurationItems0]

    instanceType?: str

    kmsKeyId?: str

    lifecycleConfigName?: str

    networkInterfaceId?: str

    platformIdentifier?: str

    roleArn?: str

    rootAccess?: str

    securityGroups?: [str]

    subnetId?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    url?: str

    volumeSize?: float


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusAtProviderInstanceMetadataServiceConfigurationItems0:
    r"""
    sagemaker aws upbound io v1beta1 notebook instance status at provider instance metadata service configuration items0

    Attributes
    ----------
    minimumInstanceMetadataServiceVersion : str, default is Undefined, optional
        Indicates the minimum IMDS version that the notebook instance supports. When passed "1" is passed. This means that both IMDSv1 and IMDSv2 are supported. Valid values are 1 and 2.
    """


    minimumInstanceMetadataServiceVersion?: str


schema SagemakerAwsUpboundIoV1beta1NotebookInstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


