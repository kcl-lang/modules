"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Resolver:
    r"""
    Resolver is the Schema for the Resolvers API. Provides an AppSync Resolver.

    Attributes
    ----------
    apiVersion : str, default is "appsync.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Resolver", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsyncAwsUpboundIoV1beta1ResolverSpec, default is Undefined, required
        spec
    status : AppsyncAwsUpboundIoV1beta1ResolverStatus, default is Undefined, optional
        status
    """


    apiVersion: "appsync.aws.upbound.io/v1beta1" = "appsync.aws.upbound.io/v1beta1"

    kind: "Resolver" = "Resolver"

    metadata?: v1.ObjectMeta

    spec: AppsyncAwsUpboundIoV1beta1ResolverSpec

    status?: AppsyncAwsUpboundIoV1beta1ResolverStatus


schema AppsyncAwsUpboundIoV1beta1ResolverSpec:
    r"""
    ResolverSpec defines the desired state of Resolver

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppsyncAwsUpboundIoV1beta1ResolverSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppsyncAwsUpboundIoV1beta1ResolverSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppsyncAwsUpboundIoV1beta1ResolverSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppsyncAwsUpboundIoV1beta1ResolverSpecForProvider

    initProvider?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppsyncAwsUpboundIoV1beta1ResolverSpecProviderConfigRef

    publishConnectionDetailsTo?: AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppsyncAwsUpboundIoV1beta1ResolverSpecWriteConnectionSecretToRef


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProvider:
    r"""
    appsync aws upbound io v1beta1 resolver spec for provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API ID for the GraphQL API.
    apiIdRef : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDRef, default is Undefined, optional
        api Id ref
    apiIdSelector : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDSelector, default is Undefined, optional
        api Id selector
    cachingConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderCachingConfigItems0], default is Undefined, optional
        The Caching Config. See Caching Config.
    code : str, default is Undefined, optional
        The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
    dataSource : str, default is Undefined, optional
        Data source name.
    dataSourceRef : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceRef, default is Undefined, optional
        data source ref
    dataSourceSelector : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceSelector, default is Undefined, optional
        data source selector
    field : str, default is Undefined, required
        Field name from the schema defined in the GraphQL API.
    kind : str, default is Undefined, optional
        Resolver type. Valid values are UNIT and PIPELINE.
    maxBatchSize : float, default is Undefined, optional
        Maximum batching size for a resolver. Valid values are between 0 and 2000.
    pipelineConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0], default is Undefined, optional
        The caching configuration for the resolver. See Pipeline Config.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    requestTemplate : str, default is Undefined, optional
        Request mapping template for UNIT resolver or 'before mapping template' for PIPELINE resolver. Required for non-Lambda resolvers.
    responseTemplate : str, default is Undefined, optional
        Response mapping template for UNIT resolver or 'after mapping template' for PIPELINE resolver. Required for non-Lambda resolvers.
    runtime : [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderRuntimeItems0], default is Undefined, optional
        Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
    syncConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderSyncConfigItems0], default is Undefined, optional
        Describes a Sync configuration for a resolver. See Sync Config.
    $type : str, default is Undefined, required
        Type name from the schema defined in the GraphQL API.
    """


    apiId?: str

    apiIdRef?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDRef

    apiIdSelector?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDSelector

    cachingConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderCachingConfigItems0]

    code?: str

    dataSource?: str

    dataSourceRef?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceRef

    dataSourceSelector?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceSelector

    field: str

    kind?: str

    maxBatchSize?: float

    pipelineConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0]

    region: str

    requestTemplate?: str

    responseTemplate?: str

    runtime?: [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderRuntimeItems0]

    syncConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderSyncConfigItems0]

    $type: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDRef:
    r"""
    Reference to a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDRefPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDSelector:
    r"""
    Selector for a GraphQLAPI in appsync to populate apiId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDSelectorPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderAPIIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderCachingConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec for provider caching config items0

    Attributes
    ----------
    cachingKeys : [str], default is Undefined, optional
        The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
    ttl : float, default is Undefined, optional
        The TTL in seconds for a resolver that has caching activated. Valid values are between 1 and 3600 seconds.
    """


    cachingKeys?: [str]

    ttl?: float


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceRef:
    r"""
    Reference to a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceRefPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceSelector:
    r"""
    Selector for a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceSelectorPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderDataSourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec for provider pipeline config items0

    Attributes
    ----------
    functions : [str], default is Undefined, optional
        A list of Function objects.
    functionsRefs : [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsRefsItems0], default is Undefined, optional
        References to Function in appsync to populate functions.
    functionsSelector : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsSelector, default is Undefined, optional
        functions selector
    """


    functions?: [str]

    functionsRefs?: [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsRefsItems0]

    functionsSelector?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsSelector


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsRefsItems0Policy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsSelector:
    r"""
    Selector for a list of Function in appsync to populate functions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsSelectorPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderPipelineConfigItems0FunctionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderRuntimeItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec for provider runtime items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
    runtimeVersion : str, default is Undefined, optional
        The version of the runtime to use. Currently, the only allowed version is 1.0.0.
    """


    name?: str

    runtimeVersion?: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderSyncConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec for provider sync config items0

    Attributes
    ----------
    conflictDetection : str, default is Undefined, optional
        Conflict Detection strategy to use. Valid values are NONE and VERSION.
    conflictHandler : str, default is Undefined, optional
        Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.
    lambdaConflictHandlerConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderSyncConfigItems0LambdaConflictHandlerConfigItems0], default is Undefined, optional
        Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See Lambda Conflict Handler Config.
    """


    conflictDetection?: str

    conflictHandler?: str

    lambdaConflictHandlerConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderSyncConfigItems0LambdaConflictHandlerConfigItems0]


schema AppsyncAwsUpboundIoV1beta1ResolverSpecForProviderSyncConfigItems0LambdaConflictHandlerConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec for provider sync config items0 lambda conflict handler config items0

    Attributes
    ----------
    lambdaConflictHandlerArn : str, default is Undefined, optional
        ARN for the Lambda function to use as the Conflict Handler.
    """


    lambdaConflictHandlerArn?: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    cachingConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderCachingConfigItems0], default is Undefined, optional
        The Caching Config. See Caching Config.
    code : str, default is Undefined, optional
        The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
    dataSource : str, default is Undefined, optional
        Data source name.
    dataSourceRef : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceRef, default is Undefined, optional
        data source ref
    dataSourceSelector : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceSelector, default is Undefined, optional
        data source selector
    kind : str, default is Undefined, optional
        Resolver type. Valid values are UNIT and PIPELINE.
    maxBatchSize : float, default is Undefined, optional
        Maximum batching size for a resolver. Valid values are between 0 and 2000.
    pipelineConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0], default is Undefined, optional
        The caching configuration for the resolver. See Pipeline Config.
    requestTemplate : str, default is Undefined, optional
        Request mapping template for UNIT resolver or 'before mapping template' for PIPELINE resolver. Required for non-Lambda resolvers.
    responseTemplate : str, default is Undefined, optional
        Response mapping template for UNIT resolver or 'after mapping template' for PIPELINE resolver. Required for non-Lambda resolvers.
    runtime : [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderRuntimeItems0], default is Undefined, optional
        Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
    syncConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderSyncConfigItems0], default is Undefined, optional
        Describes a Sync configuration for a resolver. See Sync Config.
    """


    cachingConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderCachingConfigItems0]

    code?: str

    dataSource?: str

    dataSourceRef?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceRef

    dataSourceSelector?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceSelector

    kind?: str

    maxBatchSize?: float

    pipelineConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0]

    requestTemplate?: str

    responseTemplate?: str

    runtime?: [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderRuntimeItems0]

    syncConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderSyncConfigItems0]


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderCachingConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec init provider caching config items0

    Attributes
    ----------
    cachingKeys : [str], default is Undefined, optional
        The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
    ttl : float, default is Undefined, optional
        The TTL in seconds for a resolver that has caching activated. Valid values are between 1 and 3600 seconds.
    """


    cachingKeys?: [str]

    ttl?: float


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceRef:
    r"""
    Reference to a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceRefPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceSelector:
    r"""
    Selector for a Datasource in appsync to populate dataSource.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceSelectorPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderDataSourceSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec init provider pipeline config items0

    Attributes
    ----------
    functions : [str], default is Undefined, optional
        A list of Function objects.
    functionsRefs : [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsRefsItems0], default is Undefined, optional
        References to Function in appsync to populate functions.
    functionsSelector : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsSelector, default is Undefined, optional
        functions selector
    """


    functions?: [str]

    functionsRefs?: [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsRefsItems0]

    functionsSelector?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsSelector


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsRefsItems0Policy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsSelector:
    r"""
    Selector for a list of Function in appsync to populate functions.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsSelectorPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderPipelineConfigItems0FunctionsSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderRuntimeItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec init provider runtime items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
    runtimeVersion : str, default is Undefined, optional
        The version of the runtime to use. Currently, the only allowed version is 1.0.0.
    """


    name?: str

    runtimeVersion?: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderSyncConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec init provider sync config items0

    Attributes
    ----------
    conflictDetection : str, default is Undefined, optional
        Conflict Detection strategy to use. Valid values are NONE and VERSION.
    conflictHandler : str, default is Undefined, optional
        Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.
    lambdaConflictHandlerConfig : [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderSyncConfigItems0LambdaConflictHandlerConfigItems0], default is Undefined, optional
        Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See Lambda Conflict Handler Config.
    """


    conflictDetection?: str

    conflictHandler?: str

    lambdaConflictHandlerConfig?: [AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderSyncConfigItems0LambdaConflictHandlerConfigItems0]


schema AppsyncAwsUpboundIoV1beta1ResolverSpecInitProviderSyncConfigItems0LambdaConflictHandlerConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver spec init provider sync config items0 lambda conflict handler config items0

    Attributes
    ----------
    lambdaConflictHandlerArn : str, default is Undefined, optional
        ARN for the Lambda function to use as the Conflict Handler.
    """


    lambdaConflictHandlerArn?: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecProviderConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToConfigRef

    metadata?: AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToMetadata

    name: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta1ResolverSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppsyncAwsUpboundIoV1beta1ResolverSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppsyncAwsUpboundIoV1beta1ResolverStatus:
    r"""
    ResolverStatus defines the observed state of Resolver.

    Attributes
    ----------
    atProvider : AppsyncAwsUpboundIoV1beta1ResolverStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppsyncAwsUpboundIoV1beta1ResolverStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppsyncAwsUpboundIoV1beta1ResolverStatusAtProvider

    conditions?: [AppsyncAwsUpboundIoV1beta1ResolverStatusConditionsItems0]

    observedGeneration?: int


schema AppsyncAwsUpboundIoV1beta1ResolverStatusAtProvider:
    r"""
    appsync aws upbound io v1beta1 resolver status at provider

    Attributes
    ----------
    apiId : str, default is Undefined, optional
        API ID for the GraphQL API.
    arn : str, default is Undefined, optional
        ARN
    cachingConfig : [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderCachingConfigItems0], default is Undefined, optional
        The Caching Config. See Caching Config.
    code : str, default is Undefined, optional
        The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
    dataSource : str, default is Undefined, optional
        Data source name.
    field : str, default is Undefined, optional
        Field name from the schema defined in the GraphQL API.
    id : str, default is Undefined, optional
        id
    kind : str, default is Undefined, optional
        Resolver type. Valid values are UNIT and PIPELINE.
    maxBatchSize : float, default is Undefined, optional
        Maximum batching size for a resolver. Valid values are between 0 and 2000.
    pipelineConfig : [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderPipelineConfigItems0], default is Undefined, optional
        The caching configuration for the resolver. See Pipeline Config.
    requestTemplate : str, default is Undefined, optional
        Request mapping template for UNIT resolver or 'before mapping template' for PIPELINE resolver. Required for non-Lambda resolvers.
    responseTemplate : str, default is Undefined, optional
        Response mapping template for UNIT resolver or 'after mapping template' for PIPELINE resolver. Required for non-Lambda resolvers.
    runtime : [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderRuntimeItems0], default is Undefined, optional
        Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See Runtime.
    syncConfig : [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderSyncConfigItems0], default is Undefined, optional
        Describes a Sync configuration for a resolver. See Sync Config.
    $type : str, default is Undefined, optional
        Type name from the schema defined in the GraphQL API.
    """


    apiId?: str

    arn?: str

    cachingConfig?: [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderCachingConfigItems0]

    code?: str

    dataSource?: str

    field?: str

    id?: str

    kind?: str

    maxBatchSize?: float

    pipelineConfig?: [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderPipelineConfigItems0]

    requestTemplate?: str

    responseTemplate?: str

    runtime?: [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderRuntimeItems0]

    syncConfig?: [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderSyncConfigItems0]

    $type?: str


schema AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderCachingConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver status at provider caching config items0

    Attributes
    ----------
    cachingKeys : [str], default is Undefined, optional
        The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
    ttl : float, default is Undefined, optional
        The TTL in seconds for a resolver that has caching activated. Valid values are between 1 and 3600 seconds.
    """


    cachingKeys?: [str]

    ttl?: float


schema AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderPipelineConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver status at provider pipeline config items0

    Attributes
    ----------
    functions : [str], default is Undefined, optional
        A list of Function objects.
    """


    functions?: [str]


schema AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderRuntimeItems0:
    r"""
    appsync aws upbound io v1beta1 resolver status at provider runtime items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.
    runtimeVersion : str, default is Undefined, optional
        The version of the runtime to use. Currently, the only allowed version is 1.0.0.
    """


    name?: str

    runtimeVersion?: str


schema AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderSyncConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver status at provider sync config items0

    Attributes
    ----------
    conflictDetection : str, default is Undefined, optional
        Conflict Detection strategy to use. Valid values are NONE and VERSION.
    conflictHandler : str, default is Undefined, optional
        Conflict Resolution strategy to perform in the event of a conflict. Valid values are NONE, OPTIMISTIC_CONCURRENCY, AUTOMERGE, and LAMBDA.
    lambdaConflictHandlerConfig : [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderSyncConfigItems0LambdaConflictHandlerConfigItems0], default is Undefined, optional
        Lambda Conflict Handler Config when configuring LAMBDA as the Conflict Handler. See Lambda Conflict Handler Config.
    """


    conflictDetection?: str

    conflictHandler?: str

    lambdaConflictHandlerConfig?: [AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderSyncConfigItems0LambdaConflictHandlerConfigItems0]


schema AppsyncAwsUpboundIoV1beta1ResolverStatusAtProviderSyncConfigItems0LambdaConflictHandlerConfigItems0:
    r"""
    appsync aws upbound io v1beta1 resolver status at provider sync config items0 lambda conflict handler config items0

    Attributes
    ----------
    lambdaConflictHandlerArn : str, default is Undefined, optional
        ARN for the Lambda function to use as the Conflict Handler.
    """


    lambdaConflictHandlerArn?: str


schema AppsyncAwsUpboundIoV1beta1ResolverStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


