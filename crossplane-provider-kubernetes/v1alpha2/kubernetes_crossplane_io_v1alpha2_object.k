"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Object:
    r"""
    A Object is an provider Kubernetes API type

    Attributes
    ----------
    apiVersion : str, default is "kubernetes.crossplane.io/v1alpha2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Object", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KubernetesCrossplaneIoV1alpha2ObjectSpec, default is Undefined, required
        spec
    status : KubernetesCrossplaneIoV1alpha2ObjectStatus, default is Undefined, optional
        status
    """


    apiVersion: "kubernetes.crossplane.io/v1alpha2" = "kubernetes.crossplane.io/v1alpha2"

    kind: "Object" = "Object"

    metadata?: v1.ObjectMeta

    spec: KubernetesCrossplaneIoV1alpha2ObjectSpec

    status?: KubernetesCrossplaneIoV1alpha2ObjectStatus


schema KubernetesCrossplaneIoV1alpha2ObjectSpec:
    r"""
    A ObjectSpec defines the desired state of a Object.

    Attributes
    ----------
    connectionDetails : [KubernetesCrossplaneIoV1alpha2ObjectSpecConnectionDetailsItems0], default is Undefined, optional
        connection details
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : KubernetesCrossplaneIoV1alpha2ObjectSpecForProvider, default is Undefined, required
        for provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : KubernetesCrossplaneIoV1alpha2ObjectSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    readiness : KubernetesCrossplaneIoV1alpha2ObjectSpecReadiness, default is Undefined, optional
        readiness
    references : [KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0], default is Undefined, optional
        references
    watch : bool, default is Undefined, optional
        Watch enables watching the referenced or managed kubernetes resources.

        THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
        unless "watches" feature gate is enabled, and may be changed or removed
        without notice.
    writeConnectionSecretToRef : KubernetesCrossplaneIoV1alpha2ObjectSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    connectionDetails?: [KubernetesCrossplaneIoV1alpha2ObjectSpecConnectionDetailsItems0]

    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: KubernetesCrossplaneIoV1alpha2ObjectSpecForProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: KubernetesCrossplaneIoV1alpha2ObjectSpecProviderConfigRef

    publishConnectionDetailsTo?: KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsTo

    readiness?: KubernetesCrossplaneIoV1alpha2ObjectSpecReadiness

    references?: [KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0]

    watch?: bool = False

    writeConnectionSecretToRef?: KubernetesCrossplaneIoV1alpha2ObjectSpecWriteConnectionSecretToRef


schema KubernetesCrossplaneIoV1alpha2ObjectSpecConnectionDetailsItems0:
    r"""
    ConnectionDetail represents an entry in the connection secret for an Object

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        API version of the referent.
    fieldPath : str, default is Undefined, optional
        If referring to a piece of an object instead of an entire object, this string
        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
        For example, if the object reference is to a container within a pod, this would take on a value like:
        "spec.containers{name}" (where "name" refers to the name of the container that triggered
        the event) or if no container name is specified "spec.containers[2]" (container with
        index 2 in this pod). This syntax is chosen only to have some well-defined way of
        referencing a part of an object.
    kind : str, default is Undefined, optional
        Kind of the referent.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    name : str, default is Undefined, optional
        Name of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    resourceVersion : str, default is Undefined, optional
        Specific resourceVersion to which this reference is made, if any.
        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
    toConnectionSecretKey : str, default is Undefined, optional
        to connection secret key
    uid : str, default is Undefined, optional
        UID of the referent.
        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
    """


    apiVersion?: str

    fieldPath?: str

    kind?: str

    name?: str

    namespace?: str

    resourceVersion?: str

    toConnectionSecretKey?: str

    uid?: str


schema KubernetesCrossplaneIoV1alpha2ObjectSpecForProvider:
    r"""
    ObjectParameters are the configurable fields of a Object.

    Attributes
    ----------
    manifest : any, default is Undefined, required
        Raw JSON representation of the kubernetes object to be created.
    """


    manifest: any


schema KubernetesCrossplaneIoV1alpha2ObjectSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KubernetesCrossplaneIoV1alpha2ObjectSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KubernetesCrossplaneIoV1alpha2ObjectSpecProviderConfigRefPolicy


schema KubernetesCrossplaneIoV1alpha2ObjectSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToConfigRef

    metadata?: KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToMetadata

    name: str


schema KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToConfigRefPolicy


schema KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KubernetesCrossplaneIoV1alpha2ObjectSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema KubernetesCrossplaneIoV1alpha2ObjectSpecReadiness:
    r"""
    Readiness defines how the object's readiness condition should be computed,
    if not specified it will be considered ready as soon as the underlying external
    resource is considered up-to-date.

    Attributes
    ----------
    celQuery : str, default is Undefined, optional
        CelQuery defines a cel query to evaluate the readiness. The
        observed object is passed to the cel query with the word `object`.
        Cel macros are available to be used, see https://github.com/google/cel-spec/blob/master/doc/langdef.md#macros
        for more information.
        Examples:
         `object.status.isReady == true`: checks for a boolean field called isReady on status.
         `object.status.conditions.all(x, x.status == "True")` mimics the behavior of the AllTrue readiness policy
         `object.status.conditions.exists(c, c.type == "condition1" && c.status == "True" )` checks just one condition
    policy : str, default is "SuccessfulCreate", optional
        Policy defines how the Object's readiness condition should be computed.
    """


    celQuery?: str

    policy?: "SuccessfulCreate" | "DeriveFromObject" | "AllTrue" | "DeriveFromCelQuery" = "SuccessfulCreate"


schema KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0:
    r"""
    Reference refers to an Object or arbitrary Kubernetes resource and optionally
    patch values from that resource to the current Object.

    Attributes
    ----------
    dependsOn : KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0DependsOn, default is Undefined, optional
        depends on
    patchesFrom : KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0PatchesFrom, default is Undefined, optional
        patches from
    toFieldPath : str, default is Undefined, optional
        ToFieldPath is the path of the field on the resource whose value will
        be changed with the result of transforms. Leave empty if you'd like to
        propagate to the same path as patchesFrom.fieldPath.
    """


    dependsOn?: KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0DependsOn

    patchesFrom?: KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0PatchesFrom

    toFieldPath?: str


schema KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0DependsOn:
    r"""
    DependsOn is used to declare dependency on other Object or arbitrary
    Kubernetes resource.

    Attributes
    ----------
    apiVersion : str, default is "kubernetes.crossplane.io/v1alpha1", optional
        APIVersion of the referenced object.
    kind : str, default is "Object", optional
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.
    """


    apiVersion?: str = "kubernetes.crossplane.io/v1alpha1"

    kind?: str = "Object"

    name: str

    namespace?: str


schema KubernetesCrossplaneIoV1alpha2ObjectSpecReferencesItems0PatchesFrom:
    r"""
    PatchesFrom is used to declare dependency on other Object or arbitrary
    Kubernetes resource, and also patch fields from this object.

    Attributes
    ----------
    apiVersion : str, default is "kubernetes.crossplane.io/v1alpha1", optional
        APIVersion of the referenced object.
    fieldPath : str, default is Undefined, required
        FieldPath is the path of the field on the resource whose value is to be
        used as input.
    kind : str, default is "Object", optional
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object.
    """


    apiVersion?: str = "kubernetes.crossplane.io/v1alpha1"

    fieldPath: str

    kind?: str = "Object"

    name: str

    namespace?: str


schema KubernetesCrossplaneIoV1alpha2ObjectSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema KubernetesCrossplaneIoV1alpha2ObjectStatus:
    r"""
    A ObjectStatus represents the observed state of a Object.

    Attributes
    ----------
    atProvider : KubernetesCrossplaneIoV1alpha2ObjectStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [KubernetesCrossplaneIoV1alpha2ObjectStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: KubernetesCrossplaneIoV1alpha2ObjectStatusAtProvider

    conditions?: [KubernetesCrossplaneIoV1alpha2ObjectStatusConditionsItems0]

    observedGeneration?: int


schema KubernetesCrossplaneIoV1alpha2ObjectStatusAtProvider:
    r"""
    ObjectObservation are the observable fields of a Object.

    Attributes
    ----------
    manifest : any, default is Undefined, optional
        Raw JSON representation of the remote object.
    """


    manifest?: any


schema KubernetesCrossplaneIoV1alpha2ObjectStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


