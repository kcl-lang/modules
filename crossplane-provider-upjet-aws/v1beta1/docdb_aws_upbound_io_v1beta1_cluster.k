"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Manages a DocumentDB Aurora Cluster

    Attributes
    ----------
    apiVersion : str, default is "docdb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DocdbAwsUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : DocdbAwsUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "docdb.aws.upbound.io/v1beta1" = "docdb.aws.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: DocdbAwsUpboundIoV1beta1ClusterSpec

    status?: DocdbAwsUpboundIoV1beta1ClusterStatus


schema DocdbAwsUpboundIoV1beta1ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DocdbAwsUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : DocdbAwsUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DocdbAwsUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DocdbAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DocdbAwsUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DocdbAwsUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DocdbAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProvider:
    r"""
    docdb aws upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        A value that indicates whether major version upgrades are allowed. Constraints: You must allow major version upgrades when specifying a value for the EngineVersion parameter that is a different major version than the DB cluster's current version.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications
        are applied immediately, or during the next maintenance window. Default is
        false.
    autoGeneratePassword : bool, default is Undefined, optional
        If true, the password will be auto-generated and stored in the Secret referenced by the masterPasswordSecretRef field.
    availabilityZones : [str], default is Undefined, optional
        A list of EC2 Availability Zones that
        instances in the DB cluster can be created in.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for. Default 1
    dbClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    dbClusterParameterGroupNameRef : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRef, default is Undefined, optional
        db cluster parameter group name ref
    dbClusterParameterGroupNameSelector : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelector, default is Undefined, optional
        db cluster parameter group name selector
    dbSubnetGroupName : str, default is Undefined, optional
        A DB subnet group to associate with this DB instance.
    deletionProtection : bool, default is Undefined, optional
        A boolean value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. Defaults to false.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        List of log types to export to cloudwatch. If omitted, no logs will be exported.
        The following log types are supported: audit, profiler.
    engine : str, default is Undefined, optional
        The name of the database engine to be used for this DB cluster. Defaults to docdb. Valid values: docdb.
    engineVersion : str, default is Undefined, optional
        The database engine version. Updating this argument results in an outage.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final DB snapshot
        when this DB cluster is deleted. If omitted, no final snapshot will be
        made.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier specified on aws_docdb_global_cluster.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    kmsKeyIdRef : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    masterPasswordSecretRef : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef, default is Undefined, optional
        master password secret ref
    masterUsername : str, default is Undefined, optional
        Username for the master DB user.
    port : float, default is Undefined, optional
        The port on which the DB accepts connections
    preferredBackupWindow : str, default is Undefined, optional
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
        Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    restoreToPointInTime : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTime, default is Undefined, optional
        restore to point in time
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Automated snapshots should not be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false.
    storageType : str, default is Undefined, optional
        The storage type to associate with the DB cluster. Valid values: standard, iopt1.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate
        with the Cluster
    """


    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoGeneratePassword?: bool

    availabilityZones?: [str]

    backupRetentionPeriod?: float

    dbClusterParameterGroupName?: str

    dbClusterParameterGroupNameRef?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRef

    dbClusterParameterGroupNameSelector?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelector

    dbSubnetGroupName?: str

    deletionProtection?: bool

    enabledCloudwatchLogsExports?: [str]

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    kmsKeyId?: str

    kmsKeyIdRef?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector

    masterPasswordSecretRef?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef

    masterUsername?: str

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    region: str

    restoreToPointInTime?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTime

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRef:
    r"""
    Reference to a ClusterParameterGroup in docdb to populate dbClusterParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRefPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelector:
    r"""
    Selector for a ClusterParameterGroup in docdb to populate dbClusterParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelectorPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef:
    r"""
    Password for the master DB user. Note that this may
    show up in logs, and it will be stored in the state file. Please refer to the DocumentDB Naming Constraints.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTime:
    r"""
    A configuration block for restoring a DB instance to an arbitrary point in time. Requires the identifier argument to be set with the name of the new DB instance to be created. See Restore To Point In Time below for details.

    Attributes
    ----------
    restoreToTime : str, default is Undefined, optional
        The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.
    restoreType : str, default is Undefined, optional
        The type of restore to be performed. Valid values are full-copy, copy-on-write.
    sourceClusterIdentifier : str, default is Undefined, optional
        The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
    useLatestRestorableTime : bool, default is Undefined, optional
        A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to false. Cannot be specified with restore_to_time.
    """


    restoreToTime?: str

    restoreType?: str

    sourceClusterIdentifier?: str

    useLatestRestorableTime?: bool


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        A value that indicates whether major version upgrades are allowed. Constraints: You must allow major version upgrades when specifying a value for the EngineVersion parameter that is a different major version than the DB cluster's current version.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications
        are applied immediately, or during the next maintenance window. Default is
        false.
    availabilityZones : [str], default is Undefined, optional
        A list of EC2 Availability Zones that
        instances in the DB cluster can be created in.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for. Default 1
    dbClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    dbClusterParameterGroupNameRef : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRef, default is Undefined, optional
        db cluster parameter group name ref
    dbClusterParameterGroupNameSelector : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelector, default is Undefined, optional
        db cluster parameter group name selector
    dbSubnetGroupName : str, default is Undefined, optional
        A DB subnet group to associate with this DB instance.
    deletionProtection : bool, default is Undefined, optional
        A boolean value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. Defaults to false.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        List of log types to export to cloudwatch. If omitted, no logs will be exported.
        The following log types are supported: audit, profiler.
    engine : str, default is Undefined, optional
        The name of the database engine to be used for this DB cluster. Defaults to docdb. Valid values: docdb.
    engineVersion : str, default is Undefined, optional
        The database engine version. Updating this argument results in an outage.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final DB snapshot
        when this DB cluster is deleted. If omitted, no final snapshot will be
        made.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier specified on aws_docdb_global_cluster.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    kmsKeyIdRef : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    masterPasswordSecretRef : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef, default is Undefined, optional
        master password secret ref
    masterUsername : str, default is Undefined, optional
        Username for the master DB user.
    port : float, default is Undefined, optional
        The port on which the DB accepts connections
    preferredBackupWindow : str, default is Undefined, optional
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
        Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    restoreToPointInTime : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTime, default is Undefined, optional
        restore to point in time
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Automated snapshots should not be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false.
    storageType : str, default is Undefined, optional
        The storage type to associate with the DB cluster. Valid values: standard, iopt1.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate
        with the Cluster
    """


    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    availabilityZones?: [str]

    backupRetentionPeriod?: float

    dbClusterParameterGroupName?: str

    dbClusterParameterGroupNameRef?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRef

    dbClusterParameterGroupNameSelector?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelector

    dbSubnetGroupName?: str

    deletionProtection?: bool

    enabledCloudwatchLogsExports?: [str]

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    kmsKeyId?: str

    kmsKeyIdRef?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector

    masterPasswordSecretRef?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef

    masterUsername?: str

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    restoreToPointInTime?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTime

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRef:
    r"""
    Reference to a ClusterParameterGroup in docdb to populate dbClusterParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRefPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelector:
    r"""
    Selector for a ClusterParameterGroup in docdb to populate dbClusterParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelectorPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef:
    r"""
    Password for the master DB user. Note that this may
    show up in logs, and it will be stored in the state file. Please refer to the DocumentDB Naming Constraints.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTime:
    r"""
    A configuration block for restoring a DB instance to an arbitrary point in time. Requires the identifier argument to be set with the name of the new DB instance to be created. See Restore To Point In Time below for details.

    Attributes
    ----------
    restoreToTime : str, default is Undefined, optional
        The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.
    restoreType : str, default is Undefined, optional
        The type of restore to be performed. Valid values are full-copy, copy-on-write.
    sourceClusterIdentifier : str, default is Undefined, optional
        The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
    useLatestRestorableTime : bool, default is Undefined, optional
        A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to false. Cannot be specified with restore_to_time.
    """


    restoreToTime?: str

    restoreType?: str

    sourceClusterIdentifier?: str

    useLatestRestorableTime?: bool


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DocdbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DocdbAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DocdbAwsUpboundIoV1beta1ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : DocdbAwsUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DocdbAwsUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DocdbAwsUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [DocdbAwsUpboundIoV1beta1ClusterStatusConditionsItems0]

    observedGeneration?: int


schema DocdbAwsUpboundIoV1beta1ClusterStatusAtProvider:
    r"""
    docdb aws upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        A value that indicates whether major version upgrades are allowed. Constraints: You must allow major version upgrades when specifying a value for the EngineVersion parameter that is a different major version than the DB cluster's current version.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications
        are applied immediately, or during the next maintenance window. Default is
        false.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of cluster
    availabilityZones : [str], default is Undefined, optional
        A list of EC2 Availability Zones that
        instances in the DB cluster can be created in.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for. Default 1
    clusterMembers : [str], default is Undefined, optional
        – List of DocumentDB Instances that are a part of this cluster
    clusterResourceId : str, default is Undefined, optional
        The DocumentDB Cluster Resource ID
    dbClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    dbSubnetGroupName : str, default is Undefined, optional
        A DB subnet group to associate with this DB instance.
    deletionProtection : bool, default is Undefined, optional
        A boolean value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. Defaults to false.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        List of log types to export to cloudwatch. If omitted, no logs will be exported.
        The following log types are supported: audit, profiler.
    endpoint : str, default is Undefined, optional
        The DNS address of the DocumentDB instance
    engine : str, default is Undefined, optional
        The name of the database engine to be used for this DB cluster. Defaults to docdb. Valid values: docdb.
    engineVersion : str, default is Undefined, optional
        The database engine version. Updating this argument results in an outage.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final DB snapshot
        when this DB cluster is deleted. If omitted, no final snapshot will be
        made.
    globalClusterIdentifier : str, default is Undefined, optional
        The global cluster identifier specified on aws_docdb_global_cluster.
    hostedZoneId : str, default is Undefined, optional
        The Route53 Hosted Zone ID of the endpoint
    id : str, default is Undefined, optional
        The DocumentDB Cluster Identifier
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    masterUsername : str, default is Undefined, optional
        Username for the master DB user.
    port : float, default is Undefined, optional
        The port on which the DB accepts connections
    preferredBackupWindow : str, default is Undefined, optional
        The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
        Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    readerEndpoint : str, default is Undefined, optional
        A read-only endpoint for the DocumentDB cluster, automatically load-balanced across replicas
    restoreToPointInTime : DocdbAwsUpboundIoV1beta1ClusterStatusAtProviderRestoreToPointInTime, default is Undefined, optional
        restore to point in time
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Automated snapshots should not be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false.
    storageType : str, default is Undefined, optional
        The storage type to associate with the DB cluster. Valid values: standard, iopt1.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate
        with the Cluster
    """


    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    arn?: str

    availabilityZones?: [str]

    backupRetentionPeriod?: float

    clusterMembers?: [str]

    clusterResourceId?: str

    dbClusterParameterGroupName?: str

    dbSubnetGroupName?: str

    deletionProtection?: bool

    enabledCloudwatchLogsExports?: [str]

    endpoint?: str

    engine?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    hostedZoneId?: str

    id?: str

    kmsKeyId?: str

    masterUsername?: str

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    readerEndpoint?: str

    restoreToPointInTime?: DocdbAwsUpboundIoV1beta1ClusterStatusAtProviderRestoreToPointInTime

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcSecurityGroupIds?: [str]


schema DocdbAwsUpboundIoV1beta1ClusterStatusAtProviderRestoreToPointInTime:
    r"""
    A configuration block for restoring a DB instance to an arbitrary point in time. Requires the identifier argument to be set with the name of the new DB instance to be created. See Restore To Point In Time below for details.

    Attributes
    ----------
    restoreToTime : str, default is Undefined, optional
        The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.
    restoreType : str, default is Undefined, optional
        The type of restore to be performed. Valid values are full-copy, copy-on-write.
    sourceClusterIdentifier : str, default is Undefined, optional
        The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
    useLatestRestorableTime : bool, default is Undefined, optional
        A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to false. Cannot be specified with restore_to_time.
    """


    restoreToTime?: str

    restoreType?: str

    sourceClusterIdentifier?: str

    useLatestRestorableTime?: bool


schema DocdbAwsUpboundIoV1beta1ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


