"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Branch:
    r"""
    Branch is the Schema for the Branchs API. Provides an Amplify Branch resource.

    Attributes
    ----------
    apiVersion : str, default is "amplify.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Branch", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AmplifyAwsUpboundIoV1beta1BranchSpec, default is Undefined, required
        spec
    status : AmplifyAwsUpboundIoV1beta1BranchStatus, default is Undefined, optional
        status
    """


    apiVersion: "amplify.aws.upbound.io/v1beta1" = "amplify.aws.upbound.io/v1beta1"

    kind: "Branch" = "Branch"

    metadata?: v1.ObjectMeta

    spec: AmplifyAwsUpboundIoV1beta1BranchSpec

    status?: AmplifyAwsUpboundIoV1beta1BranchStatus


schema AmplifyAwsUpboundIoV1beta1BranchSpec:
    r"""
    BranchSpec defines the desired state of Branch

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AmplifyAwsUpboundIoV1beta1BranchSpecForProvider, default is Undefined, required
        for provider
    initProvider : AmplifyAwsUpboundIoV1beta1BranchSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AmplifyAwsUpboundIoV1beta1BranchSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AmplifyAwsUpboundIoV1beta1BranchSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AmplifyAwsUpboundIoV1beta1BranchSpecForProvider

    initProvider?: AmplifyAwsUpboundIoV1beta1BranchSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AmplifyAwsUpboundIoV1beta1BranchSpecProviderConfigRef

    publishConnectionDetailsTo?: AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AmplifyAwsUpboundIoV1beta1BranchSpecWriteConnectionSecretToRef


schema AmplifyAwsUpboundIoV1beta1BranchSpecForProvider:
    r"""
    amplify aws upbound io v1beta1 branch spec for provider

    Attributes
    ----------
    appId : str, default is Undefined, optional
        Unique ID for an Amplify app.
    appIdRef : AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDRef, default is Undefined, optional
        app Id ref
    appIdSelector : AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDSelector, default is Undefined, optional
        app Id selector
    backendEnvironmentArn : str, default is Undefined, optional
        ARN for a backend environment that is part of an Amplify app.
    basicAuthCredentialsSecretRef : AmplifyAwsUpboundIoV1beta1BranchSpecForProviderBasicAuthCredentialsSecretRef, default is Undefined, optional
        basic auth credentials secret ref
    description : str, default is Undefined, optional
        Description for the branch.
    displayName : str, default is Undefined, optional
        Display name for a branch. This is used as the default domain prefix.
    enableAutoBuild : bool, default is Undefined, optional
        Enables auto building for the branch.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for the branch.
    enableNotification : bool, default is Undefined, optional
        Enables notifications for the branch.
    enablePerformanceMode : bool, default is Undefined, optional
        Enables performance mode for the branch.
    enablePullRequestPreview : bool, default is Undefined, optional
        Enables pull request previews for this branch.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables for the branch.
    framework : str, default is Undefined, optional
        Framework for the branch.
    pullRequestEnvironmentName : str, default is Undefined, optional
        Amplify environment name for the pull request.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    stage : str, default is Undefined, optional
        Describes the current stage for the branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    ttl : str, default is Undefined, optional
        Content Time To Live (TTL) for the website in seconds.
    """


    appId?: str

    appIdRef?: AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDRef

    appIdSelector?: AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDSelector

    backendEnvironmentArn?: str

    basicAuthCredentialsSecretRef?: AmplifyAwsUpboundIoV1beta1BranchSpecForProviderBasicAuthCredentialsSecretRef

    description?: str

    displayName?: str

    enableAutoBuild?: bool

    enableBasicAuth?: bool

    enableNotification?: bool

    enablePerformanceMode?: bool

    enablePullRequestPreview?: bool

    environmentVariables?: {str:str}

    framework?: str

    pullRequestEnvironmentName?: str

    region: str

    stage?: str

    tags?: {str:str}

    ttl?: str


schema AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDRef:
    r"""
    Reference to a App in amplify to populate appId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDRefPolicy


schema AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDSelector:
    r"""
    Selector for a App in amplify to populate appId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDSelectorPolicy


schema AmplifyAwsUpboundIoV1beta1BranchSpecForProviderAppIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta1BranchSpecForProviderBasicAuthCredentialsSecretRef:
    r"""
    Basic authorization credentials for the branch.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta1BranchSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    backendEnvironmentArn : str, default is Undefined, optional
        ARN for a backend environment that is part of an Amplify app.
    basicAuthCredentialsSecretRef : AmplifyAwsUpboundIoV1beta1BranchSpecInitProviderBasicAuthCredentialsSecretRef, default is Undefined, optional
        basic auth credentials secret ref
    description : str, default is Undefined, optional
        Description for the branch.
    displayName : str, default is Undefined, optional
        Display name for a branch. This is used as the default domain prefix.
    enableAutoBuild : bool, default is Undefined, optional
        Enables auto building for the branch.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for the branch.
    enableNotification : bool, default is Undefined, optional
        Enables notifications for the branch.
    enablePerformanceMode : bool, default is Undefined, optional
        Enables performance mode for the branch.
    enablePullRequestPreview : bool, default is Undefined, optional
        Enables pull request previews for this branch.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables for the branch.
    framework : str, default is Undefined, optional
        Framework for the branch.
    pullRequestEnvironmentName : str, default is Undefined, optional
        Amplify environment name for the pull request.
    stage : str, default is Undefined, optional
        Describes the current stage for the branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    ttl : str, default is Undefined, optional
        Content Time To Live (TTL) for the website in seconds.
    """


    backendEnvironmentArn?: str

    basicAuthCredentialsSecretRef?: AmplifyAwsUpboundIoV1beta1BranchSpecInitProviderBasicAuthCredentialsSecretRef

    description?: str

    displayName?: str

    enableAutoBuild?: bool

    enableBasicAuth?: bool

    enableNotification?: bool

    enablePerformanceMode?: bool

    enablePullRequestPreview?: bool

    environmentVariables?: {str:str}

    framework?: str

    pullRequestEnvironmentName?: str

    stage?: str

    tags?: {str:str}

    ttl?: str


schema AmplifyAwsUpboundIoV1beta1BranchSpecInitProviderBasicAuthCredentialsSecretRef:
    r"""
    Basic authorization credentials for the branch.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta1BranchSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta1BranchSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta1BranchSpecProviderConfigRefPolicy


schema AmplifyAwsUpboundIoV1beta1BranchSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToConfigRef

    metadata?: AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToMetadata

    name: str


schema AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToConfigRefPolicy


schema AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AmplifyAwsUpboundIoV1beta1BranchSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AmplifyAwsUpboundIoV1beta1BranchSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AmplifyAwsUpboundIoV1beta1BranchStatus:
    r"""
    BranchStatus defines the observed state of Branch.

    Attributes
    ----------
    atProvider : AmplifyAwsUpboundIoV1beta1BranchStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AmplifyAwsUpboundIoV1beta1BranchStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AmplifyAwsUpboundIoV1beta1BranchStatusAtProvider

    conditions?: [AmplifyAwsUpboundIoV1beta1BranchStatusConditionsItems0]

    observedGeneration?: int


schema AmplifyAwsUpboundIoV1beta1BranchStatusAtProvider:
    r"""
    amplify aws upbound io v1beta1 branch status at provider

    Attributes
    ----------
    appId : str, default is Undefined, optional
        Unique ID for an Amplify app.
    arn : str, default is Undefined, optional
        ARN for the branch.
    associatedResources : [str], default is Undefined, optional
        A list of custom resources that are linked to this branch.
    backendEnvironmentArn : str, default is Undefined, optional
        ARN for a backend environment that is part of an Amplify app.
    customDomains : [str], default is Undefined, optional
        Custom domains for the branch.
    description : str, default is Undefined, optional
        Description for the branch.
    destinationBranch : str, default is Undefined, optional
        Destination branch if the branch is a pull request branch.
    displayName : str, default is Undefined, optional
        Display name for a branch. This is used as the default domain prefix.
    enableAutoBuild : bool, default is Undefined, optional
        Enables auto building for the branch.
    enableBasicAuth : bool, default is Undefined, optional
        Enables basic authorization for the branch.
    enableNotification : bool, default is Undefined, optional
        Enables notifications for the branch.
    enablePerformanceMode : bool, default is Undefined, optional
        Enables performance mode for the branch.
    enablePullRequestPreview : bool, default is Undefined, optional
        Enables pull request previews for this branch.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables for the branch.
    framework : str, default is Undefined, optional
        Framework for the branch.
    id : str, default is Undefined, optional
        id
    pullRequestEnvironmentName : str, default is Undefined, optional
        Amplify environment name for the pull request.
    sourceBranch : str, default is Undefined, optional
        Source branch if the branch is a pull request branch.
    stage : str, default is Undefined, optional
        Describes the current stage for the branch. Valid values: PRODUCTION, BETA, DEVELOPMENT, EXPERIMENTAL, PULL_REQUEST.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    ttl : str, default is Undefined, optional
        Content Time To Live (TTL) for the website in seconds.
    """


    appId?: str

    arn?: str

    associatedResources?: [str]

    backendEnvironmentArn?: str

    customDomains?: [str]

    description?: str

    destinationBranch?: str

    displayName?: str

    enableAutoBuild?: bool

    enableBasicAuth?: bool

    enableNotification?: bool

    enablePerformanceMode?: bool

    enablePullRequestPreview?: bool

    environmentVariables?: {str:str}

    framework?: str

    id?: str

    pullRequestEnvironmentName?: str

    sourceBranch?: str

    stage?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    ttl?: str


schema AmplifyAwsUpboundIoV1beta1BranchStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


