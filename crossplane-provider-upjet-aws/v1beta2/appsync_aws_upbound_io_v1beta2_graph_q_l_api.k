"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema GraphQLAPI:
    r"""
    GraphQLAPI is the Schema for the GraphQLAPIs API. Provides an AppSync GraphQL API.

    Attributes
    ----------
    apiVersion : str, default is "appsync.aws.upbound.io/v1beta2", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GraphQLAPI", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsyncAwsUpboundIoV1beta2GraphQLAPISpec, default is Undefined, required
        spec
    status : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatus, default is Undefined, optional
        status
    """


    apiVersion: "appsync.aws.upbound.io/v1beta2" = "appsync.aws.upbound.io/v1beta2"

    kind: "GraphQLAPI" = "GraphQLAPI"

    metadata?: v1.ObjectMeta

    spec: AppsyncAwsUpboundIoV1beta2GraphQLAPISpec

    status?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatus


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpec:
    r"""
    GraphQLAPISpec defines the desired state of GraphQLAPI

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProvider, default is Undefined, required
        for provider
    initProvider : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProvider

    initProvider?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecProviderConfigRef

    publishConnectionDetailsTo?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecWriteConnectionSecretToRef


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProvider:
    r"""
    appsync aws upbound io v1beta2 graph q l API spec for provider

    Attributes
    ----------
    additionalAuthenticationProvider : [AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0], default is Undefined, optional
        One or more additional authentication providers for the GraphQL API. See additional_authentication_provider Block for details.
    apiType : str, default is Undefined, optional
        API type. Valid values are GRAPHQL or MERGED. A MERGED type requires merged_api_execution_role_arn to be set.
    authenticationType : str, default is Undefined, optional
        Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
    enhancedMetricsConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderEnhancedMetricsConfig, default is Undefined, optional
        enhanced metrics config
    introspectionConfig : str, default is Undefined, optional
        Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled. For more information about introspection, see GraphQL introspection.
    lambdaAuthorizerConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLambdaAuthorizerConfig, default is Undefined, optional
        lambda authorizer config
    logConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfig, default is Undefined, optional
        log config
    mergedApiExecutionRoleArn : str, default is Undefined, optional
        ARN of the execution role when api_type is set to MERGED.
    mergedApiExecutionRoleArnRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnRef, default is Undefined, optional
        merged Api execution role arn ref
    mergedApiExecutionRoleArnSelector : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnSelector, default is Undefined, optional
        merged Api execution role arn selector
    name : str, default is Undefined, optional
        User-supplied name for the GraphQL API.
    openidConnectConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderOpenidConnectConfig, default is Undefined, optional
        openid connect config
    queryDepthLimit : float, default is Undefined, optional
        The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query. The default value is 0 (or unspecified), which indicates there's no depth limit. If you set a limit, it can be between 1 and 75 nested levels. This field will produce a limit error if the operation falls out of bounds.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    resolverCountLimit : float, default is Undefined, optional
        The maximum number of resolvers that can be invoked in a single request. The default value is 0 (or unspecified), which will set the limit to 10000. When specified, the limit value can be between 1 and 10000. This field will produce a limit error if the operation falls out of bounds.
    $schema : str, default is Undefined, optional
        Schema definition, in GraphQL schema language format.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userPoolConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfig, default is Undefined, optional
        user pool config
    visibility : str, default is Undefined, optional
        Sets the value of the GraphQL API to public (GLOBAL) or private (PRIVATE). If no value is provided, the visibility will be set to GLOBAL by default. This value cannot be changed once the API has been created.
    xrayEnabled : bool, default is Undefined, optional
        Whether tracing with X-ray is enabled. Defaults to false.
    """


    additionalAuthenticationProvider?: [AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0]

    apiType?: str

    authenticationType?: str

    enhancedMetricsConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderEnhancedMetricsConfig

    introspectionConfig?: str

    lambdaAuthorizerConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLambdaAuthorizerConfig

    logConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfig

    mergedApiExecutionRoleArn?: str

    mergedApiExecutionRoleArnRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnRef

    mergedApiExecutionRoleArnSelector?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnSelector

    name?: str

    openidConnectConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderOpenidConnectConfig

    queryDepthLimit?: float

    region: str

    resolverCountLimit?: float

    $schema?: str

    tags?: {str:str}

    userPoolConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfig

    visibility?: str

    xrayEnabled?: bool


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0:
    r"""
    appsync aws upbound io v1beta2 graph q l API spec for provider additional authentication provider items0

    Attributes
    ----------
    authenticationType : str, default is Undefined, optional
        Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
    lambdaAuthorizerConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig, default is Undefined, optional
        lambda authorizer config
    openidConnectConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig, default is Undefined, optional
        openid connect config
    userPoolConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0UserPoolConfig, default is Undefined, optional
        user pool config
    """


    authenticationType?: str

    lambdaAuthorizerConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig

    openidConnectConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig

    userPoolConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0UserPoolConfig


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig:
    r"""
    Nested argument containing Lambda authorizer configuration. See lambda_authorizer_config Block for details.

    Attributes
    ----------
    authorizerResultTtlInSeconds : float, default is Undefined, optional
        Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
    authorizerUri : str, default is Undefined, optional
        ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
    identityValidationExpression : str, default is Undefined, optional
        Regular expression for validation of tokens before the Lambda function is called.
    """


    authorizerResultTtlInSeconds?: float

    authorizerUri?: str

    identityValidationExpression?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig:
    r"""
    Nested argument containing OpenID Connect configuration. See openid_connect_config Block for details.

    Attributes
    ----------
    authTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being authenticated.
    clientId : str, default is Undefined, optional
        Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
    iatTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being issued to a user.
    issuer : str, default is Undefined, optional
        Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
    """


    authTtl?: float

    clientId?: str

    iatTtl?: float

    issuer?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderAdditionalAuthenticationProviderItems0UserPoolConfig:
    r"""
    Amazon Cognito User Pool configuration. See user_pool_config Block for details.

    Attributes
    ----------
    appIdClientRegex : str, default is Undefined, optional
        Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
    awsRegion : str, default is Undefined, optional
        AWS region in which the user pool was created.
    userPoolId : str, default is Undefined, optional
        User pool ID.
    """


    appIdClientRegex?: str

    awsRegion?: str

    userPoolId?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderEnhancedMetricsConfig:
    r"""
    Enables and controls the enhanced metrics feature. See enhanced_metrics_config Block for details.

    Attributes
    ----------
    dataSourceLevelMetricsBehavior : str, default is Undefined, optional
        How data source metrics will be emitted to CloudWatch. Valid values: FULL_REQUEST_DATA_SOURCE_METRICS, PER_DATA_SOURCE_METRICS
    operationLevelMetricsConfig : str, default is Undefined, optional
        How operation metrics will be emitted to CloudWatch. Valid values: ENABLED, DISABLED
    resolverLevelMetricsBehavior : str, default is Undefined, optional
        How resolver metrics will be emitted to CloudWatch. Valid values: FULL_REQUEST_RESOLVER_METRICS, PER_RESOLVER_METRICS
    """


    dataSourceLevelMetricsBehavior?: str

    operationLevelMetricsConfig?: str

    resolverLevelMetricsBehavior?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLambdaAuthorizerConfig:
    r"""
    Nested argument containing Lambda authorizer configuration. See lambda_authorizer_config Block for details.

    Attributes
    ----------
    authorizerResultTtlInSeconds : float, default is Undefined, optional
        Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
    authorizerUri : str, default is Undefined, optional
        ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
    identityValidationExpression : str, default is Undefined, optional
        Regular expression for validation of tokens before the Lambda function is called.
    """


    authorizerResultTtlInSeconds?: float

    authorizerUri?: str

    identityValidationExpression?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfig:
    r"""
    Nested argument containing logging configuration. See log_config Block for details.

    Attributes
    ----------
    cloudwatchLogsRoleArn : str, default is Undefined, optional
        Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
    cloudwatchLogsRoleArnRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnRef, default is Undefined, optional
        cloudwatch logs role arn ref
    cloudwatchLogsRoleArnSelector : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnSelector, default is Undefined, optional
        cloudwatch logs role arn selector
    excludeVerboseContent : bool, default is Undefined, optional
        Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: true, false. Default value: false
    fieldLogLevel : str, default is Undefined, optional
        Field logging level. Valid values: ALL, ERROR, NONE.
    """


    cloudwatchLogsRoleArn?: str

    cloudwatchLogsRoleArnRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnRef

    cloudwatchLogsRoleArnSelector?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnSelector

    excludeVerboseContent?: bool

    fieldLogLevel?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnRef:
    r"""
    Reference to a Role in iam to populate cloudwatchLogsRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate cloudwatchLogsRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderLogConfigCloudwatchLogsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate mergedApiExecutionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate mergedApiExecutionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderMergedAPIExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderOpenidConnectConfig:
    r"""
    Nested argument containing OpenID Connect configuration. See openid_connect_config Block for details.

    Attributes
    ----------
    authTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being authenticated.
    clientId : str, default is Undefined, optional
        Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
    iatTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being issued to a user.
    issuer : str, default is Undefined, optional
        Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
    """


    authTtl?: float

    clientId?: str

    iatTtl?: float

    issuer?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfig:
    r"""
    Amazon Cognito User Pool configuration. See user_pool_config Block for details.

    Attributes
    ----------
    appIdClientRegex : str, default is Undefined, optional
        Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
    awsRegion : str, default is Undefined, optional
        AWS region in which the user pool was created.
    defaultAction : str, default is Undefined, optional
        Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: ALLOW and DENY
    userPoolId : str, default is Undefined, optional
        User pool ID.
    userPoolIdRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    """


    appIdClientRegex?: str

    awsRegion?: str

    defaultAction?: str

    userPoolId?: str

    userPoolIdRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDRef

    userPoolIdSelector?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDSelector


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDRef:
    r"""
    Reference to a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDSelector:
    r"""
    Selector for a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecForProviderUserPoolConfigUserPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    additionalAuthenticationProvider : [AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0], default is Undefined, optional
        One or more additional authentication providers for the GraphQL API. See additional_authentication_provider Block for details.
    apiType : str, default is Undefined, optional
        API type. Valid values are GRAPHQL or MERGED. A MERGED type requires merged_api_execution_role_arn to be set.
    authenticationType : str, default is Undefined, optional
        Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
    enhancedMetricsConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderEnhancedMetricsConfig, default is Undefined, optional
        enhanced metrics config
    introspectionConfig : str, default is Undefined, optional
        Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled. For more information about introspection, see GraphQL introspection.
    lambdaAuthorizerConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLambdaAuthorizerConfig, default is Undefined, optional
        lambda authorizer config
    logConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfig, default is Undefined, optional
        log config
    mergedApiExecutionRoleArn : str, default is Undefined, optional
        ARN of the execution role when api_type is set to MERGED.
    mergedApiExecutionRoleArnRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnRef, default is Undefined, optional
        merged Api execution role arn ref
    mergedApiExecutionRoleArnSelector : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnSelector, default is Undefined, optional
        merged Api execution role arn selector
    name : str, default is Undefined, optional
        User-supplied name for the GraphQL API.
    openidConnectConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderOpenidConnectConfig, default is Undefined, optional
        openid connect config
    queryDepthLimit : float, default is Undefined, optional
        The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query. The default value is 0 (or unspecified), which indicates there's no depth limit. If you set a limit, it can be between 1 and 75 nested levels. This field will produce a limit error if the operation falls out of bounds.
    resolverCountLimit : float, default is Undefined, optional
        The maximum number of resolvers that can be invoked in a single request. The default value is 0 (or unspecified), which will set the limit to 10000. When specified, the limit value can be between 1 and 10000. This field will produce a limit error if the operation falls out of bounds.
    $schema : str, default is Undefined, optional
        Schema definition, in GraphQL schema language format.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    userPoolConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfig, default is Undefined, optional
        user pool config
    visibility : str, default is Undefined, optional
        Sets the value of the GraphQL API to public (GLOBAL) or private (PRIVATE). If no value is provided, the visibility will be set to GLOBAL by default. This value cannot be changed once the API has been created.
    xrayEnabled : bool, default is Undefined, optional
        Whether tracing with X-ray is enabled. Defaults to false.
    """


    additionalAuthenticationProvider?: [AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0]

    apiType?: str

    authenticationType?: str

    enhancedMetricsConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderEnhancedMetricsConfig

    introspectionConfig?: str

    lambdaAuthorizerConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLambdaAuthorizerConfig

    logConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfig

    mergedApiExecutionRoleArn?: str

    mergedApiExecutionRoleArnRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnRef

    mergedApiExecutionRoleArnSelector?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnSelector

    name?: str

    openidConnectConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderOpenidConnectConfig

    queryDepthLimit?: float

    resolverCountLimit?: float

    $schema?: str

    tags?: {str:str}

    userPoolConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfig

    visibility?: str

    xrayEnabled?: bool


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0:
    r"""
    appsync aws upbound io v1beta2 graph q l API spec init provider additional authentication provider items0

    Attributes
    ----------
    authenticationType : str, default is Undefined, optional
        Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
    lambdaAuthorizerConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig, default is Undefined, optional
        lambda authorizer config
    openidConnectConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig, default is Undefined, optional
        openid connect config
    userPoolConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0UserPoolConfig, default is Undefined, optional
        user pool config
    """


    authenticationType?: str

    lambdaAuthorizerConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig

    openidConnectConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig

    userPoolConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0UserPoolConfig


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig:
    r"""
    Nested argument containing Lambda authorizer configuration. See lambda_authorizer_config Block for details.

    Attributes
    ----------
    authorizerResultTtlInSeconds : float, default is Undefined, optional
        Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
    authorizerUri : str, default is Undefined, optional
        ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
    identityValidationExpression : str, default is Undefined, optional
        Regular expression for validation of tokens before the Lambda function is called.
    """


    authorizerResultTtlInSeconds?: float

    authorizerUri?: str

    identityValidationExpression?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig:
    r"""
    Nested argument containing OpenID Connect configuration. See openid_connect_config Block for details.

    Attributes
    ----------
    authTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being authenticated.
    clientId : str, default is Undefined, optional
        Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
    iatTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being issued to a user.
    issuer : str, default is Undefined, optional
        Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
    """


    authTtl?: float

    clientId?: str

    iatTtl?: float

    issuer?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderAdditionalAuthenticationProviderItems0UserPoolConfig:
    r"""
    Amazon Cognito User Pool configuration. See user_pool_config Block for details.

    Attributes
    ----------
    appIdClientRegex : str, default is Undefined, optional
        Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
    awsRegion : str, default is Undefined, optional
        AWS region in which the user pool was created.
    userPoolId : str, default is Undefined, optional
        User pool ID.
    """


    appIdClientRegex?: str

    awsRegion?: str

    userPoolId?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderEnhancedMetricsConfig:
    r"""
    Enables and controls the enhanced metrics feature. See enhanced_metrics_config Block for details.

    Attributes
    ----------
    dataSourceLevelMetricsBehavior : str, default is Undefined, optional
        How data source metrics will be emitted to CloudWatch. Valid values: FULL_REQUEST_DATA_SOURCE_METRICS, PER_DATA_SOURCE_METRICS
    operationLevelMetricsConfig : str, default is Undefined, optional
        How operation metrics will be emitted to CloudWatch. Valid values: ENABLED, DISABLED
    resolverLevelMetricsBehavior : str, default is Undefined, optional
        How resolver metrics will be emitted to CloudWatch. Valid values: FULL_REQUEST_RESOLVER_METRICS, PER_RESOLVER_METRICS
    """


    dataSourceLevelMetricsBehavior?: str

    operationLevelMetricsConfig?: str

    resolverLevelMetricsBehavior?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLambdaAuthorizerConfig:
    r"""
    Nested argument containing Lambda authorizer configuration. See lambda_authorizer_config Block for details.

    Attributes
    ----------
    authorizerResultTtlInSeconds : float, default is Undefined, optional
        Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
    authorizerUri : str, default is Undefined, optional
        ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
    identityValidationExpression : str, default is Undefined, optional
        Regular expression for validation of tokens before the Lambda function is called.
    """


    authorizerResultTtlInSeconds?: float

    authorizerUri?: str

    identityValidationExpression?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfig:
    r"""
    Nested argument containing logging configuration. See log_config Block for details.

    Attributes
    ----------
    cloudwatchLogsRoleArn : str, default is Undefined, optional
        Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
    cloudwatchLogsRoleArnRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnRef, default is Undefined, optional
        cloudwatch logs role arn ref
    cloudwatchLogsRoleArnSelector : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnSelector, default is Undefined, optional
        cloudwatch logs role arn selector
    excludeVerboseContent : bool, default is Undefined, optional
        Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: true, false. Default value: false
    fieldLogLevel : str, default is Undefined, optional
        Field logging level. Valid values: ALL, ERROR, NONE.
    """


    cloudwatchLogsRoleArn?: str

    cloudwatchLogsRoleArnRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnRef

    cloudwatchLogsRoleArnSelector?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnSelector

    excludeVerboseContent?: bool

    fieldLogLevel?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnRef:
    r"""
    Reference to a Role in iam to populate cloudwatchLogsRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnSelector:
    r"""
    Selector for a Role in iam to populate cloudwatchLogsRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderLogConfigCloudwatchLogsRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnRef:
    r"""
    Reference to a Role in iam to populate mergedApiExecutionRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnSelector:
    r"""
    Selector for a Role in iam to populate mergedApiExecutionRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderMergedAPIExecutionRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderOpenidConnectConfig:
    r"""
    Nested argument containing OpenID Connect configuration. See openid_connect_config Block for details.

    Attributes
    ----------
    authTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being authenticated.
    clientId : str, default is Undefined, optional
        Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
    iatTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being issued to a user.
    issuer : str, default is Undefined, optional
        Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
    """


    authTtl?: float

    clientId?: str

    iatTtl?: float

    issuer?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfig:
    r"""
    Amazon Cognito User Pool configuration. See user_pool_config Block for details.

    Attributes
    ----------
    appIdClientRegex : str, default is Undefined, optional
        Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
    awsRegion : str, default is Undefined, optional
        AWS region in which the user pool was created.
    defaultAction : str, default is Undefined, optional
        Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: ALLOW and DENY
    userPoolId : str, default is Undefined, optional
        User pool ID.
    userPoolIdRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDRef, default is Undefined, optional
        user pool Id ref
    userPoolIdSelector : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDSelector, default is Undefined, optional
        user pool Id selector
    """


    appIdClientRegex?: str

    awsRegion?: str

    defaultAction?: str

    userPoolId?: str

    userPoolIdRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDRef

    userPoolIdSelector?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDSelector


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDRef:
    r"""
    Reference to a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDSelector:
    r"""
    Selector for a UserPool in cognitoidp to populate userPoolId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDSelectorPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecInitProviderUserPoolConfigUserPoolIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecProviderConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToConfigRef

    metadata?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToMetadata

    name: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToConfigRefPolicy


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPISpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatus:
    r"""
    GraphQLAPIStatus defines the observed state of GraphQLAPI.

    Attributes
    ----------
    atProvider : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProvider

    conditions?: [AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusConditionsItems0]

    observedGeneration?: int


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProvider:
    r"""
    appsync aws upbound io v1beta2 graph q l API status at provider

    Attributes
    ----------
    additionalAuthenticationProvider : [AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0], default is Undefined, optional
        One or more additional authentication providers for the GraphQL API. See additional_authentication_provider Block for details.
    apiType : str, default is Undefined, optional
        API type. Valid values are GRAPHQL or MERGED. A MERGED type requires merged_api_execution_role_arn to be set.
    arn : str, default is Undefined, optional
        ARN
    authenticationType : str, default is Undefined, optional
        Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
    enhancedMetricsConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderEnhancedMetricsConfig, default is Undefined, optional
        enhanced metrics config
    id : str, default is Undefined, optional
        API ID
    introspectionConfig : str, default is Undefined, optional
        Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled. For more information about introspection, see GraphQL introspection.
    lambdaAuthorizerConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderLambdaAuthorizerConfig, default is Undefined, optional
        lambda authorizer config
    logConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderLogConfig, default is Undefined, optional
        log config
    mergedApiExecutionRoleArn : str, default is Undefined, optional
        ARN of the execution role when api_type is set to MERGED.
    name : str, default is Undefined, optional
        User-supplied name for the GraphQL API.
    openidConnectConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderOpenidConnectConfig, default is Undefined, optional
        openid connect config
    queryDepthLimit : float, default is Undefined, optional
        The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query. The default value is 0 (or unspecified), which indicates there's no depth limit. If you set a limit, it can be between 1 and 75 nested levels. This field will produce a limit error if the operation falls out of bounds.
    resolverCountLimit : float, default is Undefined, optional
        The maximum number of resolvers that can be invoked in a single request. The default value is 0 (or unspecified), which will set the limit to 10000. When specified, the limit value can be between 1 and 10000. This field will produce a limit error if the operation falls out of bounds.
    $schema : str, default is Undefined, optional
        Schema definition, in GraphQL schema language format.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    uris : {str:str}, default is Undefined, optional
        Map of URIs associated with the API E.g., uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql
    userPoolConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderUserPoolConfig, default is Undefined, optional
        user pool config
    visibility : str, default is Undefined, optional
        Sets the value of the GraphQL API to public (GLOBAL) or private (PRIVATE). If no value is provided, the visibility will be set to GLOBAL by default. This value cannot be changed once the API has been created.
    xrayEnabled : bool, default is Undefined, optional
        Whether tracing with X-ray is enabled. Defaults to false.
    """


    additionalAuthenticationProvider?: [AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0]

    apiType?: str

    arn?: str

    authenticationType?: str

    enhancedMetricsConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderEnhancedMetricsConfig

    id?: str

    introspectionConfig?: str

    lambdaAuthorizerConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderLambdaAuthorizerConfig

    logConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderLogConfig

    mergedApiExecutionRoleArn?: str

    name?: str

    openidConnectConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderOpenidConnectConfig

    queryDepthLimit?: float

    resolverCountLimit?: float

    $schema?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    uris?: {str:str}

    userPoolConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderUserPoolConfig

    visibility?: str

    xrayEnabled?: bool


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0:
    r"""
    appsync aws upbound io v1beta2 graph q l API status at provider additional authentication provider items0

    Attributes
    ----------
    authenticationType : str, default is Undefined, optional
        Authentication type. Valid values: API_KEY, AWS_IAM, AMAZON_COGNITO_USER_POOLS, OPENID_CONNECT, AWS_LAMBDA
    lambdaAuthorizerConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig, default is Undefined, optional
        lambda authorizer config
    openidConnectConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig, default is Undefined, optional
        openid connect config
    userPoolConfig : AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0UserPoolConfig, default is Undefined, optional
        user pool config
    """


    authenticationType?: str

    lambdaAuthorizerConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig

    openidConnectConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig

    userPoolConfig?: AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0UserPoolConfig


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0LambdaAuthorizerConfig:
    r"""
    Nested argument containing Lambda authorizer configuration. See lambda_authorizer_config Block for details.

    Attributes
    ----------
    authorizerResultTtlInSeconds : float, default is Undefined, optional
        Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
    authorizerUri : str, default is Undefined, optional
        ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
    identityValidationExpression : str, default is Undefined, optional
        Regular expression for validation of tokens before the Lambda function is called.
    """


    authorizerResultTtlInSeconds?: float

    authorizerUri?: str

    identityValidationExpression?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0OpenidConnectConfig:
    r"""
    Nested argument containing OpenID Connect configuration. See openid_connect_config Block for details.

    Attributes
    ----------
    authTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being authenticated.
    clientId : str, default is Undefined, optional
        Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
    iatTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being issued to a user.
    issuer : str, default is Undefined, optional
        Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
    """


    authTtl?: float

    clientId?: str

    iatTtl?: float

    issuer?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderAdditionalAuthenticationProviderItems0UserPoolConfig:
    r"""
    Amazon Cognito User Pool configuration. See user_pool_config Block for details.

    Attributes
    ----------
    appIdClientRegex : str, default is Undefined, optional
        Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
    awsRegion : str, default is Undefined, optional
        AWS region in which the user pool was created.
    userPoolId : str, default is Undefined, optional
        User pool ID.
    """


    appIdClientRegex?: str

    awsRegion?: str

    userPoolId?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderEnhancedMetricsConfig:
    r"""
    Enables and controls the enhanced metrics feature. See enhanced_metrics_config Block for details.

    Attributes
    ----------
    dataSourceLevelMetricsBehavior : str, default is Undefined, optional
        How data source metrics will be emitted to CloudWatch. Valid values: FULL_REQUEST_DATA_SOURCE_METRICS, PER_DATA_SOURCE_METRICS
    operationLevelMetricsConfig : str, default is Undefined, optional
        How operation metrics will be emitted to CloudWatch. Valid values: ENABLED, DISABLED
    resolverLevelMetricsBehavior : str, default is Undefined, optional
        How resolver metrics will be emitted to CloudWatch. Valid values: FULL_REQUEST_RESOLVER_METRICS, PER_RESOLVER_METRICS
    """


    dataSourceLevelMetricsBehavior?: str

    operationLevelMetricsConfig?: str

    resolverLevelMetricsBehavior?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderLambdaAuthorizerConfig:
    r"""
    Nested argument containing Lambda authorizer configuration. See lambda_authorizer_config Block for details.

    Attributes
    ----------
    authorizerResultTtlInSeconds : float, default is Undefined, optional
        Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a ttlOverride key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
    authorizerUri : str, default is Undefined, optional
        ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow lambda:InvokeFunction from service principal appsync.amazonaws.com.
    identityValidationExpression : str, default is Undefined, optional
        Regular expression for validation of tokens before the Lambda function is called.
    """


    authorizerResultTtlInSeconds?: float

    authorizerUri?: str

    identityValidationExpression?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderLogConfig:
    r"""
    Nested argument containing logging configuration. See log_config Block for details.

    Attributes
    ----------
    cloudwatchLogsRoleArn : str, default is Undefined, optional
        Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
    excludeVerboseContent : bool, default is Undefined, optional
        Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: true, false. Default value: false
    fieldLogLevel : str, default is Undefined, optional
        Field logging level. Valid values: ALL, ERROR, NONE.
    """


    cloudwatchLogsRoleArn?: str

    excludeVerboseContent?: bool

    fieldLogLevel?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderOpenidConnectConfig:
    r"""
    Nested argument containing OpenID Connect configuration. See openid_connect_config Block for details.

    Attributes
    ----------
    authTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being authenticated.
    clientId : str, default is Undefined, optional
        Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
    iatTtl : float, default is Undefined, optional
        Number of milliseconds a token is valid after being issued to a user.
    issuer : str, default is Undefined, optional
        Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
    """


    authTtl?: float

    clientId?: str

    iatTtl?: float

    issuer?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusAtProviderUserPoolConfig:
    r"""
    Amazon Cognito User Pool configuration. See user_pool_config Block for details.

    Attributes
    ----------
    appIdClientRegex : str, default is Undefined, optional
        Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
    awsRegion : str, default is Undefined, optional
        AWS region in which the user pool was created.
    defaultAction : str, default is Undefined, optional
        Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: ALLOW and DENY
    userPoolId : str, default is Undefined, optional
        User pool ID.
    """


    appIdClientRegex?: str

    awsRegion?: str

    defaultAction?: str

    userPoolId?: str


schema AppsyncAwsUpboundIoV1beta2GraphQLAPIStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


