"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Queue:
    r"""
    Queue is the Schema for the Queues API. Provides a SQS resource.

    Attributes
    ----------
    apiVersion : str, default is "sqs.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Queue", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SqsAwsUpboundIoV1beta1QueueSpec, default is Undefined, required
        spec
    status : SqsAwsUpboundIoV1beta1QueueStatus, default is Undefined, optional
        status
    """


    apiVersion: "sqs.aws.upbound.io/v1beta1" = "sqs.aws.upbound.io/v1beta1"

    kind: "Queue" = "Queue"

    metadata?: v1.ObjectMeta

    spec: SqsAwsUpboundIoV1beta1QueueSpec

    status?: SqsAwsUpboundIoV1beta1QueueStatus


schema SqsAwsUpboundIoV1beta1QueueSpec:
    r"""
    QueueSpec defines the desired state of Queue

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : SqsAwsUpboundIoV1beta1QueueSpecForProvider, default is Undefined, required
        for provider
    initProvider : SqsAwsUpboundIoV1beta1QueueSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : SqsAwsUpboundIoV1beta1QueueSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : SqsAwsUpboundIoV1beta1QueueSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: SqsAwsUpboundIoV1beta1QueueSpecForProvider

    initProvider?: SqsAwsUpboundIoV1beta1QueueSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: SqsAwsUpboundIoV1beta1QueueSpecProviderConfigRef

    publishConnectionDetailsTo?: SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: SqsAwsUpboundIoV1beta1QueueSpecWriteConnectionSecretToRef


schema SqsAwsUpboundIoV1beta1QueueSpecForProvider:
    r"""
    sqs aws upbound io v1beta1 queue spec for provider

    Attributes
    ----------
    contentBasedDeduplication : bool, default is Undefined, optional
        Enables content-based deduplication for FIFO queues. For more information, see the related documentation
    deduplicationScope : str, default is Undefined, optional
        Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue (default).
    delaySeconds : float, default is Undefined, optional
        The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
    fifoQueue : bool, default is Undefined, optional
        Boolean designating a FIFO queue. If not set, it defaults to false making it standard.
    fifoThroughputLimit : str, default is Undefined, optional
        Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue (default) and perMessageGroupId.
    kmsDataKeyReusePeriodSeconds : float, default is Undefined, optional
        The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
    kmsMasterKeyId : str, default is Undefined, optional
        The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms.
    maxMessageSize : float, default is Undefined, optional
        The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
    messageRetentionSeconds : float, default is Undefined, optional
        The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
    name : str, default is Undefined, optional
        The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the .fifo suffix. Conflicts with name_prefix
    policy : str, default is Undefined, optional
        The JSON policy for the SQS queue.
    receiveWaitTimeSeconds : float, default is Undefined, optional
        The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
    redriveAllowPolicy : str, default is Undefined, optional
        The JSON policy to set up the Dead Letter Queue redrive permission, see AWS docs.
    redrivePolicy : str, default is Undefined, optional
        The JSON policy to set up the Dead Letter Queue, see AWS docs. Note: when specifying maxReceiveCount, you must specify it as an integer (5), and not a string ("5").
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    sqsManagedSseEnabled : bool, default is Undefined, optional
        Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. See Encryption at rest.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    visibilityTimeoutSeconds : float, default is Undefined, optional
        The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see AWS docs.
    """


    contentBasedDeduplication?: bool

    deduplicationScope?: str

    delaySeconds?: float

    fifoQueue?: bool

    fifoThroughputLimit?: str

    kmsDataKeyReusePeriodSeconds?: float

    kmsMasterKeyId?: str

    maxMessageSize?: float

    messageRetentionSeconds?: float

    name?: str

    policy?: str

    receiveWaitTimeSeconds?: float

    redriveAllowPolicy?: str

    redrivePolicy?: str

    region: str

    sqsManagedSseEnabled?: bool

    tags?: {str:str}

    visibilityTimeoutSeconds?: float


schema SqsAwsUpboundIoV1beta1QueueSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    contentBasedDeduplication : bool, default is Undefined, optional
        Enables content-based deduplication for FIFO queues. For more information, see the related documentation
    deduplicationScope : str, default is Undefined, optional
        Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue (default).
    delaySeconds : float, default is Undefined, optional
        The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
    fifoQueue : bool, default is Undefined, optional
        Boolean designating a FIFO queue. If not set, it defaults to false making it standard.
    fifoThroughputLimit : str, default is Undefined, optional
        Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue (default) and perMessageGroupId.
    kmsDataKeyReusePeriodSeconds : float, default is Undefined, optional
        The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
    kmsMasterKeyId : str, default is Undefined, optional
        The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms.
    maxMessageSize : float, default is Undefined, optional
        The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
    messageRetentionSeconds : float, default is Undefined, optional
        The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
    name : str, default is Undefined, optional
        The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the .fifo suffix. Conflicts with name_prefix
    policy : str, default is Undefined, optional
        The JSON policy for the SQS queue.
    receiveWaitTimeSeconds : float, default is Undefined, optional
        The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
    redriveAllowPolicy : str, default is Undefined, optional
        The JSON policy to set up the Dead Letter Queue redrive permission, see AWS docs.
    redrivePolicy : str, default is Undefined, optional
        The JSON policy to set up the Dead Letter Queue, see AWS docs. Note: when specifying maxReceiveCount, you must specify it as an integer (5), and not a string ("5").
    sqsManagedSseEnabled : bool, default is Undefined, optional
        Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. See Encryption at rest.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    visibilityTimeoutSeconds : float, default is Undefined, optional
        The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see AWS docs.
    """


    contentBasedDeduplication?: bool

    deduplicationScope?: str

    delaySeconds?: float

    fifoQueue?: bool

    fifoThroughputLimit?: str

    kmsDataKeyReusePeriodSeconds?: float

    kmsMasterKeyId?: str

    maxMessageSize?: float

    messageRetentionSeconds?: float

    name?: str

    policy?: str

    receiveWaitTimeSeconds?: float

    redriveAllowPolicy?: str

    redrivePolicy?: str

    sqsManagedSseEnabled?: bool

    tags?: {str:str}

    visibilityTimeoutSeconds?: float


schema SqsAwsUpboundIoV1beta1QueueSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsUpboundIoV1beta1QueueSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsUpboundIoV1beta1QueueSpecProviderConfigRefPolicy


schema SqsAwsUpboundIoV1beta1QueueSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef

    metadata?: SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToMetadata

    name: str


schema SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy


schema SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema SqsAwsUpboundIoV1beta1QueueSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema SqsAwsUpboundIoV1beta1QueueSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema SqsAwsUpboundIoV1beta1QueueStatus:
    r"""
    QueueStatus defines the observed state of Queue.

    Attributes
    ----------
    atProvider : SqsAwsUpboundIoV1beta1QueueStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [SqsAwsUpboundIoV1beta1QueueStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: SqsAwsUpboundIoV1beta1QueueStatusAtProvider

    conditions?: [SqsAwsUpboundIoV1beta1QueueStatusConditionsItems0]

    observedGeneration?: int


schema SqsAwsUpboundIoV1beta1QueueStatusAtProvider:
    r"""
    sqs aws upbound io v1beta1 queue status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the SQS queue
    contentBasedDeduplication : bool, default is Undefined, optional
        Enables content-based deduplication for FIFO queues. For more information, see the related documentation
    deduplicationScope : str, default is Undefined, optional
        Specifies whether message deduplication occurs at the message group or queue level. Valid values are messageGroup and queue (default).
    delaySeconds : float, default is Undefined, optional
        The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
    fifoQueue : bool, default is Undefined, optional
        Boolean designating a FIFO queue. If not set, it defaults to false making it standard.
    fifoThroughputLimit : str, default is Undefined, optional
        Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are perQueue (default) and perMessageGroupId.
    id : str, default is Undefined, optional
        The URL for the created Amazon SQS queue.
    kmsDataKeyReusePeriodSeconds : float, default is Undefined, optional
        The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
    kmsMasterKeyId : str, default is Undefined, optional
        The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see Key Terms.
    maxMessageSize : float, default is Undefined, optional
        The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
    messageRetentionSeconds : float, default is Undefined, optional
        The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
    name : str, default is Undefined, optional
        The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the .fifo suffix. Conflicts with name_prefix
    policy : str, default is Undefined, optional
        The JSON policy for the SQS queue.
    receiveWaitTimeSeconds : float, default is Undefined, optional
        The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
    redriveAllowPolicy : str, default is Undefined, optional
        The JSON policy to set up the Dead Letter Queue redrive permission, see AWS docs.
    redrivePolicy : str, default is Undefined, optional
        The JSON policy to set up the Dead Letter Queue, see AWS docs. Note: when specifying maxReceiveCount, you must specify it as an integer (5), and not a string ("5").
    sqsManagedSseEnabled : bool, default is Undefined, optional
        Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. See Encryption at rest.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    url : str, default is Undefined, optional
        Same as id: The URL for the created Amazon SQS queue.
    visibilityTimeoutSeconds : float, default is Undefined, optional
        The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see AWS docs.
    """


    arn?: str

    contentBasedDeduplication?: bool

    deduplicationScope?: str

    delaySeconds?: float

    fifoQueue?: bool

    fifoThroughputLimit?: str

    id?: str

    kmsDataKeyReusePeriodSeconds?: float

    kmsMasterKeyId?: str

    maxMessageSize?: float

    messageRetentionSeconds?: float

    name?: str

    policy?: str

    receiveWaitTimeSeconds?: float

    redriveAllowPolicy?: str

    redrivePolicy?: str

    sqsManagedSseEnabled?: bool

    tags?: {str:str}

    tagsAll?: {str:str}

    url?: str

    visibilityTimeoutSeconds?: float


schema SqsAwsUpboundIoV1beta1QueueStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


