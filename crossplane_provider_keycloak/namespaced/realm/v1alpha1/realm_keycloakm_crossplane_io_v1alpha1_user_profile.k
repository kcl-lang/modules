"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema UserProfile:
    r"""
    UserProfile is the Schema for the UserProfiles API.

    Attributes
    ----------
    apiVersion : str, default is "realm.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "UserProfile", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpec, default is Undefined, required
        spec
    status : RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatus, default is Undefined, optional
        status
    """


    apiVersion: "realm.keycloak.m.crossplane.io/v1alpha1" = "realm.keycloak.m.crossplane.io/v1alpha1"

    kind: "UserProfile" = "UserProfile"

    metadata?: v1.ObjectMeta

    spec: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpec

    status?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatus


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpec:
    r"""
    UserProfileSpec defines the desired state of UserProfile

    Attributes
    ----------
    forProvider : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProvider, default is Undefined, required
        for provider
    initProvider : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProvider

    initProvider?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecProviderConfigRef

    writeConnectionSecretToRef?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecWriteConnectionSecretToRef


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProvider:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec for provider

    Attributes
    ----------
    attribute : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0], default is Undefined, optional
        An ordered list of attributes.
    group : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderGroupItems0], default is Undefined, optional
        A list of groups.
    realmId : str, default is Undefined, optional
        The ID of the realm the user profile applies to.
    realmIdRef : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    unmanagedAttributePolicy : str, default is Undefined, optional
        Unmanaged attributes are user attributes not explicitly defined in the user profile configuration. By default, unmanaged attributes are not enabled. Value could be one of DISABLED, ENABLED, ADMIN_EDIT or ADMIN_VIEW. If value is not specified it means DISABLED
    """


    attribute?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0]

    group?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderGroupItems0]

    realmId?: str

    realmIdRef?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDRef

    realmIdSelector?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDSelector

    unmanagedAttributePolicy?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec for provider attribute items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        A map of annotations for the attribute. Values can be a String or a json object.
    displayName : str, default is Undefined, optional
        The display name of the attribute.
    enabledWhenScope : [str], default is Undefined, optional
        A list of scopes. The attribute will only be enabled when these scopes are requested by clients.
    group : str, default is Undefined, optional
        A list of groups.
    multiValued : bool, default is Undefined, optional
        If the attribute supports multiple values. Defaults to false.
    name : str, default is Undefined, optional
        The name of the attribute.
    permissions : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0PermissionsItems0], default is Undefined, optional
        The permissions configuration information.
    requiredForRoles : [str], default is Undefined, optional
        A list of roles for which the attribute will be required.
    requiredForScopes : [str], default is Undefined, optional
        A list of scopes for which the attribute will be required.
    validator : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0ValidatorItems0], default is Undefined, optional
        A list of validators for the attribute.
    """


    annotations?: {str:str}

    displayName?: str

    enabledWhenScope?: [str]

    group?: str

    multiValued?: bool

    name?: str

    permissions?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0PermissionsItems0]

    requiredForRoles?: [str]

    requiredForScopes?: [str]

    validator?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0ValidatorItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0PermissionsItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec for provider attribute items0 permissions items0

    Attributes
    ----------
    edit : [str], default is Undefined, optional
        A list of profiles that will be able to edit the attribute. One of admin, user.
    view : [str], default is Undefined, optional
        A list of profiles that will be able to view the attribute. One of admin, user.
    """


    edit?: [str]

    view?: [str]


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderAttributeItems0ValidatorItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec for provider attribute items0 validator items0

    Attributes
    ----------
    config : {str:str}, default is Undefined, optional
        A map defining the configuration of the validator. Values can be a String or a json object.
    name : str, default is Undefined, optional
        The name of the attribute.
    """


    config?: {str:str}

    name?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderGroupItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec for provider group items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        A map of annotations for the attribute. Values can be a String or a json object.
    displayDescription : str, default is Undefined, optional
        The display description of the group.
    displayHeader : str, default is Undefined, optional
        The display header of the group.
    name : str, default is Undefined, optional
        The name of the attribute.
    """


    annotations?: {str:str}

    displayDescription?: str

    displayHeader?: str

    name?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDRefPolicy


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDSelectorPolicy


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecForProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    attribute : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0], default is Undefined, optional
        An ordered list of attributes.
    group : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderGroupItems0], default is Undefined, optional
        A list of groups.
    realmId : str, default is Undefined, optional
        The ID of the realm the user profile applies to.
    realmIdRef : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDRef, default is Undefined, optional
        realm Id ref
    realmIdSelector : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDSelector, default is Undefined, optional
        realm Id selector
    unmanagedAttributePolicy : str, default is Undefined, optional
        Unmanaged attributes are user attributes not explicitly defined in the user profile configuration. By default, unmanaged attributes are not enabled. Value could be one of DISABLED, ENABLED, ADMIN_EDIT or ADMIN_VIEW. If value is not specified it means DISABLED
    """


    attribute?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0]

    group?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderGroupItems0]

    realmId?: str

    realmIdRef?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDRef

    realmIdSelector?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDSelector

    unmanagedAttributePolicy?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec init provider attribute items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        A map of annotations for the attribute. Values can be a String or a json object.
    displayName : str, default is Undefined, optional
        The display name of the attribute.
    enabledWhenScope : [str], default is Undefined, optional
        A list of scopes. The attribute will only be enabled when these scopes are requested by clients.
    group : str, default is Undefined, optional
        A list of groups.
    multiValued : bool, default is Undefined, optional
        If the attribute supports multiple values. Defaults to false.
    name : str, default is Undefined, optional
        The name of the attribute.
    permissions : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0PermissionsItems0], default is Undefined, optional
        The permissions configuration information.
    requiredForRoles : [str], default is Undefined, optional
        A list of roles for which the attribute will be required.
    requiredForScopes : [str], default is Undefined, optional
        A list of scopes for which the attribute will be required.
    validator : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0ValidatorItems0], default is Undefined, optional
        A list of validators for the attribute.
    """


    annotations?: {str:str}

    displayName?: str

    enabledWhenScope?: [str]

    group?: str

    multiValued?: bool

    name?: str

    permissions?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0PermissionsItems0]

    requiredForRoles?: [str]

    requiredForScopes?: [str]

    validator?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0ValidatorItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0PermissionsItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec init provider attribute items0 permissions items0

    Attributes
    ----------
    edit : [str], default is Undefined, optional
        A list of profiles that will be able to edit the attribute. One of admin, user.
    view : [str], default is Undefined, optional
        A list of profiles that will be able to view the attribute. One of admin, user.
    """


    edit?: [str]

    view?: [str]


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderAttributeItems0ValidatorItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec init provider attribute items0 validator items0

    Attributes
    ----------
    config : {str:str}, default is Undefined, optional
        A map defining the configuration of the validator. Values can be a String or a json object.
    name : str, default is Undefined, optional
        The name of the attribute.
    """


    config?: {str:str}

    name?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderGroupItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile spec init provider group items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        A map of annotations for the attribute. Values can be a String or a json object.
    displayDescription : str, default is Undefined, optional
        The display description of the group.
    displayHeader : str, default is Undefined, optional
        The display header of the group.
    name : str, default is Undefined, optional
        The name of the attribute.
    """


    annotations?: {str:str}

    displayDescription?: str

    displayHeader?: str

    name?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDRef:
    r"""
    Reference to a Realm in realm to populate realmId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    namespace : str, default is Undefined, optional
        Namespace of the referenced object
    policy : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    namespace?: str

    policy?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDRefPolicy


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDSelector:
    r"""
    Selector for a Realm in realm to populate realmId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    namespace : str, default is Undefined, optional
        Namespace for the selector
    policy : RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    namespace?: str

    policy?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDSelectorPolicy


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecInitProviderRealmIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatus:
    r"""
    UserProfileStatus defines the observed state of UserProfile.

    Attributes
    ----------
    atProvider : RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProvider

    conditions?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusConditionsItems0]

    observedGeneration?: int


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProvider:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile status at provider

    Attributes
    ----------
    attribute : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0], default is Undefined, optional
        An ordered list of attributes.
    group : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderGroupItems0], default is Undefined, optional
        A list of groups.
    id : str, default is Undefined, optional
        id
    realmId : str, default is Undefined, optional
        The ID of the realm the user profile applies to.
    unmanagedAttributePolicy : str, default is Undefined, optional
        Unmanaged attributes are user attributes not explicitly defined in the user profile configuration. By default, unmanaged attributes are not enabled. Value could be one of DISABLED, ENABLED, ADMIN_EDIT or ADMIN_VIEW. If value is not specified it means DISABLED
    """


    attribute?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0]

    group?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderGroupItems0]

    id?: str

    realmId?: str

    unmanagedAttributePolicy?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile status at provider attribute items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        A map of annotations for the attribute. Values can be a String or a json object.
    displayName : str, default is Undefined, optional
        The display name of the attribute.
    enabledWhenScope : [str], default is Undefined, optional
        A list of scopes. The attribute will only be enabled when these scopes are requested by clients.
    group : str, default is Undefined, optional
        A list of groups.
    multiValued : bool, default is Undefined, optional
        If the attribute supports multiple values. Defaults to false.
    name : str, default is Undefined, optional
        The name of the attribute.
    permissions : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0PermissionsItems0], default is Undefined, optional
        The permissions configuration information.
    requiredForRoles : [str], default is Undefined, optional
        A list of roles for which the attribute will be required.
    requiredForScopes : [str], default is Undefined, optional
        A list of scopes for which the attribute will be required.
    validator : [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0ValidatorItems0], default is Undefined, optional
        A list of validators for the attribute.
    """


    annotations?: {str:str}

    displayName?: str

    enabledWhenScope?: [str]

    group?: str

    multiValued?: bool

    name?: str

    permissions?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0PermissionsItems0]

    requiredForRoles?: [str]

    requiredForScopes?: [str]

    validator?: [RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0ValidatorItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0PermissionsItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile status at provider attribute items0 permissions items0

    Attributes
    ----------
    edit : [str], default is Undefined, optional
        A list of profiles that will be able to edit the attribute. One of admin, user.
    view : [str], default is Undefined, optional
        A list of profiles that will be able to view the attribute. One of admin, user.
    """


    edit?: [str]

    view?: [str]


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderAttributeItems0ValidatorItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile status at provider attribute items0 validator items0

    Attributes
    ----------
    config : {str:str}, default is Undefined, optional
        A map defining the configuration of the validator. Values can be a String or a json object.
    name : str, default is Undefined, optional
        The name of the attribute.
    """


    config?: {str:str}

    name?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusAtProviderGroupItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 user profile status at provider group items0

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        A map of annotations for the attribute. Values can be a String or a json object.
    displayDescription : str, default is Undefined, optional
        The display description of the group.
    displayHeader : str, default is Undefined, optional
        The display header of the group.
    name : str, default is Undefined, optional
        The name of the attribute.
    """


    annotations?: {str:str}

    displayDescription?: str

    displayHeader?: str

    name?: str


schema RealmKeycloakmCrossplaneIoV1alpha1UserProfileStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


