"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema PullRequest:
    r"""
    PullRequest is the Schema for the PullRequests API. Get information on a single GitHub Pull Request.

    Attributes
    ----------
    apiVersion : str, default is "repo.github.upbound.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "PullRequest", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RepoGithubUpboundIoV1alpha1PullRequestSpec, default is Undefined, required
        spec
    status : RepoGithubUpboundIoV1alpha1PullRequestStatus, default is Undefined, optional
        status
    """


    apiVersion: "repo.github.upbound.io/v1alpha1" = "repo.github.upbound.io/v1alpha1"

    kind: "PullRequest" = "PullRequest"

    metadata?: v1.ObjectMeta

    spec: RepoGithubUpboundIoV1alpha1PullRequestSpec

    status?: RepoGithubUpboundIoV1alpha1PullRequestStatus


schema RepoGithubUpboundIoV1alpha1PullRequestSpec:
    r"""
    PullRequestSpec defines the desired state of PullRequest

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RepoGithubUpboundIoV1alpha1PullRequestSpecForProvider, default is Undefined, required
        for provider
    initProvider : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RepoGithubUpboundIoV1alpha1PullRequestSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RepoGithubUpboundIoV1alpha1PullRequestSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RepoGithubUpboundIoV1alpha1PullRequestSpecForProvider

    initProvider?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecProviderConfigRef

    publishConnectionDetailsTo?: RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecWriteConnectionSecretToRef


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProvider:
    r"""
    repo github upbound io v1alpha1 pull request spec for provider

    Attributes
    ----------
    baseRef : str, default is Undefined, optional
        Name of the branch serving as the base of the Pull Request.
        Name of the branch serving as the base of the Pull Request.
    baseRepository : str, default is Undefined, optional
        Name of the base repository to retrieve the Pull Requests from.
        Name of the base repository to retrieve the Pull Requests from.
    baseRepositoryRef : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositoryRef, default is Undefined, optional
        base repository ref
    baseRepositorySelector : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositorySelector, default is Undefined, optional
        base repository selector
    body : str, default is Undefined, optional
        Body of the Pull Request.
        Body of the Pull Request.
    headRef : str, default is Undefined, optional
        Name of the branch serving as the head of the Pull Request.
        Name of the branch serving as the head of the Pull Request.
    headRefRef : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefRef, default is Undefined, optional
        head ref ref
    headRefSelector : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefSelector, default is Undefined, optional
        head ref selector
    maintainerCanModify : bool, default is Undefined, optional
        Controls whether the base repository maintainers can modify the Pull Request. Default: false.
        Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
    owner : str, default is Undefined, optional
        Owner of the repository. If not provided, the provider's default owner is used.
        Owner of the repository. If not provided, the provider's default owner is used.
    title : str, default is Undefined, optional
        The title of the Pull Request.
        The title of the Pull Request.
    """


    baseRef?: str

    baseRepository?: str

    baseRepositoryRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositoryRef

    baseRepositorySelector?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositorySelector

    body?: str

    headRef?: str

    headRefRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefRef

    headRefSelector?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefSelector

    maintainerCanModify?: bool

    owner?: str

    title?: str


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositoryRef:
    r"""
    Reference to a Repository in repo to populate baseRepository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositoryRefPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositorySelector:
    r"""
    Selector for a Repository in repo to populate baseRepository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositorySelectorPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderBaseRepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefRef:
    r"""
    Reference to a Branch in repo to populate headRef.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefRefPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefSelector:
    r"""
    Selector for a Branch in repo to populate headRef.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefSelectorPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecForProviderHeadRefSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    baseRef : str, default is Undefined, optional
        Name of the branch serving as the base of the Pull Request.
        Name of the branch serving as the base of the Pull Request.
    baseRepository : str, default is Undefined, optional
        Name of the base repository to retrieve the Pull Requests from.
        Name of the base repository to retrieve the Pull Requests from.
    baseRepositoryRef : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositoryRef, default is Undefined, optional
        base repository ref
    baseRepositorySelector : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositorySelector, default is Undefined, optional
        base repository selector
    body : str, default is Undefined, optional
        Body of the Pull Request.
        Body of the Pull Request.
    headRef : str, default is Undefined, optional
        Name of the branch serving as the head of the Pull Request.
        Name of the branch serving as the head of the Pull Request.
    headRefRef : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefRef, default is Undefined, optional
        head ref ref
    headRefSelector : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefSelector, default is Undefined, optional
        head ref selector
    maintainerCanModify : bool, default is Undefined, optional
        Controls whether the base repository maintainers can modify the Pull Request. Default: false.
        Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
    owner : str, default is Undefined, optional
        Owner of the repository. If not provided, the provider's default owner is used.
        Owner of the repository. If not provided, the provider's default owner is used.
    title : str, default is Undefined, optional
        The title of the Pull Request.
        The title of the Pull Request.
    """


    baseRef?: str

    baseRepository?: str

    baseRepositoryRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositoryRef

    baseRepositorySelector?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositorySelector

    body?: str

    headRef?: str

    headRefRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefRef

    headRefSelector?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefSelector

    maintainerCanModify?: bool

    owner?: str

    title?: str


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositoryRef:
    r"""
    Reference to a Repository in repo to populate baseRepository.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositoryRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositoryRefPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositoryRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositorySelector:
    r"""
    Selector for a Repository in repo to populate baseRepository.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositorySelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositorySelectorPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderBaseRepositorySelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefRef:
    r"""
    Reference to a Branch in repo to populate headRef.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefRefPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefSelector:
    r"""
    Selector for a Branch in repo to populate headRef.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefSelectorPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecInitProviderHeadRefSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecProviderConfigRefPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToConfigRef

    metadata?: RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToMetadata

    name: str


schema RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToConfigRefPolicy


schema RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RepoGithubUpboundIoV1alpha1PullRequestSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RepoGithubUpboundIoV1alpha1PullRequestSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RepoGithubUpboundIoV1alpha1PullRequestStatus:
    r"""
    PullRequestStatus defines the observed state of PullRequest.

    Attributes
    ----------
    atProvider : RepoGithubUpboundIoV1alpha1PullRequestStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RepoGithubUpboundIoV1alpha1PullRequestStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RepoGithubUpboundIoV1alpha1PullRequestStatusAtProvider

    conditions?: [RepoGithubUpboundIoV1alpha1PullRequestStatusConditionsItems0]

    observedGeneration?: int


schema RepoGithubUpboundIoV1alpha1PullRequestStatusAtProvider:
    r"""
    repo github upbound io v1alpha1 pull request status at provider

    Attributes
    ----------
    baseRef : str, default is Undefined, optional
        Name of the branch serving as the base of the Pull Request.
        Name of the branch serving as the base of the Pull Request.
    baseRepository : str, default is Undefined, optional
        Name of the base repository to retrieve the Pull Requests from.
        Name of the base repository to retrieve the Pull Requests from.
    baseSha : str, default is Undefined, optional
        Head commit SHA of the Pull Request base.
        Head commit SHA of the Pull Request base.
    body : str, default is Undefined, optional
        Body of the Pull Request.
        Body of the Pull Request.
    draft : bool, default is Undefined, optional
        Indicates Whether this Pull Request is a draft.
        Indicates Whether this Pull Request is a draft.
    headRef : str, default is Undefined, optional
        Name of the branch serving as the head of the Pull Request.
        Name of the branch serving as the head of the Pull Request.
    headSha : str, default is Undefined, optional
        Head commit SHA of the Pull Request head.
        Head commit SHA of the Pull Request head.
    id : str, default is Undefined, optional
        id
    labels : [str], default is Undefined, optional
        List of label names set on the Pull Request.
        List of names of labels on the PR
    maintainerCanModify : bool, default is Undefined, optional
        Controls whether the base repository maintainers can modify the Pull Request. Default: false.
        Controls whether the base repository maintainers can modify the Pull Request. Default: 'false'.
    number : int, default is Undefined, optional
        The number of the Pull Request within the repository.
        The number of the Pull Request within the repository.
    openedAt : int, default is Undefined, optional
        Unix timestamp indicating the Pull Request creation time.
        Unix timestamp indicating the Pull Request creation time.
    openedBy : str, default is Undefined, optional
        GitHub login of the user who opened the Pull Request.
        Username of the PR creator
    owner : str, default is Undefined, optional
        Owner of the repository. If not provided, the provider's default owner is used.
        Owner of the repository. If not provided, the provider's default owner is used.
    state : str, default is Undefined, optional
        the current Pull Request state - can be "open", "closed" or "merged".
        The current Pull Request state - can be 'open', 'closed' or 'merged'.
    title : str, default is Undefined, optional
        The title of the Pull Request.
        The title of the Pull Request.
    updatedAt : int, default is Undefined, optional
        The timestamp of the last Pull Request update.
        The timestamp of the last Pull Request update.
    """


    baseRef?: str

    baseRepository?: str

    baseSha?: str

    body?: str

    draft?: bool

    headRef?: str

    headSha?: str

    id?: str

    labels?: [str]

    maintainerCanModify?: bool

    number?: int

    openedAt?: int

    openedBy?: str

    owner?: str

    state?: str

    title?: str

    updatedAt?: int


schema RepoGithubUpboundIoV1alpha1PullRequestStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


