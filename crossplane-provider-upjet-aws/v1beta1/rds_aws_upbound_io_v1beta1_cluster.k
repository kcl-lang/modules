"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Manages an RDS Aurora Cluster or a RDS Multi-AZ DB Cluster

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta1" = "rds.aws.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta1ClusterSpec

    status?: RdsAwsUpboundIoV1beta1ClusterStatus


schema RdsAwsUpboundIoV1beta1ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta1ClusterSpecForProvider:
    r"""
    rds aws upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.
    autoGeneratePassword : bool, default is Undefined, optional
        If true, the password will be auto-generated and stored in the Secret referenced by the masterPasswordSecretRef field.
    availabilityZones : [str], default is Undefined, optional
        List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.
        We recommend specifying 3 AZs or using the  if necessary.
        A maximum of 3 AZs can be configured.
    backtrackWindow : float, default is Undefined, optional
        Target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)
    backupRetentionPeriod : float, default is Undefined, optional
        Days to retain backups for. Default 1
    caCertificateIdentifier : str, default is Undefined, optional
        The CA certificate identifier to use for the DB cluster's server certificate.
    clusterMembers : [str], default is Undefined, optional
        – List of RDS Instances that are a part of this cluster
    copyTagsToSnapshot : bool, default is Undefined, optional
        –  Copy all Cluster tags to snapshots. Default is false.
    databaseName : str, default is Undefined, optional
        Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints
    dbClusterInstanceClass : str, default is Undefined, optional
        The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide.
    dbClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    dbClusterParameterGroupNameRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRef, default is Undefined, optional
        db cluster parameter group name ref
    dbClusterParameterGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelector, default is Undefined, optional
        db cluster parameter group name selector
    dbInstanceParameterGroupName : str, default is Undefined, optional
        Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.
    dbInstanceParameterGroupNameRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameRef, default is Undefined, optional
        db instance parameter group name ref
    dbInstanceParameterGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameSelector, default is Undefined, optional
        db instance parameter group name selector
    dbSubnetGroupName : str, default is Undefined, optional
        DB subnet group to associate with this DB cluster.
        NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.
    dbSubnetGroupNameRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameRef, default is Undefined, optional
        db subnet group name ref
    dbSubnetGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameSelector, default is Undefined, optional
        db subnet group name selector
    dbSystemId : str, default is Undefined, optional
        For use with RDS Custom.
    deleteAutomatedBackups : bool, default is Undefined, optional
        Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is true.
    deletionProtection : bool, default is Undefined, optional
        If the DB cluster should have deletion protection enabled.
        The database can't be deleted when this value is set to true.
        The default is false.
    domain : str, default is Undefined, optional
        The ID of the Directory Service Active Directory domain to create the cluster in.
    domainIamRoleName : str, default is Undefined, optional
        The name of the IAM role to be used when making API calls to the Directory Service.
    enableGlobalWriteForwarding : bool, default is Undefined, optional
        Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster's primary cluster. See the User Guide for Aurora for more information.
    enableHttpEndpoint : bool, default is Undefined, optional
        Enable HTTP endpoint (data API). Only valid for some combinations of engine_mode, engine and engine_version and only available in some regions. See the Region and version availability section of the documentation. This option also does not work with any of these options specified: snapshot_identifier, replication_source_identifier, s3_import.
    enableLocalWriteForwarding : bool, default is Undefined, optional
        Whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.. See the User Guide for Aurora for more information. NOTE: Local write forwarding requires Aurora MySQL version 3.04 or higher.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).
    engine : str, default is Undefined, optional
        Name of the database engine to be used for this DB cluster. Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).
    engineLifecycleSupport : str, default is Undefined, optional
        The life cycle type for this DB instance. This setting is valid for cluster types Aurora DB clusters and Multi-AZ DB clusters. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    engineMode : str, default is Undefined, optional
        Database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.
    engineVersion : str, default is Undefined, optional
        Database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value, or by running aws rds describe-db-engine-versions. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attribute Reference below.
    finalSnapshotIdentifier : str, default is Undefined, optional
        Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier : str, default is Undefined, optional
        Global cluster identifier specified on aws_rds_global_cluster.
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.
    iops : float, default is Undefined, optional
        Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    kmsKeyIdRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    manageMasterUserPassword : bool, default is Undefined, optional
        Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if master_password is provided.
    masterPasswordSecretRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef, default is Undefined, optional
        master password secret ref
    masterUserSecretKmsKeyId : str, default is Undefined, optional
        Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    masterUserSecretKmsKeyIdRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDRef, default is Undefined, optional
        master user secret kms key Id ref
    masterUserSecretKmsKeyIdSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDSelector, default is Undefined, optional
        master user secret kms key Id selector
    masterUsername : str, default is Undefined, optional
        Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    networkType : str, default is Undefined, optional
        Network type of the cluster. Valid values: IPV4, DUAL.
    performanceInsightsEnabled : bool, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Enables Performance Insights for the RDS Cluster
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the KMS Key ID to encrypt Performance Insights data. If not specified, the default RDS KMS key will be used (aws/rds).
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the amount of time to retain performance insights data for. Defaults to 7 days if Performance Insights are enabled. Valid values are 7, month * 31 (where month is a number of months from 1-23), and 731. See here for more information on retention periods.
    port : float, default is Undefined, optional
        Port on which the DB accepts connections
    preferredBackupWindow : str, default is Undefined, optional
        Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicationSourceIdentifier : str, default is Undefined, optional
        ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica.
    restoreToPointInTime : [RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0], default is Undefined, optional
        Nested attribute for point in time restore. More details below.
    s3Import : [RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0], default is Undefined, optional
        Port on which the DB accepts connections
    scalingConfiguration : [RdsAwsUpboundIoV1beta1ClusterSpecForProviderScalingConfigurationItems0], default is Undefined, optional
        Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.
    serverlessv2ScalingConfiguration : [RdsAwsUpboundIoV1beta1ClusterSpecForProviderServerlessv2ScalingConfigurationItems0], default is Undefined, optional
        Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with global_cluster_identifier. Clusters cannot be restored from snapshot and joined to an existing global cluster in a single operation. See the AWS documentation or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
    sourceRegion : str, default is Undefined, optional
        The source region for an encrypted replica DB cluster.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster.
    storageType : str, default is Undefined, optional
        (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, storage_type modifications can be done in-place. For Multi-AZ DB Clusters, the iops argument must also be set. Valid values are: "", aurora-iopt1 (Aurora DB Clusters); io1, io2 (Multi-AZ DB Clusters). Default: "" (Aurora DB Clusters); io1 (Multi-AZ DB Clusters).
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate with the Cluster
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoGeneratePassword?: bool

    availabilityZones?: [str]

    backtrackWindow?: float

    backupRetentionPeriod?: float

    caCertificateIdentifier?: str

    clusterMembers?: [str]

    copyTagsToSnapshot?: bool

    databaseName?: str

    dbClusterInstanceClass?: str

    dbClusterParameterGroupName?: str

    dbClusterParameterGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRef

    dbClusterParameterGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelector

    dbInstanceParameterGroupName?: str

    dbInstanceParameterGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameRef

    dbInstanceParameterGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameSelector

    dbSubnetGroupName?: str

    dbSubnetGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameRef

    dbSubnetGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameSelector

    dbSystemId?: str

    deleteAutomatedBackups?: bool

    deletionProtection?: bool

    domain?: str

    domainIamRoleName?: str

    enableGlobalWriteForwarding?: bool

    enableHttpEndpoint?: bool

    enableLocalWriteForwarding?: bool

    enabledCloudwatchLogsExports?: [str]

    engine?: str

    engineLifecycleSupport?: str

    engineMode?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    iamDatabaseAuthenticationEnabled?: bool

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector

    manageMasterUserPassword?: bool

    masterPasswordSecretRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef

    masterUserSecretKmsKeyId?: str

    masterUserSecretKmsKeyIdRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDRef

    masterUserSecretKmsKeyIdSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDSelector

    masterUsername?: str

    networkType?: str

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    region: str

    replicationSourceIdentifier?: str

    restoreToPointInTime?: [RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0]

    s3Import?: [RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0]

    scalingConfiguration?: [RdsAwsUpboundIoV1beta1ClusterSpecForProviderScalingConfigurationItems0]

    serverlessv2ScalingConfiguration?: [RdsAwsUpboundIoV1beta1ClusterSpecForProviderServerlessv2ScalingConfigurationItems0]

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    sourceRegion?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRef:
    r"""
    Reference to a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelector:
    r"""
    Selector for a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbClusterParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in rds to populate dbInstanceParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in rds to populate dbInstanceParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbInstanceParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderDbSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterPasswordSecretRef:
    r"""
    Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the RDS Naming Constraints. Cannot be set if manage_master_user_password is set to true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderMasterUserSecretKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec for provider restore to point in time items0

    Attributes
    ----------
    restoreToTime : str, default is Undefined, optional
        Date and time in UTC format to restore the database cluster to. Conflicts with use_latest_restorable_time.
    restoreType : str, default is Undefined, optional
        Type of restore to be performed.
        Valid options are full-copy (default) and copy-on-write.
    sourceClusterIdentifier : str, default is Undefined, optional
        Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
    sourceClusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierRef, default is Undefined, optional
        source cluster identifier ref
    sourceClusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelector, default is Undefined, optional
        source cluster identifier selector
    sourceClusterResourceId : str, default is Undefined, optional
        Cluster resource ID of the source database cluster from which to restore. To be used for restoring a deleted cluster in the same account which still has a retained automatic backup available.
    useLatestRestorableTime : bool, default is Undefined, optional
        Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with restore_to_time.
    """


    restoreToTime?: str

    restoreType?: str

    sourceClusterIdentifier?: str

    sourceClusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierRef

    sourceClusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelector

    sourceClusterResourceId?: str

    useLatestRestorableTime?: bool


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierRef:
    r"""
    Reference to a Cluster in rds to populate sourceClusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelector:
    r"""
    Selector for a Cluster in rds to populate sourceClusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec for provider s3 import items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Bucket name where your backup is stored
    bucketNameRef : RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketPrefix : str, default is Undefined, optional
        Can be blank, but is the path to your backup
    ingestionRole : str, default is Undefined, optional
        Role applied to load the data.
    sourceEngine : str, default is Undefined, optional
        Source engine for the backup
    sourceEngineVersion : str, default is Undefined, optional
        Version of the source engine used to make the backup
    """


    bucketName?: str

    bucketNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameRef

    bucketNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameSelector

    bucketPrefix?: str

    ingestionRole?: str

    sourceEngine?: str

    sourceEngineVersion?: str


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameRef:
    r"""
    Reference to a Bucket in s3 to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderS3ImportItems0BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderScalingConfigurationItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec for provider scaling configuration items0

    Attributes
    ----------
    autoPause : bool, default is Undefined, optional
        Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to true.
    maxCapacity : float, default is Undefined, optional
        Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    minCapacity : float, default is Undefined, optional
        Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    secondsBeforeTimeout : float, default is Undefined, optional
        Amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. Valid values are 60 through 600. Defaults to 300.
    secondsUntilAutoPause : float, default is Undefined, optional
        Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    timeoutAction : str, default is Undefined, optional
        Action to take when the timeout is reached. Valid values: ForceApplyCapacityChange, RollbackCapacityChange. Defaults to RollbackCapacityChange. See documentation.
    """


    autoPause?: bool

    maxCapacity?: float

    minCapacity?: float

    secondsBeforeTimeout?: float

    secondsUntilAutoPause?: float

    timeoutAction?: str


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderServerlessv2ScalingConfigurationItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec for provider serverlessv2 scaling configuration items0

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    minCapacity : float, default is Undefined, optional
        Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    secondsUntilAutoPause : float, default is Undefined, optional
        Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    """


    maxCapacity?: float

    minCapacity?: float

    secondsUntilAutoPause?: float


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.
    availabilityZones : [str], default is Undefined, optional
        List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.
        We recommend specifying 3 AZs or using the  if necessary.
        A maximum of 3 AZs can be configured.
    backtrackWindow : float, default is Undefined, optional
        Target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)
    backupRetentionPeriod : float, default is Undefined, optional
        Days to retain backups for. Default 1
    caCertificateIdentifier : str, default is Undefined, optional
        The CA certificate identifier to use for the DB cluster's server certificate.
    clusterMembers : [str], default is Undefined, optional
        – List of RDS Instances that are a part of this cluster
    copyTagsToSnapshot : bool, default is Undefined, optional
        –  Copy all Cluster tags to snapshots. Default is false.
    databaseName : str, default is Undefined, optional
        Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints
    dbClusterInstanceClass : str, default is Undefined, optional
        The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide.
    dbClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    dbClusterParameterGroupNameRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRef, default is Undefined, optional
        db cluster parameter group name ref
    dbClusterParameterGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelector, default is Undefined, optional
        db cluster parameter group name selector
    dbInstanceParameterGroupName : str, default is Undefined, optional
        Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.
    dbInstanceParameterGroupNameRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameRef, default is Undefined, optional
        db instance parameter group name ref
    dbInstanceParameterGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameSelector, default is Undefined, optional
        db instance parameter group name selector
    dbSubnetGroupName : str, default is Undefined, optional
        DB subnet group to associate with this DB cluster.
        NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.
    dbSubnetGroupNameRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameRef, default is Undefined, optional
        db subnet group name ref
    dbSubnetGroupNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameSelector, default is Undefined, optional
        db subnet group name selector
    dbSystemId : str, default is Undefined, optional
        For use with RDS Custom.
    deleteAutomatedBackups : bool, default is Undefined, optional
        Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is true.
    deletionProtection : bool, default is Undefined, optional
        If the DB cluster should have deletion protection enabled.
        The database can't be deleted when this value is set to true.
        The default is false.
    domain : str, default is Undefined, optional
        The ID of the Directory Service Active Directory domain to create the cluster in.
    domainIamRoleName : str, default is Undefined, optional
        The name of the IAM role to be used when making API calls to the Directory Service.
    enableGlobalWriteForwarding : bool, default is Undefined, optional
        Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster's primary cluster. See the User Guide for Aurora for more information.
    enableHttpEndpoint : bool, default is Undefined, optional
        Enable HTTP endpoint (data API). Only valid for some combinations of engine_mode, engine and engine_version and only available in some regions. See the Region and version availability section of the documentation. This option also does not work with any of these options specified: snapshot_identifier, replication_source_identifier, s3_import.
    enableLocalWriteForwarding : bool, default is Undefined, optional
        Whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.. See the User Guide for Aurora for more information. NOTE: Local write forwarding requires Aurora MySQL version 3.04 or higher.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).
    engine : str, default is Undefined, optional
        Name of the database engine to be used for this DB cluster. Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).
    engineLifecycleSupport : str, default is Undefined, optional
        The life cycle type for this DB instance. This setting is valid for cluster types Aurora DB clusters and Multi-AZ DB clusters. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    engineMode : str, default is Undefined, optional
        Database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.
    engineVersion : str, default is Undefined, optional
        Database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value, or by running aws rds describe-db-engine-versions. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attribute Reference below.
    finalSnapshotIdentifier : str, default is Undefined, optional
        Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier : str, default is Undefined, optional
        Global cluster identifier specified on aws_rds_global_cluster.
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.
    iops : float, default is Undefined, optional
        Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    kmsKeyIdRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    manageMasterUserPassword : bool, default is Undefined, optional
        Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if master_password is provided.
    masterPasswordSecretRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef, default is Undefined, optional
        master password secret ref
    masterUserSecretKmsKeyId : str, default is Undefined, optional
        Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    masterUserSecretKmsKeyIdRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDRef, default is Undefined, optional
        master user secret kms key Id ref
    masterUserSecretKmsKeyIdSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDSelector, default is Undefined, optional
        master user secret kms key Id selector
    masterUsername : str, default is Undefined, optional
        Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    networkType : str, default is Undefined, optional
        Network type of the cluster. Valid values: IPV4, DUAL.
    performanceInsightsEnabled : bool, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Enables Performance Insights for the RDS Cluster
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the KMS Key ID to encrypt Performance Insights data. If not specified, the default RDS KMS key will be used (aws/rds).
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the amount of time to retain performance insights data for. Defaults to 7 days if Performance Insights are enabled. Valid values are 7, month * 31 (where month is a number of months from 1-23), and 731. See here for more information on retention periods.
    port : float, default is Undefined, optional
        Port on which the DB accepts connections
    preferredBackupWindow : str, default is Undefined, optional
        Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    replicationSourceIdentifier : str, default is Undefined, optional
        ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica.
    restoreToPointInTime : [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0], default is Undefined, optional
        Nested attribute for point in time restore. More details below.
    s3Import : [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0], default is Undefined, optional
        Port on which the DB accepts connections
    scalingConfiguration : [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderScalingConfigurationItems0], default is Undefined, optional
        Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.
    serverlessv2ScalingConfiguration : [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderServerlessv2ScalingConfigurationItems0], default is Undefined, optional
        Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with global_cluster_identifier. Clusters cannot be restored from snapshot and joined to an existing global cluster in a single operation. See the AWS documentation or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
    sourceRegion : str, default is Undefined, optional
        The source region for an encrypted replica DB cluster.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster.
    storageType : str, default is Undefined, optional
        (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, storage_type modifications can be done in-place. For Multi-AZ DB Clusters, the iops argument must also be set. Valid values are: "", aurora-iopt1 (Aurora DB Clusters); io1, io2 (Multi-AZ DB Clusters). Default: "" (Aurora DB Clusters); io1 (Multi-AZ DB Clusters).
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate with the Cluster
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    availabilityZones?: [str]

    backtrackWindow?: float

    backupRetentionPeriod?: float

    caCertificateIdentifier?: str

    clusterMembers?: [str]

    copyTagsToSnapshot?: bool

    databaseName?: str

    dbClusterInstanceClass?: str

    dbClusterParameterGroupName?: str

    dbClusterParameterGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRef

    dbClusterParameterGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelector

    dbInstanceParameterGroupName?: str

    dbInstanceParameterGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameRef

    dbInstanceParameterGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameSelector

    dbSubnetGroupName?: str

    dbSubnetGroupNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameRef

    dbSubnetGroupNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameSelector

    dbSystemId?: str

    deleteAutomatedBackups?: bool

    deletionProtection?: bool

    domain?: str

    domainIamRoleName?: str

    enableGlobalWriteForwarding?: bool

    enableHttpEndpoint?: bool

    enableLocalWriteForwarding?: bool

    enabledCloudwatchLogsExports?: [str]

    engine?: str

    engineLifecycleSupport?: str

    engineMode?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    iamDatabaseAuthenticationEnabled?: bool

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector

    manageMasterUserPassword?: bool

    masterPasswordSecretRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef

    masterUserSecretKmsKeyId?: str

    masterUserSecretKmsKeyIdRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDRef

    masterUserSecretKmsKeyIdSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDSelector

    masterUsername?: str

    networkType?: str

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    replicationSourceIdentifier?: str

    restoreToPointInTime?: [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0]

    s3Import?: [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0]

    scalingConfiguration?: [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderScalingConfigurationItems0]

    serverlessv2ScalingConfiguration?: [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderServerlessv2ScalingConfigurationItems0]

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    sourceRegion?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRef:
    r"""
    Reference to a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelector:
    r"""
    Selector for a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbClusterParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in rds to populate dbInstanceParameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in rds to populate dbInstanceParameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbInstanceParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderDbSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterPasswordSecretRef:
    r"""
    Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the RDS Naming Constraints. Cannot be set if manage_master_user_password is set to true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderMasterUserSecretKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec init provider restore to point in time items0

    Attributes
    ----------
    restoreToTime : str, default is Undefined, optional
        Date and time in UTC format to restore the database cluster to. Conflicts with use_latest_restorable_time.
    restoreType : str, default is Undefined, optional
        Type of restore to be performed.
        Valid options are full-copy (default) and copy-on-write.
    sourceClusterIdentifier : str, default is Undefined, optional
        Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
    sourceClusterIdentifierRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierRef, default is Undefined, optional
        source cluster identifier ref
    sourceClusterIdentifierSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelector, default is Undefined, optional
        source cluster identifier selector
    sourceClusterResourceId : str, default is Undefined, optional
        Cluster resource ID of the source database cluster from which to restore. To be used for restoring a deleted cluster in the same account which still has a retained automatic backup available.
    useLatestRestorableTime : bool, default is Undefined, optional
        Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with restore_to_time.
    """


    restoreToTime?: str

    restoreType?: str

    sourceClusterIdentifier?: str

    sourceClusterIdentifierRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierRef

    sourceClusterIdentifierSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelector

    sourceClusterResourceId?: str

    useLatestRestorableTime?: bool


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierRef:
    r"""
    Reference to a Cluster in rds to populate sourceClusterIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelector:
    r"""
    Selector for a Cluster in rds to populate sourceClusterIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderRestoreToPointInTimeItems0SourceClusterIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec init provider s3 import items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Bucket name where your backup is stored
    bucketNameRef : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameRef, default is Undefined, optional
        bucket name ref
    bucketNameSelector : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameSelector, default is Undefined, optional
        bucket name selector
    bucketPrefix : str, default is Undefined, optional
        Can be blank, but is the path to your backup
    ingestionRole : str, default is Undefined, optional
        Role applied to load the data.
    sourceEngine : str, default is Undefined, optional
        Source engine for the backup
    sourceEngineVersion : str, default is Undefined, optional
        Version of the source engine used to make the backup
    """


    bucketName?: str

    bucketNameRef?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameRef

    bucketNameSelector?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameSelector

    bucketPrefix?: str

    ingestionRole?: str

    sourceEngine?: str

    sourceEngineVersion?: str


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameRef:
    r"""
    Reference to a Bucket in s3 to populate bucketName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameSelector:
    r"""
    Selector for a Bucket in s3 to populate bucketName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderS3ImportItems0BucketNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderScalingConfigurationItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec init provider scaling configuration items0

    Attributes
    ----------
    autoPause : bool, default is Undefined, optional
        Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to true.
    maxCapacity : float, default is Undefined, optional
        Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    minCapacity : float, default is Undefined, optional
        Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    secondsBeforeTimeout : float, default is Undefined, optional
        Amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. Valid values are 60 through 600. Defaults to 300.
    secondsUntilAutoPause : float, default is Undefined, optional
        Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    timeoutAction : str, default is Undefined, optional
        Action to take when the timeout is reached. Valid values: ForceApplyCapacityChange, RollbackCapacityChange. Defaults to RollbackCapacityChange. See documentation.
    """


    autoPause?: bool

    maxCapacity?: float

    minCapacity?: float

    secondsBeforeTimeout?: float

    secondsUntilAutoPause?: float

    timeoutAction?: str


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderServerlessv2ScalingConfigurationItems0:
    r"""
    rds aws upbound io v1beta1 cluster spec init provider serverlessv2 scaling configuration items0

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    minCapacity : float, default is Undefined, optional
        Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    secondsUntilAutoPause : float, default is Undefined, optional
        Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    """


    maxCapacity?: float

    minCapacity?: float

    secondsUntilAutoPause?: float


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta1ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta1ClusterStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta1ClusterStatusAtProvider:
    r"""
    rds aws upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.
    arn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of cluster
    availabilityZones : [str], default is Undefined, optional
        List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.
        We recommend specifying 3 AZs or using the  if necessary.
        A maximum of 3 AZs can be configured.
    backtrackWindow : float, default is Undefined, optional
        Target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)
    backupRetentionPeriod : float, default is Undefined, optional
        Days to retain backups for. Default 1
    caCertificateIdentifier : str, default is Undefined, optional
        The CA certificate identifier to use for the DB cluster's server certificate.
    caCertificateValidTill : str, default is Undefined, optional
        Expiration date of the DB instance’s server certificate
    clusterMembers : [str], default is Undefined, optional
        – List of RDS Instances that are a part of this cluster
    clusterResourceId : str, default is Undefined, optional
        RDS Cluster Resource ID
    copyTagsToSnapshot : bool, default is Undefined, optional
        –  Copy all Cluster tags to snapshots. Default is false.
    databaseName : str, default is Undefined, optional
        Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints
    dbClusterInstanceClass : str, default is Undefined, optional
        The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide.
    dbClusterParameterGroupName : str, default is Undefined, optional
        A cluster parameter group to associate with the cluster.
    dbInstanceParameterGroupName : str, default is Undefined, optional
        Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.
    dbSubnetGroupName : str, default is Undefined, optional
        DB subnet group to associate with this DB cluster.
        NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.
    dbSystemId : str, default is Undefined, optional
        For use with RDS Custom.
    deleteAutomatedBackups : bool, default is Undefined, optional
        Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is true.
    deletionProtection : bool, default is Undefined, optional
        If the DB cluster should have deletion protection enabled.
        The database can't be deleted when this value is set to true.
        The default is false.
    domain : str, default is Undefined, optional
        The ID of the Directory Service Active Directory domain to create the cluster in.
    domainIamRoleName : str, default is Undefined, optional
        The name of the IAM role to be used when making API calls to the Directory Service.
    enableGlobalWriteForwarding : bool, default is Undefined, optional
        Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster's primary cluster. See the User Guide for Aurora for more information.
    enableHttpEndpoint : bool, default is Undefined, optional
        Enable HTTP endpoint (data API). Only valid for some combinations of engine_mode, engine and engine_version and only available in some regions. See the Region and version availability section of the documentation. This option also does not work with any of these options specified: snapshot_identifier, replication_source_identifier, s3_import.
    enableLocalWriteForwarding : bool, default is Undefined, optional
        Whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.. See the User Guide for Aurora for more information. NOTE: Local write forwarding requires Aurora MySQL version 3.04 or higher.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).
    endpoint : str, default is Undefined, optional
        DNS address of the RDS instance
    engine : str, default is Undefined, optional
        Name of the database engine to be used for this DB cluster. Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).
    engineLifecycleSupport : str, default is Undefined, optional
        The life cycle type for this DB instance. This setting is valid for cluster types Aurora DB clusters and Multi-AZ DB clusters. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    engineMode : str, default is Undefined, optional
        Database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.
    engineVersion : str, default is Undefined, optional
        Database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value, or by running aws rds describe-db-engine-versions. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attribute Reference below.
    engineVersionActual : str, default is Undefined, optional
        Running version of the database.
    finalSnapshotIdentifier : str, default is Undefined, optional
        Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    globalClusterIdentifier : str, default is Undefined, optional
        Global cluster identifier specified on aws_rds_global_cluster.
    hostedZoneId : str, default is Undefined, optional
        Route53 Hosted Zone ID of the endpoint
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.
    iamRoles : [str], default is Undefined, optional
        List of ARNs for the IAM roles to associate to the RDS Cluster.
    id : str, default is Undefined, optional
        RDS Cluster Identifier
    iops : float, default is Undefined, optional
        Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    kmsKeyId : str, default is Undefined, optional
        ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    manageMasterUserPassword : bool, default is Undefined, optional
        Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if master_password is provided.
    masterUserSecret : [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderMasterUserSecretItems0], default is Undefined, optional
        Block that specifies the master user secret. Only available when manage_master_user_password is set to true. Documented below.
    masterUserSecretKmsKeyId : str, default is Undefined, optional
        Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    masterUsername : str, default is Undefined, optional
        Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    networkType : str, default is Undefined, optional
        Network type of the cluster. Valid values: IPV4, DUAL.
    performanceInsightsEnabled : bool, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Enables Performance Insights for the RDS Cluster
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the KMS Key ID to encrypt Performance Insights data. If not specified, the default RDS KMS key will be used (aws/rds).
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the amount of time to retain performance insights data for. Defaults to 7 days if Performance Insights are enabled. Valid values are 7, month * 31 (where month is a number of months from 1-23), and 731. See here for more information on retention periods.
    port : float, default is Undefined, optional
        Port on which the DB accepts connections
    preferredBackupWindow : str, default is Undefined, optional
        Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    preferredMaintenanceWindow : str, default is Undefined, optional
        Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    readerEndpoint : str, default is Undefined, optional
        Read-only endpoint for the Aurora cluster, automatically
        load-balanced across replicas
    replicationSourceIdentifier : str, default is Undefined, optional
        ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica.
    restoreToPointInTime : [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderRestoreToPointInTimeItems0], default is Undefined, optional
        Nested attribute for point in time restore. More details below.
    s3Import : [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderS3ImportItems0], default is Undefined, optional
        Port on which the DB accepts connections
    scalingConfiguration : [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderScalingConfigurationItems0], default is Undefined, optional
        Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.
    serverlessv2ScalingConfiguration : [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderServerlessv2ScalingConfigurationItems0], default is Undefined, optional
        Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with global_cluster_identifier. Clusters cannot be restored from snapshot and joined to an existing global cluster in a single operation. See the AWS documentation or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
    sourceRegion : str, default is Undefined, optional
        The source region for an encrypted replica DB cluster.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster.
    storageType : str, default is Undefined, optional
        (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, storage_type modifications can be done in-place. For Multi-AZ DB Clusters, the iops argument must also be set. Valid values are: "", aurora-iopt1 (Aurora DB Clusters); io1, io2 (Multi-AZ DB Clusters). Default: "" (Aurora DB Clusters); io1 (Multi-AZ DB Clusters).
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to associate with the Cluster
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    arn?: str

    availabilityZones?: [str]

    backtrackWindow?: float

    backupRetentionPeriod?: float

    caCertificateIdentifier?: str

    caCertificateValidTill?: str

    clusterMembers?: [str]

    clusterResourceId?: str

    copyTagsToSnapshot?: bool

    databaseName?: str

    dbClusterInstanceClass?: str

    dbClusterParameterGroupName?: str

    dbInstanceParameterGroupName?: str

    dbSubnetGroupName?: str

    dbSystemId?: str

    deleteAutomatedBackups?: bool

    deletionProtection?: bool

    domain?: str

    domainIamRoleName?: str

    enableGlobalWriteForwarding?: bool

    enableHttpEndpoint?: bool

    enableLocalWriteForwarding?: bool

    enabledCloudwatchLogsExports?: [str]

    endpoint?: str

    engine?: str

    engineLifecycleSupport?: str

    engineMode?: str

    engineVersion?: str

    engineVersionActual?: str

    finalSnapshotIdentifier?: str

    globalClusterIdentifier?: str

    hostedZoneId?: str

    iamDatabaseAuthenticationEnabled?: bool

    iamRoles?: [str]

    id?: str

    iops?: float

    kmsKeyId?: str

    manageMasterUserPassword?: bool

    masterUserSecret?: [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderMasterUserSecretItems0]

    masterUserSecretKmsKeyId?: str

    masterUsername?: str

    networkType?: str

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    preferredBackupWindow?: str

    preferredMaintenanceWindow?: str

    readerEndpoint?: str

    replicationSourceIdentifier?: str

    restoreToPointInTime?: [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderRestoreToPointInTimeItems0]

    s3Import?: [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderS3ImportItems0]

    scalingConfiguration?: [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderScalingConfigurationItems0]

    serverlessv2ScalingConfiguration?: [RdsAwsUpboundIoV1beta1ClusterStatusAtProviderServerlessv2ScalingConfigurationItems0]

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    sourceRegion?: str

    storageEncrypted?: bool

    storageType?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    vpcSecurityGroupIds?: [str]


schema RdsAwsUpboundIoV1beta1ClusterStatusAtProviderMasterUserSecretItems0:
    r"""
    rds aws upbound io v1beta1 cluster status at provider master user secret items0

    Attributes
    ----------
    kmsKeyId : str, default is Undefined, optional
        Amazon Web Services KMS key identifier that is used to encrypt the secret.
    secretArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the secret.
    secretStatus : str, default is Undefined, optional
        Status of the secret. Valid Values: creating | active | rotating | impaired.
    """


    kmsKeyId?: str

    secretArn?: str

    secretStatus?: str


schema RdsAwsUpboundIoV1beta1ClusterStatusAtProviderRestoreToPointInTimeItems0:
    r"""
    rds aws upbound io v1beta1 cluster status at provider restore to point in time items0

    Attributes
    ----------
    restoreToTime : str, default is Undefined, optional
        Date and time in UTC format to restore the database cluster to. Conflicts with use_latest_restorable_time.
    restoreType : str, default is Undefined, optional
        Type of restore to be performed.
        Valid options are full-copy (default) and copy-on-write.
    sourceClusterIdentifier : str, default is Undefined, optional
        Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
    sourceClusterResourceId : str, default is Undefined, optional
        Cluster resource ID of the source database cluster from which to restore. To be used for restoring a deleted cluster in the same account which still has a retained automatic backup available.
    useLatestRestorableTime : bool, default is Undefined, optional
        Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with restore_to_time.
    """


    restoreToTime?: str

    restoreType?: str

    sourceClusterIdentifier?: str

    sourceClusterResourceId?: str

    useLatestRestorableTime?: bool


schema RdsAwsUpboundIoV1beta1ClusterStatusAtProviderS3ImportItems0:
    r"""
    rds aws upbound io v1beta1 cluster status at provider s3 import items0

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        Bucket name where your backup is stored
    bucketPrefix : str, default is Undefined, optional
        Can be blank, but is the path to your backup
    ingestionRole : str, default is Undefined, optional
        Role applied to load the data.
    sourceEngine : str, default is Undefined, optional
        Source engine for the backup
    sourceEngineVersion : str, default is Undefined, optional
        Version of the source engine used to make the backup
    """


    bucketName?: str

    bucketPrefix?: str

    ingestionRole?: str

    sourceEngine?: str

    sourceEngineVersion?: str


schema RdsAwsUpboundIoV1beta1ClusterStatusAtProviderScalingConfigurationItems0:
    r"""
    rds aws upbound io v1beta1 cluster status at provider scaling configuration items0

    Attributes
    ----------
    autoPause : bool, default is Undefined, optional
        Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to true.
    maxCapacity : float, default is Undefined, optional
        Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    minCapacity : float, default is Undefined, optional
        Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    secondsBeforeTimeout : float, default is Undefined, optional
        Amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. Valid values are 60 through 600. Defaults to 300.
    secondsUntilAutoPause : float, default is Undefined, optional
        Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    timeoutAction : str, default is Undefined, optional
        Action to take when the timeout is reached. Valid values: ForceApplyCapacityChange, RollbackCapacityChange. Defaults to RollbackCapacityChange. See documentation.
    """


    autoPause?: bool

    maxCapacity?: float

    minCapacity?: float

    secondsBeforeTimeout?: float

    secondsUntilAutoPause?: float

    timeoutAction?: str


schema RdsAwsUpboundIoV1beta1ClusterStatusAtProviderServerlessv2ScalingConfigurationItems0:
    r"""
    rds aws upbound io v1beta1 cluster status at provider serverlessv2 scaling configuration items0

    Attributes
    ----------
    maxCapacity : float, default is Undefined, optional
        Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    minCapacity : float, default is Undefined, optional
        Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    secondsUntilAutoPause : float, default is Undefined, optional
        Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    """


    maxCapacity?: float

    minCapacity?: float

    secondsUntilAutoPause?: float


schema RdsAwsUpboundIoV1beta1ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


