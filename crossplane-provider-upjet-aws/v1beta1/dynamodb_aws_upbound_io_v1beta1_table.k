"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Table:
    r"""
    Table is the Schema for the Tables API. Provides a DynamoDB table resource

    Attributes
    ----------
    apiVersion : str, default is "dynamodb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Table", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DynamodbAwsUpboundIoV1beta1TableSpec, default is Undefined, required
        spec
    status : DynamodbAwsUpboundIoV1beta1TableStatus, default is Undefined, optional
        status
    """


    apiVersion: "dynamodb.aws.upbound.io/v1beta1" = "dynamodb.aws.upbound.io/v1beta1"

    kind: "Table" = "Table"

    metadata?: v1.ObjectMeta

    spec: DynamodbAwsUpboundIoV1beta1TableSpec

    status?: DynamodbAwsUpboundIoV1beta1TableStatus


schema DynamodbAwsUpboundIoV1beta1TableSpec:
    r"""
    TableSpec defines the desired state of Table

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DynamodbAwsUpboundIoV1beta1TableSpecForProvider, default is Undefined, required
        for provider
    initProvider : DynamodbAwsUpboundIoV1beta1TableSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DynamodbAwsUpboundIoV1beta1TableSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DynamodbAwsUpboundIoV1beta1TableSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DynamodbAwsUpboundIoV1beta1TableSpecForProvider

    initProvider?: DynamodbAwsUpboundIoV1beta1TableSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DynamodbAwsUpboundIoV1beta1TableSpecProviderConfigRef

    publishConnectionDetailsTo?: DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DynamodbAwsUpboundIoV1beta1TableSpecWriteConnectionSecretToRef


schema DynamodbAwsUpboundIoV1beta1TableSpecForProvider:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider

    Attributes
    ----------
    attribute : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderAttributeItems0], default is Undefined, optional
        Set of nested attribute definitions. Only required for hash_key and range_key attributes. See below.
    billingMode : str, default is Undefined, optional
        Controls how you are charged for read and write throughput and how you manage capacity. The valid values are PROVISIONED and PAY_PER_REQUEST. Defaults to PROVISIONED.
    deletionProtectionEnabled : bool, default is Undefined, optional
        Enables deletion protection for table. Defaults to false.
    globalSecondaryIndex : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderGlobalSecondaryIndexItems0], default is Undefined, optional
        Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc. See below.
    hashKey : str, default is Undefined, optional
        Attribute to use as the hash (partition) key. Must also be defined as an attribute. See below.
    importTable : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0], default is Undefined, optional
        Import Amazon S3 data into a new table. See below.
    localSecondaryIndex : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderLocalSecondaryIndexItems0], default is Undefined, optional
        Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource. See below.
    onDemandThroughput : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderOnDemandThroughputItems0], default is Undefined, optional
        Sets the maximum number of read and write units for the specified on-demand table. See below.
    pointInTimeRecovery : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderPointInTimeRecoveryItems0], default is Undefined, optional
        Enable point-in-time recovery options. See below.
    rangeKey : str, default is Undefined, optional
        Attribute to use as the range (sort) key. Must also be defined as an attribute, see below.
    readCapacity : float, default is Undefined, optional
        Number of read units for this table. If the billing_mode is PROVISIONED, this field is required.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replica : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderReplicaItems0], default is Undefined, optional
        Configuration block(s) with DynamoDB Global Tables V2 (version 2019.11.21) replication configurations. See below.
    restoreDateTime : str, default is Undefined, optional
        Time of the point-in-time recovery point to restore.
    restoreSourceName : str, default is Undefined, optional
        Name of the table to restore. Must match the name of an existing table.
    restoreSourceTableArn : str, default is Undefined, optional
        ARN of the source table to restore. Must be supplied for cross-region restores.
    restoreToLatestTime : bool, default is Undefined, optional
        If set, restores table to the most recent point-in-time recovery point.
    serverSideEncryption : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderServerSideEncryptionItems0], default is Undefined, optional
        Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS-owned Customer Master Key if this argument isn't specified. See below.
    streamEnabled : bool, default is Undefined, optional
        Whether Streams are enabled.
    streamViewType : str, default is Undefined, optional
        When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
    tableClass : str, default is Undefined, optional
        Storage class of the table.
        Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
        Default value is STANDARD.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    ttl : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderTTLItems0], default is Undefined, optional
        Configuration block for TTL. See below.
    writeCapacity : float, default is Undefined, optional
        Number of write units for this table. If the billing_mode is PROVISIONED, this field is required.
    """


    attribute?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderAttributeItems0]

    billingMode?: str

    deletionProtectionEnabled?: bool

    globalSecondaryIndex?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderGlobalSecondaryIndexItems0]

    hashKey?: str

    importTable?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0]

    localSecondaryIndex?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderLocalSecondaryIndexItems0]

    onDemandThroughput?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderOnDemandThroughputItems0]

    pointInTimeRecovery?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderPointInTimeRecoveryItems0]

    rangeKey?: str

    readCapacity?: float

    region: str

    replica?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderReplicaItems0]

    restoreDateTime?: str

    restoreSourceName?: str

    restoreSourceTableArn?: str

    restoreToLatestTime?: bool

    serverSideEncryption?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderServerSideEncryptionItems0]

    streamEnabled?: bool

    streamViewType?: str

    tableClass?: str

    tags?: {str:str}

    ttl?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderTTLItems0]

    writeCapacity?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderAttributeItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider attribute items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the attribute
    $type : str, default is Undefined, optional
        Attribute type. Valid values are S (string), N (number), B (binary).
    """


    name?: str

    $type?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderGlobalSecondaryIndexItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider global secondary index items0

    Attributes
    ----------
    hashKey : str, default is Undefined, optional
        Name of the hash key in the index; must be defined as an attribute in the resource.
    name : str, default is Undefined, optional
        Name of the index.
    nonKeyAttributes : [str], default is Undefined, optional
        Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
    onDemandThroughput : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0], default is Undefined, optional
        Sets the maximum number of read and write units for the specified on-demand table. See below.
    projectionType : str, default is Undefined, optional
        One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.
    rangeKey : str, default is Undefined, optional
        Name of the range key; must be defined
    readCapacity : float, default is Undefined, optional
        Number of read units for this index. Must be set if billing_mode is set to PROVISIONED.
    writeCapacity : float, default is Undefined, optional
        Number of write units for this index. Must be set if billing_mode is set to PROVISIONED.
    """


    hashKey?: str

    name?: str

    nonKeyAttributes?: [str]

    onDemandThroughput?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0]

    projectionType?: str

    rangeKey?: str

    readCapacity?: float

    writeCapacity?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider global secondary index items0 on demand throughput items0

    Attributes
    ----------
    maxReadRequestUnits : float, default is Undefined, optional
        Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    maxWriteRequestUnits : float, default is Undefined, optional
        Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    """


    maxReadRequestUnits?: float

    maxWriteRequestUnits?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider import table items0

    Attributes
    ----------
    inputCompressionType : str, default is Undefined, optional
        Type of compression to be used on the input coming from the imported table.
        Valid values are GZIP, ZSTD and NONE.
    inputFormat : str, default is Undefined, optional
        The format of the source data.
        Valid values are CSV, DYNAMODB_JSON, and ION.
    inputFormatOptions : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0InputFormatOptionsItems0], default is Undefined, optional
        Describe the format options for the data that was imported into the target table.
        There is one value, csv.
        See below.
    s3BucketSource : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0S3BucketSourceItems0], default is Undefined, optional
        Values for the S3 bucket the source file is imported from.
        See below.
    """


    inputCompressionType?: str

    inputFormat?: str

    inputFormatOptions?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0InputFormatOptionsItems0]

    s3BucketSource?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0S3BucketSourceItems0]


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0InputFormatOptionsItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider import table items0 input format options items0

    Attributes
    ----------
    csv : [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0InputFormatOptionsItems0CsvItems0], default is Undefined, optional
        This block contains the processing options for the CSV file being imported:
    """


    csv?: [DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0InputFormatOptionsItems0CsvItems0]


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0InputFormatOptionsItems0CsvItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider import table items0 input format options items0 csv items0

    Attributes
    ----------
    delimiter : str, default is Undefined, optional
        The delimiter used for separating items in the CSV file being imported.
    headerList : [str], default is Undefined, optional
        List of the headers used to specify a common header for all source CSV files being imported.
    """


    delimiter?: str

    headerList?: [str]


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderImportTableItems0S3BucketSourceItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider import table items0 s3 bucket source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The S3 bucket that is being imported from.
    bucketOwner : str, default is Undefined, optional
        The account number of the S3 bucket that is being imported from.
    keyPrefix : str, default is Undefined, optional
        The key prefix shared by all S3 Objects that are being imported.
    """


    bucket?: str

    bucketOwner?: str

    keyPrefix?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderLocalSecondaryIndexItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider local secondary index items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the index
    nonKeyAttributes : [str], default is Undefined, optional
        Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
    projectionType : str, default is Undefined, optional
        One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.
    rangeKey : str, default is Undefined, optional
        Name of the range key.
    """


    name?: str

    nonKeyAttributes?: [str]

    projectionType?: str

    rangeKey?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderOnDemandThroughputItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider on demand throughput items0

    Attributes
    ----------
    maxReadRequestUnits : float, default is Undefined, optional
        Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    maxWriteRequestUnits : float, default is Undefined, optional
        Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    """


    maxReadRequestUnits?: float

    maxWriteRequestUnits?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderPointInTimeRecoveryItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider point in time recovery items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the point_in_time_recovery block is not provided, this defaults to false.
    """


    enabled?: bool


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderReplicaItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider replica items0

    Attributes
    ----------
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    pointInTimeRecovery : bool, default is Undefined, optional
        Whether to enable Point In Time Recovery for the replica. Default is false.
    propagateTags : bool, default is Undefined, optional
        Whether to propagate the global table's tags to a replica. Default is false. Changes to tags only move in one direction: from global (source) to replica. In other words, tag drift on a replica will not trigger an update. Tag or replica changes on the global table, whether from drift or configuration changes, are propagated to replicas. Changing from true to false on a subsequent apply means replica tags are left as they were, unmanaged, not deleted.
    regionName : str, default is Undefined, optional
        Region name of the replica.
    """


    kmsKeyArn?: str

    pointInTimeRecovery?: bool

    propagateTags?: bool

    regionName?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderServerSideEncryptionItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider server side encryption items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK). If enabled is false then server-side encryption is set to AWS-owned key (shown as DEFAULT in the AWS console). Potentially confusingly, if enabled is true and no kms_key_arn is specified then server-side encryption is set to the default KMS-managed key (shown as KMS in the AWS console). The AWS KMS documentation explains the difference between AWS-owned and KMS-managed keys.
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    """


    enabled?: bool

    kmsKeyArn?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecForProviderTTLItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec for provider TTL items0

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        Name of the table attribute to store the TTL timestamp in.
    enabled : bool, default is Undefined, optional
        Whether TTL is enabled.
    """


    attributeName?: str

    enabled?: bool


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    attribute : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderAttributeItems0], default is Undefined, optional
        Set of nested attribute definitions. Only required for hash_key and range_key attributes. See below.
    billingMode : str, default is Undefined, optional
        Controls how you are charged for read and write throughput and how you manage capacity. The valid values are PROVISIONED and PAY_PER_REQUEST. Defaults to PROVISIONED.
    deletionProtectionEnabled : bool, default is Undefined, optional
        Enables deletion protection for table. Defaults to false.
    globalSecondaryIndex : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderGlobalSecondaryIndexItems0], default is Undefined, optional
        Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc. See below.
    hashKey : str, default is Undefined, optional
        Attribute to use as the hash (partition) key. Must also be defined as an attribute. See below.
    importTable : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0], default is Undefined, optional
        Import Amazon S3 data into a new table. See below.
    localSecondaryIndex : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderLocalSecondaryIndexItems0], default is Undefined, optional
        Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource. See below.
    onDemandThroughput : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderOnDemandThroughputItems0], default is Undefined, optional
        Sets the maximum number of read and write units for the specified on-demand table. See below.
    pointInTimeRecovery : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderPointInTimeRecoveryItems0], default is Undefined, optional
        Enable point-in-time recovery options. See below.
    rangeKey : str, default is Undefined, optional
        Attribute to use as the range (sort) key. Must also be defined as an attribute, see below.
    readCapacity : float, default is Undefined, optional
        Number of read units for this table. If the billing_mode is PROVISIONED, this field is required.
    replica : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderReplicaItems0], default is Undefined, optional
        Configuration block(s) with DynamoDB Global Tables V2 (version 2019.11.21) replication configurations. See below.
    restoreDateTime : str, default is Undefined, optional
        Time of the point-in-time recovery point to restore.
    restoreSourceName : str, default is Undefined, optional
        Name of the table to restore. Must match the name of an existing table.
    restoreSourceTableArn : str, default is Undefined, optional
        ARN of the source table to restore. Must be supplied for cross-region restores.
    restoreToLatestTime : bool, default is Undefined, optional
        If set, restores table to the most recent point-in-time recovery point.
    serverSideEncryption : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderServerSideEncryptionItems0], default is Undefined, optional
        Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS-owned Customer Master Key if this argument isn't specified. See below.
    streamEnabled : bool, default is Undefined, optional
        Whether Streams are enabled.
    streamViewType : str, default is Undefined, optional
        When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
    tableClass : str, default is Undefined, optional
        Storage class of the table.
        Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
        Default value is STANDARD.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    ttl : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderTTLItems0], default is Undefined, optional
        Configuration block for TTL. See below.
    writeCapacity : float, default is Undefined, optional
        Number of write units for this table. If the billing_mode is PROVISIONED, this field is required.
    """


    attribute?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderAttributeItems0]

    billingMode?: str

    deletionProtectionEnabled?: bool

    globalSecondaryIndex?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderGlobalSecondaryIndexItems0]

    hashKey?: str

    importTable?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0]

    localSecondaryIndex?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderLocalSecondaryIndexItems0]

    onDemandThroughput?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderOnDemandThroughputItems0]

    pointInTimeRecovery?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderPointInTimeRecoveryItems0]

    rangeKey?: str

    readCapacity?: float

    replica?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderReplicaItems0]

    restoreDateTime?: str

    restoreSourceName?: str

    restoreSourceTableArn?: str

    restoreToLatestTime?: bool

    serverSideEncryption?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderServerSideEncryptionItems0]

    streamEnabled?: bool

    streamViewType?: str

    tableClass?: str

    tags?: {str:str}

    ttl?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderTTLItems0]

    writeCapacity?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderAttributeItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider attribute items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the attribute
    $type : str, default is Undefined, optional
        Attribute type. Valid values are S (string), N (number), B (binary).
    """


    name?: str

    $type?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderGlobalSecondaryIndexItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider global secondary index items0

    Attributes
    ----------
    hashKey : str, default is Undefined, optional
        Name of the hash key in the index; must be defined as an attribute in the resource.
    name : str, default is Undefined, optional
        Name of the index.
    nonKeyAttributes : [str], default is Undefined, optional
        Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
    onDemandThroughput : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0], default is Undefined, optional
        Sets the maximum number of read and write units for the specified on-demand table. See below.
    projectionType : str, default is Undefined, optional
        One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.
    rangeKey : str, default is Undefined, optional
        Name of the range key; must be defined
    readCapacity : float, default is Undefined, optional
        Number of read units for this index. Must be set if billing_mode is set to PROVISIONED.
    writeCapacity : float, default is Undefined, optional
        Number of write units for this index. Must be set if billing_mode is set to PROVISIONED.
    """


    hashKey?: str

    name?: str

    nonKeyAttributes?: [str]

    onDemandThroughput?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0]

    projectionType?: str

    rangeKey?: str

    readCapacity?: float

    writeCapacity?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider global secondary index items0 on demand throughput items0

    Attributes
    ----------
    maxReadRequestUnits : float, default is Undefined, optional
        Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    maxWriteRequestUnits : float, default is Undefined, optional
        Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    """


    maxReadRequestUnits?: float

    maxWriteRequestUnits?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider import table items0

    Attributes
    ----------
    inputCompressionType : str, default is Undefined, optional
        Type of compression to be used on the input coming from the imported table.
        Valid values are GZIP, ZSTD and NONE.
    inputFormat : str, default is Undefined, optional
        The format of the source data.
        Valid values are CSV, DYNAMODB_JSON, and ION.
    inputFormatOptions : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0InputFormatOptionsItems0], default is Undefined, optional
        Describe the format options for the data that was imported into the target table.
        There is one value, csv.
        See below.
    s3BucketSource : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0S3BucketSourceItems0], default is Undefined, optional
        Values for the S3 bucket the source file is imported from.
        See below.
    """


    inputCompressionType?: str

    inputFormat?: str

    inputFormatOptions?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0InputFormatOptionsItems0]

    s3BucketSource?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0S3BucketSourceItems0]


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0InputFormatOptionsItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider import table items0 input format options items0

    Attributes
    ----------
    csv : [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0InputFormatOptionsItems0CsvItems0], default is Undefined, optional
        This block contains the processing options for the CSV file being imported:
    """


    csv?: [DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0InputFormatOptionsItems0CsvItems0]


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0InputFormatOptionsItems0CsvItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider import table items0 input format options items0 csv items0

    Attributes
    ----------
    delimiter : str, default is Undefined, optional
        The delimiter used for separating items in the CSV file being imported.
    headerList : [str], default is Undefined, optional
        List of the headers used to specify a common header for all source CSV files being imported.
    """


    delimiter?: str

    headerList?: [str]


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderImportTableItems0S3BucketSourceItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider import table items0 s3 bucket source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The S3 bucket that is being imported from.
    bucketOwner : str, default is Undefined, optional
        The account number of the S3 bucket that is being imported from.
    keyPrefix : str, default is Undefined, optional
        The key prefix shared by all S3 Objects that are being imported.
    """


    bucket?: str

    bucketOwner?: str

    keyPrefix?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderLocalSecondaryIndexItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider local secondary index items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the index
    nonKeyAttributes : [str], default is Undefined, optional
        Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
    projectionType : str, default is Undefined, optional
        One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.
    rangeKey : str, default is Undefined, optional
        Name of the range key.
    """


    name?: str

    nonKeyAttributes?: [str]

    projectionType?: str

    rangeKey?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderOnDemandThroughputItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider on demand throughput items0

    Attributes
    ----------
    maxReadRequestUnits : float, default is Undefined, optional
        Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    maxWriteRequestUnits : float, default is Undefined, optional
        Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    """


    maxReadRequestUnits?: float

    maxWriteRequestUnits?: float


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderPointInTimeRecoveryItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider point in time recovery items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the point_in_time_recovery block is not provided, this defaults to false.
    """


    enabled?: bool


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderReplicaItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider replica items0

    Attributes
    ----------
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    pointInTimeRecovery : bool, default is Undefined, optional
        Whether to enable Point In Time Recovery for the replica. Default is false.
    propagateTags : bool, default is Undefined, optional
        Whether to propagate the global table's tags to a replica. Default is false. Changes to tags only move in one direction: from global (source) to replica. In other words, tag drift on a replica will not trigger an update. Tag or replica changes on the global table, whether from drift or configuration changes, are propagated to replicas. Changing from true to false on a subsequent apply means replica tags are left as they were, unmanaged, not deleted.
    regionName : str, default is Undefined, optional
        Region name of the replica.
    """


    kmsKeyArn?: str

    pointInTimeRecovery?: bool

    propagateTags?: bool

    regionName?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderServerSideEncryptionItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider server side encryption items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK). If enabled is false then server-side encryption is set to AWS-owned key (shown as DEFAULT in the AWS console). Potentially confusingly, if enabled is true and no kms_key_arn is specified then server-side encryption is set to the default KMS-managed key (shown as KMS in the AWS console). The AWS KMS documentation explains the difference between AWS-owned and KMS-managed keys.
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    """


    enabled?: bool

    kmsKeyArn?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecInitProviderTTLItems0:
    r"""
    dynamodb aws upbound io v1beta1 table spec init provider TTL items0

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        Name of the table attribute to store the TTL timestamp in.
    enabled : bool, default is Undefined, optional
        Whether TTL is enabled.
    """


    attributeName?: str

    enabled?: bool


schema DynamodbAwsUpboundIoV1beta1TableSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableSpecProviderConfigRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToConfigRef

    metadata?: DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToMetadata

    name: str


schema DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToConfigRefPolicy


schema DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DynamodbAwsUpboundIoV1beta1TableSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DynamodbAwsUpboundIoV1beta1TableSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DynamodbAwsUpboundIoV1beta1TableStatus:
    r"""
    TableStatus defines the observed state of Table.

    Attributes
    ----------
    atProvider : DynamodbAwsUpboundIoV1beta1TableStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DynamodbAwsUpboundIoV1beta1TableStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DynamodbAwsUpboundIoV1beta1TableStatusAtProvider

    conditions?: [DynamodbAwsUpboundIoV1beta1TableStatusConditionsItems0]

    observedGeneration?: int


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProvider:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the table
    attribute : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderAttributeItems0], default is Undefined, optional
        Set of nested attribute definitions. Only required for hash_key and range_key attributes. See below.
    billingMode : str, default is Undefined, optional
        Controls how you are charged for read and write throughput and how you manage capacity. The valid values are PROVISIONED and PAY_PER_REQUEST. Defaults to PROVISIONED.
    deletionProtectionEnabled : bool, default is Undefined, optional
        Enables deletion protection for table. Defaults to false.
    globalSecondaryIndex : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderGlobalSecondaryIndexItems0], default is Undefined, optional
        Describe a GSI for the table; subject to the normal limits on the number of GSIs, projected attributes, etc. See below.
    hashKey : str, default is Undefined, optional
        Attribute to use as the hash (partition) key. Must also be defined as an attribute. See below.
    id : str, default is Undefined, optional
        Name of the table
    importTable : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0], default is Undefined, optional
        Import Amazon S3 data into a new table. See below.
    localSecondaryIndex : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderLocalSecondaryIndexItems0], default is Undefined, optional
        Describe an LSI on the table; these can only be allocated at creation so you cannot change this definition after you have created the resource. See below.
    onDemandThroughput : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderOnDemandThroughputItems0], default is Undefined, optional
        Sets the maximum number of read and write units for the specified on-demand table. See below.
    pointInTimeRecovery : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderPointInTimeRecoveryItems0], default is Undefined, optional
        Enable point-in-time recovery options. See below.
    rangeKey : str, default is Undefined, optional
        Attribute to use as the range (sort) key. Must also be defined as an attribute, see below.
    readCapacity : float, default is Undefined, optional
        Number of read units for this table. If the billing_mode is PROVISIONED, this field is required.
    replica : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderReplicaItems0], default is Undefined, optional
        Configuration block(s) with DynamoDB Global Tables V2 (version 2019.11.21) replication configurations. See below.
    restoreDateTime : str, default is Undefined, optional
        Time of the point-in-time recovery point to restore.
    restoreSourceName : str, default is Undefined, optional
        Name of the table to restore. Must match the name of an existing table.
    restoreSourceTableArn : str, default is Undefined, optional
        ARN of the source table to restore. Must be supplied for cross-region restores.
    restoreToLatestTime : bool, default is Undefined, optional
        If set, restores table to the most recent point-in-time recovery point.
    serverSideEncryption : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderServerSideEncryptionItems0], default is Undefined, optional
        Encryption at rest options. AWS DynamoDB tables are automatically encrypted at rest with an AWS-owned Customer Master Key if this argument isn't specified. See below.
    streamArn : str, default is Undefined, optional
        ARN of the Table Stream. Only available when stream_enabled = true
    streamEnabled : bool, default is Undefined, optional
        Whether Streams are enabled.
    streamLabel : str, default is Undefined, optional
        Timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not a unique identifier for the stream on its own. However, the combination of AWS customer ID, table name and this field is guaranteed to be unique. It can be used for creating CloudWatch Alarms. Only available when stream_enabled = true.
    streamViewType : str, default is Undefined, optional
        When an item in the table is modified, StreamViewType determines what information is written to the table's stream. Valid values are KEYS_ONLY, NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGES.
    tableClass : str, default is Undefined, optional
        Storage class of the table.
        Valid values are STANDARD and STANDARD_INFREQUENT_ACCESS.
        Default value is STANDARD.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    ttl : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderTTLItems0], default is Undefined, optional
        Configuration block for TTL. See below.
    writeCapacity : float, default is Undefined, optional
        Number of write units for this table. If the billing_mode is PROVISIONED, this field is required.
    """


    arn?: str

    attribute?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderAttributeItems0]

    billingMode?: str

    deletionProtectionEnabled?: bool

    globalSecondaryIndex?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderGlobalSecondaryIndexItems0]

    hashKey?: str

    id?: str

    importTable?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0]

    localSecondaryIndex?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderLocalSecondaryIndexItems0]

    onDemandThroughput?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderOnDemandThroughputItems0]

    pointInTimeRecovery?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderPointInTimeRecoveryItems0]

    rangeKey?: str

    readCapacity?: float

    replica?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderReplicaItems0]

    restoreDateTime?: str

    restoreSourceName?: str

    restoreSourceTableArn?: str

    restoreToLatestTime?: bool

    serverSideEncryption?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderServerSideEncryptionItems0]

    streamArn?: str

    streamEnabled?: bool

    streamLabel?: str

    streamViewType?: str

    tableClass?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    ttl?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderTTLItems0]

    writeCapacity?: float


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderAttributeItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider attribute items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the attribute
    $type : str, default is Undefined, optional
        Attribute type. Valid values are S (string), N (number), B (binary).
    """


    name?: str

    $type?: str


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderGlobalSecondaryIndexItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider global secondary index items0

    Attributes
    ----------
    hashKey : str, default is Undefined, optional
        Name of the hash key in the index; must be defined as an attribute in the resource.
    name : str, default is Undefined, optional
        Name of the index.
    nonKeyAttributes : [str], default is Undefined, optional
        Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
    onDemandThroughput : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0], default is Undefined, optional
        Sets the maximum number of read and write units for the specified on-demand table. See below.
    projectionType : str, default is Undefined, optional
        One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.
    rangeKey : str, default is Undefined, optional
        Name of the range key; must be defined
    readCapacity : float, default is Undefined, optional
        Number of read units for this index. Must be set if billing_mode is set to PROVISIONED.
    writeCapacity : float, default is Undefined, optional
        Number of write units for this index. Must be set if billing_mode is set to PROVISIONED.
    """


    hashKey?: str

    name?: str

    nonKeyAttributes?: [str]

    onDemandThroughput?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0]

    projectionType?: str

    rangeKey?: str

    readCapacity?: float

    writeCapacity?: float


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderGlobalSecondaryIndexItems0OnDemandThroughputItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider global secondary index items0 on demand throughput items0

    Attributes
    ----------
    maxReadRequestUnits : float, default is Undefined, optional
        Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    maxWriteRequestUnits : float, default is Undefined, optional
        Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    """


    maxReadRequestUnits?: float

    maxWriteRequestUnits?: float


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider import table items0

    Attributes
    ----------
    inputCompressionType : str, default is Undefined, optional
        Type of compression to be used on the input coming from the imported table.
        Valid values are GZIP, ZSTD and NONE.
    inputFormat : str, default is Undefined, optional
        The format of the source data.
        Valid values are CSV, DYNAMODB_JSON, and ION.
    inputFormatOptions : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0InputFormatOptionsItems0], default is Undefined, optional
        Describe the format options for the data that was imported into the target table.
        There is one value, csv.
        See below.
    s3BucketSource : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0S3BucketSourceItems0], default is Undefined, optional
        Values for the S3 bucket the source file is imported from.
        See below.
    """


    inputCompressionType?: str

    inputFormat?: str

    inputFormatOptions?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0InputFormatOptionsItems0]

    s3BucketSource?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0S3BucketSourceItems0]


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0InputFormatOptionsItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider import table items0 input format options items0

    Attributes
    ----------
    csv : [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0InputFormatOptionsItems0CsvItems0], default is Undefined, optional
        This block contains the processing options for the CSV file being imported:
    """


    csv?: [DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0InputFormatOptionsItems0CsvItems0]


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0InputFormatOptionsItems0CsvItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider import table items0 input format options items0 csv items0

    Attributes
    ----------
    delimiter : str, default is Undefined, optional
        The delimiter used for separating items in the CSV file being imported.
    headerList : [str], default is Undefined, optional
        List of the headers used to specify a common header for all source CSV files being imported.
    """


    delimiter?: str

    headerList?: [str]


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderImportTableItems0S3BucketSourceItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider import table items0 s3 bucket source items0

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        The S3 bucket that is being imported from.
    bucketOwner : str, default is Undefined, optional
        The account number of the S3 bucket that is being imported from.
    keyPrefix : str, default is Undefined, optional
        The key prefix shared by all S3 Objects that are being imported.
    """


    bucket?: str

    bucketOwner?: str

    keyPrefix?: str


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderLocalSecondaryIndexItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider local secondary index items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the index
    nonKeyAttributes : [str], default is Undefined, optional
        Only required with INCLUDE as a projection type; a list of attributes to project into the index. These do not need to be defined as attributes on the table.
    projectionType : str, default is Undefined, optional
        One of ALL, INCLUDE or KEYS_ONLY where ALL projects every attribute into the index, KEYS_ONLY projects  into the index only the table and index hash_key and sort_key attributes ,  INCLUDE projects into the index all of the attributes that are defined in non_key_attributes in addition to the attributes that thatKEYS_ONLY project.
    rangeKey : str, default is Undefined, optional
        Name of the range key.
    """


    name?: str

    nonKeyAttributes?: [str]

    projectionType?: str

    rangeKey?: str


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderOnDemandThroughputItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider on demand throughput items0

    Attributes
    ----------
    maxReadRequestUnits : float, default is Undefined, optional
        Maximum number of read request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    maxWriteRequestUnits : float, default is Undefined, optional
        Maximum number of write request units for the specified table. To specify set the value greater than or equal to 1. To remove set the value to -1.
    """


    maxReadRequestUnits?: float

    maxWriteRequestUnits?: float


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderPointInTimeRecoveryItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider point in time recovery items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether to enable point-in-time recovery. It can take 10 minutes to enable for new tables. If the point_in_time_recovery block is not provided, this defaults to false.
    """


    enabled?: bool


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderReplicaItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider replica items0

    Attributes
    ----------
    arn : str, default is Undefined, optional
        ARN of the replica
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    pointInTimeRecovery : bool, default is Undefined, optional
        Whether to enable Point In Time Recovery for the replica. Default is false.
    propagateTags : bool, default is Undefined, optional
        Whether to propagate the global table's tags to a replica. Default is false. Changes to tags only move in one direction: from global (source) to replica. In other words, tag drift on a replica will not trigger an update. Tag or replica changes on the global table, whether from drift or configuration changes, are propagated to replicas. Changing from true to false on a subsequent apply means replica tags are left as they were, unmanaged, not deleted.
    regionName : str, default is Undefined, optional
        Region name of the replica.
    streamArn : str, default is Undefined, optional
        ARN of the Table Stream. Only available when stream_enabled = true
    streamLabel : str, default is Undefined, optional
        Timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not a unique identifier for the stream on its own. However, the combination of AWS customer ID, table name and this field is guaranteed to be unique. It can be used for creating CloudWatch Alarms. Only available when stream_enabled = true.
    """


    arn?: str

    kmsKeyArn?: str

    pointInTimeRecovery?: bool

    propagateTags?: bool

    regionName?: str

    streamArn?: str

    streamLabel?: str


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderServerSideEncryptionItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider server side encryption items0

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Whether or not to enable encryption at rest using an AWS managed KMS customer master key (CMK). If enabled is false then server-side encryption is set to AWS-owned key (shown as DEFAULT in the AWS console). Potentially confusingly, if enabled is true and no kms_key_arn is specified then server-side encryption is set to the default KMS-managed key (shown as KMS in the AWS console). The AWS KMS documentation explains the difference between AWS-owned and KMS-managed keys.
    kmsKeyArn : str, default is Undefined, optional
        ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, alias/aws/dynamodb. Note: This attribute will not be populated with the ARN of default keys.
    """


    enabled?: bool

    kmsKeyArn?: str


schema DynamodbAwsUpboundIoV1beta1TableStatusAtProviderTTLItems0:
    r"""
    dynamodb aws upbound io v1beta1 table status at provider TTL items0

    Attributes
    ----------
    attributeName : str, default is Undefined, optional
        Name of the table attribute to store the TTL timestamp in.
    enabled : bool, default is Undefined, optional
        Whether TTL is enabled.
    """


    attributeName?: str

    enabled?: bool


schema DynamodbAwsUpboundIoV1beta1TableStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


