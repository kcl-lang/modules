"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Cluster:
    r"""
    Cluster is the Schema for the Clusters API. Provides a MemoryDB Cluster.

    Attributes
    ----------
    apiVersion : str, default is "memorydb.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Cluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MemorydbAwsUpboundIoV1beta1ClusterSpec, default is Undefined, required
        spec
    status : MemorydbAwsUpboundIoV1beta1ClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "memorydb.aws.upbound.io/v1beta1" = "memorydb.aws.upbound.io/v1beta1"

    kind: "Cluster" = "Cluster"

    metadata?: v1.ObjectMeta

    spec: MemorydbAwsUpboundIoV1beta1ClusterSpec

    status?: MemorydbAwsUpboundIoV1beta1ClusterStatus


schema MemorydbAwsUpboundIoV1beta1ClusterSpec:
    r"""
    ClusterSpec defines the desired state of Cluster

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : MemorydbAwsUpboundIoV1beta1ClusterSpecForProvider, default is Undefined, required
        for provider
    initProvider : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : MemorydbAwsUpboundIoV1beta1ClusterSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : MemorydbAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: MemorydbAwsUpboundIoV1beta1ClusterSpecForProvider

    initProvider?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecProviderConfigRef

    publishConnectionDetailsTo?: MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProvider:
    r"""
    memorydb aws upbound io v1beta1 cluster spec for provider

    Attributes
    ----------
    aclName : str, default is Undefined, optional
        The name of the Access Control List to associate with the cluster.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        When set to true, the cluster will automatically receive minor engine version upgrades after launch. Defaults to true.
    dataTiering : bool, default is Undefined, optional
        Enables data tiering. This option is not supported by all instance types. For more information, see Data tiering.
    description : str, default is Undefined, optional
        Description for the cluster.
    engine : str, default is Undefined, optional
        The engine that will run on your nodes. Supported values are redis and valkey.
    engineVersion : str, default is Undefined, optional
        Version number of the engine to be used for the cluster. Downgrades are not supported.
    finalSnapshotName : str, default is Undefined, optional
        Name of the final cluster snapshot to be created when this resource is deleted. If omitted, no final snapshot will be made.
    kmsKeyArn : str, default is Undefined, optional
        ARN of the KMS key used to encrypt the cluster at rest.
    kmsKeyArnRef : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    maintenanceWindow : str, default is Undefined, optional
        Specifies the weekly time range during which maintenance on the cluster is performed. Specify as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:23:00-mon:01:30.
    multiRegionClusterName : str, default is Undefined, optional
        The multi region cluster identifier specified on aws_memorydb_multi_region_cluster.
    nodeType : str, default is Undefined, optional
        The compute and memory capacity of the nodes in the cluster. See AWS documentation on supported node types as well as vertical scaling.
    numReplicasPerShard : float, default is Undefined, optional
        The number of replicas to apply to each shard, up to a maximum of 5. Defaults to 1 (i.e. 2 nodes per shard).
    numShards : float, default is Undefined, optional
        The number of shards in the cluster. Defaults to 1.
    parameterGroupName : str, default is Undefined, optional
        The name of the parameter group associated with the cluster.
    port : float, default is Undefined, optional
        The port number on which each of the nodes accepts connections. Defaults to 6379.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    securityGroupIdRefs : [MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        Set of VPC Security Group ID-s to associate with this cluster.
    snapshotArns : [str], default is Undefined, optional
        List of ARN-s that uniquely identify RDB snapshot files stored in S3. The snapshot files will be used to populate the new cluster. Object names in the ARN-s cannot contain any commas.
    snapshotName : str, default is Undefined, optional
        The name of a snapshot from which to restore data into the new cluster.
    snapshotRetentionLimit : float, default is Undefined, optional
        The number of days for which MemoryDB retains automatic snapshots before deleting them. When set to 0, automatic backups are disabled. Defaults to 0.
    snapshotWindow : str, default is Undefined, optional
        The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00.
    snsTopicArn : str, default is Undefined, optional
        ARN of the SNS topic to which cluster notifications are sent.
    subnetGroupName : str, default is Undefined, optional
        The name of the subnet group to be used for the cluster. Defaults to a subnet group consisting of default VPC subnets.
    subnetGroupNameRef : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tlsEnabled : bool, default is Undefined, optional
        A flag to enable in-transit encryption on the cluster. When set to false, the acl_name must be open-access. Defaults to true.
    """


    aclName?: str

    autoMinorVersionUpgrade?: bool

    dataTiering?: bool

    description?: str

    engine?: str

    engineVersion?: str

    finalSnapshotName?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnRef

    kmsKeyArnSelector?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnSelector

    maintenanceWindow?: str

    multiRegionClusterName?: str

    nodeType?: str

    numReplicasPerShard?: float

    numShards?: float

    parameterGroupName?: str

    port?: float

    region: str

    securityGroupIdRefs?: [MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    snsTopicArn?: str

    subnetGroupName?: str

    subnetGroupNameRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRef

    subnetGroupNameSelector?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelector

    tags?: {str:str}

    tlsEnabled?: bool


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnRefPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnSelectorPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0Policy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelectorPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in memorydb to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRefPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in memorydb to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelectorPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecForProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    aclName : str, default is Undefined, optional
        The name of the Access Control List to associate with the cluster.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        When set to true, the cluster will automatically receive minor engine version upgrades after launch. Defaults to true.
    dataTiering : bool, default is Undefined, optional
        Enables data tiering. This option is not supported by all instance types. For more information, see Data tiering.
    description : str, default is Undefined, optional
        Description for the cluster.
    engine : str, default is Undefined, optional
        The engine that will run on your nodes. Supported values are redis and valkey.
    engineVersion : str, default is Undefined, optional
        Version number of the engine to be used for the cluster. Downgrades are not supported.
    finalSnapshotName : str, default is Undefined, optional
        Name of the final cluster snapshot to be created when this resource is deleted. If omitted, no final snapshot will be made.
    kmsKeyArn : str, default is Undefined, optional
        ARN of the KMS key used to encrypt the cluster at rest.
    kmsKeyArnRef : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnRef, default is Undefined, optional
        kms key arn ref
    kmsKeyArnSelector : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnSelector, default is Undefined, optional
        kms key arn selector
    maintenanceWindow : str, default is Undefined, optional
        Specifies the weekly time range during which maintenance on the cluster is performed. Specify as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:23:00-mon:01:30.
    multiRegionClusterName : str, default is Undefined, optional
        The multi region cluster identifier specified on aws_memorydb_multi_region_cluster.
    nodeType : str, default is Undefined, optional
        The compute and memory capacity of the nodes in the cluster. See AWS documentation on supported node types as well as vertical scaling.
    numReplicasPerShard : float, default is Undefined, optional
        The number of replicas to apply to each shard, up to a maximum of 5. Defaults to 1 (i.e. 2 nodes per shard).
    numShards : float, default is Undefined, optional
        The number of shards in the cluster. Defaults to 1.
    parameterGroupName : str, default is Undefined, optional
        The name of the parameter group associated with the cluster.
    port : float, default is Undefined, optional
        The port number on which each of the nodes accepts connections. Defaults to 6379.
    securityGroupIdRefs : [MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate securityGroupIds.
    securityGroupIdSelector : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelector, default is Undefined, optional
        security group Id selector
    securityGroupIds : [str], default is Undefined, optional
        Set of VPC Security Group ID-s to associate with this cluster.
    snapshotArns : [str], default is Undefined, optional
        List of ARN-s that uniquely identify RDB snapshot files stored in S3. The snapshot files will be used to populate the new cluster. Object names in the ARN-s cannot contain any commas.
    snapshotName : str, default is Undefined, optional
        The name of a snapshot from which to restore data into the new cluster.
    snapshotRetentionLimit : float, default is Undefined, optional
        The number of days for which MemoryDB retains automatic snapshots before deleting them. When set to 0, automatic backups are disabled. Defaults to 0.
    snapshotWindow : str, default is Undefined, optional
        The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00.
    snsTopicArn : str, default is Undefined, optional
        ARN of the SNS topic to which cluster notifications are sent.
    subnetGroupName : str, default is Undefined, optional
        The name of the subnet group to be used for the cluster. Defaults to a subnet group consisting of default VPC subnets.
    subnetGroupNameRef : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRef, default is Undefined, optional
        subnet group name ref
    subnetGroupNameSelector : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelector, default is Undefined, optional
        subnet group name selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tlsEnabled : bool, default is Undefined, optional
        A flag to enable in-transit encryption on the cluster. When set to false, the acl_name must be open-access. Defaults to true.
    """


    aclName?: str

    autoMinorVersionUpgrade?: bool

    dataTiering?: bool

    description?: str

    engine?: str

    engineVersion?: str

    finalSnapshotName?: str

    kmsKeyArn?: str

    kmsKeyArnRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnRef

    kmsKeyArnSelector?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnSelector

    maintenanceWindow?: str

    multiRegionClusterName?: str

    nodeType?: str

    numReplicasPerShard?: float

    numShards?: float

    parameterGroupName?: str

    port?: float

    securityGroupIdRefs?: [MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0]

    securityGroupIdSelector?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelector

    securityGroupIds?: [str]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    snsTopicArn?: str

    subnetGroupName?: str

    subnetGroupNameRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRef

    subnetGroupNameSelector?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelector

    tags?: {str:str}

    tlsEnabled?: bool


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnRef:
    r"""
    Reference to a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnRefPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnSelectorPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderKmsKeyArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelectorPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in memorydb to populate subnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRefPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in memorydb to populate subnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelectorPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecInitProviderSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef

    metadata?: MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata

    name: str


schema MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy


schema MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema MemorydbAwsUpboundIoV1beta1ClusterSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema MemorydbAwsUpboundIoV1beta1ClusterSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema MemorydbAwsUpboundIoV1beta1ClusterStatus:
    r"""
    ClusterStatus defines the observed state of Cluster.

    Attributes
    ----------
    atProvider : MemorydbAwsUpboundIoV1beta1ClusterStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [MemorydbAwsUpboundIoV1beta1ClusterStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: MemorydbAwsUpboundIoV1beta1ClusterStatusAtProvider

    conditions?: [MemorydbAwsUpboundIoV1beta1ClusterStatusConditionsItems0]

    observedGeneration?: int


schema MemorydbAwsUpboundIoV1beta1ClusterStatusAtProvider:
    r"""
    memorydb aws upbound io v1beta1 cluster status at provider

    Attributes
    ----------
    aclName : str, default is Undefined, optional
        The name of the Access Control List to associate with the cluster.
    arn : str, default is Undefined, optional
        The ARN of the cluster.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        When set to true, the cluster will automatically receive minor engine version upgrades after launch. Defaults to true.
    clusterEndpoint : [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderClusterEndpointItems0], default is Undefined, optional
        cluster endpoint
    dataTiering : bool, default is Undefined, optional
        Enables data tiering. This option is not supported by all instance types. For more information, see Data tiering.
    description : str, default is Undefined, optional
        Description for the cluster.
    engine : str, default is Undefined, optional
        The engine that will run on your nodes. Supported values are redis and valkey.
    enginePatchVersion : str, default is Undefined, optional
        Patch version number of the engine used by the cluster.
    engineVersion : str, default is Undefined, optional
        Version number of the engine to be used for the cluster. Downgrades are not supported.
    finalSnapshotName : str, default is Undefined, optional
        Name of the final cluster snapshot to be created when this resource is deleted. If omitted, no final snapshot will be made.
    id : str, default is Undefined, optional
        Same as name.
    kmsKeyArn : str, default is Undefined, optional
        ARN of the KMS key used to encrypt the cluster at rest.
    maintenanceWindow : str, default is Undefined, optional
        Specifies the weekly time range during which maintenance on the cluster is performed. Specify as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: sun:23:00-mon:01:30.
    multiRegionClusterName : str, default is Undefined, optional
        The multi region cluster identifier specified on aws_memorydb_multi_region_cluster.
    nodeType : str, default is Undefined, optional
        The compute and memory capacity of the nodes in the cluster. See AWS documentation on supported node types as well as vertical scaling.
    numReplicasPerShard : float, default is Undefined, optional
        The number of replicas to apply to each shard, up to a maximum of 5. Defaults to 1 (i.e. 2 nodes per shard).
    numShards : float, default is Undefined, optional
        The number of shards in the cluster. Defaults to 1.
    parameterGroupName : str, default is Undefined, optional
        The name of the parameter group associated with the cluster.
    port : float, default is Undefined, optional
        The port number on which each of the nodes accepts connections. Defaults to 6379.
    securityGroupIds : [str], default is Undefined, optional
        Set of VPC Security Group ID-s to associate with this cluster.
    shards : [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0], default is Undefined, optional
        Set of shards in this cluster.
    snapshotArns : [str], default is Undefined, optional
        List of ARN-s that uniquely identify RDB snapshot files stored in S3. The snapshot files will be used to populate the new cluster. Object names in the ARN-s cannot contain any commas.
    snapshotName : str, default is Undefined, optional
        The name of a snapshot from which to restore data into the new cluster.
    snapshotRetentionLimit : float, default is Undefined, optional
        The number of days for which MemoryDB retains automatic snapshots before deleting them. When set to 0, automatic backups are disabled. Defaults to 0.
    snapshotWindow : str, default is Undefined, optional
        The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of your shard. Example: 05:00-09:00.
    snsTopicArn : str, default is Undefined, optional
        ARN of the SNS topic to which cluster notifications are sent.
    subnetGroupName : str, default is Undefined, optional
        The name of the subnet group to be used for the cluster. Defaults to a subnet group consisting of default VPC subnets.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    tlsEnabled : bool, default is Undefined, optional
        A flag to enable in-transit encryption on the cluster. When set to false, the acl_name must be open-access. Defaults to true.
    """


    aclName?: str

    arn?: str

    autoMinorVersionUpgrade?: bool

    clusterEndpoint?: [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderClusterEndpointItems0]

    dataTiering?: bool

    description?: str

    engine?: str

    enginePatchVersion?: str

    engineVersion?: str

    finalSnapshotName?: str

    id?: str

    kmsKeyArn?: str

    maintenanceWindow?: str

    multiRegionClusterName?: str

    nodeType?: str

    numReplicasPerShard?: float

    numShards?: float

    parameterGroupName?: str

    port?: float

    securityGroupIds?: [str]

    shards?: [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0]

    snapshotArns?: [str]

    snapshotName?: str

    snapshotRetentionLimit?: float

    snapshotWindow?: str

    snsTopicArn?: str

    subnetGroupName?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    tlsEnabled?: bool


schema MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderClusterEndpointItems0:
    r"""
    memorydb aws upbound io v1beta1 cluster status at provider cluster endpoint items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        DNS hostname of the cluster configuration endpoint.
    port : float, default is Undefined, optional
        The port number on which each of the nodes accepts connections. Defaults to 6379.
    """


    address?: str

    port?: float


schema MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0:
    r"""
    memorydb aws upbound io v1beta1 cluster status at provider shards items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the cluster. Conflicts with name_prefix.
    nodes : [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0NodesItems0], default is Undefined, optional
        Set of nodes in this shard.
    numNodes : float, default is Undefined, optional
        Number of individual nodes in this shard.
    slots : str, default is Undefined, optional
        Keyspace for this shard. Example: 0-16383.
    """


    name?: str

    nodes?: [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0NodesItems0]

    numNodes?: float

    slots?: str


schema MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0NodesItems0:
    r"""
    memorydb aws upbound io v1beta1 cluster status at provider shards items0 nodes items0

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        The Availability Zone in which the node resides.
    createTime : str, default is Undefined, optional
        The date and time when the node was created. Example: 2022-01-01T21:00:00Z.
    endpoint : [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0NodesItems0EndpointItems0], default is Undefined, optional
        endpoint
    name : str, default is Undefined, optional
        Name of the cluster. Conflicts with name_prefix.
    """


    availabilityZone?: str

    createTime?: str

    endpoint?: [MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0NodesItems0EndpointItems0]

    name?: str


schema MemorydbAwsUpboundIoV1beta1ClusterStatusAtProviderShardsItems0NodesItems0EndpointItems0:
    r"""
    memorydb aws upbound io v1beta1 cluster status at provider shards items0 nodes items0 endpoint items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        DNS hostname of the cluster configuration endpoint.
    port : float, default is Undefined, optional
        The port number on which each of the nodes accepts connections. Defaults to 6379.
    """


    address?: str

    port?: float


schema MemorydbAwsUpboundIoV1beta1ClusterStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


