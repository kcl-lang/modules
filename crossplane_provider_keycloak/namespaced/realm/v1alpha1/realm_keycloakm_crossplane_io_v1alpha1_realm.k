"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Realm:
    r"""
    Realm is the Schema for the Realms API.

    Attributes
    ----------
    apiVersion : str, default is "realm.keycloak.m.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Realm", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RealmKeycloakmCrossplaneIoV1alpha1RealmSpec, default is Undefined, required
        spec
    status : RealmKeycloakmCrossplaneIoV1alpha1RealmStatus, default is Undefined, optional
        status
    """


    apiVersion: "realm.keycloak.m.crossplane.io/v1alpha1" = "realm.keycloak.m.crossplane.io/v1alpha1"

    kind: "Realm" = "Realm"

    metadata?: v1.ObjectMeta

    spec: RealmKeycloakmCrossplaneIoV1alpha1RealmSpec

    status?: RealmKeycloakmCrossplaneIoV1alpha1RealmStatus


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpec:
    r"""
    RealmSpec defines the desired state of Realm

    Attributes
    ----------
    forProvider : RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProvider, default is Undefined, required
        for provider
    initProvider : RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RealmKeycloakmCrossplaneIoV1alpha1RealmSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    writeConnectionSecretToRef : RealmKeycloakmCrossplaneIoV1alpha1RealmSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    forProvider: RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProvider

    initProvider?: RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RealmKeycloakmCrossplaneIoV1alpha1RealmSpecProviderConfigRef

    writeConnectionSecretToRef?: RealmKeycloakmCrossplaneIoV1alpha1RealmSpecWriteConnectionSecretToRef


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProvider:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider

    Attributes
    ----------
    accessCodeLifespan : str, default is Undefined, optional
        The maximum amount of time a client has to finish the authorization code flow.
    accessCodeLifespanLogin : str, default is Undefined, optional
        The maximum amount of time a user is permitted to stay on the login page before the authentication process must be restarted.
    accessCodeLifespanUserAction : str, default is Undefined, optional
        The maximum amount of time a user has to complete login related actions, such as updating a password.
    accessTokenLifespan : str, default is Undefined, optional
        The amount of time an access token can be used before it expires.
    accessTokenLifespanForImplicitFlow : str, default is Undefined, optional
        The amount of time an access token issued with the OpenID Connect Implicit Flow can be used before it expires.
    accountTheme : str, default is Undefined, optional
        Used for account management pages.
    actionTokenGeneratedByAdminLifespan : str, default is Undefined, optional
        The maximum time a user has to use an admin-generated permit before it expires.
    actionTokenGeneratedByUserLifespan : str, default is Undefined, optional
        The maximum time a user has to use a user-generated permit before it expires.
    adminTheme : str, default is Undefined, optional
        Used for the admin console.
    attributes : {str:str}, default is Undefined, optional
        A map of custom attributes to add to the realm.
    browserFlow : str, default is Undefined, optional
        The desired flow for browser authentication. Defaults to browser.
        Which flow should be used for BrowserFlow
    clientAuthenticationFlow : str, default is Undefined, optional
        The desired flow for client authentication. Defaults to clients.
        Which flow should be used for ClientAuthenticationFlow
    clientSessionIdleTimeout : str, default is Undefined, optional
        The amount of time a session can be idle before it expires. Users can override it for individual clients.
    clientSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before a session expires regardless of activity. Users can override it for individual clients.
    defaultDefaultClientScopes : [str], default is Undefined, optional
        A list of default default client scopes to be used for client definitions. Defaults to [] or keycloak's built-in default default client-scopes. For an alternative, please refer to the dedicated resource keycloak_realm_default_client_scopes.
    defaultOptionalClientScopes : [str], default is Undefined, optional
        A list of default optional client scopes to be used for client definitions. Defaults to [] or keycloak's built-in default optional client-scopes. For an alternative, please refer to the dedicated resource keycloak_realm_optional_client_scopes.
    defaultSignatureAlgorithm : str, default is Undefined, optional
        Default algorithm used to sign tokens for the realm.
    directGrantFlow : str, default is Undefined, optional
        The desired flow for direct access authentication. Defaults to direct grant.
        Which flow should be used for DirectGrantFlow
    displayName : str, default is Undefined, optional
        The display name for the realm that is shown when logging in to the admin console.
    displayNameHtml : str, default is Undefined, optional
        The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
    dockerAuthenticationFlow : str, default is Undefined, optional
        The desired flow for Docker authentication. Defaults to docker auth.
        Which flow should be used for DockerAuthenticationFlow
    duplicateEmailsAllowed : bool, default is Undefined, optional
        When true, multiple users will be allowed to have the same email address. This argument must be set to false if login_with_email_allowed is set to true.
    editUsernameAllowed : bool, default is Undefined, optional
        When true, the username field is editable.
    emailTheme : str, default is Undefined, optional
        Used for emails that are sent by Keycloak.
    enabled : bool, default is Undefined, optional
        When false, users and clients will not be able to access this realm. Defaults to true.
    firstBrokerLoginFlow : str, default is Undefined, optional
        The desired flow for First Broker Login (since Keycloak 24). Defaults to first broker login.
        Which flow should be used for FirstBrokerLoginFlow
    internalId : str, default is Undefined, optional
        When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
    internationalization : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderInternationalizationItems0], default is Undefined, optional
        internationalization
    loginTheme : str, default is Undefined, optional
        Used for the login, forgot password, and registration pages.
    loginWithEmailAllowed : bool, default is Undefined, optional
        When true, users may log in with their email address.
    oauth2DeviceCodeLifespan : str, default is Undefined, optional
        The maximum amount of time a client has to finish the device code flow before it expires.
    oauth2DevicePollingInterval : float, default is Undefined, optional
        The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.
    offlineSessionIdleTimeout : str, default is Undefined, optional
        The amount of time an offline session can be idle before it expires.
    offlineSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before an offline session expires regardless of activity.
    offlineSessionMaxLifespanEnabled : bool, default is Undefined, optional
        Enable offline_session_max_lifespan.
    organizationsEnabled : bool, default is Undefined, optional
        When true, organization support is enabled. Defaults to false.
    otpPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderOtpPolicyItems0], default is Undefined, optional
        otp policy
    passwordPolicy : str, default is Undefined, optional
        The password policy for users within the realm.
        String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365) and notUsername(undefined)"
    realm : str, default is Undefined, optional
        The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
    refreshTokenMaxReuse : float, default is Undefined, optional
        Maximum number of times a refresh token can be reused before they are revoked. If unspecified and 'revoke_refresh_token' is enabled the default value is 0 and refresh tokens can not be reused.
    registrationAllowed : bool, default is Undefined, optional
        When true, user registration will be enabled, and a link for registration will be displayed on the login page.
    registrationEmailAsUsername : bool, default is Undefined, optional
        When true, the user's email will be used as their username during registration.
    registrationFlow : str, default is Undefined, optional
        The desired flow for user registration. Defaults to registration.
        Which flow should be used for RegistrationFlow
    rememberMe : bool, default is Undefined, optional
        When true, a "remember me" checkbox will be displayed on the login page, and the user's session will not expire between browser restarts.
    resetCredentialsFlow : str, default is Undefined, optional
        The desired flow to use when a user attempts to reset their credentials. Defaults to reset credentials.
        Which flow should be used for ResetCredentialsFlow
    resetPasswordAllowed : bool, default is Undefined, optional
        When true, a "forgot password" link will be displayed on the login page.
    revokeRefreshToken : bool, default is Undefined, optional
        If enabled a refresh token can only be used number of times specified in 'refresh_token_max_reuse' before they are revoked. If unspecified, refresh tokens can be reused.
    securityDefenses : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0], default is Undefined, optional
        security defenses
    smtpServer : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0], default is Undefined, optional
        smtp server
    sslRequired : str, default is Undefined, optional
        Can be one of following values: 'none, 'external' or 'all'
        SSL Required: Values can be 'none', 'external' or 'all'.
    ssoSessionIdleTimeout : str, default is Undefined, optional
        The amount of time a session can be idle before it expires.
    ssoSessionIdleTimeoutRememberMe : str, default is Undefined, optional
        Similar to sso_session_idle_timeout, but used when a user clicks "Remember Me". If not set, Keycloak will default to the value of sso_session_idle_timeout.
    ssoSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before a session expires regardless of activity.
    ssoSessionMaxLifespanRememberMe : str, default is Undefined, optional
        Similar to sso_session_max_lifespan, but used when a user clicks "Remember Me". If not set, Keycloak will default to the value of sso_session_max_lifespan.
    userManagedAccess : bool, default is Undefined, optional
        When true, users are allowed to manage their own resources. Defaults to false.
    verifyEmail : bool, default is Undefined, optional
        When true, users are required to verify their email address after registration and after email address changes.
    webAuthnPasswordlessPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderWebAuthnPasswordlessPolicyItems0], default is Undefined, optional
        Configuration for WebAuthn Passwordless Policy authentication.
    webAuthnPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderWebAuthnPolicyItems0], default is Undefined, optional
        Configuration for WebAuthn Policy authentication.
    """


    accessCodeLifespan?: str

    accessCodeLifespanLogin?: str

    accessCodeLifespanUserAction?: str

    accessTokenLifespan?: str

    accessTokenLifespanForImplicitFlow?: str

    accountTheme?: str

    actionTokenGeneratedByAdminLifespan?: str

    actionTokenGeneratedByUserLifespan?: str

    adminTheme?: str

    attributes?: {str:str}

    browserFlow?: str

    clientAuthenticationFlow?: str

    clientSessionIdleTimeout?: str

    clientSessionMaxLifespan?: str

    defaultDefaultClientScopes?: [str]

    defaultOptionalClientScopes?: [str]

    defaultSignatureAlgorithm?: str

    directGrantFlow?: str

    displayName?: str

    displayNameHtml?: str

    dockerAuthenticationFlow?: str

    duplicateEmailsAllowed?: bool

    editUsernameAllowed?: bool

    emailTheme?: str

    enabled?: bool

    firstBrokerLoginFlow?: str

    internalId?: str

    internationalization?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderInternationalizationItems0]

    loginTheme?: str

    loginWithEmailAllowed?: bool

    oauth2DeviceCodeLifespan?: str

    oauth2DevicePollingInterval?: float

    offlineSessionIdleTimeout?: str

    offlineSessionMaxLifespan?: str

    offlineSessionMaxLifespanEnabled?: bool

    organizationsEnabled?: bool

    otpPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderOtpPolicyItems0]

    passwordPolicy?: str

    realm?: str

    refreshTokenMaxReuse?: float

    registrationAllowed?: bool

    registrationEmailAsUsername?: bool

    registrationFlow?: str

    rememberMe?: bool

    resetCredentialsFlow?: str

    resetPasswordAllowed?: bool

    revokeRefreshToken?: bool

    securityDefenses?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0]

    smtpServer?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0]

    sslRequired?: str

    ssoSessionIdleTimeout?: str

    ssoSessionIdleTimeoutRememberMe?: str

    ssoSessionMaxLifespan?: str

    ssoSessionMaxLifespanRememberMe?: str

    userManagedAccess?: bool

    verifyEmail?: bool

    webAuthnPasswordlessPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderWebAuthnPasswordlessPolicyItems0]

    webAuthnPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderWebAuthnPolicyItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderInternationalizationItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider internationalization items0

    Attributes
    ----------
    defaultLocale : str, default is Undefined, optional
        The locale to use by default. This locale code must be present within the supported_locales list.
    supportedLocales : [str], default is Undefined, optional
        A list of ISO 639-1 locale codes that the realm should support.
    """


    defaultLocale?: str

    supportedLocales?: [str]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderOtpPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider otp policy items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        What hashing algorithm should be used to generate the OTP, Valid options are HmacSHA1,HmacSHA256 and HmacSHA512. Defaults to HmacSHA1.
        What hashing algorithm should be used to generate the OTP.
    digits : float, default is Undefined, optional
        How many digits the OTP have. Defaults to 6.
    initialCounter : float, default is Undefined, optional
        What should the initial counter value be. Defaults to 2.
    lookAheadWindow : float, default is Undefined, optional
        How far ahead should the server look just in case the token generator and server are out of time sync or counter sync. Defaults to 1.
    period : float, default is Undefined, optional
        How many seconds should an OTP token be valid. Defaults to 30.
    $type : str, default is Undefined, optional
        One Time Password Type, supported Values are totp for Time-Based One Time Password and hotp for Counter Based. Defaults to totp.
        OTP Type, totp for Time-Based One Time Password or hotp for counter base one time password
    """


    algorithm?: str

    digits?: float

    initialCounter?: float

    lookAheadWindow?: float

    period?: float

    $type?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider SMTP server items0

    Attributes
    ----------
    auth : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0AuthItems0], default is Undefined, optional
        Enables authentication to the SMTP server.  This block supports the following arguments:
    envelopeFrom : str, default is Undefined, optional
        The email address uses for bounces.
    from : str, default is Undefined, optional
        The email address for the sender.
    fromDisplayName : str, default is Undefined, optional
        The display name of the sender email address.
    host : str, default is Undefined, optional
        The host of the SMTP server.
    port : str, default is Undefined, optional
        The port of the SMTP server (defaults to 25).
    replyTo : str, default is Undefined, optional
        The "reply to" email address.
    replyToDisplayName : str, default is Undefined, optional
        The display name of the "reply to" email address.
    ssl : bool, default is Undefined, optional
        When true, enables SSL. Defaults to false.
    starttls : bool, default is Undefined, optional
        When true, enables StartTLS. Defaults to false.
    """


    auth?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0AuthItems0]

    envelopeFrom?: str

    from?: str

    fromDisplayName?: str

    host?: str

    port?: str

    replyTo?: str

    replyToDisplayName?: str

    ssl?: bool

    starttls?: bool


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0AuthItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider SMTP server items0 auth items0

    Attributes
    ----------
    passwordSecretRef : RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0AuthItems0PasswordSecretRef, default is Undefined, optional
        password secret ref
    username : str, default is Undefined, optional
        The SMTP server username.
    """


    passwordSecretRef?: RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0AuthItems0PasswordSecretRef

    username?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSMTPServerItems0AuthItems0PasswordSecretRef:
    r"""
    The SMTP server password.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        Name of the secret.
    """


    key: str

    name: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider security defenses items0

    Attributes
    ----------
    bruteForceDetection : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0BruteForceDetectionItems0], default is Undefined, optional
        brute force detection
    headers : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0HeadersItems0], default is Undefined, optional
        headers
    """


    bruteForceDetection?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0BruteForceDetectionItems0]

    headers?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0HeadersItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0BruteForceDetectionItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider security defenses items0 brute force detection items0

    Attributes
    ----------
    failureResetTimeSeconds : float, default is Undefined, optional
        When will failure count be reset?
    maxFailureWaitSeconds : float, default is Undefined, optional
        max failure wait seconds
    maxLoginFailures : float, default is Undefined, optional
        How many failures before wait is triggered.
    minimumQuickLoginWaitSeconds : float, default is Undefined, optional
        How long to wait after a quick login failure.
    permanentLockout : bool, default is Undefined, optional
        When true, this will lock the user permanently when the user exceeds the maximum login failures.
    quickLoginCheckMilliSeconds : float, default is Undefined, optional
        Configures the amount of time, in milliseconds, for consecutive failures to lock a user out.
    waitIncrementSeconds : float, default is Undefined, optional
        This represents the amount of time a user should be locked out when the login failure threshold has been met.
    """


    failureResetTimeSeconds?: float

    maxFailureWaitSeconds?: float

    maxLoginFailures?: float

    minimumQuickLoginWaitSeconds?: float

    permanentLockout?: bool

    quickLoginCheckMilliSeconds?: float

    waitIncrementSeconds?: float


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderSecurityDefensesItems0HeadersItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider security defenses items0 headers items0

    Attributes
    ----------
    contentSecurityPolicy : str, default is Undefined, optional
        Sets the Content Security Policy, which can be used for prevent pages from being included by non-origin iframes. More information can be found in the W3C-CSP Abstract.
    contentSecurityPolicyReportOnly : str, default is Undefined, optional
        Used for testing Content Security Policies.
    referrerPolicy : str, default is Undefined, optional
        The Referrer-Policy HTTP header controls how much referrer information (sent with the Referer header) should be included with requests.
    strictTransportSecurity : str, default is Undefined, optional
        The Script-Transport-Security HTTP header tells browsers to always use HTTPS.
    xContentTypeOptions : str, default is Undefined, optional
        Sets the X-Content-Type-Options, which can be used for prevent MIME-sniffing a response away from the declared content-type
    xFrameOptions : str, default is Undefined, optional
        Sets the x-frame-option, which can be used to prevent pages from being included by non-origin iframes. More information can be found in the RFC7034
    xRobotsTag : str, default is Undefined, optional
        Prevent pages from appearing in search engines.
    xXssProtection : str, default is Undefined, optional
        This header configures the Cross-site scripting (XSS) filter in your browser.
    """


    contentSecurityPolicy?: str

    contentSecurityPolicyReportOnly?: str

    referrerPolicy?: str

    strictTransportSecurity?: str

    xContentTypeOptions?: str

    xFrameOptions?: str

    xRobotsTag?: str

    xXssProtection?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderWebAuthnPasswordlessPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider web authn passwordless policy items0

    Attributes
    ----------
    acceptableAaguids : [str], default is Undefined, optional
        A set of AAGUIDs for which an authenticator can be registered.
    attestationConveyancePreference : str, default is Undefined, optional
        The preference of how to generate a WebAuthn attestation statement. Valid options are not specified, none, indirect, direct, or enterprise. Defaults to not specified.
        Either none, indirect or direct
    authenticatorAttachment : str, default is Undefined, optional
        The acceptable attachment pattern for the WebAuthn authenticator. Valid options are not specified, platform, or cross-platform. Defaults to not specified.
        Either platform or cross-platform
    avoidSameAuthenticatorRegister : bool, default is Undefined, optional
        When true, Keycloak will avoid registering the authenticator for WebAuthn if it has already been registered. Defaults to false.
    createTimeout : float, default is Undefined, optional
        The timeout value for creating a user's public key credential in seconds. When set to 0, this timeout option is not adapted. Defaults to 0.
    extraOrigins : [str], default is Undefined, optional
        A set of extra origins for non-web applications.
    relyingPartyEntityName : str, default is Undefined, optional
        A human-readable server name for the WebAuthn Relying Party. Defaults to keycloak.
    relyingPartyId : str, default is Undefined, optional
        The WebAuthn relying party ID.
    requireResidentKey : str, default is Undefined, optional
        Specifies whether a public key should be created to represent the resident key. Valid options are not specified, Yes, or No. Defaults to not specified.
        Either Yes or No
    signatureAlgorithms : [str], default is Undefined, optional
        A set of signature algorithms that should be used for the authentication assertion. Valid options at the time these docs were written are ES256, ES384, ES512, RS256, RS384, RS512, and RS1.
        Keycloak lists ES256, ES384, ES512, RS256, RS384, RS512, RS1 at the time of writing
    userVerificationRequirement : str, default is Undefined, optional
        Specifies the policy for verifying a user logging in via WebAuthn. Valid options are not specified, required, preferred, or discouraged. Defaults to not specified.
        Either required, preferred or discouraged
    """


    acceptableAaguids?: [str]

    attestationConveyancePreference?: str

    authenticatorAttachment?: str

    avoidSameAuthenticatorRegister?: bool

    createTimeout?: float

    extraOrigins?: [str]

    relyingPartyEntityName?: str

    relyingPartyId?: str

    requireResidentKey?: str

    signatureAlgorithms?: [str]

    userVerificationRequirement?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecForProviderWebAuthnPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec for provider web authn policy items0

    Attributes
    ----------
    acceptableAaguids : [str], default is Undefined, optional
        A set of AAGUIDs for which an authenticator can be registered.
    attestationConveyancePreference : str, default is Undefined, optional
        The preference of how to generate a WebAuthn attestation statement. Valid options are not specified, none, indirect, direct, or enterprise. Defaults to not specified.
        Either none, indirect or direct
    authenticatorAttachment : str, default is Undefined, optional
        The acceptable attachment pattern for the WebAuthn authenticator. Valid options are not specified, platform, or cross-platform. Defaults to not specified.
        Either platform or cross-platform
    avoidSameAuthenticatorRegister : bool, default is Undefined, optional
        When true, Keycloak will avoid registering the authenticator for WebAuthn if it has already been registered. Defaults to false.
    createTimeout : float, default is Undefined, optional
        The timeout value for creating a user's public key credential in seconds. When set to 0, this timeout option is not adapted. Defaults to 0.
    extraOrigins : [str], default is Undefined, optional
        A set of extra origins for non-web applications.
    relyingPartyEntityName : str, default is Undefined, optional
        A human-readable server name for the WebAuthn Relying Party. Defaults to keycloak.
    relyingPartyId : str, default is Undefined, optional
        The WebAuthn relying party ID.
    requireResidentKey : str, default is Undefined, optional
        Specifies whether a public key should be created to represent the resident key. Valid options are not specified, Yes, or No. Defaults to not specified.
        Either Yes or No
    signatureAlgorithms : [str], default is Undefined, optional
        A set of signature algorithms that should be used for the authentication assertion. Valid options at the time these docs were written are ES256, ES384, ES512, RS256, RS384, RS512, and RS1.
        Keycloak lists ES256, ES384, ES512, RS256, RS384, RS512, RS1 at the time of writing
    userVerificationRequirement : str, default is Undefined, optional
        Specifies the policy for verifying a user logging in via WebAuthn. Valid options are not specified, required, preferred, or discouraged. Defaults to not specified.
        Either required, preferred or discouraged
    """


    acceptableAaguids?: [str]

    attestationConveyancePreference?: str

    authenticatorAttachment?: str

    avoidSameAuthenticatorRegister?: bool

    createTimeout?: float

    extraOrigins?: [str]

    relyingPartyEntityName?: str

    relyingPartyId?: str

    requireResidentKey?: str

    signatureAlgorithms?: [str]

    userVerificationRequirement?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    accessCodeLifespan : str, default is Undefined, optional
        The maximum amount of time a client has to finish the authorization code flow.
    accessCodeLifespanLogin : str, default is Undefined, optional
        The maximum amount of time a user is permitted to stay on the login page before the authentication process must be restarted.
    accessCodeLifespanUserAction : str, default is Undefined, optional
        The maximum amount of time a user has to complete login related actions, such as updating a password.
    accessTokenLifespan : str, default is Undefined, optional
        The amount of time an access token can be used before it expires.
    accessTokenLifespanForImplicitFlow : str, default is Undefined, optional
        The amount of time an access token issued with the OpenID Connect Implicit Flow can be used before it expires.
    accountTheme : str, default is Undefined, optional
        Used for account management pages.
    actionTokenGeneratedByAdminLifespan : str, default is Undefined, optional
        The maximum time a user has to use an admin-generated permit before it expires.
    actionTokenGeneratedByUserLifespan : str, default is Undefined, optional
        The maximum time a user has to use a user-generated permit before it expires.
    adminTheme : str, default is Undefined, optional
        Used for the admin console.
    attributes : {str:str}, default is Undefined, optional
        A map of custom attributes to add to the realm.
    browserFlow : str, default is Undefined, optional
        The desired flow for browser authentication. Defaults to browser.
        Which flow should be used for BrowserFlow
    clientAuthenticationFlow : str, default is Undefined, optional
        The desired flow for client authentication. Defaults to clients.
        Which flow should be used for ClientAuthenticationFlow
    clientSessionIdleTimeout : str, default is Undefined, optional
        The amount of time a session can be idle before it expires. Users can override it for individual clients.
    clientSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before a session expires regardless of activity. Users can override it for individual clients.
    defaultDefaultClientScopes : [str], default is Undefined, optional
        A list of default default client scopes to be used for client definitions. Defaults to [] or keycloak's built-in default default client-scopes. For an alternative, please refer to the dedicated resource keycloak_realm_default_client_scopes.
    defaultOptionalClientScopes : [str], default is Undefined, optional
        A list of default optional client scopes to be used for client definitions. Defaults to [] or keycloak's built-in default optional client-scopes. For an alternative, please refer to the dedicated resource keycloak_realm_optional_client_scopes.
    defaultSignatureAlgorithm : str, default is Undefined, optional
        Default algorithm used to sign tokens for the realm.
    directGrantFlow : str, default is Undefined, optional
        The desired flow for direct access authentication. Defaults to direct grant.
        Which flow should be used for DirectGrantFlow
    displayName : str, default is Undefined, optional
        The display name for the realm that is shown when logging in to the admin console.
    displayNameHtml : str, default is Undefined, optional
        The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
    dockerAuthenticationFlow : str, default is Undefined, optional
        The desired flow for Docker authentication. Defaults to docker auth.
        Which flow should be used for DockerAuthenticationFlow
    duplicateEmailsAllowed : bool, default is Undefined, optional
        When true, multiple users will be allowed to have the same email address. This argument must be set to false if login_with_email_allowed is set to true.
    editUsernameAllowed : bool, default is Undefined, optional
        When true, the username field is editable.
    emailTheme : str, default is Undefined, optional
        Used for emails that are sent by Keycloak.
    enabled : bool, default is Undefined, optional
        When false, users and clients will not be able to access this realm. Defaults to true.
    firstBrokerLoginFlow : str, default is Undefined, optional
        The desired flow for First Broker Login (since Keycloak 24). Defaults to first broker login.
        Which flow should be used for FirstBrokerLoginFlow
    internalId : str, default is Undefined, optional
        When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
    internationalization : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderInternationalizationItems0], default is Undefined, optional
        internationalization
    loginTheme : str, default is Undefined, optional
        Used for the login, forgot password, and registration pages.
    loginWithEmailAllowed : bool, default is Undefined, optional
        When true, users may log in with their email address.
    oauth2DeviceCodeLifespan : str, default is Undefined, optional
        The maximum amount of time a client has to finish the device code flow before it expires.
    oauth2DevicePollingInterval : float, default is Undefined, optional
        The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.
    offlineSessionIdleTimeout : str, default is Undefined, optional
        The amount of time an offline session can be idle before it expires.
    offlineSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before an offline session expires regardless of activity.
    offlineSessionMaxLifespanEnabled : bool, default is Undefined, optional
        Enable offline_session_max_lifespan.
    organizationsEnabled : bool, default is Undefined, optional
        When true, organization support is enabled. Defaults to false.
    otpPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderOtpPolicyItems0], default is Undefined, optional
        otp policy
    passwordPolicy : str, default is Undefined, optional
        The password policy for users within the realm.
        String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365) and notUsername(undefined)"
    realm : str, default is Undefined, optional
        The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
    refreshTokenMaxReuse : float, default is Undefined, optional
        Maximum number of times a refresh token can be reused before they are revoked. If unspecified and 'revoke_refresh_token' is enabled the default value is 0 and refresh tokens can not be reused.
    registrationAllowed : bool, default is Undefined, optional
        When true, user registration will be enabled, and a link for registration will be displayed on the login page.
    registrationEmailAsUsername : bool, default is Undefined, optional
        When true, the user's email will be used as their username during registration.
    registrationFlow : str, default is Undefined, optional
        The desired flow for user registration. Defaults to registration.
        Which flow should be used for RegistrationFlow
    rememberMe : bool, default is Undefined, optional
        When true, a "remember me" checkbox will be displayed on the login page, and the user's session will not expire between browser restarts.
    resetCredentialsFlow : str, default is Undefined, optional
        The desired flow to use when a user attempts to reset their credentials. Defaults to reset credentials.
        Which flow should be used for ResetCredentialsFlow
    resetPasswordAllowed : bool, default is Undefined, optional
        When true, a "forgot password" link will be displayed on the login page.
    revokeRefreshToken : bool, default is Undefined, optional
        If enabled a refresh token can only be used number of times specified in 'refresh_token_max_reuse' before they are revoked. If unspecified, refresh tokens can be reused.
    securityDefenses : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0], default is Undefined, optional
        security defenses
    smtpServer : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0], default is Undefined, optional
        smtp server
    sslRequired : str, default is Undefined, optional
        Can be one of following values: 'none, 'external' or 'all'
        SSL Required: Values can be 'none', 'external' or 'all'.
    ssoSessionIdleTimeout : str, default is Undefined, optional
        The amount of time a session can be idle before it expires.
    ssoSessionIdleTimeoutRememberMe : str, default is Undefined, optional
        Similar to sso_session_idle_timeout, but used when a user clicks "Remember Me". If not set, Keycloak will default to the value of sso_session_idle_timeout.
    ssoSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before a session expires regardless of activity.
    ssoSessionMaxLifespanRememberMe : str, default is Undefined, optional
        Similar to sso_session_max_lifespan, but used when a user clicks "Remember Me". If not set, Keycloak will default to the value of sso_session_max_lifespan.
    userManagedAccess : bool, default is Undefined, optional
        When true, users are allowed to manage their own resources. Defaults to false.
    verifyEmail : bool, default is Undefined, optional
        When true, users are required to verify their email address after registration and after email address changes.
    webAuthnPasswordlessPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderWebAuthnPasswordlessPolicyItems0], default is Undefined, optional
        Configuration for WebAuthn Passwordless Policy authentication.
    webAuthnPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderWebAuthnPolicyItems0], default is Undefined, optional
        Configuration for WebAuthn Policy authentication.
    """


    accessCodeLifespan?: str

    accessCodeLifespanLogin?: str

    accessCodeLifespanUserAction?: str

    accessTokenLifespan?: str

    accessTokenLifespanForImplicitFlow?: str

    accountTheme?: str

    actionTokenGeneratedByAdminLifespan?: str

    actionTokenGeneratedByUserLifespan?: str

    adminTheme?: str

    attributes?: {str:str}

    browserFlow?: str

    clientAuthenticationFlow?: str

    clientSessionIdleTimeout?: str

    clientSessionMaxLifespan?: str

    defaultDefaultClientScopes?: [str]

    defaultOptionalClientScopes?: [str]

    defaultSignatureAlgorithm?: str

    directGrantFlow?: str

    displayName?: str

    displayNameHtml?: str

    dockerAuthenticationFlow?: str

    duplicateEmailsAllowed?: bool

    editUsernameAllowed?: bool

    emailTheme?: str

    enabled?: bool

    firstBrokerLoginFlow?: str

    internalId?: str

    internationalization?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderInternationalizationItems0]

    loginTheme?: str

    loginWithEmailAllowed?: bool

    oauth2DeviceCodeLifespan?: str

    oauth2DevicePollingInterval?: float

    offlineSessionIdleTimeout?: str

    offlineSessionMaxLifespan?: str

    offlineSessionMaxLifespanEnabled?: bool

    organizationsEnabled?: bool

    otpPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderOtpPolicyItems0]

    passwordPolicy?: str

    realm?: str

    refreshTokenMaxReuse?: float

    registrationAllowed?: bool

    registrationEmailAsUsername?: bool

    registrationFlow?: str

    rememberMe?: bool

    resetCredentialsFlow?: str

    resetPasswordAllowed?: bool

    revokeRefreshToken?: bool

    securityDefenses?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0]

    smtpServer?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0]

    sslRequired?: str

    ssoSessionIdleTimeout?: str

    ssoSessionIdleTimeoutRememberMe?: str

    ssoSessionMaxLifespan?: str

    ssoSessionMaxLifespanRememberMe?: str

    userManagedAccess?: bool

    verifyEmail?: bool

    webAuthnPasswordlessPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderWebAuthnPasswordlessPolicyItems0]

    webAuthnPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderWebAuthnPolicyItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderInternationalizationItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider internationalization items0

    Attributes
    ----------
    defaultLocale : str, default is Undefined, optional
        The locale to use by default. This locale code must be present within the supported_locales list.
    supportedLocales : [str], default is Undefined, optional
        A list of ISO 639-1 locale codes that the realm should support.
    """


    defaultLocale?: str

    supportedLocales?: [str]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderOtpPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider otp policy items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        What hashing algorithm should be used to generate the OTP, Valid options are HmacSHA1,HmacSHA256 and HmacSHA512. Defaults to HmacSHA1.
        What hashing algorithm should be used to generate the OTP.
    digits : float, default is Undefined, optional
        How many digits the OTP have. Defaults to 6.
    initialCounter : float, default is Undefined, optional
        What should the initial counter value be. Defaults to 2.
    lookAheadWindow : float, default is Undefined, optional
        How far ahead should the server look just in case the token generator and server are out of time sync or counter sync. Defaults to 1.
    period : float, default is Undefined, optional
        How many seconds should an OTP token be valid. Defaults to 30.
    $type : str, default is Undefined, optional
        One Time Password Type, supported Values are totp for Time-Based One Time Password and hotp for Counter Based. Defaults to totp.
        OTP Type, totp for Time-Based One Time Password or hotp for counter base one time password
    """


    algorithm?: str

    digits?: float

    initialCounter?: float

    lookAheadWindow?: float

    period?: float

    $type?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider SMTP server items0

    Attributes
    ----------
    auth : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0AuthItems0], default is Undefined, optional
        Enables authentication to the SMTP server.  This block supports the following arguments:
    envelopeFrom : str, default is Undefined, optional
        The email address uses for bounces.
    from : str, default is Undefined, optional
        The email address for the sender.
    fromDisplayName : str, default is Undefined, optional
        The display name of the sender email address.
    host : str, default is Undefined, optional
        The host of the SMTP server.
    port : str, default is Undefined, optional
        The port of the SMTP server (defaults to 25).
    replyTo : str, default is Undefined, optional
        The "reply to" email address.
    replyToDisplayName : str, default is Undefined, optional
        The display name of the "reply to" email address.
    ssl : bool, default is Undefined, optional
        When true, enables SSL. Defaults to false.
    starttls : bool, default is Undefined, optional
        When true, enables StartTLS. Defaults to false.
    """


    auth?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0AuthItems0]

    envelopeFrom?: str

    from?: str

    fromDisplayName?: str

    host?: str

    port?: str

    replyTo?: str

    replyToDisplayName?: str

    ssl?: bool

    starttls?: bool


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0AuthItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider SMTP server items0 auth items0

    Attributes
    ----------
    passwordSecretRef : RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0AuthItems0PasswordSecretRef, default is Undefined, required
        password secret ref
    username : str, default is Undefined, optional
        The SMTP server username.
    """


    passwordSecretRef: RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0AuthItems0PasswordSecretRef

    username?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSMTPServerItems0AuthItems0PasswordSecretRef:
    r"""
    The SMTP server password.

    Attributes
    ----------
    key : str, default is Undefined, required
        key
    name : str, default is Undefined, required
        Name of the secret.
    """


    key: str

    name: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider security defenses items0

    Attributes
    ----------
    bruteForceDetection : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0BruteForceDetectionItems0], default is Undefined, optional
        brute force detection
    headers : [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0HeadersItems0], default is Undefined, optional
        headers
    """


    bruteForceDetection?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0BruteForceDetectionItems0]

    headers?: [RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0HeadersItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0BruteForceDetectionItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider security defenses items0 brute force detection items0

    Attributes
    ----------
    failureResetTimeSeconds : float, default is Undefined, optional
        When will failure count be reset?
    maxFailureWaitSeconds : float, default is Undefined, optional
        max failure wait seconds
    maxLoginFailures : float, default is Undefined, optional
        How many failures before wait is triggered.
    minimumQuickLoginWaitSeconds : float, default is Undefined, optional
        How long to wait after a quick login failure.
    permanentLockout : bool, default is Undefined, optional
        When true, this will lock the user permanently when the user exceeds the maximum login failures.
    quickLoginCheckMilliSeconds : float, default is Undefined, optional
        Configures the amount of time, in milliseconds, for consecutive failures to lock a user out.
    waitIncrementSeconds : float, default is Undefined, optional
        This represents the amount of time a user should be locked out when the login failure threshold has been met.
    """


    failureResetTimeSeconds?: float

    maxFailureWaitSeconds?: float

    maxLoginFailures?: float

    minimumQuickLoginWaitSeconds?: float

    permanentLockout?: bool

    quickLoginCheckMilliSeconds?: float

    waitIncrementSeconds?: float


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderSecurityDefensesItems0HeadersItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider security defenses items0 headers items0

    Attributes
    ----------
    contentSecurityPolicy : str, default is Undefined, optional
        Sets the Content Security Policy, which can be used for prevent pages from being included by non-origin iframes. More information can be found in the W3C-CSP Abstract.
    contentSecurityPolicyReportOnly : str, default is Undefined, optional
        Used for testing Content Security Policies.
    referrerPolicy : str, default is Undefined, optional
        The Referrer-Policy HTTP header controls how much referrer information (sent with the Referer header) should be included with requests.
    strictTransportSecurity : str, default is Undefined, optional
        The Script-Transport-Security HTTP header tells browsers to always use HTTPS.
    xContentTypeOptions : str, default is Undefined, optional
        Sets the X-Content-Type-Options, which can be used for prevent MIME-sniffing a response away from the declared content-type
    xFrameOptions : str, default is Undefined, optional
        Sets the x-frame-option, which can be used to prevent pages from being included by non-origin iframes. More information can be found in the RFC7034
    xRobotsTag : str, default is Undefined, optional
        Prevent pages from appearing in search engines.
    xXssProtection : str, default is Undefined, optional
        This header configures the Cross-site scripting (XSS) filter in your browser.
    """


    contentSecurityPolicy?: str

    contentSecurityPolicyReportOnly?: str

    referrerPolicy?: str

    strictTransportSecurity?: str

    xContentTypeOptions?: str

    xFrameOptions?: str

    xRobotsTag?: str

    xXssProtection?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderWebAuthnPasswordlessPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider web authn passwordless policy items0

    Attributes
    ----------
    acceptableAaguids : [str], default is Undefined, optional
        A set of AAGUIDs for which an authenticator can be registered.
    attestationConveyancePreference : str, default is Undefined, optional
        The preference of how to generate a WebAuthn attestation statement. Valid options are not specified, none, indirect, direct, or enterprise. Defaults to not specified.
        Either none, indirect or direct
    authenticatorAttachment : str, default is Undefined, optional
        The acceptable attachment pattern for the WebAuthn authenticator. Valid options are not specified, platform, or cross-platform. Defaults to not specified.
        Either platform or cross-platform
    avoidSameAuthenticatorRegister : bool, default is Undefined, optional
        When true, Keycloak will avoid registering the authenticator for WebAuthn if it has already been registered. Defaults to false.
    createTimeout : float, default is Undefined, optional
        The timeout value for creating a user's public key credential in seconds. When set to 0, this timeout option is not adapted. Defaults to 0.
    extraOrigins : [str], default is Undefined, optional
        A set of extra origins for non-web applications.
    relyingPartyEntityName : str, default is Undefined, optional
        A human-readable server name for the WebAuthn Relying Party. Defaults to keycloak.
    relyingPartyId : str, default is Undefined, optional
        The WebAuthn relying party ID.
    requireResidentKey : str, default is Undefined, optional
        Specifies whether a public key should be created to represent the resident key. Valid options are not specified, Yes, or No. Defaults to not specified.
        Either Yes or No
    signatureAlgorithms : [str], default is Undefined, optional
        A set of signature algorithms that should be used for the authentication assertion. Valid options at the time these docs were written are ES256, ES384, ES512, RS256, RS384, RS512, and RS1.
        Keycloak lists ES256, ES384, ES512, RS256, RS384, RS512, RS1 at the time of writing
    userVerificationRequirement : str, default is Undefined, optional
        Specifies the policy for verifying a user logging in via WebAuthn. Valid options are not specified, required, preferred, or discouraged. Defaults to not specified.
        Either required, preferred or discouraged
    """


    acceptableAaguids?: [str]

    attestationConveyancePreference?: str

    authenticatorAttachment?: str

    avoidSameAuthenticatorRegister?: bool

    createTimeout?: float

    extraOrigins?: [str]

    relyingPartyEntityName?: str

    relyingPartyId?: str

    requireResidentKey?: str

    signatureAlgorithms?: [str]

    userVerificationRequirement?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecInitProviderWebAuthnPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm spec init provider web authn policy items0

    Attributes
    ----------
    acceptableAaguids : [str], default is Undefined, optional
        A set of AAGUIDs for which an authenticator can be registered.
    attestationConveyancePreference : str, default is Undefined, optional
        The preference of how to generate a WebAuthn attestation statement. Valid options are not specified, none, indirect, direct, or enterprise. Defaults to not specified.
        Either none, indirect or direct
    authenticatorAttachment : str, default is Undefined, optional
        The acceptable attachment pattern for the WebAuthn authenticator. Valid options are not specified, platform, or cross-platform. Defaults to not specified.
        Either platform or cross-platform
    avoidSameAuthenticatorRegister : bool, default is Undefined, optional
        When true, Keycloak will avoid registering the authenticator for WebAuthn if it has already been registered. Defaults to false.
    createTimeout : float, default is Undefined, optional
        The timeout value for creating a user's public key credential in seconds. When set to 0, this timeout option is not adapted. Defaults to 0.
    extraOrigins : [str], default is Undefined, optional
        A set of extra origins for non-web applications.
    relyingPartyEntityName : str, default is Undefined, optional
        A human-readable server name for the WebAuthn Relying Party. Defaults to keycloak.
    relyingPartyId : str, default is Undefined, optional
        The WebAuthn relying party ID.
    requireResidentKey : str, default is Undefined, optional
        Specifies whether a public key should be created to represent the resident key. Valid options are not specified, Yes, or No. Defaults to not specified.
        Either Yes or No
    signatureAlgorithms : [str], default is Undefined, optional
        A set of signature algorithms that should be used for the authentication assertion. Valid options at the time these docs were written are ES256, ES384, ES512, RS256, RS384, RS512, and RS1.
        Keycloak lists ES256, ES384, ES512, RS256, RS384, RS512, RS1 at the time of writing
    userVerificationRequirement : str, default is Undefined, optional
        Specifies the policy for verifying a user logging in via WebAuthn. Valid options are not specified, required, preferred, or discouraged. Defaults to not specified.
        Either required, preferred or discouraged
    """


    acceptableAaguids?: [str]

    attestationConveyancePreference?: str

    authenticatorAttachment?: str

    avoidSameAuthenticatorRegister?: bool

    createTimeout?: float

    extraOrigins?: [str]

    relyingPartyEntityName?: str

    relyingPartyId?: str

    requireResidentKey?: str

    signatureAlgorithms?: [str]

    userVerificationRequirement?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    kind : str, default is Undefined, required
        Kind of the referenced object.
    name : str, default is Undefined, required
        Name of the referenced object.
    """


    kind: str

    name: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    """


    name: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatus:
    r"""
    RealmStatus defines the observed state of Realm.

    Attributes
    ----------
    atProvider : RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProvider

    conditions?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusConditionsItems0]

    observedGeneration?: int


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProvider:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider

    Attributes
    ----------
    accessCodeLifespan : str, default is Undefined, optional
        The maximum amount of time a client has to finish the authorization code flow.
    accessCodeLifespanLogin : str, default is Undefined, optional
        The maximum amount of time a user is permitted to stay on the login page before the authentication process must be restarted.
    accessCodeLifespanUserAction : str, default is Undefined, optional
        The maximum amount of time a user has to complete login related actions, such as updating a password.
    accessTokenLifespan : str, default is Undefined, optional
        The amount of time an access token can be used before it expires.
    accessTokenLifespanForImplicitFlow : str, default is Undefined, optional
        The amount of time an access token issued with the OpenID Connect Implicit Flow can be used before it expires.
    accountTheme : str, default is Undefined, optional
        Used for account management pages.
    actionTokenGeneratedByAdminLifespan : str, default is Undefined, optional
        The maximum time a user has to use an admin-generated permit before it expires.
    actionTokenGeneratedByUserLifespan : str, default is Undefined, optional
        The maximum time a user has to use a user-generated permit before it expires.
    adminTheme : str, default is Undefined, optional
        Used for the admin console.
    attributes : {str:str}, default is Undefined, optional
        A map of custom attributes to add to the realm.
    browserFlow : str, default is Undefined, optional
        The desired flow for browser authentication. Defaults to browser.
        Which flow should be used for BrowserFlow
    clientAuthenticationFlow : str, default is Undefined, optional
        The desired flow for client authentication. Defaults to clients.
        Which flow should be used for ClientAuthenticationFlow
    clientSessionIdleTimeout : str, default is Undefined, optional
        The amount of time a session can be idle before it expires. Users can override it for individual clients.
    clientSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before a session expires regardless of activity. Users can override it for individual clients.
    defaultDefaultClientScopes : [str], default is Undefined, optional
        A list of default default client scopes to be used for client definitions. Defaults to [] or keycloak's built-in default default client-scopes. For an alternative, please refer to the dedicated resource keycloak_realm_default_client_scopes.
    defaultOptionalClientScopes : [str], default is Undefined, optional
        A list of default optional client scopes to be used for client definitions. Defaults to [] or keycloak's built-in default optional client-scopes. For an alternative, please refer to the dedicated resource keycloak_realm_optional_client_scopes.
    defaultSignatureAlgorithm : str, default is Undefined, optional
        Default algorithm used to sign tokens for the realm.
    directGrantFlow : str, default is Undefined, optional
        The desired flow for direct access authentication. Defaults to direct grant.
        Which flow should be used for DirectGrantFlow
    displayName : str, default is Undefined, optional
        The display name for the realm that is shown when logging in to the admin console.
    displayNameHtml : str, default is Undefined, optional
        The display name for the realm that is rendered as HTML on the screen when logging in to the admin console.
    dockerAuthenticationFlow : str, default is Undefined, optional
        The desired flow for Docker authentication. Defaults to docker auth.
        Which flow should be used for DockerAuthenticationFlow
    duplicateEmailsAllowed : bool, default is Undefined, optional
        When true, multiple users will be allowed to have the same email address. This argument must be set to false if login_with_email_allowed is set to true.
    editUsernameAllowed : bool, default is Undefined, optional
        When true, the username field is editable.
    emailTheme : str, default is Undefined, optional
        Used for emails that are sent by Keycloak.
    enabled : bool, default is Undefined, optional
        When false, users and clients will not be able to access this realm. Defaults to true.
    firstBrokerLoginFlow : str, default is Undefined, optional
        The desired flow for First Broker Login (since Keycloak 24). Defaults to first broker login.
        Which flow should be used for FirstBrokerLoginFlow
    id : str, default is Undefined, optional
        id
    internalId : str, default is Undefined, optional
        When specified, this will be used as the realm's internal ID within Keycloak. When not specified, the realm's internal ID will be set to the realm's name.
    internationalization : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderInternationalizationItems0], default is Undefined, optional
        internationalization
    loginTheme : str, default is Undefined, optional
        Used for the login, forgot password, and registration pages.
    loginWithEmailAllowed : bool, default is Undefined, optional
        When true, users may log in with their email address.
    oauth2DeviceCodeLifespan : str, default is Undefined, optional
        The maximum amount of time a client has to finish the device code flow before it expires.
    oauth2DevicePollingInterval : float, default is Undefined, optional
        The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.
    offlineSessionIdleTimeout : str, default is Undefined, optional
        The amount of time an offline session can be idle before it expires.
    offlineSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before an offline session expires regardless of activity.
    offlineSessionMaxLifespanEnabled : bool, default is Undefined, optional
        Enable offline_session_max_lifespan.
    organizationsEnabled : bool, default is Undefined, optional
        When true, organization support is enabled. Defaults to false.
    otpPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderOtpPolicyItems0], default is Undefined, optional
        otp policy
    passwordPolicy : str, default is Undefined, optional
        The password policy for users within the realm.
        String that represents the passwordPolicies that are in place. Each policy is separated with " and ". Supported policies can be found in the server-info providers page. example: "upperCase(1) and length(8) and forceExpiredPasswordChange(365) and notUsername(undefined)"
    realm : str, default is Undefined, optional
        The name of the realm. This is unique across Keycloak. This will also be used as the realm's internal ID within Keycloak.
    refreshTokenMaxReuse : float, default is Undefined, optional
        Maximum number of times a refresh token can be reused before they are revoked. If unspecified and 'revoke_refresh_token' is enabled the default value is 0 and refresh tokens can not be reused.
    registrationAllowed : bool, default is Undefined, optional
        When true, user registration will be enabled, and a link for registration will be displayed on the login page.
    registrationEmailAsUsername : bool, default is Undefined, optional
        When true, the user's email will be used as their username during registration.
    registrationFlow : str, default is Undefined, optional
        The desired flow for user registration. Defaults to registration.
        Which flow should be used for RegistrationFlow
    rememberMe : bool, default is Undefined, optional
        When true, a "remember me" checkbox will be displayed on the login page, and the user's session will not expire between browser restarts.
    resetCredentialsFlow : str, default is Undefined, optional
        The desired flow to use when a user attempts to reset their credentials. Defaults to reset credentials.
        Which flow should be used for ResetCredentialsFlow
    resetPasswordAllowed : bool, default is Undefined, optional
        When true, a "forgot password" link will be displayed on the login page.
    revokeRefreshToken : bool, default is Undefined, optional
        If enabled a refresh token can only be used number of times specified in 'refresh_token_max_reuse' before they are revoked. If unspecified, refresh tokens can be reused.
    securityDefenses : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0], default is Undefined, optional
        security defenses
    smtpServer : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSMTPServerItems0], default is Undefined, optional
        smtp server
    sslRequired : str, default is Undefined, optional
        Can be one of following values: 'none, 'external' or 'all'
        SSL Required: Values can be 'none', 'external' or 'all'.
    ssoSessionIdleTimeout : str, default is Undefined, optional
        The amount of time a session can be idle before it expires.
    ssoSessionIdleTimeoutRememberMe : str, default is Undefined, optional
        Similar to sso_session_idle_timeout, but used when a user clicks "Remember Me". If not set, Keycloak will default to the value of sso_session_idle_timeout.
    ssoSessionMaxLifespan : str, default is Undefined, optional
        The maximum amount of time before a session expires regardless of activity.
    ssoSessionMaxLifespanRememberMe : str, default is Undefined, optional
        Similar to sso_session_max_lifespan, but used when a user clicks "Remember Me". If not set, Keycloak will default to the value of sso_session_max_lifespan.
    userManagedAccess : bool, default is Undefined, optional
        When true, users are allowed to manage their own resources. Defaults to false.
    verifyEmail : bool, default is Undefined, optional
        When true, users are required to verify their email address after registration and after email address changes.
    webAuthnPasswordlessPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderWebAuthnPasswordlessPolicyItems0], default is Undefined, optional
        Configuration for WebAuthn Passwordless Policy authentication.
    webAuthnPolicy : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderWebAuthnPolicyItems0], default is Undefined, optional
        Configuration for WebAuthn Policy authentication.
    """


    accessCodeLifespan?: str

    accessCodeLifespanLogin?: str

    accessCodeLifespanUserAction?: str

    accessTokenLifespan?: str

    accessTokenLifespanForImplicitFlow?: str

    accountTheme?: str

    actionTokenGeneratedByAdminLifespan?: str

    actionTokenGeneratedByUserLifespan?: str

    adminTheme?: str

    attributes?: {str:str}

    browserFlow?: str

    clientAuthenticationFlow?: str

    clientSessionIdleTimeout?: str

    clientSessionMaxLifespan?: str

    defaultDefaultClientScopes?: [str]

    defaultOptionalClientScopes?: [str]

    defaultSignatureAlgorithm?: str

    directGrantFlow?: str

    displayName?: str

    displayNameHtml?: str

    dockerAuthenticationFlow?: str

    duplicateEmailsAllowed?: bool

    editUsernameAllowed?: bool

    emailTheme?: str

    enabled?: bool

    firstBrokerLoginFlow?: str

    id?: str

    internalId?: str

    internationalization?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderInternationalizationItems0]

    loginTheme?: str

    loginWithEmailAllowed?: bool

    oauth2DeviceCodeLifespan?: str

    oauth2DevicePollingInterval?: float

    offlineSessionIdleTimeout?: str

    offlineSessionMaxLifespan?: str

    offlineSessionMaxLifespanEnabled?: bool

    organizationsEnabled?: bool

    otpPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderOtpPolicyItems0]

    passwordPolicy?: str

    realm?: str

    refreshTokenMaxReuse?: float

    registrationAllowed?: bool

    registrationEmailAsUsername?: bool

    registrationFlow?: str

    rememberMe?: bool

    resetCredentialsFlow?: str

    resetPasswordAllowed?: bool

    revokeRefreshToken?: bool

    securityDefenses?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0]

    smtpServer?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSMTPServerItems0]

    sslRequired?: str

    ssoSessionIdleTimeout?: str

    ssoSessionIdleTimeoutRememberMe?: str

    ssoSessionMaxLifespan?: str

    ssoSessionMaxLifespanRememberMe?: str

    userManagedAccess?: bool

    verifyEmail?: bool

    webAuthnPasswordlessPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderWebAuthnPasswordlessPolicyItems0]

    webAuthnPolicy?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderWebAuthnPolicyItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderInternationalizationItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider internationalization items0

    Attributes
    ----------
    defaultLocale : str, default is Undefined, optional
        The locale to use by default. This locale code must be present within the supported_locales list.
    supportedLocales : [str], default is Undefined, optional
        A list of ISO 639-1 locale codes that the realm should support.
    """


    defaultLocale?: str

    supportedLocales?: [str]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderOtpPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider otp policy items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        What hashing algorithm should be used to generate the OTP, Valid options are HmacSHA1,HmacSHA256 and HmacSHA512. Defaults to HmacSHA1.
        What hashing algorithm should be used to generate the OTP.
    digits : float, default is Undefined, optional
        How many digits the OTP have. Defaults to 6.
    initialCounter : float, default is Undefined, optional
        What should the initial counter value be. Defaults to 2.
    lookAheadWindow : float, default is Undefined, optional
        How far ahead should the server look just in case the token generator and server are out of time sync or counter sync. Defaults to 1.
    period : float, default is Undefined, optional
        How many seconds should an OTP token be valid. Defaults to 30.
    $type : str, default is Undefined, optional
        One Time Password Type, supported Values are totp for Time-Based One Time Password and hotp for Counter Based. Defaults to totp.
        OTP Type, totp for Time-Based One Time Password or hotp for counter base one time password
    """


    algorithm?: str

    digits?: float

    initialCounter?: float

    lookAheadWindow?: float

    period?: float

    $type?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSMTPServerItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider SMTP server items0

    Attributes
    ----------
    auth : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSMTPServerItems0AuthItems0], default is Undefined, optional
        Enables authentication to the SMTP server.  This block supports the following arguments:
    envelopeFrom : str, default is Undefined, optional
        The email address uses for bounces.
    from : str, default is Undefined, optional
        The email address for the sender.
    fromDisplayName : str, default is Undefined, optional
        The display name of the sender email address.
    host : str, default is Undefined, optional
        The host of the SMTP server.
    port : str, default is Undefined, optional
        The port of the SMTP server (defaults to 25).
    replyTo : str, default is Undefined, optional
        The "reply to" email address.
    replyToDisplayName : str, default is Undefined, optional
        The display name of the "reply to" email address.
    ssl : bool, default is Undefined, optional
        When true, enables SSL. Defaults to false.
    starttls : bool, default is Undefined, optional
        When true, enables StartTLS. Defaults to false.
    """


    auth?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSMTPServerItems0AuthItems0]

    envelopeFrom?: str

    from?: str

    fromDisplayName?: str

    host?: str

    port?: str

    replyTo?: str

    replyToDisplayName?: str

    ssl?: bool

    starttls?: bool


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSMTPServerItems0AuthItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider SMTP server items0 auth items0

    Attributes
    ----------
    username : str, default is Undefined, optional
        The SMTP server username.
    """


    username?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider security defenses items0

    Attributes
    ----------
    bruteForceDetection : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0BruteForceDetectionItems0], default is Undefined, optional
        brute force detection
    headers : [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0HeadersItems0], default is Undefined, optional
        headers
    """


    bruteForceDetection?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0BruteForceDetectionItems0]

    headers?: [RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0HeadersItems0]


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0BruteForceDetectionItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider security defenses items0 brute force detection items0

    Attributes
    ----------
    failureResetTimeSeconds : float, default is Undefined, optional
        When will failure count be reset?
    maxFailureWaitSeconds : float, default is Undefined, optional
        max failure wait seconds
    maxLoginFailures : float, default is Undefined, optional
        How many failures before wait is triggered.
    minimumQuickLoginWaitSeconds : float, default is Undefined, optional
        How long to wait after a quick login failure.
    permanentLockout : bool, default is Undefined, optional
        When true, this will lock the user permanently when the user exceeds the maximum login failures.
    quickLoginCheckMilliSeconds : float, default is Undefined, optional
        Configures the amount of time, in milliseconds, for consecutive failures to lock a user out.
    waitIncrementSeconds : float, default is Undefined, optional
        This represents the amount of time a user should be locked out when the login failure threshold has been met.
    """


    failureResetTimeSeconds?: float

    maxFailureWaitSeconds?: float

    maxLoginFailures?: float

    minimumQuickLoginWaitSeconds?: float

    permanentLockout?: bool

    quickLoginCheckMilliSeconds?: float

    waitIncrementSeconds?: float


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderSecurityDefensesItems0HeadersItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider security defenses items0 headers items0

    Attributes
    ----------
    contentSecurityPolicy : str, default is Undefined, optional
        Sets the Content Security Policy, which can be used for prevent pages from being included by non-origin iframes. More information can be found in the W3C-CSP Abstract.
    contentSecurityPolicyReportOnly : str, default is Undefined, optional
        Used for testing Content Security Policies.
    referrerPolicy : str, default is Undefined, optional
        The Referrer-Policy HTTP header controls how much referrer information (sent with the Referer header) should be included with requests.
    strictTransportSecurity : str, default is Undefined, optional
        The Script-Transport-Security HTTP header tells browsers to always use HTTPS.
    xContentTypeOptions : str, default is Undefined, optional
        Sets the X-Content-Type-Options, which can be used for prevent MIME-sniffing a response away from the declared content-type
    xFrameOptions : str, default is Undefined, optional
        Sets the x-frame-option, which can be used to prevent pages from being included by non-origin iframes. More information can be found in the RFC7034
    xRobotsTag : str, default is Undefined, optional
        Prevent pages from appearing in search engines.
    xXssProtection : str, default is Undefined, optional
        This header configures the Cross-site scripting (XSS) filter in your browser.
    """


    contentSecurityPolicy?: str

    contentSecurityPolicyReportOnly?: str

    referrerPolicy?: str

    strictTransportSecurity?: str

    xContentTypeOptions?: str

    xFrameOptions?: str

    xRobotsTag?: str

    xXssProtection?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderWebAuthnPasswordlessPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider web authn passwordless policy items0

    Attributes
    ----------
    acceptableAaguids : [str], default is Undefined, optional
        A set of AAGUIDs for which an authenticator can be registered.
    attestationConveyancePreference : str, default is Undefined, optional
        The preference of how to generate a WebAuthn attestation statement. Valid options are not specified, none, indirect, direct, or enterprise. Defaults to not specified.
        Either none, indirect or direct
    authenticatorAttachment : str, default is Undefined, optional
        The acceptable attachment pattern for the WebAuthn authenticator. Valid options are not specified, platform, or cross-platform. Defaults to not specified.
        Either platform or cross-platform
    avoidSameAuthenticatorRegister : bool, default is Undefined, optional
        When true, Keycloak will avoid registering the authenticator for WebAuthn if it has already been registered. Defaults to false.
    createTimeout : float, default is Undefined, optional
        The timeout value for creating a user's public key credential in seconds. When set to 0, this timeout option is not adapted. Defaults to 0.
    extraOrigins : [str], default is Undefined, optional
        A set of extra origins for non-web applications.
    relyingPartyEntityName : str, default is Undefined, optional
        A human-readable server name for the WebAuthn Relying Party. Defaults to keycloak.
    relyingPartyId : str, default is Undefined, optional
        The WebAuthn relying party ID.
    requireResidentKey : str, default is Undefined, optional
        Specifies whether a public key should be created to represent the resident key. Valid options are not specified, Yes, or No. Defaults to not specified.
        Either Yes or No
    signatureAlgorithms : [str], default is Undefined, optional
        A set of signature algorithms that should be used for the authentication assertion. Valid options at the time these docs were written are ES256, ES384, ES512, RS256, RS384, RS512, and RS1.
        Keycloak lists ES256, ES384, ES512, RS256, RS384, RS512, RS1 at the time of writing
    userVerificationRequirement : str, default is Undefined, optional
        Specifies the policy for verifying a user logging in via WebAuthn. Valid options are not specified, required, preferred, or discouraged. Defaults to not specified.
        Either required, preferred or discouraged
    """


    acceptableAaguids?: [str]

    attestationConveyancePreference?: str

    authenticatorAttachment?: str

    avoidSameAuthenticatorRegister?: bool

    createTimeout?: float

    extraOrigins?: [str]

    relyingPartyEntityName?: str

    relyingPartyId?: str

    requireResidentKey?: str

    signatureAlgorithms?: [str]

    userVerificationRequirement?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusAtProviderWebAuthnPolicyItems0:
    r"""
    realm keycloakm crossplane io v1alpha1 realm status at provider web authn policy items0

    Attributes
    ----------
    acceptableAaguids : [str], default is Undefined, optional
        A set of AAGUIDs for which an authenticator can be registered.
    attestationConveyancePreference : str, default is Undefined, optional
        The preference of how to generate a WebAuthn attestation statement. Valid options are not specified, none, indirect, direct, or enterprise. Defaults to not specified.
        Either none, indirect or direct
    authenticatorAttachment : str, default is Undefined, optional
        The acceptable attachment pattern for the WebAuthn authenticator. Valid options are not specified, platform, or cross-platform. Defaults to not specified.
        Either platform or cross-platform
    avoidSameAuthenticatorRegister : bool, default is Undefined, optional
        When true, Keycloak will avoid registering the authenticator for WebAuthn if it has already been registered. Defaults to false.
    createTimeout : float, default is Undefined, optional
        The timeout value for creating a user's public key credential in seconds. When set to 0, this timeout option is not adapted. Defaults to 0.
    extraOrigins : [str], default is Undefined, optional
        A set of extra origins for non-web applications.
    relyingPartyEntityName : str, default is Undefined, optional
        A human-readable server name for the WebAuthn Relying Party. Defaults to keycloak.
    relyingPartyId : str, default is Undefined, optional
        The WebAuthn relying party ID.
    requireResidentKey : str, default is Undefined, optional
        Specifies whether a public key should be created to represent the resident key. Valid options are not specified, Yes, or No. Defaults to not specified.
        Either Yes or No
    signatureAlgorithms : [str], default is Undefined, optional
        A set of signature algorithms that should be used for the authentication assertion. Valid options at the time these docs were written are ES256, ES384, ES512, RS256, RS384, RS512, and RS1.
        Keycloak lists ES256, ES384, ES512, RS256, RS384, RS512, RS1 at the time of writing
    userVerificationRequirement : str, default is Undefined, optional
        Specifies the policy for verifying a user logging in via WebAuthn. Valid options are not specified, required, preferred, or discouraged. Defaults to not specified.
        Either required, preferred or discouraged
    """


    acceptableAaguids?: [str]

    attestationConveyancePreference?: str

    authenticatorAttachment?: str

    avoidSameAuthenticatorRegister?: bool

    createTimeout?: float

    extraOrigins?: [str]

    relyingPartyEntityName?: str

    relyingPartyId?: str

    requireResidentKey?: str

    signatureAlgorithms?: [str]

    userVerificationRequirement?: str


schema RealmKeycloakmCrossplaneIoV1alpha1RealmStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


