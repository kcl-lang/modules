"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Instance:
    r"""
    Instance is the Schema for the Instances API. Provides an RDS instance resource.

    Attributes
    ----------
    apiVersion : str, default is "rds.aws.upbound.io/v1beta3", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Instance", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : RdsAwsUpboundIoV1beta3InstanceSpec, default is Undefined, required
        spec
    status : RdsAwsUpboundIoV1beta3InstanceStatus, default is Undefined, optional
        status
    """


    apiVersion: "rds.aws.upbound.io/v1beta3" = "rds.aws.upbound.io/v1beta3"

    kind: "Instance" = "Instance"

    metadata?: v1.ObjectMeta

    spec: RdsAwsUpboundIoV1beta3InstanceSpec

    status?: RdsAwsUpboundIoV1beta3InstanceStatus


schema RdsAwsUpboundIoV1beta3InstanceSpec:
    r"""
    InstanceSpec defines the desired state of Instance

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : RdsAwsUpboundIoV1beta3InstanceSpecForProvider, default is Undefined, required
        for provider
    initProvider : RdsAwsUpboundIoV1beta3InstanceSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : RdsAwsUpboundIoV1beta3InstanceSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : RdsAwsUpboundIoV1beta3InstanceSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: RdsAwsUpboundIoV1beta3InstanceSpecForProvider

    initProvider?: RdsAwsUpboundIoV1beta3InstanceSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: RdsAwsUpboundIoV1beta3InstanceSpecProviderConfigRef

    publishConnectionDetailsTo?: RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: RdsAwsUpboundIoV1beta3InstanceSpecWriteConnectionSecretToRef


schema RdsAwsUpboundIoV1beta3InstanceSpecForProvider:
    r"""
    rds aws upbound io v1beta3 instance spec for provider

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The allocated storage in gibibytes. If max_allocated_storage is configured, this argument represents the initial storage allocation and differences from the configuration will be ignored automatically when Storage Autoscaling occurs. If replicate_source_db is set, the value is ignored during the creation of the instance.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Indicates that major version
        upgrades are allowed. Changing this parameter does not result in an outage and
        the change is asynchronously applied as soon as possible.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any database modifications
        are applied immediately, or during the next maintenance window. Default is
        false. See Amazon RDS Documentation for more
        information.
    autoGeneratePassword : bool, default is Undefined, optional
        Password for the master DB user. Note that this may show up in
        logs, and it will be stored in the state file. Cannot be set if manage_master_user_password is set to true.
        If true, the password will be auto-generated and stored in the Secret referenced by the passwordSecretRef field.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades
        will be applied automatically to the DB instance during the maintenance window.
        Defaults to true.
    availabilityZone : str, default is Undefined, optional
        The AZ for the RDS instance.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for.
        Must be between 0 and 35.
        Default is 0.
        Must be greater than 0 if the database is used as a source for a Read Replica,
        uses low-downtime updates,
        or will use RDS Blue/Green deployments.
    backupTarget : str, default is Undefined, optional
        Specifies where automated backups and manual snapshots are stored. Possible values are region (default) and outposts. See Working with Amazon RDS on AWS Outposts for more information.
    backupWindow : str, default is Undefined, optional
        The daily time range (in UTC) during which automated backups are created if they are enabled.
        Example: "09:46-10:16". Must not overlap with maintenance_window.
    blueGreenUpdate : RdsAwsUpboundIoV1beta3InstanceSpecForProviderBlueGreenUpdate, default is Undefined, optional
        blue green update
    caCertIdentifier : str, default is Undefined, optional
        The identifier of the CA certificate for the DB instance.
    characterSetName : str, default is Undefined, optional
        The character set name to use for DB encoding in Oracle and Microsoft SQL instances (collation).
        This can't be changed.
        See Oracle Character Sets Supported in Amazon RDS or
        Server-Level Collation for Microsoft SQL Server for more information.
        Cannot be set  with replicate_source_db, restore_to_point_in_time, s3_import, or snapshot_identifier.
    copyTagsToSnapshot : bool, default is Undefined, optional
        â€“  Copy all Instance tags to snapshots. Default is false.
    customIamInstanceProfile : str, default is Undefined, optional
        The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    customerOwnedIpEnabled : bool, default is Undefined, optional
        Indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance. See CoIP for RDS on Outposts for more information.
    dbName : str, default is Undefined, optional
        The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the AWS documentation for more details on what applies for those engines. If you are providing an Oracle db name, it needs to be in all upper case. Cannot be specified for a replica.
    dbSubnetGroupName : str, default is Undefined, optional
        Name of DB subnet group.
        DB instance will be created in the VPC associated with the DB subnet group.
        If unspecified, will be created in the default Subnet Group.
        When working with read replicas created in the same region, defaults to the Subnet Group Name of the source DB.
        When working with read replicas created in a different region, defaults to the default Subnet Group.
        See DBSubnetGroupName in API action CreateDBInstanceReadReplica for additional read replica constraints.
    dbSubnetGroupNameRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameRef, default is Undefined, optional
        db subnet group name ref
    dbSubnetGroupNameSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameSelector, default is Undefined, optional
        db subnet group name selector
    dedicatedLogVolume : bool, default is Undefined, optional
        Use a dedicated log volume (DLV) for the DB instance. Requires Provisioned IOPS. See the AWS documentation for more details.
    deleteAutomatedBackups : bool, default is Undefined, optional
        Specifies whether to remove automated backups immediately after the DB instance is deleted. Default is true.
    deletionProtection : bool, default is Undefined, optional
        If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
    domain : str, default is Undefined, optional
        The ID of the Directory Service Active Directory domain to create the instance in. Conflicts with domain_fqdn, domain_ou, domain_auth_secret_arn and a domain_dns_ips.
    domainAuthSecretArn : str, default is Undefined, optional
        The ARN for the Secrets Manager secret with the self managed Active Directory credentials for the user joining the domain. Conflicts with domain and domain_iam_role_name.
    domainDnsIps : [str], default is Undefined, optional
        The IPv4 DNS IP addresses of your primary and secondary self managed Active Directory domain controllers. Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list. Conflicts with domain and domain_iam_role_name.
    domainFqdn : str, default is Undefined, optional
        The fully qualified domain name (FQDN) of the self managed Active Directory domain. Conflicts with domain and domain_iam_role_name.
    domainIamRoleName : str, default is Undefined, optional
        The name of the IAM role to be used when making API calls to the Directory Service. Conflicts with domain_fqdn, domain_ou, domain_auth_secret_arn and a domain_dns_ips.
    domainOu : str, default is Undefined, optional
        The self managed Active Directory organizational unit for your DB instance to join. Conflicts with domain and domain_iam_role_name.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        Set of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. For supported values, see the EnableCloudwatchLogsExports.member.N parameter in API action CreateDBInstance.
    engine : str, default is Undefined, optional
        The database engine to use. For supported values, see the Engine parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html). Note that for Amazon Aurora instances the engine must match the [DB Cluster](https://marketplace.upbound.io/providers/upbound/provider-aws/latest/resources/rds.aws.upbound.io/Cluster/v1beta1)'s engine'. For information on the difference between the available Aurora MySQL engines see Comparison in the [Amazon RDS Release Notes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraMySQLReleaseNotes/Welcome.html).
    engineLifecycleSupport : str, default is Undefined, optional
        The life cycle type for this DB instance. This setting applies only to RDS for MySQL and RDS for PostgreSQL. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    engineVersion : str, default is Undefined, optional
        The engine version to use. If `autoMinorVersionUpgrade` is enabled, you can provide a prefix of the version such as 5.7 (for 5.7.10). The actual engine version used is returned in the attribute `status.atProvider.engineVersionActual`. For supported values, see the EngineVersion parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html). Note that for Amazon Aurora instances the engine version must match the [DB Cluster](https://marketplace.upbound.io/providers/upbound/provider-aws/latest/resources/rds.aws.upbound.io/Cluster/v1beta1)'s engine version'.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final DB snapshot
        when this DB instance is deleted. Must be provided if skip_final_snapshot is
        set to false. The value must begin with a letter, only contain alphanumeric characters and hyphens, and not end with a hyphen or contain two consecutive hyphens. Must not be provided when deleting a read replica.
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether mappings of AWS Identity and Access Management (IAM) accounts to database
        accounts is enabled.
    identifier : str, default is Undefined, optional
        Required if restore_to_point_in_time is specified.
    identifierPrefix : str, default is Undefined, optional
        Creates a unique identifier beginning with the specified prefix. Conflicts with identifier.
    instanceClass : str, default is Undefined, optional
        The instance type of the RDS instance.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS. Setting this implies a
        storage_type of "io1" or "io2". Can only be set when storage_type is "io1", "io2 or "gp3".
        Cannot be specified for gp3 storage if the allocated_storage value is below a per-engine threshold.
        See the RDS User Guide for details.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. If creating an
        encrypted replica, set this to the destination KMS ARN.
    kmsKeyIdRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    licenseModel : str, default is Undefined, optional
        License model information for this DB instance. Valid values for this field are as follows:
    maintenanceWindow : str, default is Undefined, optional
        The window to perform maintenance in.
        Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See RDS
        Maintenance Window
        docs
        for more information.
    manageMasterUserPassword : bool, default is Undefined, optional
        Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if password is provided.
    masterUserSecretKmsKeyId : str, default is Undefined, optional
        The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    masterUserSecretKmsKeyIdRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDRef, default is Undefined, optional
        master user secret kms key Id ref
    masterUserSecretKmsKeyIdSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDSelector, default is Undefined, optional
        master user secret kms key Id selector
    maxAllocatedStorage : float, default is Undefined, optional
        When configured, the upper limit to which Amazon RDS can automatically scale the storage of the DB instance. Configuring this will automatically ignore differences to allocated_storage. Must be greater than or equal to allocated_storage or 0 to disable Storage Autoscaling.
    monitoringInterval : float, default is Undefined, optional
        The interval, in seconds, between points
        when Enhanced Monitoring metrics are collected for the DB instance. To disable
        collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
        Values: 0, 1, 5, 10, 15, 30, 60.
    monitoringRoleArn : str, default is Undefined, optional
        The ARN for the IAM role that permits RDS
        to send enhanced monitoring metrics to CloudWatch Logs. You can find more
        information on the AWS
        Documentation
        what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    monitoringRoleArnRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnRef, default is Undefined, optional
        monitoring role arn ref
    monitoringRoleArnSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnSelector, default is Undefined, optional
        monitoring role arn selector
    multiAz : bool, default is Undefined, optional
        Specifies if the RDS instance is multi-AZ
    ncharCharacterSetName : str, default is Undefined, optional
        The national character set is used in the NCHAR, NVARCHAR2, and NCLOB data types for Oracle instances. This can't be changed. See Oracle Character Sets
        Supported in Amazon RDS.
    networkType : str, default is Undefined, optional
        The network type of the DB instance. Valid values: IPV4, DUAL.
    optionGroupName : str, default is Undefined, optional
        Name of the DB option group to associate.
    parameterGroupName : str, default is Undefined, optional
        Name of the DB parameter group to associate.
    parameterGroupNameRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameRef, default is Undefined, optional
        parameter group name ref
    parameterGroupNameSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameSelector, default is Undefined, optional
        parameter group name selector
    passwordSecretRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    performanceInsightsEnabled : bool, default is Undefined, optional
        Specifies whether Performance Insights are enabled. Defaults to false.
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        The ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true. Once KMS key is set, it can never be changed.
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    port : float, default is Undefined, optional
        The port on which the DB accepts connections.
    publiclyAccessible : bool, default is Undefined, optional
        Bool to control if instance is publicly
        accessible. Default is false.
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replicaMode : str, default is Undefined, optional
        Specifies whether the replica is in either mounted or open-read-only mode. This attribute
        is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified. See Working with Oracle Read Replicas for more information.
    replicateSourceDb : str, default is Undefined, optional
        Specifies that this resource is a Replica database, and to use this value as the source database.
        If replicating an Amazon RDS Database Instance in the same region, use the identifier of the source DB, unless also specifying the db_subnet_group_name.
        If specifying the db_subnet_group_name in the same region, use the arn of the source DB.
        If replicating an Instance in a different region, use the arn of the source DB.
        Note that if you are creating a cross-region replica of an encrypted database you will also need to specify a kms_key_id.
        See DB Instance Replication and Working with PostgreSQL and MySQL Read Replicas for more information on using Replication.
    replicateSourceDbRef : RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbRef, default is Undefined, optional
        replicate source db ref
    replicateSourceDbSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbSelector, default is Undefined, optional
        replicate source db selector
    restoreToPointInTime : RdsAwsUpboundIoV1beta3InstanceSpecForProviderRestoreToPointInTime, default is Undefined, optional
        restore to point in time
    s3Import : RdsAwsUpboundIoV1beta3InstanceSpecForProviderS3Import, default is Undefined, optional
        s3 import
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is
        created before the DB instance is deleted. If true is specified, no DBSnapshot
        is created. If false is specified, a DB snapshot is created before the DB
        instance is deleted, using the value from final_snapshot_identifier. Default
        is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this database from a snapshot.
        This corresponds to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB instance is
        encrypted. Note that if you are creating a cross-region read replica this field
        is ignored and you should instead declare kms_key_id with a valid ARN. The
        default is false if not specified.
    storageThroughput : float, default is Undefined, optional
        The storage throughput value for the DB instance. Can only be set when storage_type is "gp3". Cannot be specified if the allocated_storage value is below a per-engine threshold. See the RDS User Guide for details.
    storageType : str, default is Undefined, optional
        One of "standard" (magnetic), "gp2" (general
        purpose SSD), "gp3" (general purpose SSD that needs iops independently)
        "io1" (provisioned IOPS SSD) or "io2" (block express storage provisioned IOPS
        SSD). The default is "io1" if iops is specified, "gp2" if not.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timezone : str, default is Undefined, optional
        Time zone of the DB instance. timezone is currently
        only supported by Microsoft SQL Server. The timezone can only be set on
        creation. See MSSQL User
        Guide
        for more information.
    upgradeStorageConfig : bool, default is Undefined, optional
        Whether to upgrade the storage file system configuration on the read replica.
        Can only be set with replicate_source_db.
    username : str, default is Undefined, optional
        Username for the master DB user. Cannot be specified for a replica.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to
        associate.
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoGeneratePassword?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    backupRetentionPeriod?: float

    backupTarget?: str

    backupWindow?: str

    blueGreenUpdate?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderBlueGreenUpdate

    caCertIdentifier?: str

    characterSetName?: str

    copyTagsToSnapshot?: bool

    customIamInstanceProfile?: str

    customerOwnedIpEnabled?: bool

    dbName?: str

    dbSubnetGroupName?: str

    dbSubnetGroupNameRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameRef

    dbSubnetGroupNameSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameSelector

    dedicatedLogVolume?: bool

    deleteAutomatedBackups?: bool

    deletionProtection?: bool

    domain?: str

    domainAuthSecretArn?: str

    domainDnsIps?: [str]

    domainFqdn?: str

    domainIamRoleName?: str

    domainOu?: str

    enabledCloudwatchLogsExports?: [str]

    engine?: str

    engineLifecycleSupport?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    iamDatabaseAuthenticationEnabled?: bool

    identifier?: str

    identifierPrefix?: str

    instanceClass?: str

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDRef

    kmsKeyIdSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDSelector

    licenseModel?: str

    maintenanceWindow?: str

    manageMasterUserPassword?: bool

    masterUserSecretKmsKeyId?: str

    masterUserSecretKmsKeyIdRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDRef

    masterUserSecretKmsKeyIdSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDSelector

    maxAllocatedStorage?: float

    monitoringInterval?: float

    monitoringRoleArn?: str

    monitoringRoleArnRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnRef

    monitoringRoleArnSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnSelector

    multiAz?: bool

    ncharCharacterSetName?: str

    networkType?: str

    optionGroupName?: str

    parameterGroupName?: str

    parameterGroupNameRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameRef

    parameterGroupNameSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameSelector

    passwordSecretRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderPasswordSecretRef

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    publiclyAccessible?: bool

    region: str

    replicaMode?: str

    replicateSourceDb?: str

    replicateSourceDbRef?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbRef

    replicateSourceDbSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbSelector

    restoreToPointInTime?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderRestoreToPointInTime

    s3Import?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderS3Import

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    storageEncrypted?: bool

    storageThroughput?: float

    storageType?: str

    tags?: {str:str}

    timezone?: str

    upgradeStorageConfig?: bool

    username?: str

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderBlueGreenUpdate:
    r"""
    Enables low-downtime updates using RDS Blue/Green deployments.
    See blue_green_update below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables low-downtime updates when true.
        Default is false.
    """


    enabled?: bool


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderDbSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMasterUserSecretKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnRef:
    r"""
    Reference to a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnSelector:
    r"""
    Selector for a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderMonitoringRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in rds to populate parameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in rds to populate parameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderPasswordSecretRef:
    r"""
    Password for the master DB user. Note that this may show up in
    logs, and it will be stored in the state file. Cannot be set if manage_master_user_password is set to true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbRef:
    r"""
    Reference to a Instance in rds to populate replicateSourceDb.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbSelector:
    r"""
    Selector for a Instance in rds to populate replicateSourceDb.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderReplicateSourceDbSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderRestoreToPointInTime:
    r"""
    A configuration block for restoring a DB instance to an arbitrary point in time.
    Requires the identifier argument to be set with the name of the new DB instance to be created.
    See Restore To Point In Time below for details.

    Attributes
    ----------
    restoreTime : str, default is Undefined, optional
        The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.
    sourceDbInstanceAutomatedBackupsArn : str, default is Undefined, optional
        The ARN of the automated backup from which to restore. Required if source_db_instance_identifier or source_dbi_resource_id is not specified.
    sourceDbInstanceIdentifier : str, default is Undefined, optional
        The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if source_db_instance_automated_backups_arn or source_dbi_resource_id is not specified.
    sourceDbiResourceId : str, default is Undefined, optional
        The resource ID of the source DB instance from which to restore. Required if source_db_instance_identifier or source_db_instance_automated_backups_arn is not specified.
    useLatestRestorableTime : bool, default is Undefined, optional
        A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to false. Cannot be specified with restore_time.
    """


    restoreTime?: str

    sourceDbInstanceAutomatedBackupsArn?: str

    sourceDbInstanceIdentifier?: str

    sourceDbiResourceId?: str

    useLatestRestorableTime?: bool


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderS3Import:
    r"""
    Restore from a Percona Xtrabackup in S3.  See Importing Data into an Amazon RDS MySQL DB Instance

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The bucket name where your backup is stored
    bucketPrefix : str, default is Undefined, optional
        Can be blank, but is the path to your backup
    ingestionRole : str, default is Undefined, optional
        Role applied to load the data.
    sourceEngine : str, default is Undefined, optional
        Source engine for the backup
    sourceEngineVersion : str, default is Undefined, optional
        Version of the source engine used to make the backup
    """


    bucketName?: str

    bucketPrefix?: str

    ingestionRole?: str

    sourceEngine?: str

    sourceEngineVersion?: str


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecForProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allocatedStorage : float, default is Undefined, optional
        The allocated storage in gibibytes. If max_allocated_storage is configured, this argument represents the initial storage allocation and differences from the configuration will be ignored automatically when Storage Autoscaling occurs. If replicate_source_db is set, the value is ignored during the creation of the instance.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Indicates that major version
        upgrades are allowed. Changing this parameter does not result in an outage and
        the change is asynchronously applied as soon as possible.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any database modifications
        are applied immediately, or during the next maintenance window. Default is
        false. See Amazon RDS Documentation for more
        information.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades
        will be applied automatically to the DB instance during the maintenance window.
        Defaults to true.
    availabilityZone : str, default is Undefined, optional
        The AZ for the RDS instance.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for.
        Must be between 0 and 35.
        Default is 0.
        Must be greater than 0 if the database is used as a source for a Read Replica,
        uses low-downtime updates,
        or will use RDS Blue/Green deployments.
    backupTarget : str, default is Undefined, optional
        Specifies where automated backups and manual snapshots are stored. Possible values are region (default) and outposts. See Working with Amazon RDS on AWS Outposts for more information.
    backupWindow : str, default is Undefined, optional
        The daily time range (in UTC) during which automated backups are created if they are enabled.
        Example: "09:46-10:16". Must not overlap with maintenance_window.
    blueGreenUpdate : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderBlueGreenUpdate, default is Undefined, optional
        blue green update
    caCertIdentifier : str, default is Undefined, optional
        The identifier of the CA certificate for the DB instance.
    characterSetName : str, default is Undefined, optional
        The character set name to use for DB encoding in Oracle and Microsoft SQL instances (collation).
        This can't be changed.
        See Oracle Character Sets Supported in Amazon RDS or
        Server-Level Collation for Microsoft SQL Server for more information.
        Cannot be set  with replicate_source_db, restore_to_point_in_time, s3_import, or snapshot_identifier.
    copyTagsToSnapshot : bool, default is Undefined, optional
        â€“  Copy all Instance tags to snapshots. Default is false.
    customIamInstanceProfile : str, default is Undefined, optional
        The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    customerOwnedIpEnabled : bool, default is Undefined, optional
        Indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance. See CoIP for RDS on Outposts for more information.
    dbName : str, default is Undefined, optional
        The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the AWS documentation for more details on what applies for those engines. If you are providing an Oracle db name, it needs to be in all upper case. Cannot be specified for a replica.
    dbSubnetGroupName : str, default is Undefined, optional
        Name of DB subnet group.
        DB instance will be created in the VPC associated with the DB subnet group.
        If unspecified, will be created in the default Subnet Group.
        When working with read replicas created in the same region, defaults to the Subnet Group Name of the source DB.
        When working with read replicas created in a different region, defaults to the default Subnet Group.
        See DBSubnetGroupName in API action CreateDBInstanceReadReplica for additional read replica constraints.
    dbSubnetGroupNameRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameRef, default is Undefined, optional
        db subnet group name ref
    dbSubnetGroupNameSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameSelector, default is Undefined, optional
        db subnet group name selector
    dedicatedLogVolume : bool, default is Undefined, optional
        Use a dedicated log volume (DLV) for the DB instance. Requires Provisioned IOPS. See the AWS documentation for more details.
    deleteAutomatedBackups : bool, default is Undefined, optional
        Specifies whether to remove automated backups immediately after the DB instance is deleted. Default is true.
    deletionProtection : bool, default is Undefined, optional
        If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
    domain : str, default is Undefined, optional
        The ID of the Directory Service Active Directory domain to create the instance in. Conflicts with domain_fqdn, domain_ou, domain_auth_secret_arn and a domain_dns_ips.
    domainAuthSecretArn : str, default is Undefined, optional
        The ARN for the Secrets Manager secret with the self managed Active Directory credentials for the user joining the domain. Conflicts with domain and domain_iam_role_name.
    domainDnsIps : [str], default is Undefined, optional
        The IPv4 DNS IP addresses of your primary and secondary self managed Active Directory domain controllers. Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list. Conflicts with domain and domain_iam_role_name.
    domainFqdn : str, default is Undefined, optional
        The fully qualified domain name (FQDN) of the self managed Active Directory domain. Conflicts with domain and domain_iam_role_name.
    domainIamRoleName : str, default is Undefined, optional
        The name of the IAM role to be used when making API calls to the Directory Service. Conflicts with domain_fqdn, domain_ou, domain_auth_secret_arn and a domain_dns_ips.
    domainOu : str, default is Undefined, optional
        The self managed Active Directory organizational unit for your DB instance to join. Conflicts with domain and domain_iam_role_name.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        Set of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. For supported values, see the EnableCloudwatchLogsExports.member.N parameter in API action CreateDBInstance.
    engine : str, default is Undefined, optional
        The database engine to use. For supported values, see the Engine parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html). Note that for Amazon Aurora instances the engine must match the [DB Cluster](https://marketplace.upbound.io/providers/upbound/provider-aws/latest/resources/rds.aws.upbound.io/Cluster/v1beta1)'s engine'. For information on the difference between the available Aurora MySQL engines see Comparison in the [Amazon RDS Release Notes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraMySQLReleaseNotes/Welcome.html).
    engineLifecycleSupport : str, default is Undefined, optional
        The life cycle type for this DB instance. This setting applies only to RDS for MySQL and RDS for PostgreSQL. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    engineVersion : str, default is Undefined, optional
        The engine version to use. If `autoMinorVersionUpgrade` is enabled, you can provide a prefix of the version such as 5.7 (for 5.7.10). The actual engine version used is returned in the attribute `status.atProvider.engineVersionActual`. For supported values, see the EngineVersion parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html). Note that for Amazon Aurora instances the engine version must match the [DB Cluster](https://marketplace.upbound.io/providers/upbound/provider-aws/latest/resources/rds.aws.upbound.io/Cluster/v1beta1)'s engine version'.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final DB snapshot
        when this DB instance is deleted. Must be provided if skip_final_snapshot is
        set to false. The value must begin with a letter, only contain alphanumeric characters and hyphens, and not end with a hyphen or contain two consecutive hyphens. Must not be provided when deleting a read replica.
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether mappings of AWS Identity and Access Management (IAM) accounts to database
        accounts is enabled.
    identifier : str, default is Undefined, optional
        Required if restore_to_point_in_time is specified.
    identifierPrefix : str, default is Undefined, optional
        Creates a unique identifier beginning with the specified prefix. Conflicts with identifier.
    instanceClass : str, default is Undefined, optional
        The instance type of the RDS instance.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS. Setting this implies a
        storage_type of "io1" or "io2". Can only be set when storage_type is "io1", "io2 or "gp3".
        Cannot be specified for gp3 storage if the allocated_storage value is below a per-engine threshold.
        See the RDS User Guide for details.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. If creating an
        encrypted replica, set this to the destination KMS ARN.
    kmsKeyIdRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDRef, default is Undefined, optional
        kms key Id ref
    kmsKeyIdSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDSelector, default is Undefined, optional
        kms key Id selector
    licenseModel : str, default is Undefined, optional
        License model information for this DB instance. Valid values for this field are as follows:
    maintenanceWindow : str, default is Undefined, optional
        The window to perform maintenance in.
        Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See RDS
        Maintenance Window
        docs
        for more information.
    manageMasterUserPassword : bool, default is Undefined, optional
        Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if password is provided.
    masterUserSecretKmsKeyId : str, default is Undefined, optional
        The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    masterUserSecretKmsKeyIdRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDRef, default is Undefined, optional
        master user secret kms key Id ref
    masterUserSecretKmsKeyIdSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDSelector, default is Undefined, optional
        master user secret kms key Id selector
    maxAllocatedStorage : float, default is Undefined, optional
        When configured, the upper limit to which Amazon RDS can automatically scale the storage of the DB instance. Configuring this will automatically ignore differences to allocated_storage. Must be greater than or equal to allocated_storage or 0 to disable Storage Autoscaling.
    monitoringInterval : float, default is Undefined, optional
        The interval, in seconds, between points
        when Enhanced Monitoring metrics are collected for the DB instance. To disable
        collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
        Values: 0, 1, 5, 10, 15, 30, 60.
    monitoringRoleArn : str, default is Undefined, optional
        The ARN for the IAM role that permits RDS
        to send enhanced monitoring metrics to CloudWatch Logs. You can find more
        information on the AWS
        Documentation
        what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    monitoringRoleArnRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnRef, default is Undefined, optional
        monitoring role arn ref
    monitoringRoleArnSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnSelector, default is Undefined, optional
        monitoring role arn selector
    multiAz : bool, default is Undefined, optional
        Specifies if the RDS instance is multi-AZ
    ncharCharacterSetName : str, default is Undefined, optional
        The national character set is used in the NCHAR, NVARCHAR2, and NCLOB data types for Oracle instances. This can't be changed. See Oracle Character Sets
        Supported in Amazon RDS.
    networkType : str, default is Undefined, optional
        The network type of the DB instance. Valid values: IPV4, DUAL.
    optionGroupName : str, default is Undefined, optional
        Name of the DB option group to associate.
    parameterGroupName : str, default is Undefined, optional
        Name of the DB parameter group to associate.
    parameterGroupNameRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameRef, default is Undefined, optional
        parameter group name ref
    parameterGroupNameSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameSelector, default is Undefined, optional
        parameter group name selector
    passwordSecretRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderPasswordSecretRef, default is Undefined, optional
        password secret ref
    performanceInsightsEnabled : bool, default is Undefined, optional
        Specifies whether Performance Insights are enabled. Defaults to false.
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        The ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true. Once KMS key is set, it can never be changed.
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    port : float, default is Undefined, optional
        The port on which the DB accepts connections.
    publiclyAccessible : bool, default is Undefined, optional
        Bool to control if instance is publicly
        accessible. Default is false.
    replicaMode : str, default is Undefined, optional
        Specifies whether the replica is in either mounted or open-read-only mode. This attribute
        is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified. See Working with Oracle Read Replicas for more information.
    replicateSourceDb : str, default is Undefined, optional
        Specifies that this resource is a Replica database, and to use this value as the source database.
        If replicating an Amazon RDS Database Instance in the same region, use the identifier of the source DB, unless also specifying the db_subnet_group_name.
        If specifying the db_subnet_group_name in the same region, use the arn of the source DB.
        If replicating an Instance in a different region, use the arn of the source DB.
        Note that if you are creating a cross-region replica of an encrypted database you will also need to specify a kms_key_id.
        See DB Instance Replication and Working with PostgreSQL and MySQL Read Replicas for more information on using Replication.
    replicateSourceDbRef : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbRef, default is Undefined, optional
        replicate source db ref
    replicateSourceDbSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbSelector, default is Undefined, optional
        replicate source db selector
    restoreToPointInTime : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderRestoreToPointInTime, default is Undefined, optional
        restore to point in time
    s3Import : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderS3Import, default is Undefined, optional
        s3 import
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is
        created before the DB instance is deleted. If true is specified, no DBSnapshot
        is created. If false is specified, a DB snapshot is created before the DB
        instance is deleted, using the value from final_snapshot_identifier. Default
        is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this database from a snapshot.
        This corresponds to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB instance is
        encrypted. Note that if you are creating a cross-region read replica this field
        is ignored and you should instead declare kms_key_id with a valid ARN. The
        default is false if not specified.
    storageThroughput : float, default is Undefined, optional
        The storage throughput value for the DB instance. Can only be set when storage_type is "gp3". Cannot be specified if the allocated_storage value is below a per-engine threshold. See the RDS User Guide for details.
    storageType : str, default is Undefined, optional
        One of "standard" (magnetic), "gp2" (general
        purpose SSD), "gp3" (general purpose SSD that needs iops independently)
        "io1" (provisioned IOPS SSD) or "io2" (block express storage provisioned IOPS
        SSD). The default is "io1" if iops is specified, "gp2" if not.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    timezone : str, default is Undefined, optional
        Time zone of the DB instance. timezone is currently
        only supported by Microsoft SQL Server. The timezone can only be set on
        creation. See MSSQL User
        Guide
        for more information.
    upgradeStorageConfig : bool, default is Undefined, optional
        Whether to upgrade the storage file system configuration on the read replica.
        Can only be set with replicate_source_db.
    username : str, default is Undefined, optional
        Username for the master DB user. Cannot be specified for a replica.
    vpcSecurityGroupIdRefs : [RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0], default is Undefined, optional
        References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    vpcSecurityGroupIdSelector : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDSelector, default is Undefined, optional
        vpc security group Id selector
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to
        associate.
    """


    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    backupRetentionPeriod?: float

    backupTarget?: str

    backupWindow?: str

    blueGreenUpdate?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderBlueGreenUpdate

    caCertIdentifier?: str

    characterSetName?: str

    copyTagsToSnapshot?: bool

    customIamInstanceProfile?: str

    customerOwnedIpEnabled?: bool

    dbName?: str

    dbSubnetGroupName?: str

    dbSubnetGroupNameRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameRef

    dbSubnetGroupNameSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameSelector

    dedicatedLogVolume?: bool

    deleteAutomatedBackups?: bool

    deletionProtection?: bool

    domain?: str

    domainAuthSecretArn?: str

    domainDnsIps?: [str]

    domainFqdn?: str

    domainIamRoleName?: str

    domainOu?: str

    enabledCloudwatchLogsExports?: [str]

    engine?: str

    engineLifecycleSupport?: str

    engineVersion?: str

    finalSnapshotIdentifier?: str

    iamDatabaseAuthenticationEnabled?: bool

    identifier?: str

    identifierPrefix?: str

    instanceClass?: str

    iops?: float

    kmsKeyId?: str

    kmsKeyIdRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDRef

    kmsKeyIdSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDSelector

    licenseModel?: str

    maintenanceWindow?: str

    manageMasterUserPassword?: bool

    masterUserSecretKmsKeyId?: str

    masterUserSecretKmsKeyIdRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDRef

    masterUserSecretKmsKeyIdSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDSelector

    maxAllocatedStorage?: float

    monitoringInterval?: float

    monitoringRoleArn?: str

    monitoringRoleArnRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnRef

    monitoringRoleArnSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnSelector

    multiAz?: bool

    ncharCharacterSetName?: str

    networkType?: str

    optionGroupName?: str

    parameterGroupName?: str

    parameterGroupNameRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameRef

    parameterGroupNameSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameSelector

    passwordSecretRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderPasswordSecretRef

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    publiclyAccessible?: bool

    replicaMode?: str

    replicateSourceDb?: str

    replicateSourceDbRef?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbRef

    replicateSourceDbSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbSelector

    restoreToPointInTime?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderRestoreToPointInTime

    s3Import?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderS3Import

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    storageEncrypted?: bool

    storageThroughput?: float

    storageType?: str

    tags?: {str:str}

    timezone?: str

    upgradeStorageConfig?: bool

    username?: str

    vpcSecurityGroupIdRefs?: [RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0]

    vpcSecurityGroupIdSelector?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDSelector

    vpcSecurityGroupIds?: [str]


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderBlueGreenUpdate:
    r"""
    Enables low-downtime updates using RDS Blue/Green deployments.
    See blue_green_update below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables low-downtime updates when true.
        Default is false.
    """


    enabled?: bool


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameRef:
    r"""
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameSelector:
    r"""
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderDbSubnetGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDRef:
    r"""
    Reference to a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDSelector:
    r"""
    Selector for a Key in kms to populate masterUserSecretKmsKeyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMasterUserSecretKmsKeyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnRef:
    r"""
    Reference to a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnSelector:
    r"""
    Selector for a Role in iam to populate monitoringRoleArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderMonitoringRoleArnSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameRef:
    r"""
    Reference to a ParameterGroup in rds to populate parameterGroupName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameSelector:
    r"""
    Selector for a ParameterGroup in rds to populate parameterGroupName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderParameterGroupNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderPasswordSecretRef:
    r"""
    Password for the master DB user. Note that this may show up in
    logs, and it will be stored in the state file. Cannot be set if manage_master_user_password is set to true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    key: str

    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbRef:
    r"""
    Reference to a Instance in rds to populate replicateSourceDb.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbSelector:
    r"""
    Selector for a Instance in rds to populate replicateSourceDb.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderReplicateSourceDbSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderRestoreToPointInTime:
    r"""
    A configuration block for restoring a DB instance to an arbitrary point in time.
    Requires the identifier argument to be set with the name of the new DB instance to be created.
    See Restore To Point In Time below for details.

    Attributes
    ----------
    restoreTime : str, default is Undefined, optional
        The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.
    sourceDbInstanceAutomatedBackupsArn : str, default is Undefined, optional
        The ARN of the automated backup from which to restore. Required if source_db_instance_identifier or source_dbi_resource_id is not specified.
    sourceDbInstanceIdentifier : str, default is Undefined, optional
        The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if source_db_instance_automated_backups_arn or source_dbi_resource_id is not specified.
    sourceDbiResourceId : str, default is Undefined, optional
        The resource ID of the source DB instance from which to restore. Required if source_db_instance_identifier or source_db_instance_automated_backups_arn is not specified.
    useLatestRestorableTime : bool, default is Undefined, optional
        A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to false. Cannot be specified with restore_time.
    """


    restoreTime?: str

    sourceDbInstanceAutomatedBackupsArn?: str

    sourceDbInstanceIdentifier?: str

    sourceDbiResourceId?: str

    useLatestRestorableTime?: bool


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderS3Import:
    r"""
    Restore from a Percona Xtrabackup in S3.  See Importing Data into an Amazon RDS MySQL DB Instance

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The bucket name where your backup is stored
    bucketPrefix : str, default is Undefined, optional
        Can be blank, but is the path to your backup
    ingestionRole : str, default is Undefined, optional
        Role applied to load the data.
    sourceEngine : str, default is Undefined, optional
        Source engine for the backup
    sourceEngineVersion : str, default is Undefined, optional
        Version of the source engine used to make the backup
    """


    bucketName?: str

    bucketPrefix?: str

    ingestionRole?: str

    sourceEngine?: str

    sourceEngineVersion?: str


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0:
    r"""
    A Reference to a named object.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDRefsItems0Policy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDSelector:
    r"""
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecInitProviderVpcSecurityGroupIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecProviderConfigRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToConfigRef

    metadata?: RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToMetadata

    name: str


schema RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToConfigRefPolicy


schema RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema RdsAwsUpboundIoV1beta3InstanceSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema RdsAwsUpboundIoV1beta3InstanceSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema RdsAwsUpboundIoV1beta3InstanceStatus:
    r"""
    InstanceStatus defines the observed state of Instance.

    Attributes
    ----------
    atProvider : RdsAwsUpboundIoV1beta3InstanceStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [RdsAwsUpboundIoV1beta3InstanceStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: RdsAwsUpboundIoV1beta3InstanceStatusAtProvider

    conditions?: [RdsAwsUpboundIoV1beta3InstanceStatusConditionsItems0]

    observedGeneration?: int


schema RdsAwsUpboundIoV1beta3InstanceStatusAtProvider:
    r"""
    rds aws upbound io v1beta3 instance status at provider

    Attributes
    ----------
    address : str, default is Undefined, optional
        The hostname of the RDS instance. See also endpoint and port.
    allocatedStorage : float, default is Undefined, optional
        The allocated storage in gibibytes. If max_allocated_storage is configured, this argument represents the initial storage allocation and differences from the configuration will be ignored automatically when Storage Autoscaling occurs. If replicate_source_db is set, the value is ignored during the creation of the instance.
    allowMajorVersionUpgrade : bool, default is Undefined, optional
        Indicates that major version
        upgrades are allowed. Changing this parameter does not result in an outage and
        the change is asynchronously applied as soon as possible.
    applyImmediately : bool, default is Undefined, optional
        Specifies whether any database modifications
        are applied immediately, or during the next maintenance window. Default is
        false. See Amazon RDS Documentation for more
        information.
    arn : str, default is Undefined, optional
        The ARN of the RDS instance.
    autoMinorVersionUpgrade : bool, default is Undefined, optional
        Indicates that minor engine upgrades
        will be applied automatically to the DB instance during the maintenance window.
        Defaults to true.
    availabilityZone : str, default is Undefined, optional
        The AZ for the RDS instance.
    backupRetentionPeriod : float, default is Undefined, optional
        The days to retain backups for.
        Must be between 0 and 35.
        Default is 0.
        Must be greater than 0 if the database is used as a source for a Read Replica,
        uses low-downtime updates,
        or will use RDS Blue/Green deployments.
    backupTarget : str, default is Undefined, optional
        Specifies where automated backups and manual snapshots are stored. Possible values are region (default) and outposts. See Working with Amazon RDS on AWS Outposts for more information.
    backupWindow : str, default is Undefined, optional
        The daily time range (in UTC) during which automated backups are created if they are enabled.
        Example: "09:46-10:16". Must not overlap with maintenance_window.
    blueGreenUpdate : RdsAwsUpboundIoV1beta3InstanceStatusAtProviderBlueGreenUpdate, default is Undefined, optional
        blue green update
    caCertIdentifier : str, default is Undefined, optional
        The identifier of the CA certificate for the DB instance.
    characterSetName : str, default is Undefined, optional
        The character set name to use for DB encoding in Oracle and Microsoft SQL instances (collation).
        This can't be changed.
        See Oracle Character Sets Supported in Amazon RDS or
        Server-Level Collation for Microsoft SQL Server for more information.
        Cannot be set  with replicate_source_db, restore_to_point_in_time, s3_import, or snapshot_identifier.
    copyTagsToSnapshot : bool, default is Undefined, optional
        â€“  Copy all Instance tags to snapshots. Default is false.
    customIamInstanceProfile : str, default is Undefined, optional
        The instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    customerOwnedIpEnabled : bool, default is Undefined, optional
        Indicates whether to enable a customer-owned IP address (CoIP) for an RDS on Outposts DB instance. See CoIP for RDS on Outposts for more information.
    dbName : str, default is Undefined, optional
        The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the AWS documentation for more details on what applies for those engines. If you are providing an Oracle db name, it needs to be in all upper case. Cannot be specified for a replica.
    dbSubnetGroupName : str, default is Undefined, optional
        Name of DB subnet group.
        DB instance will be created in the VPC associated with the DB subnet group.
        If unspecified, will be created in the default Subnet Group.
        When working with read replicas created in the same region, defaults to the Subnet Group Name of the source DB.
        When working with read replicas created in a different region, defaults to the default Subnet Group.
        See DBSubnetGroupName in API action CreateDBInstanceReadReplica for additional read replica constraints.
    dedicatedLogVolume : bool, default is Undefined, optional
        Use a dedicated log volume (DLV) for the DB instance. Requires Provisioned IOPS. See the AWS documentation for more details.
    deleteAutomatedBackups : bool, default is Undefined, optional
        Specifies whether to remove automated backups immediately after the DB instance is deleted. Default is true.
    deletionProtection : bool, default is Undefined, optional
        If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to true. The default is false.
    domain : str, default is Undefined, optional
        The ID of the Directory Service Active Directory domain to create the instance in. Conflicts with domain_fqdn, domain_ou, domain_auth_secret_arn and a domain_dns_ips.
    domainAuthSecretArn : str, default is Undefined, optional
        The ARN for the Secrets Manager secret with the self managed Active Directory credentials for the user joining the domain. Conflicts with domain and domain_iam_role_name.
    domainDnsIps : [str], default is Undefined, optional
        The IPv4 DNS IP addresses of your primary and secondary self managed Active Directory domain controllers. Two IP addresses must be provided. If there isn't a secondary domain controller, use the IP address of the primary domain controller for both entries in the list. Conflicts with domain and domain_iam_role_name.
    domainFqdn : str, default is Undefined, optional
        The fully qualified domain name (FQDN) of the self managed Active Directory domain. Conflicts with domain and domain_iam_role_name.
    domainIamRoleName : str, default is Undefined, optional
        The name of the IAM role to be used when making API calls to the Directory Service. Conflicts with domain_fqdn, domain_ou, domain_auth_secret_arn and a domain_dns_ips.
    domainOu : str, default is Undefined, optional
        The self managed Active Directory organizational unit for your DB instance to join. Conflicts with domain and domain_iam_role_name.
    enabledCloudwatchLogsExports : [str], default is Undefined, optional
        Set of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. For supported values, see the EnableCloudwatchLogsExports.member.N parameter in API action CreateDBInstance.
    endpoint : str, default is Undefined, optional
        The connection endpoint in address:port format.
    engine : str, default is Undefined, optional
        The database engine to use. For supported values, see the Engine parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html). Note that for Amazon Aurora instances the engine must match the [DB Cluster](https://marketplace.upbound.io/providers/upbound/provider-aws/latest/resources/rds.aws.upbound.io/Cluster/v1beta1)'s engine'. For information on the difference between the available Aurora MySQL engines see Comparison in the [Amazon RDS Release Notes](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraMySQLReleaseNotes/Welcome.html).
    engineLifecycleSupport : str, default is Undefined, optional
        The life cycle type for this DB instance. This setting applies only to RDS for MySQL and RDS for PostgreSQL. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    engineVersion : str, default is Undefined, optional
        The engine version to use. If `autoMinorVersionUpgrade` is enabled, you can provide a prefix of the version such as 5.7 (for 5.7.10). The actual engine version used is returned in the attribute `status.atProvider.engineVersionActual`. For supported values, see the EngineVersion parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html). Note that for Amazon Aurora instances the engine version must match the [DB Cluster](https://marketplace.upbound.io/providers/upbound/provider-aws/latest/resources/rds.aws.upbound.io/Cluster/v1beta1)'s engine version'.
    engineVersionActual : str, default is Undefined, optional
        The running version of the database.
    finalSnapshotIdentifier : str, default is Undefined, optional
        The name of your final DB snapshot
        when this DB instance is deleted. Must be provided if skip_final_snapshot is
        set to false. The value must begin with a letter, only contain alphanumeric characters and hyphens, and not end with a hyphen or contain two consecutive hyphens. Must not be provided when deleting a read replica.
    hostedZoneId : str, default is Undefined, optional
        The canonical hosted zone ID of the DB instance (to be used
        in a Route 53 Alias record).
    iamDatabaseAuthenticationEnabled : bool, default is Undefined, optional
        Specifies whether mappings of AWS Identity and Access Management (IAM) accounts to database
        accounts is enabled.
    id : str, default is Undefined, optional
        RDS DBI resource ID.
    identifier : str, default is Undefined, optional
        Required if restore_to_point_in_time is specified.
    identifierPrefix : str, default is Undefined, optional
        Creates a unique identifier beginning with the specified prefix. Conflicts with identifier.
    instanceClass : str, default is Undefined, optional
        The instance type of the RDS instance.
    iops : float, default is Undefined, optional
        The amount of provisioned IOPS. Setting this implies a
        storage_type of "io1" or "io2". Can only be set when storage_type is "io1", "io2 or "gp3".
        Cannot be specified for gp3 storage if the allocated_storage value is below a per-engine threshold.
        See the RDS User Guide for details.
    kmsKeyId : str, default is Undefined, optional
        The ARN for the KMS encryption key. If creating an
        encrypted replica, set this to the destination KMS ARN.
    latestRestorableTime : str, default is Undefined, optional
        The latest time, in UTC RFC3339 format, to which a database can be restored with point-in-time restore.
    licenseModel : str, default is Undefined, optional
        License model information for this DB instance. Valid values for this field are as follows:
    listenerEndpoint : [RdsAwsUpboundIoV1beta3InstanceStatusAtProviderListenerEndpointItems0], default is Undefined, optional
        Specifies the listener connection endpoint for SQL Server Always On. See endpoint below.
    maintenanceWindow : str, default is Undefined, optional
        The window to perform maintenance in.
        Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See RDS
        Maintenance Window
        docs
        for more information.
    manageMasterUserPassword : bool, default is Undefined, optional
        Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if password is provided.
    masterUserSecret : [RdsAwsUpboundIoV1beta3InstanceStatusAtProviderMasterUserSecretItems0], default is Undefined, optional
        A block that specifies the master user secret. Only available when manage_master_user_password is set to true. Documented below.
    masterUserSecretKmsKeyId : str, default is Undefined, optional
        The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    maxAllocatedStorage : float, default is Undefined, optional
        When configured, the upper limit to which Amazon RDS can automatically scale the storage of the DB instance. Configuring this will automatically ignore differences to allocated_storage. Must be greater than or equal to allocated_storage or 0 to disable Storage Autoscaling.
    monitoringInterval : float, default is Undefined, optional
        The interval, in seconds, between points
        when Enhanced Monitoring metrics are collected for the DB instance. To disable
        collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
        Values: 0, 1, 5, 10, 15, 30, 60.
    monitoringRoleArn : str, default is Undefined, optional
        The ARN for the IAM role that permits RDS
        to send enhanced monitoring metrics to CloudWatch Logs. You can find more
        information on the AWS
        Documentation
        what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    multiAz : bool, default is Undefined, optional
        Specifies if the RDS instance is multi-AZ
    ncharCharacterSetName : str, default is Undefined, optional
        The national character set is used in the NCHAR, NVARCHAR2, and NCLOB data types for Oracle instances. This can't be changed. See Oracle Character Sets
        Supported in Amazon RDS.
    networkType : str, default is Undefined, optional
        The network type of the DB instance. Valid values: IPV4, DUAL.
    optionGroupName : str, default is Undefined, optional
        Name of the DB option group to associate.
    parameterGroupName : str, default is Undefined, optional
        Name of the DB parameter group to associate.
    performanceInsightsEnabled : bool, default is Undefined, optional
        Specifies whether Performance Insights are enabled. Defaults to false.
    performanceInsightsKmsKeyId : str, default is Undefined, optional
        The ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true. Once KMS key is set, it can never be changed.
    performanceInsightsRetentionPeriod : float, default is Undefined, optional
        Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    port : float, default is Undefined, optional
        The port on which the DB accepts connections.
    publiclyAccessible : bool, default is Undefined, optional
        Bool to control if instance is publicly
        accessible. Default is false.
    replicaMode : str, default is Undefined, optional
        Specifies whether the replica is in either mounted or open-read-only mode. This attribute
        is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified. See Working with Oracle Read Replicas for more information.
    replicas : [str], default is Undefined, optional
        replicas
    replicateSourceDb : str, default is Undefined, optional
        Specifies that this resource is a Replica database, and to use this value as the source database.
        If replicating an Amazon RDS Database Instance in the same region, use the identifier of the source DB, unless also specifying the db_subnet_group_name.
        If specifying the db_subnet_group_name in the same region, use the arn of the source DB.
        If replicating an Instance in a different region, use the arn of the source DB.
        Note that if you are creating a cross-region replica of an encrypted database you will also need to specify a kms_key_id.
        See DB Instance Replication and Working with PostgreSQL and MySQL Read Replicas for more information on using Replication.
    resourceId : str, default is Undefined, optional
        The RDS Resource ID of this instance.
    restoreToPointInTime : RdsAwsUpboundIoV1beta3InstanceStatusAtProviderRestoreToPointInTime, default is Undefined, optional
        restore to point in time
    s3Import : RdsAwsUpboundIoV1beta3InstanceStatusAtProviderS3Import, default is Undefined, optional
        s3 import
    skipFinalSnapshot : bool, default is Undefined, optional
        Determines whether a final DB snapshot is
        created before the DB instance is deleted. If true is specified, no DBSnapshot
        is created. If false is specified, a DB snapshot is created before the DB
        instance is deleted, using the value from final_snapshot_identifier. Default
        is false.
    snapshotIdentifier : str, default is Undefined, optional
        Specifies whether or not to create this database from a snapshot.
        This corresponds to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05.
    status : str, default is Undefined, optional
        The RDS instance status.
    storageEncrypted : bool, default is Undefined, optional
        Specifies whether the DB instance is
        encrypted. Note that if you are creating a cross-region read replica this field
        is ignored and you should instead declare kms_key_id with a valid ARN. The
        default is false if not specified.
    storageThroughput : float, default is Undefined, optional
        The storage throughput value for the DB instance. Can only be set when storage_type is "gp3". Cannot be specified if the allocated_storage value is below a per-engine threshold. See the RDS User Guide for details.
    storageType : str, default is Undefined, optional
        One of "standard" (magnetic), "gp2" (general
        purpose SSD), "gp3" (general purpose SSD that needs iops independently)
        "io1" (provisioned IOPS SSD) or "io2" (block express storage provisioned IOPS
        SSD). The default is "io1" if iops is specified, "gp2" if not.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    timezone : str, default is Undefined, optional
        Time zone of the DB instance. timezone is currently
        only supported by Microsoft SQL Server. The timezone can only be set on
        creation. See MSSQL User
        Guide
        for more information.
    upgradeStorageConfig : bool, default is Undefined, optional
        Whether to upgrade the storage file system configuration on the read replica.
        Can only be set with replicate_source_db.
    username : str, default is Undefined, optional
        Username for the master DB user. Cannot be specified for a replica.
    vpcSecurityGroupIds : [str], default is Undefined, optional
        List of VPC security groups to
        associate.
    """


    address?: str

    allocatedStorage?: float

    allowMajorVersionUpgrade?: bool

    applyImmediately?: bool

    arn?: str

    autoMinorVersionUpgrade?: bool

    availabilityZone?: str

    backupRetentionPeriod?: float

    backupTarget?: str

    backupWindow?: str

    blueGreenUpdate?: RdsAwsUpboundIoV1beta3InstanceStatusAtProviderBlueGreenUpdate

    caCertIdentifier?: str

    characterSetName?: str

    copyTagsToSnapshot?: bool

    customIamInstanceProfile?: str

    customerOwnedIpEnabled?: bool

    dbName?: str

    dbSubnetGroupName?: str

    dedicatedLogVolume?: bool

    deleteAutomatedBackups?: bool

    deletionProtection?: bool

    domain?: str

    domainAuthSecretArn?: str

    domainDnsIps?: [str]

    domainFqdn?: str

    domainIamRoleName?: str

    domainOu?: str

    enabledCloudwatchLogsExports?: [str]

    endpoint?: str

    engine?: str

    engineLifecycleSupport?: str

    engineVersion?: str

    engineVersionActual?: str

    finalSnapshotIdentifier?: str

    hostedZoneId?: str

    iamDatabaseAuthenticationEnabled?: bool

    id?: str

    identifier?: str

    identifierPrefix?: str

    instanceClass?: str

    iops?: float

    kmsKeyId?: str

    latestRestorableTime?: str

    licenseModel?: str

    listenerEndpoint?: [RdsAwsUpboundIoV1beta3InstanceStatusAtProviderListenerEndpointItems0]

    maintenanceWindow?: str

    manageMasterUserPassword?: bool

    masterUserSecret?: [RdsAwsUpboundIoV1beta3InstanceStatusAtProviderMasterUserSecretItems0]

    masterUserSecretKmsKeyId?: str

    maxAllocatedStorage?: float

    monitoringInterval?: float

    monitoringRoleArn?: str

    multiAz?: bool

    ncharCharacterSetName?: str

    networkType?: str

    optionGroupName?: str

    parameterGroupName?: str

    performanceInsightsEnabled?: bool

    performanceInsightsKmsKeyId?: str

    performanceInsightsRetentionPeriod?: float

    port?: float

    publiclyAccessible?: bool

    replicaMode?: str

    replicas?: [str]

    replicateSourceDb?: str

    resourceId?: str

    restoreToPointInTime?: RdsAwsUpboundIoV1beta3InstanceStatusAtProviderRestoreToPointInTime

    s3Import?: RdsAwsUpboundIoV1beta3InstanceStatusAtProviderS3Import

    skipFinalSnapshot?: bool

    snapshotIdentifier?: str

    status?: str

    storageEncrypted?: bool

    storageThroughput?: float

    storageType?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    timezone?: str

    upgradeStorageConfig?: bool

    username?: str

    vpcSecurityGroupIds?: [str]


schema RdsAwsUpboundIoV1beta3InstanceStatusAtProviderBlueGreenUpdate:
    r"""
    Enables low-downtime updates using RDS Blue/Green deployments.
    See blue_green_update below.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Enables low-downtime updates when true.
        Default is false.
    """


    enabled?: bool


schema RdsAwsUpboundIoV1beta3InstanceStatusAtProviderListenerEndpointItems0:
    r"""
    rds aws upbound io v1beta3 instance status at provider listener endpoint items0

    Attributes
    ----------
    address : str, default is Undefined, optional
        The hostname of the RDS instance. See also endpoint and port.
    hostedZoneId : str, default is Undefined, optional
        The canonical hosted zone ID of the DB instance (to be used
        in a Route 53 Alias record).
    port : float, default is Undefined, optional
        The port on which the DB accepts connections.
    """


    address?: str

    hostedZoneId?: str

    port?: float


schema RdsAwsUpboundIoV1beta3InstanceStatusAtProviderMasterUserSecretItems0:
    r"""
    rds aws upbound io v1beta3 instance status at provider master user secret items0

    Attributes
    ----------
    kmsKeyId : str, default is Undefined, optional
        The Amazon Web Services KMS key identifier that is used to encrypt the secret.
    secretArn : str, default is Undefined, optional
        The Amazon Resource Name (ARN) of the secret.
    secretStatus : str, default is Undefined, optional
        The status of the secret. Valid Values: creating | active | rotating | impaired.
    """


    kmsKeyId?: str

    secretArn?: str

    secretStatus?: str


schema RdsAwsUpboundIoV1beta3InstanceStatusAtProviderRestoreToPointInTime:
    r"""
    A configuration block for restoring a DB instance to an arbitrary point in time.
    Requires the identifier argument to be set with the name of the new DB instance to be created.
    See Restore To Point In Time below for details.

    Attributes
    ----------
    restoreTime : str, default is Undefined, optional
        The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with use_latest_restorable_time.
    sourceDbInstanceAutomatedBackupsArn : str, default is Undefined, optional
        The ARN of the automated backup from which to restore. Required if source_db_instance_identifier or source_dbi_resource_id is not specified.
    sourceDbInstanceIdentifier : str, default is Undefined, optional
        The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if source_db_instance_automated_backups_arn or source_dbi_resource_id is not specified.
    sourceDbiResourceId : str, default is Undefined, optional
        The resource ID of the source DB instance from which to restore. Required if source_db_instance_identifier or source_db_instance_automated_backups_arn is not specified.
    useLatestRestorableTime : bool, default is Undefined, optional
        A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to false. Cannot be specified with restore_time.
    """


    restoreTime?: str

    sourceDbInstanceAutomatedBackupsArn?: str

    sourceDbInstanceIdentifier?: str

    sourceDbiResourceId?: str

    useLatestRestorableTime?: bool


schema RdsAwsUpboundIoV1beta3InstanceStatusAtProviderS3Import:
    r"""
    Restore from a Percona Xtrabackup in S3.  See Importing Data into an Amazon RDS MySQL DB Instance

    Attributes
    ----------
    bucketName : str, default is Undefined, optional
        The bucket name where your backup is stored
    bucketPrefix : str, default is Undefined, optional
        Can be blank, but is the path to your backup
    ingestionRole : str, default is Undefined, optional
        Role applied to load the data.
    sourceEngine : str, default is Undefined, optional
        Source engine for the backup
    sourceEngineVersion : str, default is Undefined, optional
        Version of the source engine used to make the backup
    """


    bucketName?: str

    bucketPrefix?: str

    ingestionRole?: str

    sourceEngine?: str

    sourceEngineVersion?: str


schema RdsAwsUpboundIoV1beta3InstanceStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


