"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Fleet:
    r"""
    Fleet is the Schema for the Fleets API. Provides a resource to manage EC2 Fleets

    Attributes
    ----------
    apiVersion : str, default is "ec2.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Fleet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Ec2AwsUpboundIoV1beta1FleetSpec, default is Undefined, required
        spec
    status : Ec2AwsUpboundIoV1beta1FleetStatus, default is Undefined, optional
        status
    """


    apiVersion: "ec2.aws.upbound.io/v1beta1" = "ec2.aws.upbound.io/v1beta1"

    kind: "Fleet" = "Fleet"

    metadata?: v1.ObjectMeta

    spec: Ec2AwsUpboundIoV1beta1FleetSpec

    status?: Ec2AwsUpboundIoV1beta1FleetStatus


schema Ec2AwsUpboundIoV1beta1FleetSpec:
    r"""
    FleetSpec defines the desired state of Fleet

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : Ec2AwsUpboundIoV1beta1FleetSpecForProvider, default is Undefined, required
        for provider
    initProvider : Ec2AwsUpboundIoV1beta1FleetSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : Ec2AwsUpboundIoV1beta1FleetSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : Ec2AwsUpboundIoV1beta1FleetSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: Ec2AwsUpboundIoV1beta1FleetSpecForProvider

    initProvider?: Ec2AwsUpboundIoV1beta1FleetSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: Ec2AwsUpboundIoV1beta1FleetSpecProviderConfigRef

    publishConnectionDetailsTo?: Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: Ec2AwsUpboundIoV1beta1FleetSpecWriteConnectionSecretToRef


schema Ec2AwsUpboundIoV1beta1FleetSpecForProvider:
    r"""
    ec2 aws upbound io v1beta1 fleet spec for provider

    Attributes
    ----------
    context : str, default is Undefined, optional
        Reserved.
    excessCapacityTerminationPolicy : str, default is Undefined, optional
        Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination. Supported only for fleets of type maintain.
    fleetInstanceSet : [Ec2AwsUpboundIoV1beta1FleetSpecForProviderFleetInstanceSetItems0], default is Undefined, optional
        Information about the instances that were launched by the fleet. Available only when type is set to instant.
    fleetState : str, default is Undefined, optional
        The state of the EC2 Fleet.
    fulfilledCapacity : float, default is Undefined, optional
        The number of units fulfilled by this request compared to the set target capacity.
    fulfilledOnDemandCapacity : float, default is Undefined, optional
        The number of units fulfilled by this request compared to the set target On-Demand capacity.
    launchTemplateConfig : [Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0], default is Undefined, optional
        Nested argument containing EC2 Launch Template configurations. Defined below.
    onDemandOptions : Ec2AwsUpboundIoV1beta1FleetSpecForProviderOnDemandOptions, default is Undefined, optional
        on demand options
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    replaceUnhealthyInstances : bool, default is Undefined, optional
        Whether EC2 Fleet should replace unhealthy instances. Defaults to false. Supported only for fleets of type maintain.
    spotOptions : Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptions, default is Undefined, optional
        spot options
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targetCapacitySpecification : Ec2AwsUpboundIoV1beta1FleetSpecForProviderTargetCapacitySpecification, default is Undefined, optional
        target capacity specification
    terminateInstances : bool, default is Undefined, optional
        Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.
    terminateInstancesWithExpiration : bool, default is Undefined, optional
        Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.
    $type : str, default is Undefined, optional
        The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request, instant. Defaults to maintain.
    validFrom : str, default is Undefined, optional
        The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    validUntil : str, default is Undefined, optional
        The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
    """


    context?: str

    excessCapacityTerminationPolicy?: str

    fleetInstanceSet?: [Ec2AwsUpboundIoV1beta1FleetSpecForProviderFleetInstanceSetItems0]

    fleetState?: str

    fulfilledCapacity?: float

    fulfilledOnDemandCapacity?: float

    launchTemplateConfig?: [Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0]

    onDemandOptions?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderOnDemandOptions

    region: str

    replaceUnhealthyInstances?: bool

    spotOptions?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptions

    tags?: {str:str}

    targetCapacitySpecification?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderTargetCapacitySpecification

    terminateInstances?: bool

    terminateInstancesWithExpiration?: bool

    $type?: str

    validFrom?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderFleetInstanceSetItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet spec for provider fleet instance set items0

    Attributes
    ----------
    instanceIds : [str], default is Undefined, optional
        The IDs of the instances.
    instanceType : str, default is Undefined, optional
        Instance type.
    lifecycle : str, default is Undefined, optional
        Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
    platform : str, default is Undefined, optional
        The value is Windows for Windows instances. Otherwise, the value is blank.
    """


    instanceIds?: [str]

    instanceType?: str

    lifecycle?: str

    platform?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet spec for provider launch template config items0

    Attributes
    ----------
    launchTemplateSpecification : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    override : [Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0], default is Undefined, optional
        Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
    """


    launchTemplateSpecification?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecification

    override?: [Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0]


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecification:
    r"""
    Nested argument containing EC2 Launch Template to use. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        The ID of the launch template.
    launchTemplateIdRef : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRef, default is Undefined, optional
        launch template Id ref
    launchTemplateIdSelector : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelector, default is Undefined, optional
        launch template Id selector
    launchTemplateName : str, default is Undefined, optional
        The name of the launch template.
    version : str, default is Undefined, optional
        The launch template version number, $Latest, or $Default.
    versionRef : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRef, default is Undefined, optional
        version ref
    versionSelector : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelector, default is Undefined, optional
        version selector
    """


    launchTemplateId?: str

    launchTemplateIdRef?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRef

    launchTemplateIdSelector?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelector

    launchTemplateName?: str

    version?: str

    versionRef?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRef

    versionSelector?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelector


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRefPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelectorPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet spec for provider launch template config items0 override items0

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        Availability Zone in which to launch the instances.
    instanceRequirements : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        Instance type.
    maxPrice : str, default is Undefined, optional
        Maximum price per unit hour that you are willing to pay for a Spot Instance.
    priority : float, default is Undefined, optional
        Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
    subnetId : str, default is Undefined, optional
        ID of the subnet in which to launch the instances.
    weightedCapacity : float, default is Undefined, optional
        Number of units provided by the specified instance type.
    """


    availabilityZone?: str

    instanceRequirements?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements

    instanceType?: str

    maxPrice?: str

    priority?: float

    subnetId?: str

    weightedCapacity?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements:
    r"""
    Override the instance type in the Launch Template with instance types that satisfy the requirements.

    Attributes
    ----------
    acceleratorCount : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        The accelerator types that must be on the instance type. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicates whether burstable performance T instance types are included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        The CPU manufacturers to include. Default is any manufacturer.
        ~> NOTE: Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
    excludedInstanceTypes : [str], default is Undefined, optional
        The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are current and previous. Default is current and previous generation instance types.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Valid values are hdd and ssd. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu

    memoryMib?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib

    networkBandwidthGbps?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb

    vcpuCount?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib:
    r"""
    The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps:
    r"""
    The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderOnDemandOptions:
    r"""
    Nested argument containing On-Demand configurations. Defined below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.
    capacityReservationOptions : Ec2AwsUpboundIoV1beta1FleetSpecForProviderOnDemandOptionsCapacityReservationOptions, default is Undefined, optional
        capacity reservation options
    maxTotalPrice : str, default is Undefined, optional
        The maximum amount per hour for On-Demand Instances that you're willing to pay.
    minTargetCapacity : float, default is Undefined, optional
        The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
        If you specify min_target_capacity, at least one of the following must be specified: single_availability_zone or single_instance_type.
    singleAvailabilityZone : bool, default is Undefined, optional
        Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.
    singleInstanceType : bool, default is Undefined, optional
        Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.
    """


    allocationStrategy?: str

    capacityReservationOptions?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderOnDemandOptionsCapacityReservationOptions

    maxTotalPrice?: str

    minTargetCapacity?: float

    singleAvailabilityZone?: bool

    singleInstanceType?: bool


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderOnDemandOptionsCapacityReservationOptions:
    r"""
    Demand capacity. Supported only for fleets of type instant.

    Attributes
    ----------
    usageStrategy : str, default is Undefined, optional
        Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity. Valid values: use-capacity-reservations-first.
    """


    usageStrategy?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptions:
    r"""
    Nested argument containing Spot configurations. Defined below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized, capacity-optimized-prioritized and price-capacity-optimized. Default: lowestPrice.
    instanceInterruptionBehavior : str, default is Undefined, optional
        Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.
    instancePoolsToUseCount : float, default is Undefined, optional
        Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.
    maintenanceStrategies : Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptionsMaintenanceStrategies, default is Undefined, optional
        maintenance strategies
    """


    allocationStrategy?: str

    instanceInterruptionBehavior?: str

    instancePoolsToUseCount?: float

    maintenanceStrategies?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptionsMaintenanceStrategies


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptionsMaintenanceStrategies:
    r"""
    Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.

    Attributes
    ----------
    capacityRebalance : Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptionsMaintenanceStrategiesCapacityRebalance, default is Undefined, optional
        capacity rebalance
    """


    capacityRebalance?: Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptionsMaintenanceStrategiesCapacityRebalance


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderSpotOptionsMaintenanceStrategiesCapacityRebalance:
    r"""
    Nested argument containing the capacity rebalance for your fleet request. Defined below.

    Attributes
    ----------
    replacementStrategy : str, default is Undefined, optional
        The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.
    terminationDelay : float, default is Undefined, optional
        termination delay
    """


    replacementStrategy?: str

    terminationDelay?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecForProviderTargetCapacitySpecification:
    r"""
    Nested argument containing target capacity configurations. Defined below.

    Attributes
    ----------
    defaultTargetCapacityType : str, default is Undefined, optional
        Default target capacity type. Valid values: on-demand, spot.
    onDemandTargetCapacity : float, default is Undefined, optional
        The number of On-Demand units to request.
    spotTargetCapacity : float, default is Undefined, optional
        The number of Spot units to request.
    targetCapacityUnitType : str, default is Undefined, optional
        The unit for the target capacity.
        If you specify target_capacity_unit_type, instance_requirements must be specified.
    totalTargetCapacity : float, default is Undefined, optional
        The number of units to request, filled using default_target_capacity_type.
    """


    defaultTargetCapacityType?: str

    onDemandTargetCapacity?: float

    spotTargetCapacity?: float

    targetCapacityUnitType?: str

    totalTargetCapacity?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    context : str, default is Undefined, optional
        Reserved.
    excessCapacityTerminationPolicy : str, default is Undefined, optional
        Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination. Supported only for fleets of type maintain.
    fleetInstanceSet : [Ec2AwsUpboundIoV1beta1FleetSpecInitProviderFleetInstanceSetItems0], default is Undefined, optional
        Information about the instances that were launched by the fleet. Available only when type is set to instant.
    fleetState : str, default is Undefined, optional
        The state of the EC2 Fleet.
    fulfilledCapacity : float, default is Undefined, optional
        The number of units fulfilled by this request compared to the set target capacity.
    fulfilledOnDemandCapacity : float, default is Undefined, optional
        The number of units fulfilled by this request compared to the set target On-Demand capacity.
    launchTemplateConfig : [Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0], default is Undefined, optional
        Nested argument containing EC2 Launch Template configurations. Defined below.
    onDemandOptions : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderOnDemandOptions, default is Undefined, optional
        on demand options
    replaceUnhealthyInstances : bool, default is Undefined, optional
        Whether EC2 Fleet should replace unhealthy instances. Defaults to false. Supported only for fleets of type maintain.
    spotOptions : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptions, default is Undefined, optional
        spot options
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    targetCapacitySpecification : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderTargetCapacitySpecification, default is Undefined, optional
        target capacity specification
    terminateInstances : bool, default is Undefined, optional
        Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.
    terminateInstancesWithExpiration : bool, default is Undefined, optional
        Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.
    $type : str, default is Undefined, optional
        The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request, instant. Defaults to maintain.
    validFrom : str, default is Undefined, optional
        The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    validUntil : str, default is Undefined, optional
        The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
    """


    context?: str

    excessCapacityTerminationPolicy?: str

    fleetInstanceSet?: [Ec2AwsUpboundIoV1beta1FleetSpecInitProviderFleetInstanceSetItems0]

    fleetState?: str

    fulfilledCapacity?: float

    fulfilledOnDemandCapacity?: float

    launchTemplateConfig?: [Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0]

    onDemandOptions?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderOnDemandOptions

    replaceUnhealthyInstances?: bool

    spotOptions?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptions

    tags?: {str:str}

    targetCapacitySpecification?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderTargetCapacitySpecification

    terminateInstances?: bool

    terminateInstancesWithExpiration?: bool

    $type?: str

    validFrom?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderFleetInstanceSetItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet spec init provider fleet instance set items0

    Attributes
    ----------
    instanceIds : [str], default is Undefined, optional
        The IDs of the instances.
    instanceType : str, default is Undefined, optional
        Instance type.
    lifecycle : str, default is Undefined, optional
        Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
    platform : str, default is Undefined, optional
        The value is Windows for Windows instances. Otherwise, the value is blank.
    """


    instanceIds?: [str]

    instanceType?: str

    lifecycle?: str

    platform?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet spec init provider launch template config items0

    Attributes
    ----------
    launchTemplateSpecification : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    override : [Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0], default is Undefined, optional
        Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
    """


    launchTemplateSpecification?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecification

    override?: [Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0]


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecification:
    r"""
    Nested argument containing EC2 Launch Template to use. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        The ID of the launch template.
    launchTemplateIdRef : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRef, default is Undefined, optional
        launch template Id ref
    launchTemplateIdSelector : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelector, default is Undefined, optional
        launch template Id selector
    launchTemplateName : str, default is Undefined, optional
        The name of the launch template.
    version : str, default is Undefined, optional
        The launch template version number, $Latest, or $Default.
    versionRef : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRef, default is Undefined, optional
        version ref
    versionSelector : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelector, default is Undefined, optional
        version selector
    """


    launchTemplateId?: str

    launchTemplateIdRef?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRef

    launchTemplateIdSelector?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelector

    launchTemplateName?: str

    version?: str

    versionRef?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRef

    versionSelector?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelector


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate launchTemplateId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationLaunchTemplateIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRef:
    r"""
    Reference to a LaunchTemplate in ec2 to populate version.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRefPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelector:
    r"""
    Selector for a LaunchTemplate in ec2 to populate version.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelectorPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0LaunchTemplateSpecificationVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet spec init provider launch template config items0 override items0

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        Availability Zone in which to launch the instances.
    instanceRequirements : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        Instance type.
    maxPrice : str, default is Undefined, optional
        Maximum price per unit hour that you are willing to pay for a Spot Instance.
    priority : float, default is Undefined, optional
        Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
    subnetId : str, default is Undefined, optional
        ID of the subnet in which to launch the instances.
    weightedCapacity : float, default is Undefined, optional
        Number of units provided by the specified instance type.
    """


    availabilityZone?: str

    instanceRequirements?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements

    instanceType?: str

    maxPrice?: str

    priority?: float

    subnetId?: str

    weightedCapacity?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements:
    r"""
    Override the instance type in the Launch Template with instance types that satisfy the requirements.

    Attributes
    ----------
    acceleratorCount : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        The accelerator types that must be on the instance type. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicates whether burstable performance T instance types are included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        The CPU manufacturers to include. Default is any manufacturer.
        ~> NOTE: Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
    excludedInstanceTypes : [str], default is Undefined, optional
        The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are current and previous. Default is current and previous generation instance types.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Valid values are hdd and ssd. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu

    memoryMib?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib

    networkBandwidthGbps?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb

    vcpuCount?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib:
    r"""
    The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps:
    r"""
    The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderOnDemandOptions:
    r"""
    Nested argument containing On-Demand configurations. Defined below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.
    capacityReservationOptions : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderOnDemandOptionsCapacityReservationOptions, default is Undefined, optional
        capacity reservation options
    maxTotalPrice : str, default is Undefined, optional
        The maximum amount per hour for On-Demand Instances that you're willing to pay.
    minTargetCapacity : float, default is Undefined, optional
        The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
        If you specify min_target_capacity, at least one of the following must be specified: single_availability_zone or single_instance_type.
    singleAvailabilityZone : bool, default is Undefined, optional
        Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.
    singleInstanceType : bool, default is Undefined, optional
        Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.
    """


    allocationStrategy?: str

    capacityReservationOptions?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderOnDemandOptionsCapacityReservationOptions

    maxTotalPrice?: str

    minTargetCapacity?: float

    singleAvailabilityZone?: bool

    singleInstanceType?: bool


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderOnDemandOptionsCapacityReservationOptions:
    r"""
    Demand capacity. Supported only for fleets of type instant.

    Attributes
    ----------
    usageStrategy : str, default is Undefined, optional
        Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity. Valid values: use-capacity-reservations-first.
    """


    usageStrategy?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptions:
    r"""
    Nested argument containing Spot configurations. Defined below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized, capacity-optimized-prioritized and price-capacity-optimized. Default: lowestPrice.
    instanceInterruptionBehavior : str, default is Undefined, optional
        Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.
    instancePoolsToUseCount : float, default is Undefined, optional
        Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.
    maintenanceStrategies : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptionsMaintenanceStrategies, default is Undefined, optional
        maintenance strategies
    """


    allocationStrategy?: str

    instanceInterruptionBehavior?: str

    instancePoolsToUseCount?: float

    maintenanceStrategies?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptionsMaintenanceStrategies


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptionsMaintenanceStrategies:
    r"""
    Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.

    Attributes
    ----------
    capacityRebalance : Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptionsMaintenanceStrategiesCapacityRebalance, default is Undefined, optional
        capacity rebalance
    """


    capacityRebalance?: Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptionsMaintenanceStrategiesCapacityRebalance


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderSpotOptionsMaintenanceStrategiesCapacityRebalance:
    r"""
    Nested argument containing the capacity rebalance for your fleet request. Defined below.

    Attributes
    ----------
    replacementStrategy : str, default is Undefined, optional
        The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.
    terminationDelay : float, default is Undefined, optional
        termination delay
    """


    replacementStrategy?: str

    terminationDelay?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecInitProviderTargetCapacitySpecification:
    r"""
    Nested argument containing target capacity configurations. Defined below.

    Attributes
    ----------
    defaultTargetCapacityType : str, default is Undefined, optional
        Default target capacity type. Valid values: on-demand, spot.
    onDemandTargetCapacity : float, default is Undefined, optional
        The number of On-Demand units to request.
    spotTargetCapacity : float, default is Undefined, optional
        The number of Spot units to request.
    targetCapacityUnitType : str, default is Undefined, optional
        The unit for the target capacity.
        If you specify target_capacity_unit_type, instance_requirements must be specified.
    totalTargetCapacity : float, default is Undefined, optional
        The number of units to request, filled using default_target_capacity_type.
    """


    defaultTargetCapacityType?: str

    onDemandTargetCapacity?: float

    spotTargetCapacity?: float

    targetCapacityUnitType?: str

    totalTargetCapacity?: float


schema Ec2AwsUpboundIoV1beta1FleetSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecProviderConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToConfigRef

    metadata?: Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToMetadata

    name: str


schema Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToConfigRefPolicy


schema Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema Ec2AwsUpboundIoV1beta1FleetSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema Ec2AwsUpboundIoV1beta1FleetSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema Ec2AwsUpboundIoV1beta1FleetStatus:
    r"""
    FleetStatus defines the observed state of Fleet.

    Attributes
    ----------
    atProvider : Ec2AwsUpboundIoV1beta1FleetStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [Ec2AwsUpboundIoV1beta1FleetStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: Ec2AwsUpboundIoV1beta1FleetStatusAtProvider

    conditions?: [Ec2AwsUpboundIoV1beta1FleetStatusConditionsItems0]

    observedGeneration?: int


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProvider:
    r"""
    ec2 aws upbound io v1beta1 fleet status at provider

    Attributes
    ----------
    arn : str, default is Undefined, optional
        The ARN of the fleet
    context : str, default is Undefined, optional
        Reserved.
    excessCapacityTerminationPolicy : str, default is Undefined, optional
        Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: no-termination, termination. Defaults to termination. Supported only for fleets of type maintain.
    fleetInstanceSet : [Ec2AwsUpboundIoV1beta1FleetStatusAtProviderFleetInstanceSetItems0], default is Undefined, optional
        Information about the instances that were launched by the fleet. Available only when type is set to instant.
    fleetState : str, default is Undefined, optional
        The state of the EC2 Fleet.
    fulfilledCapacity : float, default is Undefined, optional
        The number of units fulfilled by this request compared to the set target capacity.
    fulfilledOnDemandCapacity : float, default is Undefined, optional
        The number of units fulfilled by this request compared to the set target On-Demand capacity.
    id : str, default is Undefined, optional
        Fleet identifier
    launchTemplateConfig : [Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0], default is Undefined, optional
        Nested argument containing EC2 Launch Template configurations. Defined below.
    onDemandOptions : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderOnDemandOptions, default is Undefined, optional
        on demand options
    replaceUnhealthyInstances : bool, default is Undefined, optional
        Whether EC2 Fleet should replace unhealthy instances. Defaults to false. Supported only for fleets of type maintain.
    spotOptions : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptions, default is Undefined, optional
        spot options
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    targetCapacitySpecification : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderTargetCapacitySpecification, default is Undefined, optional
        target capacity specification
    terminateInstances : bool, default is Undefined, optional
        Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to false.
    terminateInstancesWithExpiration : bool, default is Undefined, optional
        Whether running instances should be terminated when the EC2 Fleet expires. Defaults to false.
    $type : str, default is Undefined, optional
        The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: maintain, request, instant. Defaults to maintain.
    validFrom : str, default is Undefined, optional
        The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    validUntil : str, default is Undefined, optional
        The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
    """


    arn?: str

    context?: str

    excessCapacityTerminationPolicy?: str

    fleetInstanceSet?: [Ec2AwsUpboundIoV1beta1FleetStatusAtProviderFleetInstanceSetItems0]

    fleetState?: str

    fulfilledCapacity?: float

    fulfilledOnDemandCapacity?: float

    id?: str

    launchTemplateConfig?: [Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0]

    onDemandOptions?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderOnDemandOptions

    replaceUnhealthyInstances?: bool

    spotOptions?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptions

    tags?: {str:str}

    tagsAll?: {str:str}

    targetCapacitySpecification?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderTargetCapacitySpecification

    terminateInstances?: bool

    terminateInstancesWithExpiration?: bool

    $type?: str

    validFrom?: str

    validUntil?: str


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderFleetInstanceSetItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet status at provider fleet instance set items0

    Attributes
    ----------
    instanceIds : [str], default is Undefined, optional
        The IDs of the instances.
    instanceType : str, default is Undefined, optional
        Instance type.
    lifecycle : str, default is Undefined, optional
        Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
    platform : str, default is Undefined, optional
        The value is Windows for Windows instances. Otherwise, the value is blank.
    """


    instanceIds?: [str]

    instanceType?: str

    lifecycle?: str

    platform?: str


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet status at provider launch template config items0

    Attributes
    ----------
    launchTemplateSpecification : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0LaunchTemplateSpecification, default is Undefined, optional
        launch template specification
    override : [Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0], default is Undefined, optional
        Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
    """


    launchTemplateSpecification?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0LaunchTemplateSpecification

    override?: [Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0]


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0LaunchTemplateSpecification:
    r"""
    Nested argument containing EC2 Launch Template to use. Defined below.

    Attributes
    ----------
    launchTemplateId : str, default is Undefined, optional
        The ID of the launch template.
    launchTemplateName : str, default is Undefined, optional
        The name of the launch template.
    version : str, default is Undefined, optional
        The launch template version number, $Latest, or $Default.
    """


    launchTemplateId?: str

    launchTemplateName?: str

    version?: str


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0:
    r"""
    ec2 aws upbound io v1beta1 fleet status at provider launch template config items0 override items0

    Attributes
    ----------
    availabilityZone : str, default is Undefined, optional
        Availability Zone in which to launch the instances.
    instanceRequirements : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements, default is Undefined, optional
        instance requirements
    instanceType : str, default is Undefined, optional
        Instance type.
    maxPrice : str, default is Undefined, optional
        Maximum price per unit hour that you are willing to pay for a Spot Instance.
    priority : float, default is Undefined, optional
        Priority for the launch template override. If on_demand_options allocation_strategy is set to prioritized, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
    subnetId : str, default is Undefined, optional
        ID of the subnet in which to launch the instances.
    weightedCapacity : float, default is Undefined, optional
        Number of units provided by the specified instance type.
    """


    availabilityZone?: str

    instanceRequirements?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements

    instanceType?: str

    maxPrice?: str

    priority?: float

    subnetId?: str

    weightedCapacity?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirements:
    r"""
    Override the instance type in the Launch Template with instance types that satisfy the requirements.

    Attributes
    ----------
    acceleratorCount : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount, default is Undefined, optional
        accelerator count
    acceleratorManufacturers : [str], default is Undefined, optional
        List of accelerator manufacturer names. Default is any manufacturer.
    acceleratorNames : [str], default is Undefined, optional
        List of accelerator names. Default is any acclerator.
    acceleratorTotalMemoryMib : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib, default is Undefined, optional
        accelerator total memory mib
    acceleratorTypes : [str], default is Undefined, optional
        The accelerator types that must be on the instance type. Default is any accelerator type.
    allowedInstanceTypes : [str], default is Undefined, optional
        The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards,represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types. Default is any instance type.
    bareMetal : str, default is Undefined, optional
        Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    baselineEbsBandwidthMbps : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps, default is Undefined, optional
        baseline ebs bandwidth mbps
    burstablePerformance : str, default is Undefined, optional
        Indicates whether burstable performance T instance types are included, excluded, or required. Default is excluded.
    cpuManufacturers : [str], default is Undefined, optional
        The CPU manufacturers to include. Default is any manufacturer.
        ~> NOTE: Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template.
    excludedInstanceTypes : [str], default is Undefined, optional
        The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*). The following are examples: c5*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    instanceGenerations : [str], default is Undefined, optional
        Indicates whether current or previous generation instance types are included. The current generation instance types are recommended for use. Valid values are current and previous. Default is current and previous generation instance types.
    localStorage : str, default is Undefined, optional
        Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    localStorageTypes : [str], default is Undefined, optional
        List of local storage type names. Valid values are hdd and ssd. Default any storage type.
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    memoryGibPerVcpu : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu, default is Undefined, optional
        memory gib per vcpu
    memoryMib : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib, default is Undefined, optional
        memory mib
    networkBandwidthGbps : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps, default is Undefined, optional
        network bandwidth gbps
    networkInterfaceCount : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount, default is Undefined, optional
        network interface count
    onDemandMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    requireHibernateSupport : bool, default is Undefined, optional
        Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    spotMaxPricePercentageOverLowestPrice : float, default is Undefined, optional
        The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price
    totalLocalStorageGb : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb, default is Undefined, optional
        total local storage gb
    vcpuCount : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount, default is Undefined, optional
        vcpu count
    """


    acceleratorCount?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount

    acceleratorManufacturers?: [str]

    acceleratorNames?: [str]

    acceleratorTotalMemoryMib?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib

    acceleratorTypes?: [str]

    allowedInstanceTypes?: [str]

    bareMetal?: str

    baselineEbsBandwidthMbps?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps

    burstablePerformance?: str

    cpuManufacturers?: [str]

    excludedInstanceTypes?: [str]

    instanceGenerations?: [str]

    localStorage?: str

    localStorageTypes?: [str]

    maxSpotPriceAsPercentageOfOptimalOnDemandPrice?: float

    memoryGibPerVcpu?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu

    memoryMib?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib

    networkBandwidthGbps?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps

    networkInterfaceCount?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount

    onDemandMaxPricePercentageOverLowestPrice?: float

    requireHibernateSupport?: bool

    spotMaxPricePercentageOverLowestPrice?: float

    totalLocalStorageGb?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb

    vcpuCount?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorCount:
    r"""
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum limits.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsAcceleratorTotalMemoryMib:
    r"""
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsBaselineEbsBandwidthMbps:
    r"""
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryGibPerVcpu:
    r"""
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsMemoryMib:
    r"""
    The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkBandwidthGbps:
    r"""
    The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is No minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsNetworkInterfaceCount:
    r"""
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsTotalLocalStorageGb:
    r"""
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderLaunchTemplateConfigItems0OverrideItems0InstanceRequirementsVcpuCount:
    r"""
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.

    Attributes
    ----------
    max : float, default is Undefined, optional
        The maximum number of vCPUs. To specify no maximum limit, omit this parameter.
    min : float, default is Undefined, optional
        The minimum number of vCPUs. To specify no minimum limit, specify 0.
    """


    max?: float

    min?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderOnDemandOptions:
    r"""
    Nested argument containing On-Demand configurations. Defined below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: lowestPrice, prioritized. Default: lowestPrice.
    capacityReservationOptions : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderOnDemandOptionsCapacityReservationOptions, default is Undefined, optional
        capacity reservation options
    maxTotalPrice : str, default is Undefined, optional
        The maximum amount per hour for On-Demand Instances that you're willing to pay.
    minTargetCapacity : float, default is Undefined, optional
        The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type instant.
        If you specify min_target_capacity, at least one of the following must be specified: single_availability_zone or single_instance_type.
    singleAvailabilityZone : bool, default is Undefined, optional
        Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type instant.
    singleInstanceType : bool, default is Undefined, optional
        Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type instant.
    """


    allocationStrategy?: str

    capacityReservationOptions?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderOnDemandOptionsCapacityReservationOptions

    maxTotalPrice?: str

    minTargetCapacity?: float

    singleAvailabilityZone?: bool

    singleInstanceType?: bool


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderOnDemandOptionsCapacityReservationOptions:
    r"""
    Demand capacity. Supported only for fleets of type instant.

    Attributes
    ----------
    usageStrategy : str, default is Undefined, optional
        Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity. Valid values: use-capacity-reservations-first.
    """


    usageStrategy?: str


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptions:
    r"""
    Nested argument containing Spot configurations. Defined below.

    Attributes
    ----------
    allocationStrategy : str, default is Undefined, optional
        How to allocate the target capacity across the Spot pools. Valid values: diversified, lowestPrice, capacity-optimized, capacity-optimized-prioritized and price-capacity-optimized. Default: lowestPrice.
    instanceInterruptionBehavior : str, default is Undefined, optional
        Behavior when a Spot Instance is interrupted. Valid values: hibernate, stop, terminate. Default: terminate.
    instancePoolsToUseCount : float, default is Undefined, optional
        Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot allocation_strategy is set to lowestPrice. Default: 1.
    maintenanceStrategies : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptionsMaintenanceStrategies, default is Undefined, optional
        maintenance strategies
    """


    allocationStrategy?: str

    instanceInterruptionBehavior?: str

    instancePoolsToUseCount?: float

    maintenanceStrategies?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptionsMaintenanceStrategies


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptionsMaintenanceStrategies:
    r"""
    Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.

    Attributes
    ----------
    capacityRebalance : Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptionsMaintenanceStrategiesCapacityRebalance, default is Undefined, optional
        capacity rebalance
    """


    capacityRebalance?: Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptionsMaintenanceStrategiesCapacityRebalance


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderSpotOptionsMaintenanceStrategiesCapacityRebalance:
    r"""
    Nested argument containing the capacity rebalance for your fleet request. Defined below.

    Attributes
    ----------
    replacementStrategy : str, default is Undefined, optional
        The replacement strategy to use. Only available for fleets of type set to maintain. Valid values: launch.
    terminationDelay : float, default is Undefined, optional
        termination delay
    """


    replacementStrategy?: str

    terminationDelay?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusAtProviderTargetCapacitySpecification:
    r"""
    Nested argument containing target capacity configurations. Defined below.

    Attributes
    ----------
    defaultTargetCapacityType : str, default is Undefined, optional
        Default target capacity type. Valid values: on-demand, spot.
    onDemandTargetCapacity : float, default is Undefined, optional
        The number of On-Demand units to request.
    spotTargetCapacity : float, default is Undefined, optional
        The number of Spot units to request.
    targetCapacityUnitType : str, default is Undefined, optional
        The unit for the target capacity.
        If you specify target_capacity_unit_type, instance_requirements must be specified.
    totalTargetCapacity : float, default is Undefined, optional
        The number of units to request, filled using default_target_capacity_type.
    """


    defaultTargetCapacityType?: str

    onDemandTargetCapacity?: float

    spotTargetCapacity?: float

    targetCapacityUnitType?: str

    totalTargetCapacity?: float


schema Ec2AwsUpboundIoV1beta1FleetStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


