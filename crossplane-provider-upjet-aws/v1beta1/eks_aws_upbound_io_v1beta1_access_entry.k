"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema AccessEntry:
    r"""
    AccessEntry is the Schema for the AccessEntrys API. Access Entry Configurations for an EKS Cluster.

    Attributes
    ----------
    apiVersion : str, default is "eks.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "AccessEntry", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : EksAwsUpboundIoV1beta1AccessEntrySpec, default is Undefined, required
        spec
    status : EksAwsUpboundIoV1beta1AccessEntryStatus, default is Undefined, optional
        status
    """


    apiVersion: "eks.aws.upbound.io/v1beta1" = "eks.aws.upbound.io/v1beta1"

    kind: "AccessEntry" = "AccessEntry"

    metadata?: v1.ObjectMeta

    spec: EksAwsUpboundIoV1beta1AccessEntrySpec

    status?: EksAwsUpboundIoV1beta1AccessEntryStatus


schema EksAwsUpboundIoV1beta1AccessEntrySpec:
    r"""
    AccessEntrySpec defines the desired state of AccessEntry

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : EksAwsUpboundIoV1beta1AccessEntrySpecForProvider, default is Undefined, required
        for provider
    initProvider : EksAwsUpboundIoV1beta1AccessEntrySpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : EksAwsUpboundIoV1beta1AccessEntrySpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : EksAwsUpboundIoV1beta1AccessEntrySpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: EksAwsUpboundIoV1beta1AccessEntrySpecForProvider

    initProvider?: EksAwsUpboundIoV1beta1AccessEntrySpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: EksAwsUpboundIoV1beta1AccessEntrySpecProviderConfigRef

    publishConnectionDetailsTo?: EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: EksAwsUpboundIoV1beta1AccessEntrySpecWriteConnectionSecretToRef


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProvider:
    r"""
    eks aws upbound io v1beta1 access entry spec for provider

    Attributes
    ----------
    clusterName : str, default is Undefined, optional
        –  Name of the EKS Cluster.
    clusterNameRef : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameRef, default is Undefined, optional
        cluster name ref
    clusterNameSelector : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameSelector, default is Undefined, optional
        cluster name selector
    kubernetesGroups : [str], default is Undefined, optional
        –  List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
    principalArn : str, default is Undefined, optional
        –  The IAM Principal ARN which requires Authentication access to the EKS cluster.
    principalArnFromRoleRef : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleRef, default is Undefined, optional
        principal arn from role ref
    principalArnFromRoleSelector : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleSelector, default is Undefined, optional
        principal arn from role selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
    userName : str, default is Undefined, optional
        Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
    """


    clusterName?: str

    clusterNameRef?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameRef

    clusterNameSelector?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameSelector

    kubernetesGroups?: [str]

    principalArn?: str

    principalArnFromRoleRef?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleRef

    principalArnFromRoleSelector?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleSelector

    region: str

    tags?: {str:str}

    $type?: str

    userName?: str


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameRef:
    r"""
    Reference to a Cluster in eks to populate clusterName.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameRefPolicy


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameSelector:
    r"""
    Selector for a Cluster in eks to populate clusterName.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameSelectorPolicy


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderClusterNameSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleRef:
    r"""
    Reference to a Role in iam to populate principalArn.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleRefPolicy


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleSelector:
    r"""
    Selector for a Role in iam to populate principalArn.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleSelectorPolicy


schema EksAwsUpboundIoV1beta1AccessEntrySpecForProviderPrincipalArnFromRoleSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AccessEntrySpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    kubernetesGroups : [str], default is Undefined, optional
        –  List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    $type : str, default is Undefined, optional
        Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
    userName : str, default is Undefined, optional
        Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
    """


    kubernetesGroups?: [str]

    tags?: {str:str}

    $type?: str

    userName?: str


schema EksAwsUpboundIoV1beta1AccessEntrySpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AccessEntrySpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AccessEntrySpecProviderConfigRefPolicy


schema EksAwsUpboundIoV1beta1AccessEntrySpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToConfigRef

    metadata?: EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToMetadata

    name: str


schema EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToConfigRefPolicy


schema EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema EksAwsUpboundIoV1beta1AccessEntrySpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema EksAwsUpboundIoV1beta1AccessEntrySpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema EksAwsUpboundIoV1beta1AccessEntryStatus:
    r"""
    AccessEntryStatus defines the observed state of AccessEntry.

    Attributes
    ----------
    atProvider : EksAwsUpboundIoV1beta1AccessEntryStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [EksAwsUpboundIoV1beta1AccessEntryStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: EksAwsUpboundIoV1beta1AccessEntryStatusAtProvider

    conditions?: [EksAwsUpboundIoV1beta1AccessEntryStatusConditionsItems0]

    observedGeneration?: int


schema EksAwsUpboundIoV1beta1AccessEntryStatusAtProvider:
    r"""
    eks aws upbound io v1beta1 access entry status at provider

    Attributes
    ----------
    accessEntryArn : str, default is Undefined, optional
        Amazon Resource Name (ARN) of the Access Entry.
    clusterName : str, default is Undefined, optional
        –  Name of the EKS Cluster.
    createdAt : str, default is Undefined, optional
        Date and time in RFC3339 format that the EKS add-on was created.
    id : str, default is Undefined, optional
        id
    kubernetesGroups : [str], default is Undefined, optional
        –  List of string which can optionally specify the Kubernetes groups the user would belong to when creating an access entry.
    modifiedAt : str, default is Undefined, optional
        Date and time in RFC3339 format that the EKS add-on was updated.
    principalArn : str, default is Undefined, optional
        –  The IAM Principal ARN which requires Authentication access to the EKS cluster.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Key-value map of resource tags, including those inherited from the provider default_tags configuration block.
    $type : str, default is Undefined, optional
        Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or groups, and prevent associations.
    userName : str, default is Undefined, optional
        Defaults to principal ARN if user is principal else defaults to assume-role/session-name is role is used.
    """


    accessEntryArn?: str

    clusterName?: str

    createdAt?: str

    id?: str

    kubernetesGroups?: [str]

    modifiedAt?: str

    principalArn?: str

    tags?: {str:str}

    tagsAll?: {str:str}

    $type?: str

    userName?: str


schema EksAwsUpboundIoV1beta1AccessEntryStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


