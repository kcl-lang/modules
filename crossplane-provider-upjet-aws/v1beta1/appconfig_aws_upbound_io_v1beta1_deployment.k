"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Deployment:
    r"""
    Deployment is the Schema for the Deployments API. Provides an AppConfig Deployment resource.

    Attributes
    ----------
    apiVersion : str, default is "appconfig.aws.upbound.io/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Deployment", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppconfigAwsUpboundIoV1beta1DeploymentSpec, default is Undefined, required
        spec
    status : AppconfigAwsUpboundIoV1beta1DeploymentStatus, default is Undefined, optional
        status
    """


    apiVersion: "appconfig.aws.upbound.io/v1beta1" = "appconfig.aws.upbound.io/v1beta1"

    kind: "Deployment" = "Deployment"

    metadata?: v1.ObjectMeta

    spec: AppconfigAwsUpboundIoV1beta1DeploymentSpec

    status?: AppconfigAwsUpboundIoV1beta1DeploymentStatus


schema AppconfigAwsUpboundIoV1beta1DeploymentSpec:
    r"""
    DeploymentSpec defines the desired state of Deployment

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProvider, default is Undefined, required
        for provider
    initProvider : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProvider

    initProvider?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecProviderConfigRef

    publishConnectionDetailsTo?: AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecWriteConnectionSecretToRef


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProvider:
    r"""
    appconfig aws upbound io v1beta1 deployment spec for provider

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        Application ID. Must be between 4 and 7 characters in length.
    applicationIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDSelector, default is Undefined, optional
        application Id selector
    configurationProfileId : str, default is Undefined, optional
        Configuration profile ID. Must be between 4 and 7 characters in length.
    configurationProfileIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDRef, default is Undefined, optional
        configuration profile Id ref
    configurationProfileIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDSelector, default is Undefined, optional
        configuration profile Id selector
    configurationVersion : str, default is Undefined, optional
        Configuration version to deploy. Can be at most 1024 characters.
    configurationVersionRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionRef, default is Undefined, optional
        configuration version ref
    configurationVersionSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionSelector, default is Undefined, optional
        configuration version selector
    deploymentStrategyId : str, default is Undefined, optional
        Deployment strategy ID or name of a predefined deployment strategy. See Predefined Deployment Strategies for more details.
    deploymentStrategyIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDRef, default is Undefined, optional
        deployment strategy Id ref
    deploymentStrategyIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDSelector, default is Undefined, optional
        deployment strategy Id selector
    description : str, default is Undefined, optional
        Description of the deployment. Can be at most 1024 characters.
    environmentId : str, default is Undefined, optional
        Environment ID. Must be between 4 and 7 characters in length.
    environmentIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDRef, default is Undefined, optional
        environment Id ref
    environmentIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDSelector, default is Undefined, optional
        environment Id selector
    kmsKeyIdentifier : str, default is Undefined, optional
        The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this to encrypt the configuration data using a customer managed key.
    kmsKeyIdentifierRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierRef, default is Undefined, optional
        kms key identifier ref
    kmsKeyIdentifierSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierSelector, default is Undefined, optional
        kms key identifier selector
    region : str, default is Undefined, required
        Region is the region you'd like your resource to be created in.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationId?: str

    applicationIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDRef

    applicationIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDSelector

    configurationProfileId?: str

    configurationProfileIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDRef

    configurationProfileIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDSelector

    configurationVersion?: str

    configurationVersionRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionRef

    configurationVersionSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionSelector

    deploymentStrategyId?: str

    deploymentStrategyIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDRef

    deploymentStrategyIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDSelector

    description?: str

    environmentId?: str

    environmentIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDRef

    environmentIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDSelector

    kmsKeyIdentifier?: str

    kmsKeyIdentifierRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierRef

    kmsKeyIdentifierSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierSelector

    region: str

    tags?: {str:str}


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDRef:
    r"""
    Reference to a Application in appconfig to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDSelector:
    r"""
    Selector for a Application in appconfig to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDRef:
    r"""
    Reference to a ConfigurationProfile in appconfig to populate configurationProfileId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDSelector:
    r"""
    Selector for a ConfigurationProfile in appconfig to populate configurationProfileId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationProfileIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionRef:
    r"""
    Reference to a HostedConfigurationVersion in appconfig to populate configurationVersion.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionSelector:
    r"""
    Selector for a HostedConfigurationVersion in appconfig to populate configurationVersion.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderConfigurationVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDRef:
    r"""
    Reference to a DeploymentStrategy in appconfig to populate deploymentStrategyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDSelector:
    r"""
    Selector for a DeploymentStrategy in appconfig to populate deploymentStrategyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderDeploymentStrategyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDRef:
    r"""
    Reference to a Environment in appconfig to populate environmentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDSelector:
    r"""
    Selector for a Environment in appconfig to populate environmentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderEnvironmentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierRef:
    r"""
    Reference to a Key in kms to populate kmsKeyIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecForProviderKmsKeyIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        Application ID. Must be between 4 and 7 characters in length.
    applicationIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDRef, default is Undefined, optional
        application Id ref
    applicationIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDSelector, default is Undefined, optional
        application Id selector
    configurationProfileId : str, default is Undefined, optional
        Configuration profile ID. Must be between 4 and 7 characters in length.
    configurationProfileIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDRef, default is Undefined, optional
        configuration profile Id ref
    configurationProfileIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDSelector, default is Undefined, optional
        configuration profile Id selector
    configurationVersion : str, default is Undefined, optional
        Configuration version to deploy. Can be at most 1024 characters.
    configurationVersionRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionRef, default is Undefined, optional
        configuration version ref
    configurationVersionSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionSelector, default is Undefined, optional
        configuration version selector
    deploymentStrategyId : str, default is Undefined, optional
        Deployment strategy ID or name of a predefined deployment strategy. See Predefined Deployment Strategies for more details.
    deploymentStrategyIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDRef, default is Undefined, optional
        deployment strategy Id ref
    deploymentStrategyIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDSelector, default is Undefined, optional
        deployment strategy Id selector
    description : str, default is Undefined, optional
        Description of the deployment. Can be at most 1024 characters.
    environmentId : str, default is Undefined, optional
        Environment ID. Must be between 4 and 7 characters in length.
    environmentIdRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDRef, default is Undefined, optional
        environment Id ref
    environmentIdSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDSelector, default is Undefined, optional
        environment Id selector
    kmsKeyIdentifier : str, default is Undefined, optional
        The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this to encrypt the configuration data using a customer managed key.
    kmsKeyIdentifierRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierRef, default is Undefined, optional
        kms key identifier ref
    kmsKeyIdentifierSelector : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierSelector, default is Undefined, optional
        kms key identifier selector
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    """


    applicationId?: str

    applicationIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDRef

    applicationIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDSelector

    configurationProfileId?: str

    configurationProfileIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDRef

    configurationProfileIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDSelector

    configurationVersion?: str

    configurationVersionRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionRef

    configurationVersionSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionSelector

    deploymentStrategyId?: str

    deploymentStrategyIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDRef

    deploymentStrategyIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDSelector

    description?: str

    environmentId?: str

    environmentIdRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDRef

    environmentIdSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDSelector

    kmsKeyIdentifier?: str

    kmsKeyIdentifierRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierRef

    kmsKeyIdentifierSelector?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierSelector

    tags?: {str:str}


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDRef:
    r"""
    Reference to a Application in appconfig to populate applicationId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDSelector:
    r"""
    Selector for a Application in appconfig to populate applicationId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderApplicationIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDRef:
    r"""
    Reference to a ConfigurationProfile in appconfig to populate configurationProfileId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDSelector:
    r"""
    Selector for a ConfigurationProfile in appconfig to populate configurationProfileId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationProfileIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionRef:
    r"""
    Reference to a HostedConfigurationVersion in appconfig to populate configurationVersion.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionSelector:
    r"""
    Selector for a HostedConfigurationVersion in appconfig to populate configurationVersion.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderConfigurationVersionSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDRef:
    r"""
    Reference to a DeploymentStrategy in appconfig to populate deploymentStrategyId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDSelector:
    r"""
    Selector for a DeploymentStrategy in appconfig to populate deploymentStrategyId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderDeploymentStrategyIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDRef:
    r"""
    Reference to a Environment in appconfig to populate environmentId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDSelector:
    r"""
    Selector for a Environment in appconfig to populate environmentId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderEnvironmentIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierRef:
    r"""
    Reference to a Key in kms to populate kmsKeyIdentifier.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierSelector:
    r"""
    Selector for a Key in kms to populate kmsKeyIdentifier.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierSelectorPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecInitProviderKmsKeyIdentifierSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecProviderConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRef

    metadata?: AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToMetadata

    name: str


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRefPolicy


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema AppconfigAwsUpboundIoV1beta1DeploymentSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema AppconfigAwsUpboundIoV1beta1DeploymentStatus:
    r"""
    DeploymentStatus defines the observed state of Deployment.

    Attributes
    ----------
    atProvider : AppconfigAwsUpboundIoV1beta1DeploymentStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [AppconfigAwsUpboundIoV1beta1DeploymentStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: AppconfigAwsUpboundIoV1beta1DeploymentStatusAtProvider

    conditions?: [AppconfigAwsUpboundIoV1beta1DeploymentStatusConditionsItems0]

    observedGeneration?: int


schema AppconfigAwsUpboundIoV1beta1DeploymentStatusAtProvider:
    r"""
    appconfig aws upbound io v1beta1 deployment status at provider

    Attributes
    ----------
    applicationId : str, default is Undefined, optional
        Application ID. Must be between 4 and 7 characters in length.
    arn : str, default is Undefined, optional
        ARN of the AppConfig Deployment.
    configurationProfileId : str, default is Undefined, optional
        Configuration profile ID. Must be between 4 and 7 characters in length.
    configurationVersion : str, default is Undefined, optional
        Configuration version to deploy. Can be at most 1024 characters.
    deploymentNumber : float, default is Undefined, optional
        Deployment number.
    deploymentStrategyId : str, default is Undefined, optional
        Deployment strategy ID or name of a predefined deployment strategy. See Predefined Deployment Strategies for more details.
    description : str, default is Undefined, optional
        Description of the deployment. Can be at most 1024 characters.
    environmentId : str, default is Undefined, optional
        Environment ID. Must be between 4 and 7 characters in length.
    id : str, default is Undefined, optional
        AppConfig application ID, environment ID, and deployment number separated by a slash (/).
    kmsKeyArn : str, default is Undefined, optional
        ARN of the KMS key used to encrypt configuration data.
    kmsKeyIdentifier : str, default is Undefined, optional
        The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this to encrypt the configuration data using a customer managed key.
    state : str, default is Undefined, optional
        State of the deployment.
    tags : {str:str}, default is Undefined, optional
        Key-value map of resource tags.
    tagsAll : {str:str}, default is Undefined, optional
        Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


    applicationId?: str

    arn?: str

    configurationProfileId?: str

    configurationVersion?: str

    deploymentNumber?: float

    deploymentStrategyId?: str

    description?: str

    environmentId?: str

    id?: str

    kmsKeyArn?: str

    kmsKeyIdentifier?: str

    state?: str

    tags?: {str:str}

    tagsAll?: {str:str}


schema AppconfigAwsUpboundIoV1beta1DeploymentStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


